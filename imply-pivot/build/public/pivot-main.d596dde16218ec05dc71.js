webpackJsonp([1],Array(178).concat([
/* 178 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 *  Copyright (c) 2014-2015, Facebook, Inc.
	 *  All rights reserved.
	 *
	 *  This source code is licensed under the BSD-style license found in the
	 *  LICENSE file in the root directory of this source tree. An additional grant
	 *  of patent rights can be found in the PATENTS file in the same directory.
	 */

	(function (global, factory) {
	   true ? module.exports = factory() :
	  typeof define === 'function' && define.amd ? define(factory) :
	  (global.Immutable = factory());
	}(this, function () { 'use strict';var SLICE$0 = Array.prototype.slice;

	  function createClass(ctor, superClass) {
	    if (superClass) {
	      ctor.prototype = Object.create(superClass.prototype);
	    }
	    ctor.prototype.constructor = ctor;
	  }

	  function Iterable(value) {
	      return isIterable(value) ? value : Seq(value);
	    }


	  createClass(KeyedIterable, Iterable);
	    function KeyedIterable(value) {
	      return isKeyed(value) ? value : KeyedSeq(value);
	    }


	  createClass(IndexedIterable, Iterable);
	    function IndexedIterable(value) {
	      return isIndexed(value) ? value : IndexedSeq(value);
	    }


	  createClass(SetIterable, Iterable);
	    function SetIterable(value) {
	      return isIterable(value) && !isAssociative(value) ? value : SetSeq(value);
	    }



	  function isIterable(maybeIterable) {
	    return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);
	  }

	  function isKeyed(maybeKeyed) {
	    return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);
	  }

	  function isIndexed(maybeIndexed) {
	    return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);
	  }

	  function isAssociative(maybeAssociative) {
	    return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);
	  }

	  function isOrdered(maybeOrdered) {
	    return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);
	  }

	  Iterable.isIterable = isIterable;
	  Iterable.isKeyed = isKeyed;
	  Iterable.isIndexed = isIndexed;
	  Iterable.isAssociative = isAssociative;
	  Iterable.isOrdered = isOrdered;

	  Iterable.Keyed = KeyedIterable;
	  Iterable.Indexed = IndexedIterable;
	  Iterable.Set = SetIterable;


	  var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';
	  var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';
	  var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';
	  var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';

	  // Used for setting prototype methods that IE8 chokes on.
	  var DELETE = 'delete';

	  // Constants describing the size of trie nodes.
	  var SHIFT = 5; // Resulted in best performance after ______?
	  var SIZE = 1 << SHIFT;
	  var MASK = SIZE - 1;

	  // A consistent shared value representing "not set" which equals nothing other
	  // than itself, and nothing that could be provided externally.
	  var NOT_SET = {};

	  // Boolean references, Rough equivalent of `bool &`.
	  var CHANGE_LENGTH = { value: false };
	  var DID_ALTER = { value: false };

	  function MakeRef(ref) {
	    ref.value = false;
	    return ref;
	  }

	  function SetRef(ref) {
	    ref && (ref.value = true);
	  }

	  // A function which returns a value representing an "owner" for transient writes
	  // to tries. The return value will only ever equal itself, and will not equal
	  // the return of any subsequent call of this function.
	  function OwnerID() {}

	  // http://jsperf.com/copy-array-inline
	  function arrCopy(arr, offset) {
	    offset = offset || 0;
	    var len = Math.max(0, arr.length - offset);
	    var newArr = new Array(len);
	    for (var ii = 0; ii < len; ii++) {
	      newArr[ii] = arr[ii + offset];
	    }
	    return newArr;
	  }

	  function ensureSize(iter) {
	    if (iter.size === undefined) {
	      iter.size = iter.__iterate(returnTrue);
	    }
	    return iter.size;
	  }

	  function wrapIndex(iter, index) {
	    // This implements "is array index" which the ECMAString spec defines as:
	    //
	    //     A String property name P is an array index if and only if
	    //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal
	    //     to 2^32−1.
	    //
	    // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects
	    if (typeof index !== 'number') {
	      var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32
	      if ('' + uint32Index !== index || uint32Index === 4294967295) {
	        return NaN;
	      }
	      index = uint32Index;
	    }
	    return index < 0 ? ensureSize(iter) + index : index;
	  }

	  function returnTrue() {
	    return true;
	  }

	  function wholeSlice(begin, end, size) {
	    return (begin === 0 || (size !== undefined && begin <= -size)) &&
	      (end === undefined || (size !== undefined && end >= size));
	  }

	  function resolveBegin(begin, size) {
	    return resolveIndex(begin, size, 0);
	  }

	  function resolveEnd(end, size) {
	    return resolveIndex(end, size, size);
	  }

	  function resolveIndex(index, size, defaultIndex) {
	    return index === undefined ?
	      defaultIndex :
	      index < 0 ?
	        Math.max(0, size + index) :
	        size === undefined ?
	          index :
	          Math.min(size, index);
	  }

	  /* global Symbol */

	  var ITERATE_KEYS = 0;
	  var ITERATE_VALUES = 1;
	  var ITERATE_ENTRIES = 2;

	  var REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	  var FAUX_ITERATOR_SYMBOL = '@@iterator';

	  var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;


	  function Iterator(next) {
	      this.next = next;
	    }

	    Iterator.prototype.toString = function() {
	      return '[Iterator]';
	    };


	  Iterator.KEYS = ITERATE_KEYS;
	  Iterator.VALUES = ITERATE_VALUES;
	  Iterator.ENTRIES = ITERATE_ENTRIES;

	  Iterator.prototype.inspect =
	  Iterator.prototype.toSource = function () { return this.toString(); }
	  Iterator.prototype[ITERATOR_SYMBOL] = function () {
	    return this;
	  };


	  function iteratorValue(type, k, v, iteratorResult) {
	    var value = type === 0 ? k : type === 1 ? v : [k, v];
	    iteratorResult ? (iteratorResult.value = value) : (iteratorResult = {
	      value: value, done: false
	    });
	    return iteratorResult;
	  }

	  function iteratorDone() {
	    return { value: undefined, done: true };
	  }

	  function hasIterator(maybeIterable) {
	    return !!getIteratorFn(maybeIterable);
	  }

	  function isIterator(maybeIterator) {
	    return maybeIterator && typeof maybeIterator.next === 'function';
	  }

	  function getIterator(iterable) {
	    var iteratorFn = getIteratorFn(iterable);
	    return iteratorFn && iteratorFn.call(iterable);
	  }

	  function getIteratorFn(iterable) {
	    var iteratorFn = iterable && (
	      (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL]) ||
	      iterable[FAUX_ITERATOR_SYMBOL]
	    );
	    if (typeof iteratorFn === 'function') {
	      return iteratorFn;
	    }
	  }

	  function isArrayLike(value) {
	    return value && typeof value.length === 'number';
	  }

	  createClass(Seq, Iterable);
	    function Seq(value) {
	      return value === null || value === undefined ? emptySequence() :
	        isIterable(value) ? value.toSeq() : seqFromValue(value);
	    }

	    Seq.of = function(/*...values*/) {
	      return Seq(arguments);
	    };

	    Seq.prototype.toSeq = function() {
	      return this;
	    };

	    Seq.prototype.toString = function() {
	      return this.__toString('Seq {', '}');
	    };

	    Seq.prototype.cacheResult = function() {
	      if (!this._cache && this.__iterateUncached) {
	        this._cache = this.entrySeq().toArray();
	        this.size = this._cache.length;
	      }
	      return this;
	    };

	    // abstract __iterateUncached(fn, reverse)

	    Seq.prototype.__iterate = function(fn, reverse) {
	      return seqIterate(this, fn, reverse, true);
	    };

	    // abstract __iteratorUncached(type, reverse)

	    Seq.prototype.__iterator = function(type, reverse) {
	      return seqIterator(this, type, reverse, true);
	    };



	  createClass(KeyedSeq, Seq);
	    function KeyedSeq(value) {
	      return value === null || value === undefined ?
	        emptySequence().toKeyedSeq() :
	        isIterable(value) ?
	          (isKeyed(value) ? value.toSeq() : value.fromEntrySeq()) :
	          keyedSeqFromValue(value);
	    }

	    KeyedSeq.prototype.toKeyedSeq = function() {
	      return this;
	    };



	  createClass(IndexedSeq, Seq);
	    function IndexedSeq(value) {
	      return value === null || value === undefined ? emptySequence() :
	        !isIterable(value) ? indexedSeqFromValue(value) :
	        isKeyed(value) ? value.entrySeq() : value.toIndexedSeq();
	    }

	    IndexedSeq.of = function(/*...values*/) {
	      return IndexedSeq(arguments);
	    };

	    IndexedSeq.prototype.toIndexedSeq = function() {
	      return this;
	    };

	    IndexedSeq.prototype.toString = function() {
	      return this.__toString('Seq [', ']');
	    };

	    IndexedSeq.prototype.__iterate = function(fn, reverse) {
	      return seqIterate(this, fn, reverse, false);
	    };

	    IndexedSeq.prototype.__iterator = function(type, reverse) {
	      return seqIterator(this, type, reverse, false);
	    };



	  createClass(SetSeq, Seq);
	    function SetSeq(value) {
	      return (
	        value === null || value === undefined ? emptySequence() :
	        !isIterable(value) ? indexedSeqFromValue(value) :
	        isKeyed(value) ? value.entrySeq() : value
	      ).toSetSeq();
	    }

	    SetSeq.of = function(/*...values*/) {
	      return SetSeq(arguments);
	    };

	    SetSeq.prototype.toSetSeq = function() {
	      return this;
	    };



	  Seq.isSeq = isSeq;
	  Seq.Keyed = KeyedSeq;
	  Seq.Set = SetSeq;
	  Seq.Indexed = IndexedSeq;

	  var IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';

	  Seq.prototype[IS_SEQ_SENTINEL] = true;



	  createClass(ArraySeq, IndexedSeq);
	    function ArraySeq(array) {
	      this._array = array;
	      this.size = array.length;
	    }

	    ArraySeq.prototype.get = function(index, notSetValue) {
	      return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;
	    };

	    ArraySeq.prototype.__iterate = function(fn, reverse) {
	      var array = this._array;
	      var maxIndex = array.length - 1;
	      for (var ii = 0; ii <= maxIndex; ii++) {
	        if (fn(array[reverse ? maxIndex - ii : ii], ii, this) === false) {
	          return ii + 1;
	        }
	      }
	      return ii;
	    };

	    ArraySeq.prototype.__iterator = function(type, reverse) {
	      var array = this._array;
	      var maxIndex = array.length - 1;
	      var ii = 0;
	      return new Iterator(function() 
	        {return ii > maxIndex ?
	          iteratorDone() :
	          iteratorValue(type, ii, array[reverse ? maxIndex - ii++ : ii++])}
	      );
	    };



	  createClass(ObjectSeq, KeyedSeq);
	    function ObjectSeq(object) {
	      var keys = Object.keys(object);
	      this._object = object;
	      this._keys = keys;
	      this.size = keys.length;
	    }

	    ObjectSeq.prototype.get = function(key, notSetValue) {
	      if (notSetValue !== undefined && !this.has(key)) {
	        return notSetValue;
	      }
	      return this._object[key];
	    };

	    ObjectSeq.prototype.has = function(key) {
	      return this._object.hasOwnProperty(key);
	    };

	    ObjectSeq.prototype.__iterate = function(fn, reverse) {
	      var object = this._object;
	      var keys = this._keys;
	      var maxIndex = keys.length - 1;
	      for (var ii = 0; ii <= maxIndex; ii++) {
	        var key = keys[reverse ? maxIndex - ii : ii];
	        if (fn(object[key], key, this) === false) {
	          return ii + 1;
	        }
	      }
	      return ii;
	    };

	    ObjectSeq.prototype.__iterator = function(type, reverse) {
	      var object = this._object;
	      var keys = this._keys;
	      var maxIndex = keys.length - 1;
	      var ii = 0;
	      return new Iterator(function()  {
	        var key = keys[reverse ? maxIndex - ii : ii];
	        return ii++ > maxIndex ?
	          iteratorDone() :
	          iteratorValue(type, key, object[key]);
	      });
	    };

	  ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;


	  createClass(IterableSeq, IndexedSeq);
	    function IterableSeq(iterable) {
	      this._iterable = iterable;
	      this.size = iterable.length || iterable.size;
	    }

	    IterableSeq.prototype.__iterateUncached = function(fn, reverse) {
	      if (reverse) {
	        return this.cacheResult().__iterate(fn, reverse);
	      }
	      var iterable = this._iterable;
	      var iterator = getIterator(iterable);
	      var iterations = 0;
	      if (isIterator(iterator)) {
	        var step;
	        while (!(step = iterator.next()).done) {
	          if (fn(step.value, iterations++, this) === false) {
	            break;
	          }
	        }
	      }
	      return iterations;
	    };

	    IterableSeq.prototype.__iteratorUncached = function(type, reverse) {
	      if (reverse) {
	        return this.cacheResult().__iterator(type, reverse);
	      }
	      var iterable = this._iterable;
	      var iterator = getIterator(iterable);
	      if (!isIterator(iterator)) {
	        return new Iterator(iteratorDone);
	      }
	      var iterations = 0;
	      return new Iterator(function()  {
	        var step = iterator.next();
	        return step.done ? step : iteratorValue(type, iterations++, step.value);
	      });
	    };



	  createClass(IteratorSeq, IndexedSeq);
	    function IteratorSeq(iterator) {
	      this._iterator = iterator;
	      this._iteratorCache = [];
	    }

	    IteratorSeq.prototype.__iterateUncached = function(fn, reverse) {
	      if (reverse) {
	        return this.cacheResult().__iterate(fn, reverse);
	      }
	      var iterator = this._iterator;
	      var cache = this._iteratorCache;
	      var iterations = 0;
	      while (iterations < cache.length) {
	        if (fn(cache[iterations], iterations++, this) === false) {
	          return iterations;
	        }
	      }
	      var step;
	      while (!(step = iterator.next()).done) {
	        var val = step.value;
	        cache[iterations] = val;
	        if (fn(val, iterations++, this) === false) {
	          break;
	        }
	      }
	      return iterations;
	    };

	    IteratorSeq.prototype.__iteratorUncached = function(type, reverse) {
	      if (reverse) {
	        return this.cacheResult().__iterator(type, reverse);
	      }
	      var iterator = this._iterator;
	      var cache = this._iteratorCache;
	      var iterations = 0;
	      return new Iterator(function()  {
	        if (iterations >= cache.length) {
	          var step = iterator.next();
	          if (step.done) {
	            return step;
	          }
	          cache[iterations] = step.value;
	        }
	        return iteratorValue(type, iterations, cache[iterations++]);
	      });
	    };




	  // # pragma Helper functions

	  function isSeq(maybeSeq) {
	    return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);
	  }

	  var EMPTY_SEQ;

	  function emptySequence() {
	    return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));
	  }

	  function keyedSeqFromValue(value) {
	    var seq =
	      Array.isArray(value) ? new ArraySeq(value).fromEntrySeq() :
	      isIterator(value) ? new IteratorSeq(value).fromEntrySeq() :
	      hasIterator(value) ? new IterableSeq(value).fromEntrySeq() :
	      typeof value === 'object' ? new ObjectSeq(value) :
	      undefined;
	    if (!seq) {
	      throw new TypeError(
	        'Expected Array or iterable object of [k, v] entries, '+
	        'or keyed object: ' + value
	      );
	    }
	    return seq;
	  }

	  function indexedSeqFromValue(value) {
	    var seq = maybeIndexedSeqFromValue(value);
	    if (!seq) {
	      throw new TypeError(
	        'Expected Array or iterable object of values: ' + value
	      );
	    }
	    return seq;
	  }

	  function seqFromValue(value) {
	    var seq = maybeIndexedSeqFromValue(value) ||
	      (typeof value === 'object' && new ObjectSeq(value));
	    if (!seq) {
	      throw new TypeError(
	        'Expected Array or iterable object of values, or keyed object: ' + value
	      );
	    }
	    return seq;
	  }

	  function maybeIndexedSeqFromValue(value) {
	    return (
	      isArrayLike(value) ? new ArraySeq(value) :
	      isIterator(value) ? new IteratorSeq(value) :
	      hasIterator(value) ? new IterableSeq(value) :
	      undefined
	    );
	  }

	  function seqIterate(seq, fn, reverse, useKeys) {
	    var cache = seq._cache;
	    if (cache) {
	      var maxIndex = cache.length - 1;
	      for (var ii = 0; ii <= maxIndex; ii++) {
	        var entry = cache[reverse ? maxIndex - ii : ii];
	        if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {
	          return ii + 1;
	        }
	      }
	      return ii;
	    }
	    return seq.__iterateUncached(fn, reverse);
	  }

	  function seqIterator(seq, type, reverse, useKeys) {
	    var cache = seq._cache;
	    if (cache) {
	      var maxIndex = cache.length - 1;
	      var ii = 0;
	      return new Iterator(function()  {
	        var entry = cache[reverse ? maxIndex - ii : ii];
	        return ii++ > maxIndex ?
	          iteratorDone() :
	          iteratorValue(type, useKeys ? entry[0] : ii - 1, entry[1]);
	      });
	    }
	    return seq.__iteratorUncached(type, reverse);
	  }

	  function fromJS(json, converter) {
	    return converter ?
	      fromJSWith(converter, json, '', {'': json}) :
	      fromJSDefault(json);
	  }

	  function fromJSWith(converter, json, key, parentJSON) {
	    if (Array.isArray(json)) {
	      return converter.call(parentJSON, key, IndexedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));
	    }
	    if (isPlainObj(json)) {
	      return converter.call(parentJSON, key, KeyedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));
	    }
	    return json;
	  }

	  function fromJSDefault(json) {
	    if (Array.isArray(json)) {
	      return IndexedSeq(json).map(fromJSDefault).toList();
	    }
	    if (isPlainObj(json)) {
	      return KeyedSeq(json).map(fromJSDefault).toMap();
	    }
	    return json;
	  }

	  function isPlainObj(value) {
	    return value && (value.constructor === Object || value.constructor === undefined);
	  }

	  /**
	   * An extension of the "same-value" algorithm as [described for use by ES6 Map
	   * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)
	   *
	   * NaN is considered the same as NaN, however -0 and 0 are considered the same
	   * value, which is different from the algorithm described by
	   * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).
	   *
	   * This is extended further to allow Objects to describe the values they
	   * represent, by way of `valueOf` or `equals` (and `hashCode`).
	   *
	   * Note: because of this extension, the key equality of Immutable.Map and the
	   * value equality of Immutable.Set will differ from ES6 Map and Set.
	   *
	   * ### Defining custom values
	   *
	   * The easiest way to describe the value an object represents is by implementing
	   * `valueOf`. For example, `Date` represents a value by returning a unix
	   * timestamp for `valueOf`:
	   *
	   *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...
	   *     var date2 = new Date(1234567890000);
	   *     date1.valueOf(); // 1234567890000
	   *     assert( date1 !== date2 );
	   *     assert( Immutable.is( date1, date2 ) );
	   *
	   * Note: overriding `valueOf` may have other implications if you use this object
	   * where JavaScript expects a primitive, such as implicit string coercion.
	   *
	   * For more complex types, especially collections, implementing `valueOf` may
	   * not be performant. An alternative is to implement `equals` and `hashCode`.
	   *
	   * `equals` takes another object, presumably of similar type, and returns true
	   * if the it is equal. Equality is symmetrical, so the same result should be
	   * returned if this and the argument are flipped.
	   *
	   *     assert( a.equals(b) === b.equals(a) );
	   *
	   * `hashCode` returns a 32bit integer number representing the object which will
	   * be used to determine how to store the value object in a Map or Set. You must
	   * provide both or neither methods, one must not exist without the other.
	   *
	   * Also, an important relationship between these methods must be upheld: if two
	   * values are equal, they *must* return the same hashCode. If the values are not
	   * equal, they might have the same hashCode; this is called a hash collision,
	   * and while undesirable for performance reasons, it is acceptable.
	   *
	   *     if (a.equals(b)) {
	   *       assert( a.hashCode() === b.hashCode() );
	   *     }
	   *
	   * All Immutable collections implement `equals` and `hashCode`.
	   *
	   */
	  function is(valueA, valueB) {
	    if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {
	      return true;
	    }
	    if (!valueA || !valueB) {
	      return false;
	    }
	    if (typeof valueA.valueOf === 'function' &&
	        typeof valueB.valueOf === 'function') {
	      valueA = valueA.valueOf();
	      valueB = valueB.valueOf();
	      if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {
	        return true;
	      }
	      if (!valueA || !valueB) {
	        return false;
	      }
	    }
	    if (typeof valueA.equals === 'function' &&
	        typeof valueB.equals === 'function' &&
	        valueA.equals(valueB)) {
	      return true;
	    }
	    return false;
	  }

	  function deepEqual(a, b) {
	    if (a === b) {
	      return true;
	    }

	    if (
	      !isIterable(b) ||
	      a.size !== undefined && b.size !== undefined && a.size !== b.size ||
	      a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash ||
	      isKeyed(a) !== isKeyed(b) ||
	      isIndexed(a) !== isIndexed(b) ||
	      isOrdered(a) !== isOrdered(b)
	    ) {
	      return false;
	    }

	    if (a.size === 0 && b.size === 0) {
	      return true;
	    }

	    var notAssociative = !isAssociative(a);

	    if (isOrdered(a)) {
	      var entries = a.entries();
	      return b.every(function(v, k)  {
	        var entry = entries.next().value;
	        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));
	      }) && entries.next().done;
	    }

	    var flipped = false;

	    if (a.size === undefined) {
	      if (b.size === undefined) {
	        if (typeof a.cacheResult === 'function') {
	          a.cacheResult();
	        }
	      } else {
	        flipped = true;
	        var _ = a;
	        a = b;
	        b = _;
	      }
	    }

	    var allEqual = true;
	    var bSize = b.__iterate(function(v, k)  {
	      if (notAssociative ? !a.has(v) :
	          flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {
	        allEqual = false;
	        return false;
	      }
	    });

	    return allEqual && a.size === bSize;
	  }

	  createClass(Repeat, IndexedSeq);

	    function Repeat(value, times) {
	      if (!(this instanceof Repeat)) {
	        return new Repeat(value, times);
	      }
	      this._value = value;
	      this.size = times === undefined ? Infinity : Math.max(0, times);
	      if (this.size === 0) {
	        if (EMPTY_REPEAT) {
	          return EMPTY_REPEAT;
	        }
	        EMPTY_REPEAT = this;
	      }
	    }

	    Repeat.prototype.toString = function() {
	      if (this.size === 0) {
	        return 'Repeat []';
	      }
	      return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';
	    };

	    Repeat.prototype.get = function(index, notSetValue) {
	      return this.has(index) ? this._value : notSetValue;
	    };

	    Repeat.prototype.includes = function(searchValue) {
	      return is(this._value, searchValue);
	    };

	    Repeat.prototype.slice = function(begin, end) {
	      var size = this.size;
	      return wholeSlice(begin, end, size) ? this :
	        new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));
	    };

	    Repeat.prototype.reverse = function() {
	      return this;
	    };

	    Repeat.prototype.indexOf = function(searchValue) {
	      if (is(this._value, searchValue)) {
	        return 0;
	      }
	      return -1;
	    };

	    Repeat.prototype.lastIndexOf = function(searchValue) {
	      if (is(this._value, searchValue)) {
	        return this.size;
	      }
	      return -1;
	    };

	    Repeat.prototype.__iterate = function(fn, reverse) {
	      for (var ii = 0; ii < this.size; ii++) {
	        if (fn(this._value, ii, this) === false) {
	          return ii + 1;
	        }
	      }
	      return ii;
	    };

	    Repeat.prototype.__iterator = function(type, reverse) {var this$0 = this;
	      var ii = 0;
	      return new Iterator(function() 
	        {return ii < this$0.size ? iteratorValue(type, ii++, this$0._value) : iteratorDone()}
	      );
	    };

	    Repeat.prototype.equals = function(other) {
	      return other instanceof Repeat ?
	        is(this._value, other._value) :
	        deepEqual(other);
	    };


	  var EMPTY_REPEAT;

	  function invariant(condition, error) {
	    if (!condition) throw new Error(error);
	  }

	  createClass(Range, IndexedSeq);

	    function Range(start, end, step) {
	      if (!(this instanceof Range)) {
	        return new Range(start, end, step);
	      }
	      invariant(step !== 0, 'Cannot step a Range by 0');
	      start = start || 0;
	      if (end === undefined) {
	        end = Infinity;
	      }
	      step = step === undefined ? 1 : Math.abs(step);
	      if (end < start) {
	        step = -step;
	      }
	      this._start = start;
	      this._end = end;
	      this._step = step;
	      this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);
	      if (this.size === 0) {
	        if (EMPTY_RANGE) {
	          return EMPTY_RANGE;
	        }
	        EMPTY_RANGE = this;
	      }
	    }

	    Range.prototype.toString = function() {
	      if (this.size === 0) {
	        return 'Range []';
	      }
	      return 'Range [ ' +
	        this._start + '...' + this._end +
	        (this._step !== 1 ? ' by ' + this._step : '') +
	      ' ]';
	    };

	    Range.prototype.get = function(index, notSetValue) {
	      return this.has(index) ?
	        this._start + wrapIndex(this, index) * this._step :
	        notSetValue;
	    };

	    Range.prototype.includes = function(searchValue) {
	      var possibleIndex = (searchValue - this._start) / this._step;
	      return possibleIndex >= 0 &&
	        possibleIndex < this.size &&
	        possibleIndex === Math.floor(possibleIndex);
	    };

	    Range.prototype.slice = function(begin, end) {
	      if (wholeSlice(begin, end, this.size)) {
	        return this;
	      }
	      begin = resolveBegin(begin, this.size);
	      end = resolveEnd(end, this.size);
	      if (end <= begin) {
	        return new Range(0, 0);
	      }
	      return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);
	    };

	    Range.prototype.indexOf = function(searchValue) {
	      var offsetValue = searchValue - this._start;
	      if (offsetValue % this._step === 0) {
	        var index = offsetValue / this._step;
	        if (index >= 0 && index < this.size) {
	          return index
	        }
	      }
	      return -1;
	    };

	    Range.prototype.lastIndexOf = function(searchValue) {
	      return this.indexOf(searchValue);
	    };

	    Range.prototype.__iterate = function(fn, reverse) {
	      var maxIndex = this.size - 1;
	      var step = this._step;
	      var value = reverse ? this._start + maxIndex * step : this._start;
	      for (var ii = 0; ii <= maxIndex; ii++) {
	        if (fn(value, ii, this) === false) {
	          return ii + 1;
	        }
	        value += reverse ? -step : step;
	      }
	      return ii;
	    };

	    Range.prototype.__iterator = function(type, reverse) {
	      var maxIndex = this.size - 1;
	      var step = this._step;
	      var value = reverse ? this._start + maxIndex * step : this._start;
	      var ii = 0;
	      return new Iterator(function()  {
	        var v = value;
	        value += reverse ? -step : step;
	        return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii++, v);
	      });
	    };

	    Range.prototype.equals = function(other) {
	      return other instanceof Range ?
	        this._start === other._start &&
	        this._end === other._end &&
	        this._step === other._step :
	        deepEqual(this, other);
	    };


	  var EMPTY_RANGE;

	  createClass(Collection, Iterable);
	    function Collection() {
	      throw TypeError('Abstract');
	    }


	  createClass(KeyedCollection, Collection);function KeyedCollection() {}

	  createClass(IndexedCollection, Collection);function IndexedCollection() {}

	  createClass(SetCollection, Collection);function SetCollection() {}


	  Collection.Keyed = KeyedCollection;
	  Collection.Indexed = IndexedCollection;
	  Collection.Set = SetCollection;

	  var imul =
	    typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2 ?
	    Math.imul :
	    function imul(a, b) {
	      a = a | 0; // int
	      b = b | 0; // int
	      var c = a & 0xffff;
	      var d = b & 0xffff;
	      // Shift by 0 fixes the sign on the high part.
	      return (c * d) + ((((a >>> 16) * d + c * (b >>> 16)) << 16) >>> 0) | 0; // int
	    };

	  // v8 has an optimization for storing 31-bit signed numbers.
	  // Values which have either 00 or 11 as the high order bits qualify.
	  // This function drops the highest order bit in a signed number, maintaining
	  // the sign bit.
	  function smi(i32) {
	    return ((i32 >>> 1) & 0x40000000) | (i32 & 0xBFFFFFFF);
	  }

	  function hash(o) {
	    if (o === false || o === null || o === undefined) {
	      return 0;
	    }
	    if (typeof o.valueOf === 'function') {
	      o = o.valueOf();
	      if (o === false || o === null || o === undefined) {
	        return 0;
	      }
	    }
	    if (o === true) {
	      return 1;
	    }
	    var type = typeof o;
	    if (type === 'number') {
	      if (o !== o || o === Infinity) {
	        return 0;
	      }
	      var h = o | 0;
	      if (h !== o) {
	        h ^= o * 0xFFFFFFFF;
	      }
	      while (o > 0xFFFFFFFF) {
	        o /= 0xFFFFFFFF;
	        h ^= o;
	      }
	      return smi(h);
	    }
	    if (type === 'string') {
	      return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);
	    }
	    if (typeof o.hashCode === 'function') {
	      return o.hashCode();
	    }
	    if (type === 'object') {
	      return hashJSObj(o);
	    }
	    if (typeof o.toString === 'function') {
	      return hashString(o.toString());
	    }
	    throw new Error('Value type ' + type + ' cannot be hashed.');
	  }

	  function cachedHashString(string) {
	    var hash = stringHashCache[string];
	    if (hash === undefined) {
	      hash = hashString(string);
	      if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {
	        STRING_HASH_CACHE_SIZE = 0;
	        stringHashCache = {};
	      }
	      STRING_HASH_CACHE_SIZE++;
	      stringHashCache[string] = hash;
	    }
	    return hash;
	  }

	  // http://jsperf.com/hashing-strings
	  function hashString(string) {
	    // This is the hash from JVM
	    // The hash code for a string is computed as
	    // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],
	    // where s[i] is the ith character of the string and n is the length of
	    // the string. We "mod" the result to make it between 0 (inclusive) and 2^31
	    // (exclusive) by dropping high bits.
	    var hash = 0;
	    for (var ii = 0; ii < string.length; ii++) {
	      hash = 31 * hash + string.charCodeAt(ii) | 0;
	    }
	    return smi(hash);
	  }

	  function hashJSObj(obj) {
	    var hash;
	    if (usingWeakMap) {
	      hash = weakMap.get(obj);
	      if (hash !== undefined) {
	        return hash;
	      }
	    }

	    hash = obj[UID_HASH_KEY];
	    if (hash !== undefined) {
	      return hash;
	    }

	    if (!canDefineProperty) {
	      hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];
	      if (hash !== undefined) {
	        return hash;
	      }

	      hash = getIENodeHash(obj);
	      if (hash !== undefined) {
	        return hash;
	      }
	    }

	    hash = ++objHashUID;
	    if (objHashUID & 0x40000000) {
	      objHashUID = 0;
	    }

	    if (usingWeakMap) {
	      weakMap.set(obj, hash);
	    } else if (isExtensible !== undefined && isExtensible(obj) === false) {
	      throw new Error('Non-extensible objects are not allowed as keys.');
	    } else if (canDefineProperty) {
	      Object.defineProperty(obj, UID_HASH_KEY, {
	        'enumerable': false,
	        'configurable': false,
	        'writable': false,
	        'value': hash
	      });
	    } else if (obj.propertyIsEnumerable !== undefined &&
	               obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {
	      // Since we can't define a non-enumerable property on the object
	      // we'll hijack one of the less-used non-enumerable properties to
	      // save our hash on it. Since this is a function it will not show up in
	      // `JSON.stringify` which is what we want.
	      obj.propertyIsEnumerable = function() {
	        return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);
	      };
	      obj.propertyIsEnumerable[UID_HASH_KEY] = hash;
	    } else if (obj.nodeType !== undefined) {
	      // At this point we couldn't get the IE `uniqueID` to use as a hash
	      // and we couldn't use a non-enumerable property to exploit the
	      // dontEnum bug so we simply add the `UID_HASH_KEY` on the node
	      // itself.
	      obj[UID_HASH_KEY] = hash;
	    } else {
	      throw new Error('Unable to set a non-enumerable property on object.');
	    }

	    return hash;
	  }

	  // Get references to ES5 object methods.
	  var isExtensible = Object.isExtensible;

	  // True if Object.defineProperty works as expected. IE8 fails this test.
	  var canDefineProperty = (function() {
	    try {
	      Object.defineProperty({}, '@', {});
	      return true;
	    } catch (e) {
	      return false;
	    }
	  }());

	  // IE has a `uniqueID` property on DOM nodes. We can construct the hash from it
	  // and avoid memory leaks from the IE cloneNode bug.
	  function getIENodeHash(node) {
	    if (node && node.nodeType > 0) {
	      switch (node.nodeType) {
	        case 1: // Element
	          return node.uniqueID;
	        case 9: // Document
	          return node.documentElement && node.documentElement.uniqueID;
	      }
	    }
	  }

	  // If possible, use a WeakMap.
	  var usingWeakMap = typeof WeakMap === 'function';
	  var weakMap;
	  if (usingWeakMap) {
	    weakMap = new WeakMap();
	  }

	  var objHashUID = 0;

	  var UID_HASH_KEY = '__immutablehash__';
	  if (typeof Symbol === 'function') {
	    UID_HASH_KEY = Symbol(UID_HASH_KEY);
	  }

	  var STRING_HASH_CACHE_MIN_STRLEN = 16;
	  var STRING_HASH_CACHE_MAX_SIZE = 255;
	  var STRING_HASH_CACHE_SIZE = 0;
	  var stringHashCache = {};

	  function assertNotInfinite(size) {
	    invariant(
	      size !== Infinity,
	      'Cannot perform this action with an infinite size.'
	    );
	  }

	  createClass(Map, KeyedCollection);

	    // @pragma Construction

	    function Map(value) {
	      return value === null || value === undefined ? emptyMap() :
	        isMap(value) && !isOrdered(value) ? value :
	        emptyMap().withMutations(function(map ) {
	          var iter = KeyedIterable(value);
	          assertNotInfinite(iter.size);
	          iter.forEach(function(v, k)  {return map.set(k, v)});
	        });
	    }

	    Map.of = function() {var keyValues = SLICE$0.call(arguments, 0);
	      return emptyMap().withMutations(function(map ) {
	        for (var i = 0; i < keyValues.length; i += 2) {
	          if (i + 1 >= keyValues.length) {
	            throw new Error('Missing value for key: ' + keyValues[i]);
	          }
	          map.set(keyValues[i], keyValues[i + 1]);
	        }
	      });
	    };

	    Map.prototype.toString = function() {
	      return this.__toString('Map {', '}');
	    };

	    // @pragma Access

	    Map.prototype.get = function(k, notSetValue) {
	      return this._root ?
	        this._root.get(0, undefined, k, notSetValue) :
	        notSetValue;
	    };

	    // @pragma Modification

	    Map.prototype.set = function(k, v) {
	      return updateMap(this, k, v);
	    };

	    Map.prototype.setIn = function(keyPath, v) {
	      return this.updateIn(keyPath, NOT_SET, function()  {return v});
	    };

	    Map.prototype.remove = function(k) {
	      return updateMap(this, k, NOT_SET);
	    };

	    Map.prototype.deleteIn = function(keyPath) {
	      return this.updateIn(keyPath, function()  {return NOT_SET});
	    };

	    Map.prototype.update = function(k, notSetValue, updater) {
	      return arguments.length === 1 ?
	        k(this) :
	        this.updateIn([k], notSetValue, updater);
	    };

	    Map.prototype.updateIn = function(keyPath, notSetValue, updater) {
	      if (!updater) {
	        updater = notSetValue;
	        notSetValue = undefined;
	      }
	      var updatedValue = updateInDeepMap(
	        this,
	        forceIterator(keyPath),
	        notSetValue,
	        updater
	      );
	      return updatedValue === NOT_SET ? undefined : updatedValue;
	    };

	    Map.prototype.clear = function() {
	      if (this.size === 0) {
	        return this;
	      }
	      if (this.__ownerID) {
	        this.size = 0;
	        this._root = null;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return emptyMap();
	    };

	    // @pragma Composition

	    Map.prototype.merge = function(/*...iters*/) {
	      return mergeIntoMapWith(this, undefined, arguments);
	    };

	    Map.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
	      return mergeIntoMapWith(this, merger, iters);
	    };

	    Map.prototype.mergeIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);
	      return this.updateIn(
	        keyPath,
	        emptyMap(),
	        function(m ) {return typeof m.merge === 'function' ?
	          m.merge.apply(m, iters) :
	          iters[iters.length - 1]}
	      );
	    };

	    Map.prototype.mergeDeep = function(/*...iters*/) {
	      return mergeIntoMapWith(this, deepMerger, arguments);
	    };

	    Map.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
	      return mergeIntoMapWith(this, deepMergerWith(merger), iters);
	    };

	    Map.prototype.mergeDeepIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);
	      return this.updateIn(
	        keyPath,
	        emptyMap(),
	        function(m ) {return typeof m.mergeDeep === 'function' ?
	          m.mergeDeep.apply(m, iters) :
	          iters[iters.length - 1]}
	      );
	    };

	    Map.prototype.sort = function(comparator) {
	      // Late binding
	      return OrderedMap(sortFactory(this, comparator));
	    };

	    Map.prototype.sortBy = function(mapper, comparator) {
	      // Late binding
	      return OrderedMap(sortFactory(this, comparator, mapper));
	    };

	    // @pragma Mutability

	    Map.prototype.withMutations = function(fn) {
	      var mutable = this.asMutable();
	      fn(mutable);
	      return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;
	    };

	    Map.prototype.asMutable = function() {
	      return this.__ownerID ? this : this.__ensureOwner(new OwnerID());
	    };

	    Map.prototype.asImmutable = function() {
	      return this.__ensureOwner();
	    };

	    Map.prototype.wasAltered = function() {
	      return this.__altered;
	    };

	    Map.prototype.__iterator = function(type, reverse) {
	      return new MapIterator(this, type, reverse);
	    };

	    Map.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      var iterations = 0;
	      this._root && this._root.iterate(function(entry ) {
	        iterations++;
	        return fn(entry[1], entry[0], this$0);
	      }, reverse);
	      return iterations;
	    };

	    Map.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        this.__altered = false;
	        return this;
	      }
	      return makeMap(this.size, this._root, ownerID, this.__hash);
	    };


	  function isMap(maybeMap) {
	    return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);
	  }

	  Map.isMap = isMap;

	  var IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';

	  var MapPrototype = Map.prototype;
	  MapPrototype[IS_MAP_SENTINEL] = true;
	  MapPrototype[DELETE] = MapPrototype.remove;
	  MapPrototype.removeIn = MapPrototype.deleteIn;


	  // #pragma Trie Nodes



	    function ArrayMapNode(ownerID, entries) {
	      this.ownerID = ownerID;
	      this.entries = entries;
	    }

	    ArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {
	      var entries = this.entries;
	      for (var ii = 0, len = entries.length; ii < len; ii++) {
	        if (is(key, entries[ii][0])) {
	          return entries[ii][1];
	        }
	      }
	      return notSetValue;
	    };

	    ArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	      var removed = value === NOT_SET;

	      var entries = this.entries;
	      var idx = 0;
	      for (var len = entries.length; idx < len; idx++) {
	        if (is(key, entries[idx][0])) {
	          break;
	        }
	      }
	      var exists = idx < len;

	      if (exists ? entries[idx][1] === value : removed) {
	        return this;
	      }

	      SetRef(didAlter);
	      (removed || !exists) && SetRef(didChangeSize);

	      if (removed && entries.length === 1) {
	        return; // undefined
	      }

	      if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {
	        return createNodes(ownerID, entries, key, value);
	      }

	      var isEditable = ownerID && ownerID === this.ownerID;
	      var newEntries = isEditable ? entries : arrCopy(entries);

	      if (exists) {
	        if (removed) {
	          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());
	        } else {
	          newEntries[idx] = [key, value];
	        }
	      } else {
	        newEntries.push([key, value]);
	      }

	      if (isEditable) {
	        this.entries = newEntries;
	        return this;
	      }

	      return new ArrayMapNode(ownerID, newEntries);
	    };




	    function BitmapIndexedNode(ownerID, bitmap, nodes) {
	      this.ownerID = ownerID;
	      this.bitmap = bitmap;
	      this.nodes = nodes;
	    }

	    BitmapIndexedNode.prototype.get = function(shift, keyHash, key, notSetValue) {
	      if (keyHash === undefined) {
	        keyHash = hash(key);
	      }
	      var bit = (1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK));
	      var bitmap = this.bitmap;
	      return (bitmap & bit) === 0 ? notSetValue :
	        this.nodes[popCount(bitmap & (bit - 1))].get(shift + SHIFT, keyHash, key, notSetValue);
	    };

	    BitmapIndexedNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	      if (keyHash === undefined) {
	        keyHash = hash(key);
	      }
	      var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
	      var bit = 1 << keyHashFrag;
	      var bitmap = this.bitmap;
	      var exists = (bitmap & bit) !== 0;

	      if (!exists && value === NOT_SET) {
	        return this;
	      }

	      var idx = popCount(bitmap & (bit - 1));
	      var nodes = this.nodes;
	      var node = exists ? nodes[idx] : undefined;
	      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);

	      if (newNode === node) {
	        return this;
	      }

	      if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {
	        return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);
	      }

	      if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {
	        return nodes[idx ^ 1];
	      }

	      if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {
	        return newNode;
	      }

	      var isEditable = ownerID && ownerID === this.ownerID;
	      var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;
	      var newNodes = exists ? newNode ?
	        setIn(nodes, idx, newNode, isEditable) :
	        spliceOut(nodes, idx, isEditable) :
	        spliceIn(nodes, idx, newNode, isEditable);

	      if (isEditable) {
	        this.bitmap = newBitmap;
	        this.nodes = newNodes;
	        return this;
	      }

	      return new BitmapIndexedNode(ownerID, newBitmap, newNodes);
	    };




	    function HashArrayMapNode(ownerID, count, nodes) {
	      this.ownerID = ownerID;
	      this.count = count;
	      this.nodes = nodes;
	    }

	    HashArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {
	      if (keyHash === undefined) {
	        keyHash = hash(key);
	      }
	      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
	      var node = this.nodes[idx];
	      return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;
	    };

	    HashArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	      if (keyHash === undefined) {
	        keyHash = hash(key);
	      }
	      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
	      var removed = value === NOT_SET;
	      var nodes = this.nodes;
	      var node = nodes[idx];

	      if (removed && !node) {
	        return this;
	      }

	      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);
	      if (newNode === node) {
	        return this;
	      }

	      var newCount = this.count;
	      if (!node) {
	        newCount++;
	      } else if (!newNode) {
	        newCount--;
	        if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {
	          return packNodes(ownerID, nodes, newCount, idx);
	        }
	      }

	      var isEditable = ownerID && ownerID === this.ownerID;
	      var newNodes = setIn(nodes, idx, newNode, isEditable);

	      if (isEditable) {
	        this.count = newCount;
	        this.nodes = newNodes;
	        return this;
	      }

	      return new HashArrayMapNode(ownerID, newCount, newNodes);
	    };




	    function HashCollisionNode(ownerID, keyHash, entries) {
	      this.ownerID = ownerID;
	      this.keyHash = keyHash;
	      this.entries = entries;
	    }

	    HashCollisionNode.prototype.get = function(shift, keyHash, key, notSetValue) {
	      var entries = this.entries;
	      for (var ii = 0, len = entries.length; ii < len; ii++) {
	        if (is(key, entries[ii][0])) {
	          return entries[ii][1];
	        }
	      }
	      return notSetValue;
	    };

	    HashCollisionNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	      if (keyHash === undefined) {
	        keyHash = hash(key);
	      }

	      var removed = value === NOT_SET;

	      if (keyHash !== this.keyHash) {
	        if (removed) {
	          return this;
	        }
	        SetRef(didAlter);
	        SetRef(didChangeSize);
	        return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);
	      }

	      var entries = this.entries;
	      var idx = 0;
	      for (var len = entries.length; idx < len; idx++) {
	        if (is(key, entries[idx][0])) {
	          break;
	        }
	      }
	      var exists = idx < len;

	      if (exists ? entries[idx][1] === value : removed) {
	        return this;
	      }

	      SetRef(didAlter);
	      (removed || !exists) && SetRef(didChangeSize);

	      if (removed && len === 2) {
	        return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);
	      }

	      var isEditable = ownerID && ownerID === this.ownerID;
	      var newEntries = isEditable ? entries : arrCopy(entries);

	      if (exists) {
	        if (removed) {
	          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());
	        } else {
	          newEntries[idx] = [key, value];
	        }
	      } else {
	        newEntries.push([key, value]);
	      }

	      if (isEditable) {
	        this.entries = newEntries;
	        return this;
	      }

	      return new HashCollisionNode(ownerID, this.keyHash, newEntries);
	    };




	    function ValueNode(ownerID, keyHash, entry) {
	      this.ownerID = ownerID;
	      this.keyHash = keyHash;
	      this.entry = entry;
	    }

	    ValueNode.prototype.get = function(shift, keyHash, key, notSetValue) {
	      return is(key, this.entry[0]) ? this.entry[1] : notSetValue;
	    };

	    ValueNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	      var removed = value === NOT_SET;
	      var keyMatch = is(key, this.entry[0]);
	      if (keyMatch ? value === this.entry[1] : removed) {
	        return this;
	      }

	      SetRef(didAlter);

	      if (removed) {
	        SetRef(didChangeSize);
	        return; // undefined
	      }

	      if (keyMatch) {
	        if (ownerID && ownerID === this.ownerID) {
	          this.entry[1] = value;
	          return this;
	        }
	        return new ValueNode(ownerID, this.keyHash, [key, value]);
	      }

	      SetRef(didChangeSize);
	      return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);
	    };



	  // #pragma Iterators

	  ArrayMapNode.prototype.iterate =
	  HashCollisionNode.prototype.iterate = function (fn, reverse) {
	    var entries = this.entries;
	    for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {
	      if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {
	        return false;
	      }
	    }
	  }

	  BitmapIndexedNode.prototype.iterate =
	  HashArrayMapNode.prototype.iterate = function (fn, reverse) {
	    var nodes = this.nodes;
	    for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {
	      var node = nodes[reverse ? maxIndex - ii : ii];
	      if (node && node.iterate(fn, reverse) === false) {
	        return false;
	      }
	    }
	  }

	  ValueNode.prototype.iterate = function (fn, reverse) {
	    return fn(this.entry);
	  }

	  createClass(MapIterator, Iterator);

	    function MapIterator(map, type, reverse) {
	      this._type = type;
	      this._reverse = reverse;
	      this._stack = map._root && mapIteratorFrame(map._root);
	    }

	    MapIterator.prototype.next = function() {
	      var type = this._type;
	      var stack = this._stack;
	      while (stack) {
	        var node = stack.node;
	        var index = stack.index++;
	        var maxIndex;
	        if (node.entry) {
	          if (index === 0) {
	            return mapIteratorValue(type, node.entry);
	          }
	        } else if (node.entries) {
	          maxIndex = node.entries.length - 1;
	          if (index <= maxIndex) {
	            return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);
	          }
	        } else {
	          maxIndex = node.nodes.length - 1;
	          if (index <= maxIndex) {
	            var subNode = node.nodes[this._reverse ? maxIndex - index : index];
	            if (subNode) {
	              if (subNode.entry) {
	                return mapIteratorValue(type, subNode.entry);
	              }
	              stack = this._stack = mapIteratorFrame(subNode, stack);
	            }
	            continue;
	          }
	        }
	        stack = this._stack = this._stack.__prev;
	      }
	      return iteratorDone();
	    };


	  function mapIteratorValue(type, entry) {
	    return iteratorValue(type, entry[0], entry[1]);
	  }

	  function mapIteratorFrame(node, prev) {
	    return {
	      node: node,
	      index: 0,
	      __prev: prev
	    };
	  }

	  function makeMap(size, root, ownerID, hash) {
	    var map = Object.create(MapPrototype);
	    map.size = size;
	    map._root = root;
	    map.__ownerID = ownerID;
	    map.__hash = hash;
	    map.__altered = false;
	    return map;
	  }

	  var EMPTY_MAP;
	  function emptyMap() {
	    return EMPTY_MAP || (EMPTY_MAP = makeMap(0));
	  }

	  function updateMap(map, k, v) {
	    var newRoot;
	    var newSize;
	    if (!map._root) {
	      if (v === NOT_SET) {
	        return map;
	      }
	      newSize = 1;
	      newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);
	    } else {
	      var didChangeSize = MakeRef(CHANGE_LENGTH);
	      var didAlter = MakeRef(DID_ALTER);
	      newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);
	      if (!didAlter.value) {
	        return map;
	      }
	      newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);
	    }
	    if (map.__ownerID) {
	      map.size = newSize;
	      map._root = newRoot;
	      map.__hash = undefined;
	      map.__altered = true;
	      return map;
	    }
	    return newRoot ? makeMap(newSize, newRoot) : emptyMap();
	  }

	  function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	    if (!node) {
	      if (value === NOT_SET) {
	        return node;
	      }
	      SetRef(didAlter);
	      SetRef(didChangeSize);
	      return new ValueNode(ownerID, keyHash, [key, value]);
	    }
	    return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);
	  }

	  function isLeafNode(node) {
	    return node.constructor === ValueNode || node.constructor === HashCollisionNode;
	  }

	  function mergeIntoNode(node, ownerID, shift, keyHash, entry) {
	    if (node.keyHash === keyHash) {
	      return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);
	    }

	    var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;
	    var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;

	    var newNode;
	    var nodes = idx1 === idx2 ?
	      [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)] :
	      ((newNode = new ValueNode(ownerID, keyHash, entry)), idx1 < idx2 ? [node, newNode] : [newNode, node]);

	    return new BitmapIndexedNode(ownerID, (1 << idx1) | (1 << idx2), nodes);
	  }

	  function createNodes(ownerID, entries, key, value) {
	    if (!ownerID) {
	      ownerID = new OwnerID();
	    }
	    var node = new ValueNode(ownerID, hash(key), [key, value]);
	    for (var ii = 0; ii < entries.length; ii++) {
	      var entry = entries[ii];
	      node = node.update(ownerID, 0, undefined, entry[0], entry[1]);
	    }
	    return node;
	  }

	  function packNodes(ownerID, nodes, count, excluding) {
	    var bitmap = 0;
	    var packedII = 0;
	    var packedNodes = new Array(count);
	    for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {
	      var node = nodes[ii];
	      if (node !== undefined && ii !== excluding) {
	        bitmap |= bit;
	        packedNodes[packedII++] = node;
	      }
	    }
	    return new BitmapIndexedNode(ownerID, bitmap, packedNodes);
	  }

	  function expandNodes(ownerID, nodes, bitmap, including, node) {
	    var count = 0;
	    var expandedNodes = new Array(SIZE);
	    for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {
	      expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;
	    }
	    expandedNodes[including] = node;
	    return new HashArrayMapNode(ownerID, count + 1, expandedNodes);
	  }

	  function mergeIntoMapWith(map, merger, iterables) {
	    var iters = [];
	    for (var ii = 0; ii < iterables.length; ii++) {
	      var value = iterables[ii];
	      var iter = KeyedIterable(value);
	      if (!isIterable(value)) {
	        iter = iter.map(function(v ) {return fromJS(v)});
	      }
	      iters.push(iter);
	    }
	    return mergeIntoCollectionWith(map, merger, iters);
	  }

	  function deepMerger(existing, value, key) {
	    return existing && existing.mergeDeep && isIterable(value) ?
	      existing.mergeDeep(value) :
	      is(existing, value) ? existing : value;
	  }

	  function deepMergerWith(merger) {
	    return function(existing, value, key)  {
	      if (existing && existing.mergeDeepWith && isIterable(value)) {
	        return existing.mergeDeepWith(merger, value);
	      }
	      var nextValue = merger(existing, value, key);
	      return is(existing, nextValue) ? existing : nextValue;
	    };
	  }

	  function mergeIntoCollectionWith(collection, merger, iters) {
	    iters = iters.filter(function(x ) {return x.size !== 0});
	    if (iters.length === 0) {
	      return collection;
	    }
	    if (collection.size === 0 && !collection.__ownerID && iters.length === 1) {
	      return collection.constructor(iters[0]);
	    }
	    return collection.withMutations(function(collection ) {
	      var mergeIntoMap = merger ?
	        function(value, key)  {
	          collection.update(key, NOT_SET, function(existing )
	            {return existing === NOT_SET ? value : merger(existing, value, key)}
	          );
	        } :
	        function(value, key)  {
	          collection.set(key, value);
	        }
	      for (var ii = 0; ii < iters.length; ii++) {
	        iters[ii].forEach(mergeIntoMap);
	      }
	    });
	  }

	  function updateInDeepMap(existing, keyPathIter, notSetValue, updater) {
	    var isNotSet = existing === NOT_SET;
	    var step = keyPathIter.next();
	    if (step.done) {
	      var existingValue = isNotSet ? notSetValue : existing;
	      var newValue = updater(existingValue);
	      return newValue === existingValue ? existing : newValue;
	    }
	    invariant(
	      isNotSet || (existing && existing.set),
	      'invalid keyPath'
	    );
	    var key = step.value;
	    var nextExisting = isNotSet ? NOT_SET : existing.get(key, NOT_SET);
	    var nextUpdated = updateInDeepMap(
	      nextExisting,
	      keyPathIter,
	      notSetValue,
	      updater
	    );
	    return nextUpdated === nextExisting ? existing :
	      nextUpdated === NOT_SET ? existing.remove(key) :
	      (isNotSet ? emptyMap() : existing).set(key, nextUpdated);
	  }

	  function popCount(x) {
	    x = x - ((x >> 1) & 0x55555555);
	    x = (x & 0x33333333) + ((x >> 2) & 0x33333333);
	    x = (x + (x >> 4)) & 0x0f0f0f0f;
	    x = x + (x >> 8);
	    x = x + (x >> 16);
	    return x & 0x7f;
	  }

	  function setIn(array, idx, val, canEdit) {
	    var newArray = canEdit ? array : arrCopy(array);
	    newArray[idx] = val;
	    return newArray;
	  }

	  function spliceIn(array, idx, val, canEdit) {
	    var newLen = array.length + 1;
	    if (canEdit && idx + 1 === newLen) {
	      array[idx] = val;
	      return array;
	    }
	    var newArray = new Array(newLen);
	    var after = 0;
	    for (var ii = 0; ii < newLen; ii++) {
	      if (ii === idx) {
	        newArray[ii] = val;
	        after = -1;
	      } else {
	        newArray[ii] = array[ii + after];
	      }
	    }
	    return newArray;
	  }

	  function spliceOut(array, idx, canEdit) {
	    var newLen = array.length - 1;
	    if (canEdit && idx === newLen) {
	      array.pop();
	      return array;
	    }
	    var newArray = new Array(newLen);
	    var after = 0;
	    for (var ii = 0; ii < newLen; ii++) {
	      if (ii === idx) {
	        after = 1;
	      }
	      newArray[ii] = array[ii + after];
	    }
	    return newArray;
	  }

	  var MAX_ARRAY_MAP_SIZE = SIZE / 4;
	  var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;
	  var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;

	  createClass(List, IndexedCollection);

	    // @pragma Construction

	    function List(value) {
	      var empty = emptyList();
	      if (value === null || value === undefined) {
	        return empty;
	      }
	      if (isList(value)) {
	        return value;
	      }
	      var iter = IndexedIterable(value);
	      var size = iter.size;
	      if (size === 0) {
	        return empty;
	      }
	      assertNotInfinite(size);
	      if (size > 0 && size < SIZE) {
	        return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));
	      }
	      return empty.withMutations(function(list ) {
	        list.setSize(size);
	        iter.forEach(function(v, i)  {return list.set(i, v)});
	      });
	    }

	    List.of = function(/*...values*/) {
	      return this(arguments);
	    };

	    List.prototype.toString = function() {
	      return this.__toString('List [', ']');
	    };

	    // @pragma Access

	    List.prototype.get = function(index, notSetValue) {
	      index = wrapIndex(this, index);
	      if (index >= 0 && index < this.size) {
	        index += this._origin;
	        var node = listNodeFor(this, index);
	        return node && node.array[index & MASK];
	      }
	      return notSetValue;
	    };

	    // @pragma Modification

	    List.prototype.set = function(index, value) {
	      return updateList(this, index, value);
	    };

	    List.prototype.remove = function(index) {
	      return !this.has(index) ? this :
	        index === 0 ? this.shift() :
	        index === this.size - 1 ? this.pop() :
	        this.splice(index, 1);
	    };

	    List.prototype.insert = function(index, value) {
	      return this.splice(index, 0, value);
	    };

	    List.prototype.clear = function() {
	      if (this.size === 0) {
	        return this;
	      }
	      if (this.__ownerID) {
	        this.size = this._origin = this._capacity = 0;
	        this._level = SHIFT;
	        this._root = this._tail = null;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return emptyList();
	    };

	    List.prototype.push = function(/*...values*/) {
	      var values = arguments;
	      var oldSize = this.size;
	      return this.withMutations(function(list ) {
	        setListBounds(list, 0, oldSize + values.length);
	        for (var ii = 0; ii < values.length; ii++) {
	          list.set(oldSize + ii, values[ii]);
	        }
	      });
	    };

	    List.prototype.pop = function() {
	      return setListBounds(this, 0, -1);
	    };

	    List.prototype.unshift = function(/*...values*/) {
	      var values = arguments;
	      return this.withMutations(function(list ) {
	        setListBounds(list, -values.length);
	        for (var ii = 0; ii < values.length; ii++) {
	          list.set(ii, values[ii]);
	        }
	      });
	    };

	    List.prototype.shift = function() {
	      return setListBounds(this, 1);
	    };

	    // @pragma Composition

	    List.prototype.merge = function(/*...iters*/) {
	      return mergeIntoListWith(this, undefined, arguments);
	    };

	    List.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
	      return mergeIntoListWith(this, merger, iters);
	    };

	    List.prototype.mergeDeep = function(/*...iters*/) {
	      return mergeIntoListWith(this, deepMerger, arguments);
	    };

	    List.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
	      return mergeIntoListWith(this, deepMergerWith(merger), iters);
	    };

	    List.prototype.setSize = function(size) {
	      return setListBounds(this, 0, size);
	    };

	    // @pragma Iteration

	    List.prototype.slice = function(begin, end) {
	      var size = this.size;
	      if (wholeSlice(begin, end, size)) {
	        return this;
	      }
	      return setListBounds(
	        this,
	        resolveBegin(begin, size),
	        resolveEnd(end, size)
	      );
	    };

	    List.prototype.__iterator = function(type, reverse) {
	      var index = 0;
	      var values = iterateList(this, reverse);
	      return new Iterator(function()  {
	        var value = values();
	        return value === DONE ?
	          iteratorDone() :
	          iteratorValue(type, index++, value);
	      });
	    };

	    List.prototype.__iterate = function(fn, reverse) {
	      var index = 0;
	      var values = iterateList(this, reverse);
	      var value;
	      while ((value = values()) !== DONE) {
	        if (fn(value, index++, this) === false) {
	          break;
	        }
	      }
	      return index;
	    };

	    List.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        return this;
	      }
	      return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);
	    };


	  function isList(maybeList) {
	    return !!(maybeList && maybeList[IS_LIST_SENTINEL]);
	  }

	  List.isList = isList;

	  var IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';

	  var ListPrototype = List.prototype;
	  ListPrototype[IS_LIST_SENTINEL] = true;
	  ListPrototype[DELETE] = ListPrototype.remove;
	  ListPrototype.setIn = MapPrototype.setIn;
	  ListPrototype.deleteIn =
	  ListPrototype.removeIn = MapPrototype.removeIn;
	  ListPrototype.update = MapPrototype.update;
	  ListPrototype.updateIn = MapPrototype.updateIn;
	  ListPrototype.mergeIn = MapPrototype.mergeIn;
	  ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;
	  ListPrototype.withMutations = MapPrototype.withMutations;
	  ListPrototype.asMutable = MapPrototype.asMutable;
	  ListPrototype.asImmutable = MapPrototype.asImmutable;
	  ListPrototype.wasAltered = MapPrototype.wasAltered;



	    function VNode(array, ownerID) {
	      this.array = array;
	      this.ownerID = ownerID;
	    }

	    // TODO: seems like these methods are very similar

	    VNode.prototype.removeBefore = function(ownerID, level, index) {
	      if (index === level ? 1 << level : 0 || this.array.length === 0) {
	        return this;
	      }
	      var originIndex = (index >>> level) & MASK;
	      if (originIndex >= this.array.length) {
	        return new VNode([], ownerID);
	      }
	      var removingFirst = originIndex === 0;
	      var newChild;
	      if (level > 0) {
	        var oldChild = this.array[originIndex];
	        newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);
	        if (newChild === oldChild && removingFirst) {
	          return this;
	        }
	      }
	      if (removingFirst && !newChild) {
	        return this;
	      }
	      var editable = editableVNode(this, ownerID);
	      if (!removingFirst) {
	        for (var ii = 0; ii < originIndex; ii++) {
	          editable.array[ii] = undefined;
	        }
	      }
	      if (newChild) {
	        editable.array[originIndex] = newChild;
	      }
	      return editable;
	    };

	    VNode.prototype.removeAfter = function(ownerID, level, index) {
	      if (index === (level ? 1 << level : 0) || this.array.length === 0) {
	        return this;
	      }
	      var sizeIndex = ((index - 1) >>> level) & MASK;
	      if (sizeIndex >= this.array.length) {
	        return this;
	      }

	      var newChild;
	      if (level > 0) {
	        var oldChild = this.array[sizeIndex];
	        newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);
	        if (newChild === oldChild && sizeIndex === this.array.length - 1) {
	          return this;
	        }
	      }

	      var editable = editableVNode(this, ownerID);
	      editable.array.splice(sizeIndex + 1);
	      if (newChild) {
	        editable.array[sizeIndex] = newChild;
	      }
	      return editable;
	    };



	  var DONE = {};

	  function iterateList(list, reverse) {
	    var left = list._origin;
	    var right = list._capacity;
	    var tailPos = getTailOffset(right);
	    var tail = list._tail;

	    return iterateNodeOrLeaf(list._root, list._level, 0);

	    function iterateNodeOrLeaf(node, level, offset) {
	      return level === 0 ?
	        iterateLeaf(node, offset) :
	        iterateNode(node, level, offset);
	    }

	    function iterateLeaf(node, offset) {
	      var array = offset === tailPos ? tail && tail.array : node && node.array;
	      var from = offset > left ? 0 : left - offset;
	      var to = right - offset;
	      if (to > SIZE) {
	        to = SIZE;
	      }
	      return function()  {
	        if (from === to) {
	          return DONE;
	        }
	        var idx = reverse ? --to : from++;
	        return array && array[idx];
	      };
	    }

	    function iterateNode(node, level, offset) {
	      var values;
	      var array = node && node.array;
	      var from = offset > left ? 0 : (left - offset) >> level;
	      var to = ((right - offset) >> level) + 1;
	      if (to > SIZE) {
	        to = SIZE;
	      }
	      return function()  {
	        do {
	          if (values) {
	            var value = values();
	            if (value !== DONE) {
	              return value;
	            }
	            values = null;
	          }
	          if (from === to) {
	            return DONE;
	          }
	          var idx = reverse ? --to : from++;
	          values = iterateNodeOrLeaf(
	            array && array[idx], level - SHIFT, offset + (idx << level)
	          );
	        } while (true);
	      };
	    }
	  }

	  function makeList(origin, capacity, level, root, tail, ownerID, hash) {
	    var list = Object.create(ListPrototype);
	    list.size = capacity - origin;
	    list._origin = origin;
	    list._capacity = capacity;
	    list._level = level;
	    list._root = root;
	    list._tail = tail;
	    list.__ownerID = ownerID;
	    list.__hash = hash;
	    list.__altered = false;
	    return list;
	  }

	  var EMPTY_LIST;
	  function emptyList() {
	    return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));
	  }

	  function updateList(list, index, value) {
	    index = wrapIndex(list, index);

	    if (index !== index) {
	      return list;
	    }

	    if (index >= list.size || index < 0) {
	      return list.withMutations(function(list ) {
	        index < 0 ?
	          setListBounds(list, index).set(0, value) :
	          setListBounds(list, 0, index + 1).set(index, value)
	      });
	    }

	    index += list._origin;

	    var newTail = list._tail;
	    var newRoot = list._root;
	    var didAlter = MakeRef(DID_ALTER);
	    if (index >= getTailOffset(list._capacity)) {
	      newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);
	    } else {
	      newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);
	    }

	    if (!didAlter.value) {
	      return list;
	    }

	    if (list.__ownerID) {
	      list._root = newRoot;
	      list._tail = newTail;
	      list.__hash = undefined;
	      list.__altered = true;
	      return list;
	    }
	    return makeList(list._origin, list._capacity, list._level, newRoot, newTail);
	  }

	  function updateVNode(node, ownerID, level, index, value, didAlter) {
	    var idx = (index >>> level) & MASK;
	    var nodeHas = node && idx < node.array.length;
	    if (!nodeHas && value === undefined) {
	      return node;
	    }

	    var newNode;

	    if (level > 0) {
	      var lowerNode = node && node.array[idx];
	      var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);
	      if (newLowerNode === lowerNode) {
	        return node;
	      }
	      newNode = editableVNode(node, ownerID);
	      newNode.array[idx] = newLowerNode;
	      return newNode;
	    }

	    if (nodeHas && node.array[idx] === value) {
	      return node;
	    }

	    SetRef(didAlter);

	    newNode = editableVNode(node, ownerID);
	    if (value === undefined && idx === newNode.array.length - 1) {
	      newNode.array.pop();
	    } else {
	      newNode.array[idx] = value;
	    }
	    return newNode;
	  }

	  function editableVNode(node, ownerID) {
	    if (ownerID && node && ownerID === node.ownerID) {
	      return node;
	    }
	    return new VNode(node ? node.array.slice() : [], ownerID);
	  }

	  function listNodeFor(list, rawIndex) {
	    if (rawIndex >= getTailOffset(list._capacity)) {
	      return list._tail;
	    }
	    if (rawIndex < 1 << (list._level + SHIFT)) {
	      var node = list._root;
	      var level = list._level;
	      while (node && level > 0) {
	        node = node.array[(rawIndex >>> level) & MASK];
	        level -= SHIFT;
	      }
	      return node;
	    }
	  }

	  function setListBounds(list, begin, end) {
	    // Sanitize begin & end using this shorthand for ToInt32(argument)
	    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32
	    if (begin !== undefined) {
	      begin = begin | 0;
	    }
	    if (end !== undefined) {
	      end = end | 0;
	    }
	    var owner = list.__ownerID || new OwnerID();
	    var oldOrigin = list._origin;
	    var oldCapacity = list._capacity;
	    var newOrigin = oldOrigin + begin;
	    var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;
	    if (newOrigin === oldOrigin && newCapacity === oldCapacity) {
	      return list;
	    }

	    // If it's going to end after it starts, it's empty.
	    if (newOrigin >= newCapacity) {
	      return list.clear();
	    }

	    var newLevel = list._level;
	    var newRoot = list._root;

	    // New origin might need creating a higher root.
	    var offsetShift = 0;
	    while (newOrigin + offsetShift < 0) {
	      newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);
	      newLevel += SHIFT;
	      offsetShift += 1 << newLevel;
	    }
	    if (offsetShift) {
	      newOrigin += offsetShift;
	      oldOrigin += offsetShift;
	      newCapacity += offsetShift;
	      oldCapacity += offsetShift;
	    }

	    var oldTailOffset = getTailOffset(oldCapacity);
	    var newTailOffset = getTailOffset(newCapacity);

	    // New size might need creating a higher root.
	    while (newTailOffset >= 1 << (newLevel + SHIFT)) {
	      newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);
	      newLevel += SHIFT;
	    }

	    // Locate or create the new tail.
	    var oldTail = list._tail;
	    var newTail = newTailOffset < oldTailOffset ?
	      listNodeFor(list, newCapacity - 1) :
	      newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail;

	    // Merge Tail into tree.
	    if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {
	      newRoot = editableVNode(newRoot, owner);
	      var node = newRoot;
	      for (var level = newLevel; level > SHIFT; level -= SHIFT) {
	        var idx = (oldTailOffset >>> level) & MASK;
	        node = node.array[idx] = editableVNode(node.array[idx], owner);
	      }
	      node.array[(oldTailOffset >>> SHIFT) & MASK] = oldTail;
	    }

	    // If the size has been reduced, there's a chance the tail needs to be trimmed.
	    if (newCapacity < oldCapacity) {
	      newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);
	    }

	    // If the new origin is within the tail, then we do not need a root.
	    if (newOrigin >= newTailOffset) {
	      newOrigin -= newTailOffset;
	      newCapacity -= newTailOffset;
	      newLevel = SHIFT;
	      newRoot = null;
	      newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);

	    // Otherwise, if the root has been trimmed, garbage collect.
	    } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {
	      offsetShift = 0;

	      // Identify the new top root node of the subtree of the old root.
	      while (newRoot) {
	        var beginIndex = (newOrigin >>> newLevel) & MASK;
	        if (beginIndex !== (newTailOffset >>> newLevel) & MASK) {
	          break;
	        }
	        if (beginIndex) {
	          offsetShift += (1 << newLevel) * beginIndex;
	        }
	        newLevel -= SHIFT;
	        newRoot = newRoot.array[beginIndex];
	      }

	      // Trim the new sides of the new root.
	      if (newRoot && newOrigin > oldOrigin) {
	        newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);
	      }
	      if (newRoot && newTailOffset < oldTailOffset) {
	        newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);
	      }
	      if (offsetShift) {
	        newOrigin -= offsetShift;
	        newCapacity -= offsetShift;
	      }
	    }

	    if (list.__ownerID) {
	      list.size = newCapacity - newOrigin;
	      list._origin = newOrigin;
	      list._capacity = newCapacity;
	      list._level = newLevel;
	      list._root = newRoot;
	      list._tail = newTail;
	      list.__hash = undefined;
	      list.__altered = true;
	      return list;
	    }
	    return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);
	  }

	  function mergeIntoListWith(list, merger, iterables) {
	    var iters = [];
	    var maxSize = 0;
	    for (var ii = 0; ii < iterables.length; ii++) {
	      var value = iterables[ii];
	      var iter = IndexedIterable(value);
	      if (iter.size > maxSize) {
	        maxSize = iter.size;
	      }
	      if (!isIterable(value)) {
	        iter = iter.map(function(v ) {return fromJS(v)});
	      }
	      iters.push(iter);
	    }
	    if (maxSize > list.size) {
	      list = list.setSize(maxSize);
	    }
	    return mergeIntoCollectionWith(list, merger, iters);
	  }

	  function getTailOffset(size) {
	    return size < SIZE ? 0 : (((size - 1) >>> SHIFT) << SHIFT);
	  }

	  createClass(OrderedMap, Map);

	    // @pragma Construction

	    function OrderedMap(value) {
	      return value === null || value === undefined ? emptyOrderedMap() :
	        isOrderedMap(value) ? value :
	        emptyOrderedMap().withMutations(function(map ) {
	          var iter = KeyedIterable(value);
	          assertNotInfinite(iter.size);
	          iter.forEach(function(v, k)  {return map.set(k, v)});
	        });
	    }

	    OrderedMap.of = function(/*...values*/) {
	      return this(arguments);
	    };

	    OrderedMap.prototype.toString = function() {
	      return this.__toString('OrderedMap {', '}');
	    };

	    // @pragma Access

	    OrderedMap.prototype.get = function(k, notSetValue) {
	      var index = this._map.get(k);
	      return index !== undefined ? this._list.get(index)[1] : notSetValue;
	    };

	    // @pragma Modification

	    OrderedMap.prototype.clear = function() {
	      if (this.size === 0) {
	        return this;
	      }
	      if (this.__ownerID) {
	        this.size = 0;
	        this._map.clear();
	        this._list.clear();
	        return this;
	      }
	      return emptyOrderedMap();
	    };

	    OrderedMap.prototype.set = function(k, v) {
	      return updateOrderedMap(this, k, v);
	    };

	    OrderedMap.prototype.remove = function(k) {
	      return updateOrderedMap(this, k, NOT_SET);
	    };

	    OrderedMap.prototype.wasAltered = function() {
	      return this._map.wasAltered() || this._list.wasAltered();
	    };

	    OrderedMap.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      return this._list.__iterate(
	        function(entry ) {return entry && fn(entry[1], entry[0], this$0)},
	        reverse
	      );
	    };

	    OrderedMap.prototype.__iterator = function(type, reverse) {
	      return this._list.fromEntrySeq().__iterator(type, reverse);
	    };

	    OrderedMap.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      var newMap = this._map.__ensureOwner(ownerID);
	      var newList = this._list.__ensureOwner(ownerID);
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        this._map = newMap;
	        this._list = newList;
	        return this;
	      }
	      return makeOrderedMap(newMap, newList, ownerID, this.__hash);
	    };


	  function isOrderedMap(maybeOrderedMap) {
	    return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);
	  }

	  OrderedMap.isOrderedMap = isOrderedMap;

	  OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;
	  OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;



	  function makeOrderedMap(map, list, ownerID, hash) {
	    var omap = Object.create(OrderedMap.prototype);
	    omap.size = map ? map.size : 0;
	    omap._map = map;
	    omap._list = list;
	    omap.__ownerID = ownerID;
	    omap.__hash = hash;
	    return omap;
	  }

	  var EMPTY_ORDERED_MAP;
	  function emptyOrderedMap() {
	    return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));
	  }

	  function updateOrderedMap(omap, k, v) {
	    var map = omap._map;
	    var list = omap._list;
	    var i = map.get(k);
	    var has = i !== undefined;
	    var newMap;
	    var newList;
	    if (v === NOT_SET) { // removed
	      if (!has) {
	        return omap;
	      }
	      if (list.size >= SIZE && list.size >= map.size * 2) {
	        newList = list.filter(function(entry, idx)  {return entry !== undefined && i !== idx});
	        newMap = newList.toKeyedSeq().map(function(entry ) {return entry[0]}).flip().toMap();
	        if (omap.__ownerID) {
	          newMap.__ownerID = newList.__ownerID = omap.__ownerID;
	        }
	      } else {
	        newMap = map.remove(k);
	        newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);
	      }
	    } else {
	      if (has) {
	        if (v === list.get(i)[1]) {
	          return omap;
	        }
	        newMap = map;
	        newList = list.set(i, [k, v]);
	      } else {
	        newMap = map.set(k, list.size);
	        newList = list.set(list.size, [k, v]);
	      }
	    }
	    if (omap.__ownerID) {
	      omap.size = newMap.size;
	      omap._map = newMap;
	      omap._list = newList;
	      omap.__hash = undefined;
	      return omap;
	    }
	    return makeOrderedMap(newMap, newList);
	  }

	  createClass(ToKeyedSequence, KeyedSeq);
	    function ToKeyedSequence(indexed, useKeys) {
	      this._iter = indexed;
	      this._useKeys = useKeys;
	      this.size = indexed.size;
	    }

	    ToKeyedSequence.prototype.get = function(key, notSetValue) {
	      return this._iter.get(key, notSetValue);
	    };

	    ToKeyedSequence.prototype.has = function(key) {
	      return this._iter.has(key);
	    };

	    ToKeyedSequence.prototype.valueSeq = function() {
	      return this._iter.valueSeq();
	    };

	    ToKeyedSequence.prototype.reverse = function() {var this$0 = this;
	      var reversedSequence = reverseFactory(this, true);
	      if (!this._useKeys) {
	        reversedSequence.valueSeq = function()  {return this$0._iter.toSeq().reverse()};
	      }
	      return reversedSequence;
	    };

	    ToKeyedSequence.prototype.map = function(mapper, context) {var this$0 = this;
	      var mappedSequence = mapFactory(this, mapper, context);
	      if (!this._useKeys) {
	        mappedSequence.valueSeq = function()  {return this$0._iter.toSeq().map(mapper, context)};
	      }
	      return mappedSequence;
	    };

	    ToKeyedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      var ii;
	      return this._iter.__iterate(
	        this._useKeys ?
	          function(v, k)  {return fn(v, k, this$0)} :
	          ((ii = reverse ? resolveSize(this) : 0),
	            function(v ) {return fn(v, reverse ? --ii : ii++, this$0)}),
	        reverse
	      );
	    };

	    ToKeyedSequence.prototype.__iterator = function(type, reverse) {
	      if (this._useKeys) {
	        return this._iter.__iterator(type, reverse);
	      }
	      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
	      var ii = reverse ? resolveSize(this) : 0;
	      return new Iterator(function()  {
	        var step = iterator.next();
	        return step.done ? step :
	          iteratorValue(type, reverse ? --ii : ii++, step.value, step);
	      });
	    };

	  ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;


	  createClass(ToIndexedSequence, IndexedSeq);
	    function ToIndexedSequence(iter) {
	      this._iter = iter;
	      this.size = iter.size;
	    }

	    ToIndexedSequence.prototype.includes = function(value) {
	      return this._iter.includes(value);
	    };

	    ToIndexedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      var iterations = 0;
	      return this._iter.__iterate(function(v ) {return fn(v, iterations++, this$0)}, reverse);
	    };

	    ToIndexedSequence.prototype.__iterator = function(type, reverse) {
	      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
	      var iterations = 0;
	      return new Iterator(function()  {
	        var step = iterator.next();
	        return step.done ? step :
	          iteratorValue(type, iterations++, step.value, step)
	      });
	    };



	  createClass(ToSetSequence, SetSeq);
	    function ToSetSequence(iter) {
	      this._iter = iter;
	      this.size = iter.size;
	    }

	    ToSetSequence.prototype.has = function(key) {
	      return this._iter.includes(key);
	    };

	    ToSetSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      return this._iter.__iterate(function(v ) {return fn(v, v, this$0)}, reverse);
	    };

	    ToSetSequence.prototype.__iterator = function(type, reverse) {
	      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
	      return new Iterator(function()  {
	        var step = iterator.next();
	        return step.done ? step :
	          iteratorValue(type, step.value, step.value, step);
	      });
	    };



	  createClass(FromEntriesSequence, KeyedSeq);
	    function FromEntriesSequence(entries) {
	      this._iter = entries;
	      this.size = entries.size;
	    }

	    FromEntriesSequence.prototype.entrySeq = function() {
	      return this._iter.toSeq();
	    };

	    FromEntriesSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      return this._iter.__iterate(function(entry ) {
	        // Check if entry exists first so array access doesn't throw for holes
	        // in the parent iteration.
	        if (entry) {
	          validateEntry(entry);
	          var indexedIterable = isIterable(entry);
	          return fn(
	            indexedIterable ? entry.get(1) : entry[1],
	            indexedIterable ? entry.get(0) : entry[0],
	            this$0
	          );
	        }
	      }, reverse);
	    };

	    FromEntriesSequence.prototype.__iterator = function(type, reverse) {
	      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
	      return new Iterator(function()  {
	        while (true) {
	          var step = iterator.next();
	          if (step.done) {
	            return step;
	          }
	          var entry = step.value;
	          // Check if entry exists first so array access doesn't throw for holes
	          // in the parent iteration.
	          if (entry) {
	            validateEntry(entry);
	            var indexedIterable = isIterable(entry);
	            return iteratorValue(
	              type,
	              indexedIterable ? entry.get(0) : entry[0],
	              indexedIterable ? entry.get(1) : entry[1],
	              step
	            );
	          }
	        }
	      });
	    };


	  ToIndexedSequence.prototype.cacheResult =
	  ToKeyedSequence.prototype.cacheResult =
	  ToSetSequence.prototype.cacheResult =
	  FromEntriesSequence.prototype.cacheResult =
	    cacheResultThrough;


	  function flipFactory(iterable) {
	    var flipSequence = makeSequence(iterable);
	    flipSequence._iter = iterable;
	    flipSequence.size = iterable.size;
	    flipSequence.flip = function()  {return iterable};
	    flipSequence.reverse = function () {
	      var reversedSequence = iterable.reverse.apply(this); // super.reverse()
	      reversedSequence.flip = function()  {return iterable.reverse()};
	      return reversedSequence;
	    };
	    flipSequence.has = function(key ) {return iterable.includes(key)};
	    flipSequence.includes = function(key ) {return iterable.has(key)};
	    flipSequence.cacheResult = cacheResultThrough;
	    flipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;
	      return iterable.__iterate(function(v, k)  {return fn(k, v, this$0) !== false}, reverse);
	    }
	    flipSequence.__iteratorUncached = function(type, reverse) {
	      if (type === ITERATE_ENTRIES) {
	        var iterator = iterable.__iterator(type, reverse);
	        return new Iterator(function()  {
	          var step = iterator.next();
	          if (!step.done) {
	            var k = step.value[0];
	            step.value[0] = step.value[1];
	            step.value[1] = k;
	          }
	          return step;
	        });
	      }
	      return iterable.__iterator(
	        type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES,
	        reverse
	      );
	    }
	    return flipSequence;
	  }


	  function mapFactory(iterable, mapper, context) {
	    var mappedSequence = makeSequence(iterable);
	    mappedSequence.size = iterable.size;
	    mappedSequence.has = function(key ) {return iterable.has(key)};
	    mappedSequence.get = function(key, notSetValue)  {
	      var v = iterable.get(key, NOT_SET);
	      return v === NOT_SET ?
	        notSetValue :
	        mapper.call(context, v, key, iterable);
	    };
	    mappedSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;
	      return iterable.__iterate(
	        function(v, k, c)  {return fn(mapper.call(context, v, k, c), k, this$0) !== false},
	        reverse
	      );
	    }
	    mappedSequence.__iteratorUncached = function (type, reverse) {
	      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
	      return new Iterator(function()  {
	        var step = iterator.next();
	        if (step.done) {
	          return step;
	        }
	        var entry = step.value;
	        var key = entry[0];
	        return iteratorValue(
	          type,
	          key,
	          mapper.call(context, entry[1], key, iterable),
	          step
	        );
	      });
	    }
	    return mappedSequence;
	  }


	  function reverseFactory(iterable, useKeys) {
	    var reversedSequence = makeSequence(iterable);
	    reversedSequence._iter = iterable;
	    reversedSequence.size = iterable.size;
	    reversedSequence.reverse = function()  {return iterable};
	    if (iterable.flip) {
	      reversedSequence.flip = function () {
	        var flipSequence = flipFactory(iterable);
	        flipSequence.reverse = function()  {return iterable.flip()};
	        return flipSequence;
	      };
	    }
	    reversedSequence.get = function(key, notSetValue) 
	      {return iterable.get(useKeys ? key : -1 - key, notSetValue)};
	    reversedSequence.has = function(key )
	      {return iterable.has(useKeys ? key : -1 - key)};
	    reversedSequence.includes = function(value ) {return iterable.includes(value)};
	    reversedSequence.cacheResult = cacheResultThrough;
	    reversedSequence.__iterate = function (fn, reverse) {var this$0 = this;
	      return iterable.__iterate(function(v, k)  {return fn(v, k, this$0)}, !reverse);
	    };
	    reversedSequence.__iterator =
	      function(type, reverse)  {return iterable.__iterator(type, !reverse)};
	    return reversedSequence;
	  }


	  function filterFactory(iterable, predicate, context, useKeys) {
	    var filterSequence = makeSequence(iterable);
	    if (useKeys) {
	      filterSequence.has = function(key ) {
	        var v = iterable.get(key, NOT_SET);
	        return v !== NOT_SET && !!predicate.call(context, v, key, iterable);
	      };
	      filterSequence.get = function(key, notSetValue)  {
	        var v = iterable.get(key, NOT_SET);
	        return v !== NOT_SET && predicate.call(context, v, key, iterable) ?
	          v : notSetValue;
	      };
	    }
	    filterSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;
	      var iterations = 0;
	      iterable.__iterate(function(v, k, c)  {
	        if (predicate.call(context, v, k, c)) {
	          iterations++;
	          return fn(v, useKeys ? k : iterations - 1, this$0);
	        }
	      }, reverse);
	      return iterations;
	    };
	    filterSequence.__iteratorUncached = function (type, reverse) {
	      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
	      var iterations = 0;
	      return new Iterator(function()  {
	        while (true) {
	          var step = iterator.next();
	          if (step.done) {
	            return step;
	          }
	          var entry = step.value;
	          var key = entry[0];
	          var value = entry[1];
	          if (predicate.call(context, value, key, iterable)) {
	            return iteratorValue(type, useKeys ? key : iterations++, value, step);
	          }
	        }
	      });
	    }
	    return filterSequence;
	  }


	  function countByFactory(iterable, grouper, context) {
	    var groups = Map().asMutable();
	    iterable.__iterate(function(v, k)  {
	      groups.update(
	        grouper.call(context, v, k, iterable),
	        0,
	        function(a ) {return a + 1}
	      );
	    });
	    return groups.asImmutable();
	  }


	  function groupByFactory(iterable, grouper, context) {
	    var isKeyedIter = isKeyed(iterable);
	    var groups = (isOrdered(iterable) ? OrderedMap() : Map()).asMutable();
	    iterable.__iterate(function(v, k)  {
	      groups.update(
	        grouper.call(context, v, k, iterable),
	        function(a ) {return (a = a || [], a.push(isKeyedIter ? [k, v] : v), a)}
	      );
	    });
	    var coerce = iterableClass(iterable);
	    return groups.map(function(arr ) {return reify(iterable, coerce(arr))});
	  }


	  function sliceFactory(iterable, begin, end, useKeys) {
	    var originalSize = iterable.size;

	    // Sanitize begin & end using this shorthand for ToInt32(argument)
	    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32
	    if (begin !== undefined) {
	      begin = begin | 0;
	    }
	    if (end !== undefined) {
	      if (end === Infinity) {
	        end = originalSize;
	      } else {
	        end = end | 0;
	      }
	    }

	    if (wholeSlice(begin, end, originalSize)) {
	      return iterable;
	    }

	    var resolvedBegin = resolveBegin(begin, originalSize);
	    var resolvedEnd = resolveEnd(end, originalSize);

	    // begin or end will be NaN if they were provided as negative numbers and
	    // this iterable's size is unknown. In that case, cache first so there is
	    // a known size and these do not resolve to NaN.
	    if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {
	      return sliceFactory(iterable.toSeq().cacheResult(), begin, end, useKeys);
	    }

	    // Note: resolvedEnd is undefined when the original sequence's length is
	    // unknown and this slice did not supply an end and should contain all
	    // elements after resolvedBegin.
	    // In that case, resolvedSize will be NaN and sliceSize will remain undefined.
	    var resolvedSize = resolvedEnd - resolvedBegin;
	    var sliceSize;
	    if (resolvedSize === resolvedSize) {
	      sliceSize = resolvedSize < 0 ? 0 : resolvedSize;
	    }

	    var sliceSeq = makeSequence(iterable);

	    // If iterable.size is undefined, the size of the realized sliceSeq is
	    // unknown at this point unless the number of items to slice is 0
	    sliceSeq.size = sliceSize === 0 ? sliceSize : iterable.size && sliceSize || undefined;

	    if (!useKeys && isSeq(iterable) && sliceSize >= 0) {
	      sliceSeq.get = function (index, notSetValue) {
	        index = wrapIndex(this, index);
	        return index >= 0 && index < sliceSize ?
	          iterable.get(index + resolvedBegin, notSetValue) :
	          notSetValue;
	      }
	    }

	    sliceSeq.__iterateUncached = function(fn, reverse) {var this$0 = this;
	      if (sliceSize === 0) {
	        return 0;
	      }
	      if (reverse) {
	        return this.cacheResult().__iterate(fn, reverse);
	      }
	      var skipped = 0;
	      var isSkipping = true;
	      var iterations = 0;
	      iterable.__iterate(function(v, k)  {
	        if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {
	          iterations++;
	          return fn(v, useKeys ? k : iterations - 1, this$0) !== false &&
	                 iterations !== sliceSize;
	        }
	      });
	      return iterations;
	    };

	    sliceSeq.__iteratorUncached = function(type, reverse) {
	      if (sliceSize !== 0 && reverse) {
	        return this.cacheResult().__iterator(type, reverse);
	      }
	      // Don't bother instantiating parent iterator if taking 0.
	      var iterator = sliceSize !== 0 && iterable.__iterator(type, reverse);
	      var skipped = 0;
	      var iterations = 0;
	      return new Iterator(function()  {
	        while (skipped++ < resolvedBegin) {
	          iterator.next();
	        }
	        if (++iterations > sliceSize) {
	          return iteratorDone();
	        }
	        var step = iterator.next();
	        if (useKeys || type === ITERATE_VALUES) {
	          return step;
	        } else if (type === ITERATE_KEYS) {
	          return iteratorValue(type, iterations - 1, undefined, step);
	        } else {
	          return iteratorValue(type, iterations - 1, step.value[1], step);
	        }
	      });
	    }

	    return sliceSeq;
	  }


	  function takeWhileFactory(iterable, predicate, context) {
	    var takeSequence = makeSequence(iterable);
	    takeSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;
	      if (reverse) {
	        return this.cacheResult().__iterate(fn, reverse);
	      }
	      var iterations = 0;
	      iterable.__iterate(function(v, k, c) 
	        {return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0)}
	      );
	      return iterations;
	    };
	    takeSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;
	      if (reverse) {
	        return this.cacheResult().__iterator(type, reverse);
	      }
	      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
	      var iterating = true;
	      return new Iterator(function()  {
	        if (!iterating) {
	          return iteratorDone();
	        }
	        var step = iterator.next();
	        if (step.done) {
	          return step;
	        }
	        var entry = step.value;
	        var k = entry[0];
	        var v = entry[1];
	        if (!predicate.call(context, v, k, this$0)) {
	          iterating = false;
	          return iteratorDone();
	        }
	        return type === ITERATE_ENTRIES ? step :
	          iteratorValue(type, k, v, step);
	      });
	    };
	    return takeSequence;
	  }


	  function skipWhileFactory(iterable, predicate, context, useKeys) {
	    var skipSequence = makeSequence(iterable);
	    skipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;
	      if (reverse) {
	        return this.cacheResult().__iterate(fn, reverse);
	      }
	      var isSkipping = true;
	      var iterations = 0;
	      iterable.__iterate(function(v, k, c)  {
	        if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {
	          iterations++;
	          return fn(v, useKeys ? k : iterations - 1, this$0);
	        }
	      });
	      return iterations;
	    };
	    skipSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;
	      if (reverse) {
	        return this.cacheResult().__iterator(type, reverse);
	      }
	      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
	      var skipping = true;
	      var iterations = 0;
	      return new Iterator(function()  {
	        var step, k, v;
	        do {
	          step = iterator.next();
	          if (step.done) {
	            if (useKeys || type === ITERATE_VALUES) {
	              return step;
	            } else if (type === ITERATE_KEYS) {
	              return iteratorValue(type, iterations++, undefined, step);
	            } else {
	              return iteratorValue(type, iterations++, step.value[1], step);
	            }
	          }
	          var entry = step.value;
	          k = entry[0];
	          v = entry[1];
	          skipping && (skipping = predicate.call(context, v, k, this$0));
	        } while (skipping);
	        return type === ITERATE_ENTRIES ? step :
	          iteratorValue(type, k, v, step);
	      });
	    };
	    return skipSequence;
	  }


	  function concatFactory(iterable, values) {
	    var isKeyedIterable = isKeyed(iterable);
	    var iters = [iterable].concat(values).map(function(v ) {
	      if (!isIterable(v)) {
	        v = isKeyedIterable ?
	          keyedSeqFromValue(v) :
	          indexedSeqFromValue(Array.isArray(v) ? v : [v]);
	      } else if (isKeyedIterable) {
	        v = KeyedIterable(v);
	      }
	      return v;
	    }).filter(function(v ) {return v.size !== 0});

	    if (iters.length === 0) {
	      return iterable;
	    }

	    if (iters.length === 1) {
	      var singleton = iters[0];
	      if (singleton === iterable ||
	          isKeyedIterable && isKeyed(singleton) ||
	          isIndexed(iterable) && isIndexed(singleton)) {
	        return singleton;
	      }
	    }

	    var concatSeq = new ArraySeq(iters);
	    if (isKeyedIterable) {
	      concatSeq = concatSeq.toKeyedSeq();
	    } else if (!isIndexed(iterable)) {
	      concatSeq = concatSeq.toSetSeq();
	    }
	    concatSeq = concatSeq.flatten(true);
	    concatSeq.size = iters.reduce(
	      function(sum, seq)  {
	        if (sum !== undefined) {
	          var size = seq.size;
	          if (size !== undefined) {
	            return sum + size;
	          }
	        }
	      },
	      0
	    );
	    return concatSeq;
	  }


	  function flattenFactory(iterable, depth, useKeys) {
	    var flatSequence = makeSequence(iterable);
	    flatSequence.__iterateUncached = function(fn, reverse) {
	      var iterations = 0;
	      var stopped = false;
	      function flatDeep(iter, currentDepth) {var this$0 = this;
	        iter.__iterate(function(v, k)  {
	          if ((!depth || currentDepth < depth) && isIterable(v)) {
	            flatDeep(v, currentDepth + 1);
	          } else if (fn(v, useKeys ? k : iterations++, this$0) === false) {
	            stopped = true;
	          }
	          return !stopped;
	        }, reverse);
	      }
	      flatDeep(iterable, 0);
	      return iterations;
	    }
	    flatSequence.__iteratorUncached = function(type, reverse) {
	      var iterator = iterable.__iterator(type, reverse);
	      var stack = [];
	      var iterations = 0;
	      return new Iterator(function()  {
	        while (iterator) {
	          var step = iterator.next();
	          if (step.done !== false) {
	            iterator = stack.pop();
	            continue;
	          }
	          var v = step.value;
	          if (type === ITERATE_ENTRIES) {
	            v = v[1];
	          }
	          if ((!depth || stack.length < depth) && isIterable(v)) {
	            stack.push(iterator);
	            iterator = v.__iterator(type, reverse);
	          } else {
	            return useKeys ? step : iteratorValue(type, iterations++, v, step);
	          }
	        }
	        return iteratorDone();
	      });
	    }
	    return flatSequence;
	  }


	  function flatMapFactory(iterable, mapper, context) {
	    var coerce = iterableClass(iterable);
	    return iterable.toSeq().map(
	      function(v, k)  {return coerce(mapper.call(context, v, k, iterable))}
	    ).flatten(true);
	  }


	  function interposeFactory(iterable, separator) {
	    var interposedSequence = makeSequence(iterable);
	    interposedSequence.size = iterable.size && iterable.size * 2 -1;
	    interposedSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;
	      var iterations = 0;
	      iterable.__iterate(function(v, k) 
	        {return (!iterations || fn(separator, iterations++, this$0) !== false) &&
	        fn(v, iterations++, this$0) !== false},
	        reverse
	      );
	      return iterations;
	    };
	    interposedSequence.__iteratorUncached = function(type, reverse) {
	      var iterator = iterable.__iterator(ITERATE_VALUES, reverse);
	      var iterations = 0;
	      var step;
	      return new Iterator(function()  {
	        if (!step || iterations % 2) {
	          step = iterator.next();
	          if (step.done) {
	            return step;
	          }
	        }
	        return iterations % 2 ?
	          iteratorValue(type, iterations++, separator) :
	          iteratorValue(type, iterations++, step.value, step);
	      });
	    };
	    return interposedSequence;
	  }


	  function sortFactory(iterable, comparator, mapper) {
	    if (!comparator) {
	      comparator = defaultComparator;
	    }
	    var isKeyedIterable = isKeyed(iterable);
	    var index = 0;
	    var entries = iterable.toSeq().map(
	      function(v, k)  {return [k, v, index++, mapper ? mapper(v, k, iterable) : v]}
	    ).toArray();
	    entries.sort(function(a, b)  {return comparator(a[3], b[3]) || a[2] - b[2]}).forEach(
	      isKeyedIterable ?
	      function(v, i)  { entries[i].length = 2; } :
	      function(v, i)  { entries[i] = v[1]; }
	    );
	    return isKeyedIterable ? KeyedSeq(entries) :
	      isIndexed(iterable) ? IndexedSeq(entries) :
	      SetSeq(entries);
	  }


	  function maxFactory(iterable, comparator, mapper) {
	    if (!comparator) {
	      comparator = defaultComparator;
	    }
	    if (mapper) {
	      var entry = iterable.toSeq()
	        .map(function(v, k)  {return [v, mapper(v, k, iterable)]})
	        .reduce(function(a, b)  {return maxCompare(comparator, a[1], b[1]) ? b : a});
	      return entry && entry[0];
	    } else {
	      return iterable.reduce(function(a, b)  {return maxCompare(comparator, a, b) ? b : a});
	    }
	  }

	  function maxCompare(comparator, a, b) {
	    var comp = comparator(b, a);
	    // b is considered the new max if the comparator declares them equal, but
	    // they are not equal and b is in fact a nullish value.
	    return (comp === 0 && b !== a && (b === undefined || b === null || b !== b)) || comp > 0;
	  }


	  function zipWithFactory(keyIter, zipper, iters) {
	    var zipSequence = makeSequence(keyIter);
	    zipSequence.size = new ArraySeq(iters).map(function(i ) {return i.size}).min();
	    // Note: this a generic base implementation of __iterate in terms of
	    // __iterator which may be more generically useful in the future.
	    zipSequence.__iterate = function(fn, reverse) {
	      /* generic:
	      var iterator = this.__iterator(ITERATE_ENTRIES, reverse);
	      var step;
	      var iterations = 0;
	      while (!(step = iterator.next()).done) {
	        iterations++;
	        if (fn(step.value[1], step.value[0], this) === false) {
	          break;
	        }
	      }
	      return iterations;
	      */
	      // indexed:
	      var iterator = this.__iterator(ITERATE_VALUES, reverse);
	      var step;
	      var iterations = 0;
	      while (!(step = iterator.next()).done) {
	        if (fn(step.value, iterations++, this) === false) {
	          break;
	        }
	      }
	      return iterations;
	    };
	    zipSequence.__iteratorUncached = function(type, reverse) {
	      var iterators = iters.map(function(i )
	        {return (i = Iterable(i), getIterator(reverse ? i.reverse() : i))}
	      );
	      var iterations = 0;
	      var isDone = false;
	      return new Iterator(function()  {
	        var steps;
	        if (!isDone) {
	          steps = iterators.map(function(i ) {return i.next()});
	          isDone = steps.some(function(s ) {return s.done});
	        }
	        if (isDone) {
	          return iteratorDone();
	        }
	        return iteratorValue(
	          type,
	          iterations++,
	          zipper.apply(null, steps.map(function(s ) {return s.value}))
	        );
	      });
	    };
	    return zipSequence
	  }


	  // #pragma Helper Functions

	  function reify(iter, seq) {
	    return isSeq(iter) ? seq : iter.constructor(seq);
	  }

	  function validateEntry(entry) {
	    if (entry !== Object(entry)) {
	      throw new TypeError('Expected [K, V] tuple: ' + entry);
	    }
	  }

	  function resolveSize(iter) {
	    assertNotInfinite(iter.size);
	    return ensureSize(iter);
	  }

	  function iterableClass(iterable) {
	    return isKeyed(iterable) ? KeyedIterable :
	      isIndexed(iterable) ? IndexedIterable :
	      SetIterable;
	  }

	  function makeSequence(iterable) {
	    return Object.create(
	      (
	        isKeyed(iterable) ? KeyedSeq :
	        isIndexed(iterable) ? IndexedSeq :
	        SetSeq
	      ).prototype
	    );
	  }

	  function cacheResultThrough() {
	    if (this._iter.cacheResult) {
	      this._iter.cacheResult();
	      this.size = this._iter.size;
	      return this;
	    } else {
	      return Seq.prototype.cacheResult.call(this);
	    }
	  }

	  function defaultComparator(a, b) {
	    return a > b ? 1 : a < b ? -1 : 0;
	  }

	  function forceIterator(keyPath) {
	    var iter = getIterator(keyPath);
	    if (!iter) {
	      // Array might not be iterable in this environment, so we need a fallback
	      // to our wrapped type.
	      if (!isArrayLike(keyPath)) {
	        throw new TypeError('Expected iterable or array-like: ' + keyPath);
	      }
	      iter = getIterator(Iterable(keyPath));
	    }
	    return iter;
	  }

	  createClass(Record, KeyedCollection);

	    function Record(defaultValues, name) {
	      var hasInitialized;

	      var RecordType = function Record(values) {
	        if (values instanceof RecordType) {
	          return values;
	        }
	        if (!(this instanceof RecordType)) {
	          return new RecordType(values);
	        }
	        if (!hasInitialized) {
	          hasInitialized = true;
	          var keys = Object.keys(defaultValues);
	          setProps(RecordTypePrototype, keys);
	          RecordTypePrototype.size = keys.length;
	          RecordTypePrototype._name = name;
	          RecordTypePrototype._keys = keys;
	          RecordTypePrototype._defaultValues = defaultValues;
	        }
	        this._map = Map(values);
	      };

	      var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);
	      RecordTypePrototype.constructor = RecordType;

	      return RecordType;
	    }

	    Record.prototype.toString = function() {
	      return this.__toString(recordName(this) + ' {', '}');
	    };

	    // @pragma Access

	    Record.prototype.has = function(k) {
	      return this._defaultValues.hasOwnProperty(k);
	    };

	    Record.prototype.get = function(k, notSetValue) {
	      if (!this.has(k)) {
	        return notSetValue;
	      }
	      var defaultVal = this._defaultValues[k];
	      return this._map ? this._map.get(k, defaultVal) : defaultVal;
	    };

	    // @pragma Modification

	    Record.prototype.clear = function() {
	      if (this.__ownerID) {
	        this._map && this._map.clear();
	        return this;
	      }
	      var RecordType = this.constructor;
	      return RecordType._empty || (RecordType._empty = makeRecord(this, emptyMap()));
	    };

	    Record.prototype.set = function(k, v) {
	      if (!this.has(k)) {
	        throw new Error('Cannot set unknown key "' + k + '" on ' + recordName(this));
	      }
	      if (this._map && !this._map.has(k)) {
	        var defaultVal = this._defaultValues[k];
	        if (v === defaultVal) {
	          return this;
	        }
	      }
	      var newMap = this._map && this._map.set(k, v);
	      if (this.__ownerID || newMap === this._map) {
	        return this;
	      }
	      return makeRecord(this, newMap);
	    };

	    Record.prototype.remove = function(k) {
	      if (!this.has(k)) {
	        return this;
	      }
	      var newMap = this._map && this._map.remove(k);
	      if (this.__ownerID || newMap === this._map) {
	        return this;
	      }
	      return makeRecord(this, newMap);
	    };

	    Record.prototype.wasAltered = function() {
	      return this._map.wasAltered();
	    };

	    Record.prototype.__iterator = function(type, reverse) {var this$0 = this;
	      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterator(type, reverse);
	    };

	    Record.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterate(fn, reverse);
	    };

	    Record.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      var newMap = this._map && this._map.__ensureOwner(ownerID);
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        this._map = newMap;
	        return this;
	      }
	      return makeRecord(this, newMap, ownerID);
	    };


	  var RecordPrototype = Record.prototype;
	  RecordPrototype[DELETE] = RecordPrototype.remove;
	  RecordPrototype.deleteIn =
	  RecordPrototype.removeIn = MapPrototype.removeIn;
	  RecordPrototype.merge = MapPrototype.merge;
	  RecordPrototype.mergeWith = MapPrototype.mergeWith;
	  RecordPrototype.mergeIn = MapPrototype.mergeIn;
	  RecordPrototype.mergeDeep = MapPrototype.mergeDeep;
	  RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;
	  RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;
	  RecordPrototype.setIn = MapPrototype.setIn;
	  RecordPrototype.update = MapPrototype.update;
	  RecordPrototype.updateIn = MapPrototype.updateIn;
	  RecordPrototype.withMutations = MapPrototype.withMutations;
	  RecordPrototype.asMutable = MapPrototype.asMutable;
	  RecordPrototype.asImmutable = MapPrototype.asImmutable;


	  function makeRecord(likeRecord, map, ownerID) {
	    var record = Object.create(Object.getPrototypeOf(likeRecord));
	    record._map = map;
	    record.__ownerID = ownerID;
	    return record;
	  }

	  function recordName(record) {
	    return record._name || record.constructor.name || 'Record';
	  }

	  function setProps(prototype, names) {
	    try {
	      names.forEach(setProp.bind(undefined, prototype));
	    } catch (error) {
	      // Object.defineProperty failed. Probably IE8.
	    }
	  }

	  function setProp(prototype, name) {
	    Object.defineProperty(prototype, name, {
	      get: function() {
	        return this.get(name);
	      },
	      set: function(value) {
	        invariant(this.__ownerID, 'Cannot set on an immutable record.');
	        this.set(name, value);
	      }
	    });
	  }

	  createClass(Set, SetCollection);

	    // @pragma Construction

	    function Set(value) {
	      return value === null || value === undefined ? emptySet() :
	        isSet(value) && !isOrdered(value) ? value :
	        emptySet().withMutations(function(set ) {
	          var iter = SetIterable(value);
	          assertNotInfinite(iter.size);
	          iter.forEach(function(v ) {return set.add(v)});
	        });
	    }

	    Set.of = function(/*...values*/) {
	      return this(arguments);
	    };

	    Set.fromKeys = function(value) {
	      return this(KeyedIterable(value).keySeq());
	    };

	    Set.prototype.toString = function() {
	      return this.__toString('Set {', '}');
	    };

	    // @pragma Access

	    Set.prototype.has = function(value) {
	      return this._map.has(value);
	    };

	    // @pragma Modification

	    Set.prototype.add = function(value) {
	      return updateSet(this, this._map.set(value, true));
	    };

	    Set.prototype.remove = function(value) {
	      return updateSet(this, this._map.remove(value));
	    };

	    Set.prototype.clear = function() {
	      return updateSet(this, this._map.clear());
	    };

	    // @pragma Composition

	    Set.prototype.union = function() {var iters = SLICE$0.call(arguments, 0);
	      iters = iters.filter(function(x ) {return x.size !== 0});
	      if (iters.length === 0) {
	        return this;
	      }
	      if (this.size === 0 && !this.__ownerID && iters.length === 1) {
	        return this.constructor(iters[0]);
	      }
	      return this.withMutations(function(set ) {
	        for (var ii = 0; ii < iters.length; ii++) {
	          SetIterable(iters[ii]).forEach(function(value ) {return set.add(value)});
	        }
	      });
	    };

	    Set.prototype.intersect = function() {var iters = SLICE$0.call(arguments, 0);
	      if (iters.length === 0) {
	        return this;
	      }
	      iters = iters.map(function(iter ) {return SetIterable(iter)});
	      var originalSet = this;
	      return this.withMutations(function(set ) {
	        originalSet.forEach(function(value ) {
	          if (!iters.every(function(iter ) {return iter.includes(value)})) {
	            set.remove(value);
	          }
	        });
	      });
	    };

	    Set.prototype.subtract = function() {var iters = SLICE$0.call(arguments, 0);
	      if (iters.length === 0) {
	        return this;
	      }
	      iters = iters.map(function(iter ) {return SetIterable(iter)});
	      var originalSet = this;
	      return this.withMutations(function(set ) {
	        originalSet.forEach(function(value ) {
	          if (iters.some(function(iter ) {return iter.includes(value)})) {
	            set.remove(value);
	          }
	        });
	      });
	    };

	    Set.prototype.merge = function() {
	      return this.union.apply(this, arguments);
	    };

	    Set.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
	      return this.union.apply(this, iters);
	    };

	    Set.prototype.sort = function(comparator) {
	      // Late binding
	      return OrderedSet(sortFactory(this, comparator));
	    };

	    Set.prototype.sortBy = function(mapper, comparator) {
	      // Late binding
	      return OrderedSet(sortFactory(this, comparator, mapper));
	    };

	    Set.prototype.wasAltered = function() {
	      return this._map.wasAltered();
	    };

	    Set.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      return this._map.__iterate(function(_, k)  {return fn(k, k, this$0)}, reverse);
	    };

	    Set.prototype.__iterator = function(type, reverse) {
	      return this._map.map(function(_, k)  {return k}).__iterator(type, reverse);
	    };

	    Set.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      var newMap = this._map.__ensureOwner(ownerID);
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        this._map = newMap;
	        return this;
	      }
	      return this.__make(newMap, ownerID);
	    };


	  function isSet(maybeSet) {
	    return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);
	  }

	  Set.isSet = isSet;

	  var IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';

	  var SetPrototype = Set.prototype;
	  SetPrototype[IS_SET_SENTINEL] = true;
	  SetPrototype[DELETE] = SetPrototype.remove;
	  SetPrototype.mergeDeep = SetPrototype.merge;
	  SetPrototype.mergeDeepWith = SetPrototype.mergeWith;
	  SetPrototype.withMutations = MapPrototype.withMutations;
	  SetPrototype.asMutable = MapPrototype.asMutable;
	  SetPrototype.asImmutable = MapPrototype.asImmutable;

	  SetPrototype.__empty = emptySet;
	  SetPrototype.__make = makeSet;

	  function updateSet(set, newMap) {
	    if (set.__ownerID) {
	      set.size = newMap.size;
	      set._map = newMap;
	      return set;
	    }
	    return newMap === set._map ? set :
	      newMap.size === 0 ? set.__empty() :
	      set.__make(newMap);
	  }

	  function makeSet(map, ownerID) {
	    var set = Object.create(SetPrototype);
	    set.size = map ? map.size : 0;
	    set._map = map;
	    set.__ownerID = ownerID;
	    return set;
	  }

	  var EMPTY_SET;
	  function emptySet() {
	    return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));
	  }

	  createClass(OrderedSet, Set);

	    // @pragma Construction

	    function OrderedSet(value) {
	      return value === null || value === undefined ? emptyOrderedSet() :
	        isOrderedSet(value) ? value :
	        emptyOrderedSet().withMutations(function(set ) {
	          var iter = SetIterable(value);
	          assertNotInfinite(iter.size);
	          iter.forEach(function(v ) {return set.add(v)});
	        });
	    }

	    OrderedSet.of = function(/*...values*/) {
	      return this(arguments);
	    };

	    OrderedSet.fromKeys = function(value) {
	      return this(KeyedIterable(value).keySeq());
	    };

	    OrderedSet.prototype.toString = function() {
	      return this.__toString('OrderedSet {', '}');
	    };


	  function isOrderedSet(maybeOrderedSet) {
	    return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);
	  }

	  OrderedSet.isOrderedSet = isOrderedSet;

	  var OrderedSetPrototype = OrderedSet.prototype;
	  OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;

	  OrderedSetPrototype.__empty = emptyOrderedSet;
	  OrderedSetPrototype.__make = makeOrderedSet;

	  function makeOrderedSet(map, ownerID) {
	    var set = Object.create(OrderedSetPrototype);
	    set.size = map ? map.size : 0;
	    set._map = map;
	    set.__ownerID = ownerID;
	    return set;
	  }

	  var EMPTY_ORDERED_SET;
	  function emptyOrderedSet() {
	    return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));
	  }

	  createClass(Stack, IndexedCollection);

	    // @pragma Construction

	    function Stack(value) {
	      return value === null || value === undefined ? emptyStack() :
	        isStack(value) ? value :
	        emptyStack().unshiftAll(value);
	    }

	    Stack.of = function(/*...values*/) {
	      return this(arguments);
	    };

	    Stack.prototype.toString = function() {
	      return this.__toString('Stack [', ']');
	    };

	    // @pragma Access

	    Stack.prototype.get = function(index, notSetValue) {
	      var head = this._head;
	      index = wrapIndex(this, index);
	      while (head && index--) {
	        head = head.next;
	      }
	      return head ? head.value : notSetValue;
	    };

	    Stack.prototype.peek = function() {
	      return this._head && this._head.value;
	    };

	    // @pragma Modification

	    Stack.prototype.push = function(/*...values*/) {
	      if (arguments.length === 0) {
	        return this;
	      }
	      var newSize = this.size + arguments.length;
	      var head = this._head;
	      for (var ii = arguments.length - 1; ii >= 0; ii--) {
	        head = {
	          value: arguments[ii],
	          next: head
	        };
	      }
	      if (this.__ownerID) {
	        this.size = newSize;
	        this._head = head;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return makeStack(newSize, head);
	    };

	    Stack.prototype.pushAll = function(iter) {
	      iter = IndexedIterable(iter);
	      if (iter.size === 0) {
	        return this;
	      }
	      assertNotInfinite(iter.size);
	      var newSize = this.size;
	      var head = this._head;
	      iter.reverse().forEach(function(value ) {
	        newSize++;
	        head = {
	          value: value,
	          next: head
	        };
	      });
	      if (this.__ownerID) {
	        this.size = newSize;
	        this._head = head;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return makeStack(newSize, head);
	    };

	    Stack.prototype.pop = function() {
	      return this.slice(1);
	    };

	    Stack.prototype.unshift = function(/*...values*/) {
	      return this.push.apply(this, arguments);
	    };

	    Stack.prototype.unshiftAll = function(iter) {
	      return this.pushAll(iter);
	    };

	    Stack.prototype.shift = function() {
	      return this.pop.apply(this, arguments);
	    };

	    Stack.prototype.clear = function() {
	      if (this.size === 0) {
	        return this;
	      }
	      if (this.__ownerID) {
	        this.size = 0;
	        this._head = undefined;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return emptyStack();
	    };

	    Stack.prototype.slice = function(begin, end) {
	      if (wholeSlice(begin, end, this.size)) {
	        return this;
	      }
	      var resolvedBegin = resolveBegin(begin, this.size);
	      var resolvedEnd = resolveEnd(end, this.size);
	      if (resolvedEnd !== this.size) {
	        // super.slice(begin, end);
	        return IndexedCollection.prototype.slice.call(this, begin, end);
	      }
	      var newSize = this.size - resolvedBegin;
	      var head = this._head;
	      while (resolvedBegin--) {
	        head = head.next;
	      }
	      if (this.__ownerID) {
	        this.size = newSize;
	        this._head = head;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return makeStack(newSize, head);
	    };

	    // @pragma Mutability

	    Stack.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        this.__altered = false;
	        return this;
	      }
	      return makeStack(this.size, this._head, ownerID, this.__hash);
	    };

	    // @pragma Iteration

	    Stack.prototype.__iterate = function(fn, reverse) {
	      if (reverse) {
	        return this.reverse().__iterate(fn);
	      }
	      var iterations = 0;
	      var node = this._head;
	      while (node) {
	        if (fn(node.value, iterations++, this) === false) {
	          break;
	        }
	        node = node.next;
	      }
	      return iterations;
	    };

	    Stack.prototype.__iterator = function(type, reverse) {
	      if (reverse) {
	        return this.reverse().__iterator(type);
	      }
	      var iterations = 0;
	      var node = this._head;
	      return new Iterator(function()  {
	        if (node) {
	          var value = node.value;
	          node = node.next;
	          return iteratorValue(type, iterations++, value);
	        }
	        return iteratorDone();
	      });
	    };


	  function isStack(maybeStack) {
	    return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);
	  }

	  Stack.isStack = isStack;

	  var IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';

	  var StackPrototype = Stack.prototype;
	  StackPrototype[IS_STACK_SENTINEL] = true;
	  StackPrototype.withMutations = MapPrototype.withMutations;
	  StackPrototype.asMutable = MapPrototype.asMutable;
	  StackPrototype.asImmutable = MapPrototype.asImmutable;
	  StackPrototype.wasAltered = MapPrototype.wasAltered;


	  function makeStack(size, head, ownerID, hash) {
	    var map = Object.create(StackPrototype);
	    map.size = size;
	    map._head = head;
	    map.__ownerID = ownerID;
	    map.__hash = hash;
	    map.__altered = false;
	    return map;
	  }

	  var EMPTY_STACK;
	  function emptyStack() {
	    return EMPTY_STACK || (EMPTY_STACK = makeStack(0));
	  }

	  /**
	   * Contributes additional methods to a constructor
	   */
	  function mixin(ctor, methods) {
	    var keyCopier = function(key ) { ctor.prototype[key] = methods[key]; };
	    Object.keys(methods).forEach(keyCopier);
	    Object.getOwnPropertySymbols &&
	      Object.getOwnPropertySymbols(methods).forEach(keyCopier);
	    return ctor;
	  }

	  Iterable.Iterator = Iterator;

	  mixin(Iterable, {

	    // ### Conversion to other types

	    toArray: function() {
	      assertNotInfinite(this.size);
	      var array = new Array(this.size || 0);
	      this.valueSeq().__iterate(function(v, i)  { array[i] = v; });
	      return array;
	    },

	    toIndexedSeq: function() {
	      return new ToIndexedSequence(this);
	    },

	    toJS: function() {
	      return this.toSeq().map(
	        function(value ) {return value && typeof value.toJS === 'function' ? value.toJS() : value}
	      ).__toJS();
	    },

	    toJSON: function() {
	      return this.toSeq().map(
	        function(value ) {return value && typeof value.toJSON === 'function' ? value.toJSON() : value}
	      ).__toJS();
	    },

	    toKeyedSeq: function() {
	      return new ToKeyedSequence(this, true);
	    },

	    toMap: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return Map(this.toKeyedSeq());
	    },

	    toObject: function() {
	      assertNotInfinite(this.size);
	      var object = {};
	      this.__iterate(function(v, k)  { object[k] = v; });
	      return object;
	    },

	    toOrderedMap: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return OrderedMap(this.toKeyedSeq());
	    },

	    toOrderedSet: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return OrderedSet(isKeyed(this) ? this.valueSeq() : this);
	    },

	    toSet: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return Set(isKeyed(this) ? this.valueSeq() : this);
	    },

	    toSetSeq: function() {
	      return new ToSetSequence(this);
	    },

	    toSeq: function() {
	      return isIndexed(this) ? this.toIndexedSeq() :
	        isKeyed(this) ? this.toKeyedSeq() :
	        this.toSetSeq();
	    },

	    toStack: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return Stack(isKeyed(this) ? this.valueSeq() : this);
	    },

	    toList: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return List(isKeyed(this) ? this.valueSeq() : this);
	    },


	    // ### Common JavaScript methods and properties

	    toString: function() {
	      return '[Iterable]';
	    },

	    __toString: function(head, tail) {
	      if (this.size === 0) {
	        return head + tail;
	      }
	      return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;
	    },


	    // ### ES6 Collection methods (ES6 Array and Map)

	    concat: function() {var values = SLICE$0.call(arguments, 0);
	      return reify(this, concatFactory(this, values));
	    },

	    includes: function(searchValue) {
	      return this.some(function(value ) {return is(value, searchValue)});
	    },

	    entries: function() {
	      return this.__iterator(ITERATE_ENTRIES);
	    },

	    every: function(predicate, context) {
	      assertNotInfinite(this.size);
	      var returnValue = true;
	      this.__iterate(function(v, k, c)  {
	        if (!predicate.call(context, v, k, c)) {
	          returnValue = false;
	          return false;
	        }
	      });
	      return returnValue;
	    },

	    filter: function(predicate, context) {
	      return reify(this, filterFactory(this, predicate, context, true));
	    },

	    find: function(predicate, context, notSetValue) {
	      var entry = this.findEntry(predicate, context);
	      return entry ? entry[1] : notSetValue;
	    },

	    forEach: function(sideEffect, context) {
	      assertNotInfinite(this.size);
	      return this.__iterate(context ? sideEffect.bind(context) : sideEffect);
	    },

	    join: function(separator) {
	      assertNotInfinite(this.size);
	      separator = separator !== undefined ? '' + separator : ',';
	      var joined = '';
	      var isFirst = true;
	      this.__iterate(function(v ) {
	        isFirst ? (isFirst = false) : (joined += separator);
	        joined += v !== null && v !== undefined ? v.toString() : '';
	      });
	      return joined;
	    },

	    keys: function() {
	      return this.__iterator(ITERATE_KEYS);
	    },

	    map: function(mapper, context) {
	      return reify(this, mapFactory(this, mapper, context));
	    },

	    reduce: function(reducer, initialReduction, context) {
	      assertNotInfinite(this.size);
	      var reduction;
	      var useFirst;
	      if (arguments.length < 2) {
	        useFirst = true;
	      } else {
	        reduction = initialReduction;
	      }
	      this.__iterate(function(v, k, c)  {
	        if (useFirst) {
	          useFirst = false;
	          reduction = v;
	        } else {
	          reduction = reducer.call(context, reduction, v, k, c);
	        }
	      });
	      return reduction;
	    },

	    reduceRight: function(reducer, initialReduction, context) {
	      var reversed = this.toKeyedSeq().reverse();
	      return reversed.reduce.apply(reversed, arguments);
	    },

	    reverse: function() {
	      return reify(this, reverseFactory(this, true));
	    },

	    slice: function(begin, end) {
	      return reify(this, sliceFactory(this, begin, end, true));
	    },

	    some: function(predicate, context) {
	      return !this.every(not(predicate), context);
	    },

	    sort: function(comparator) {
	      return reify(this, sortFactory(this, comparator));
	    },

	    values: function() {
	      return this.__iterator(ITERATE_VALUES);
	    },


	    // ### More sequential methods

	    butLast: function() {
	      return this.slice(0, -1);
	    },

	    isEmpty: function() {
	      return this.size !== undefined ? this.size === 0 : !this.some(function()  {return true});
	    },

	    count: function(predicate, context) {
	      return ensureSize(
	        predicate ? this.toSeq().filter(predicate, context) : this
	      );
	    },

	    countBy: function(grouper, context) {
	      return countByFactory(this, grouper, context);
	    },

	    equals: function(other) {
	      return deepEqual(this, other);
	    },

	    entrySeq: function() {
	      var iterable = this;
	      if (iterable._cache) {
	        // We cache as an entries array, so we can just return the cache!
	        return new ArraySeq(iterable._cache);
	      }
	      var entriesSequence = iterable.toSeq().map(entryMapper).toIndexedSeq();
	      entriesSequence.fromEntrySeq = function()  {return iterable.toSeq()};
	      return entriesSequence;
	    },

	    filterNot: function(predicate, context) {
	      return this.filter(not(predicate), context);
	    },

	    findEntry: function(predicate, context, notSetValue) {
	      var found = notSetValue;
	      this.__iterate(function(v, k, c)  {
	        if (predicate.call(context, v, k, c)) {
	          found = [k, v];
	          return false;
	        }
	      });
	      return found;
	    },

	    findKey: function(predicate, context) {
	      var entry = this.findEntry(predicate, context);
	      return entry && entry[0];
	    },

	    findLast: function(predicate, context, notSetValue) {
	      return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);
	    },

	    findLastEntry: function(predicate, context, notSetValue) {
	      return this.toKeyedSeq().reverse().findEntry(predicate, context, notSetValue);
	    },

	    findLastKey: function(predicate, context) {
	      return this.toKeyedSeq().reverse().findKey(predicate, context);
	    },

	    first: function() {
	      return this.find(returnTrue);
	    },

	    flatMap: function(mapper, context) {
	      return reify(this, flatMapFactory(this, mapper, context));
	    },

	    flatten: function(depth) {
	      return reify(this, flattenFactory(this, depth, true));
	    },

	    fromEntrySeq: function() {
	      return new FromEntriesSequence(this);
	    },

	    get: function(searchKey, notSetValue) {
	      return this.find(function(_, key)  {return is(key, searchKey)}, undefined, notSetValue);
	    },

	    getIn: function(searchKeyPath, notSetValue) {
	      var nested = this;
	      // Note: in an ES6 environment, we would prefer:
	      // for (var key of searchKeyPath) {
	      var iter = forceIterator(searchKeyPath);
	      var step;
	      while (!(step = iter.next()).done) {
	        var key = step.value;
	        nested = nested && nested.get ? nested.get(key, NOT_SET) : NOT_SET;
	        if (nested === NOT_SET) {
	          return notSetValue;
	        }
	      }
	      return nested;
	    },

	    groupBy: function(grouper, context) {
	      return groupByFactory(this, grouper, context);
	    },

	    has: function(searchKey) {
	      return this.get(searchKey, NOT_SET) !== NOT_SET;
	    },

	    hasIn: function(searchKeyPath) {
	      return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;
	    },

	    isSubset: function(iter) {
	      iter = typeof iter.includes === 'function' ? iter : Iterable(iter);
	      return this.every(function(value ) {return iter.includes(value)});
	    },

	    isSuperset: function(iter) {
	      iter = typeof iter.isSubset === 'function' ? iter : Iterable(iter);
	      return iter.isSubset(this);
	    },

	    keyOf: function(searchValue) {
	      return this.findKey(function(value ) {return is(value, searchValue)});
	    },

	    keySeq: function() {
	      return this.toSeq().map(keyMapper).toIndexedSeq();
	    },

	    last: function() {
	      return this.toSeq().reverse().first();
	    },

	    lastKeyOf: function(searchValue) {
	      return this.toKeyedSeq().reverse().keyOf(searchValue);
	    },

	    max: function(comparator) {
	      return maxFactory(this, comparator);
	    },

	    maxBy: function(mapper, comparator) {
	      return maxFactory(this, comparator, mapper);
	    },

	    min: function(comparator) {
	      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);
	    },

	    minBy: function(mapper, comparator) {
	      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);
	    },

	    rest: function() {
	      return this.slice(1);
	    },

	    skip: function(amount) {
	      return this.slice(Math.max(0, amount));
	    },

	    skipLast: function(amount) {
	      return reify(this, this.toSeq().reverse().skip(amount).reverse());
	    },

	    skipWhile: function(predicate, context) {
	      return reify(this, skipWhileFactory(this, predicate, context, true));
	    },

	    skipUntil: function(predicate, context) {
	      return this.skipWhile(not(predicate), context);
	    },

	    sortBy: function(mapper, comparator) {
	      return reify(this, sortFactory(this, comparator, mapper));
	    },

	    take: function(amount) {
	      return this.slice(0, Math.max(0, amount));
	    },

	    takeLast: function(amount) {
	      return reify(this, this.toSeq().reverse().take(amount).reverse());
	    },

	    takeWhile: function(predicate, context) {
	      return reify(this, takeWhileFactory(this, predicate, context));
	    },

	    takeUntil: function(predicate, context) {
	      return this.takeWhile(not(predicate), context);
	    },

	    valueSeq: function() {
	      return this.toIndexedSeq();
	    },


	    // ### Hashable Object

	    hashCode: function() {
	      return this.__hash || (this.__hash = hashIterable(this));
	    }


	    // ### Internal

	    // abstract __iterate(fn, reverse)

	    // abstract __iterator(type, reverse)
	  });

	  // var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';
	  // var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';
	  // var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';
	  // var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';

	  var IterablePrototype = Iterable.prototype;
	  IterablePrototype[IS_ITERABLE_SENTINEL] = true;
	  IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;
	  IterablePrototype.__toJS = IterablePrototype.toArray;
	  IterablePrototype.__toStringMapper = quoteString;
	  IterablePrototype.inspect =
	  IterablePrototype.toSource = function() { return this.toString(); };
	  IterablePrototype.chain = IterablePrototype.flatMap;
	  IterablePrototype.contains = IterablePrototype.includes;

	  mixin(KeyedIterable, {

	    // ### More sequential methods

	    flip: function() {
	      return reify(this, flipFactory(this));
	    },

	    mapEntries: function(mapper, context) {var this$0 = this;
	      var iterations = 0;
	      return reify(this,
	        this.toSeq().map(
	          function(v, k)  {return mapper.call(context, [k, v], iterations++, this$0)}
	        ).fromEntrySeq()
	      );
	    },

	    mapKeys: function(mapper, context) {var this$0 = this;
	      return reify(this,
	        this.toSeq().flip().map(
	          function(k, v)  {return mapper.call(context, k, v, this$0)}
	        ).flip()
	      );
	    }

	  });

	  var KeyedIterablePrototype = KeyedIterable.prototype;
	  KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;
	  KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;
	  KeyedIterablePrototype.__toJS = IterablePrototype.toObject;
	  KeyedIterablePrototype.__toStringMapper = function(v, k)  {return JSON.stringify(k) + ': ' + quoteString(v)};



	  mixin(IndexedIterable, {

	    // ### Conversion to other types

	    toKeyedSeq: function() {
	      return new ToKeyedSequence(this, false);
	    },


	    // ### ES6 Collection methods (ES6 Array and Map)

	    filter: function(predicate, context) {
	      return reify(this, filterFactory(this, predicate, context, false));
	    },

	    findIndex: function(predicate, context) {
	      var entry = this.findEntry(predicate, context);
	      return entry ? entry[0] : -1;
	    },

	    indexOf: function(searchValue) {
	      var key = this.keyOf(searchValue);
	      return key === undefined ? -1 : key;
	    },

	    lastIndexOf: function(searchValue) {
	      var key = this.lastKeyOf(searchValue);
	      return key === undefined ? -1 : key;
	    },

	    reverse: function() {
	      return reify(this, reverseFactory(this, false));
	    },

	    slice: function(begin, end) {
	      return reify(this, sliceFactory(this, begin, end, false));
	    },

	    splice: function(index, removeNum /*, ...values*/) {
	      var numArgs = arguments.length;
	      removeNum = Math.max(removeNum | 0, 0);
	      if (numArgs === 0 || (numArgs === 2 && !removeNum)) {
	        return this;
	      }
	      // If index is negative, it should resolve relative to the size of the
	      // collection. However size may be expensive to compute if not cached, so
	      // only call count() if the number is in fact negative.
	      index = resolveBegin(index, index < 0 ? this.count() : this.size);
	      var spliced = this.slice(0, index);
	      return reify(
	        this,
	        numArgs === 1 ?
	          spliced :
	          spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum))
	      );
	    },


	    // ### More collection methods

	    findLastIndex: function(predicate, context) {
	      var entry = this.findLastEntry(predicate, context);
	      return entry ? entry[0] : -1;
	    },

	    first: function() {
	      return this.get(0);
	    },

	    flatten: function(depth) {
	      return reify(this, flattenFactory(this, depth, false));
	    },

	    get: function(index, notSetValue) {
	      index = wrapIndex(this, index);
	      return (index < 0 || (this.size === Infinity ||
	          (this.size !== undefined && index > this.size))) ?
	        notSetValue :
	        this.find(function(_, key)  {return key === index}, undefined, notSetValue);
	    },

	    has: function(index) {
	      index = wrapIndex(this, index);
	      return index >= 0 && (this.size !== undefined ?
	        this.size === Infinity || index < this.size :
	        this.indexOf(index) !== -1
	      );
	    },

	    interpose: function(separator) {
	      return reify(this, interposeFactory(this, separator));
	    },

	    interleave: function(/*...iterables*/) {
	      var iterables = [this].concat(arrCopy(arguments));
	      var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);
	      var interleaved = zipped.flatten(true);
	      if (zipped.size) {
	        interleaved.size = zipped.size * iterables.length;
	      }
	      return reify(this, interleaved);
	    },

	    keySeq: function() {
	      return Range(0, this.size);
	    },

	    last: function() {
	      return this.get(-1);
	    },

	    skipWhile: function(predicate, context) {
	      return reify(this, skipWhileFactory(this, predicate, context, false));
	    },

	    zip: function(/*, ...iterables */) {
	      var iterables = [this].concat(arrCopy(arguments));
	      return reify(this, zipWithFactory(this, defaultZipper, iterables));
	    },

	    zipWith: function(zipper/*, ...iterables */) {
	      var iterables = arrCopy(arguments);
	      iterables[0] = this;
	      return reify(this, zipWithFactory(this, zipper, iterables));
	    }

	  });

	  IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;
	  IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;



	  mixin(SetIterable, {

	    // ### ES6 Collection methods (ES6 Array and Map)

	    get: function(value, notSetValue) {
	      return this.has(value) ? value : notSetValue;
	    },

	    includes: function(value) {
	      return this.has(value);
	    },


	    // ### More sequential methods

	    keySeq: function() {
	      return this.valueSeq();
	    }

	  });

	  SetIterable.prototype.has = IterablePrototype.includes;
	  SetIterable.prototype.contains = SetIterable.prototype.includes;


	  // Mixin subclasses

	  mixin(KeyedSeq, KeyedIterable.prototype);
	  mixin(IndexedSeq, IndexedIterable.prototype);
	  mixin(SetSeq, SetIterable.prototype);

	  mixin(KeyedCollection, KeyedIterable.prototype);
	  mixin(IndexedCollection, IndexedIterable.prototype);
	  mixin(SetCollection, SetIterable.prototype);


	  // #pragma Helper functions

	  function keyMapper(v, k) {
	    return k;
	  }

	  function entryMapper(v, k) {
	    return [k, v];
	  }

	  function not(predicate) {
	    return function() {
	      return !predicate.apply(this, arguments);
	    }
	  }

	  function neg(predicate) {
	    return function() {
	      return -predicate.apply(this, arguments);
	    }
	  }

	  function quoteString(value) {
	    return typeof value === 'string' ? JSON.stringify(value) : String(value);
	  }

	  function defaultZipper() {
	    return arrCopy(arguments);
	  }

	  function defaultNegComparator(a, b) {
	    return a < b ? 1 : a > b ? -1 : 0;
	  }

	  function hashIterable(iterable) {
	    if (iterable.size === Infinity) {
	      return 0;
	    }
	    var ordered = isOrdered(iterable);
	    var keyed = isKeyed(iterable);
	    var h = ordered ? 1 : 0;
	    var size = iterable.__iterate(
	      keyed ?
	        ordered ?
	          function(v, k)  { h = 31 * h + hashMerge(hash(v), hash(k)) | 0; } :
	          function(v, k)  { h = h + hashMerge(hash(v), hash(k)) | 0; } :
	        ordered ?
	          function(v ) { h = 31 * h + hash(v) | 0; } :
	          function(v ) { h = h + hash(v) | 0; }
	    );
	    return murmurHashOfSize(size, h);
	  }

	  function murmurHashOfSize(size, h) {
	    h = imul(h, 0xCC9E2D51);
	    h = imul(h << 15 | h >>> -15, 0x1B873593);
	    h = imul(h << 13 | h >>> -13, 5);
	    h = (h + 0xE6546B64 | 0) ^ size;
	    h = imul(h ^ h >>> 16, 0x85EBCA6B);
	    h = imul(h ^ h >>> 13, 0xC2B2AE35);
	    h = smi(h ^ h >>> 16);
	    return h;
	  }

	  function hashMerge(a, b) {
	    return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0; // int
	  }

	  var Immutable = {

	    Iterable: Iterable,

	    Seq: Seq,
	    Collection: Collection,
	    Map: Map,
	    OrderedMap: OrderedMap,
	    List: List,
	    Stack: Stack,
	    Set: Set,
	    OrderedSet: OrderedSet,

	    Record: Record,
	    Range: Range,
	    Repeat: Repeat,

	    is: is,
	    fromJS: fromJS

	  };

	  return Immutable;

	}));

/***/ },
/* 179 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var Chronoshift;
	(function (Chronoshift) {
	    Chronoshift.WallTime = __webpack_require__(180);
	    var ImmutableClass = __webpack_require__(181);
	    Chronoshift.isInstanceOf = ImmutableClass.isInstanceOf;
	    function isDate(d) {
	        return typeof d === 'object' &&
	            d.constructor.name === 'Date';
	    }
	    Chronoshift.isDate = isDate;
	})(Chronoshift || (Chronoshift = {}));
	var Chronoshift;
	(function (Chronoshift) {
	    var check;
	    var Timezone = (function () {
	        function Timezone(timezone) {
	            if (typeof timezone !== 'string') {
	                throw new TypeError("timezone description must be a string");
	            }
	            if (timezone !== 'Etc/UTC') {
	                Chronoshift.WallTime.UTCToWallTime(new Date(0), timezone);
	            }
	            this.timezone = timezone;
	        }
	        Timezone.isTimezone = function (candidate) {
	            return Chronoshift.isInstanceOf(candidate, Timezone);
	        };
	        Timezone.fromJS = function (spec) {
	            return new Timezone(spec);
	        };
	        Timezone.prototype.valueOf = function () {
	            return this.timezone;
	        };
	        Timezone.prototype.toJS = function () {
	            return this.timezone;
	        };
	        Timezone.prototype.toJSON = function () {
	            return this.timezone;
	        };
	        Timezone.prototype.toString = function () {
	            return this.timezone;
	        };
	        Timezone.prototype.equals = function (other) {
	            return Timezone.isTimezone(other) &&
	                this.timezone === other.timezone;
	        };
	        Timezone.prototype.isUTC = function () {
	            return this.timezone === 'Etc/UTC';
	        };
	        return Timezone;
	    }());
	    Chronoshift.Timezone = Timezone;
	    check = Timezone;
	    Timezone.UTC = new Timezone('Etc/UTC');
	})(Chronoshift || (Chronoshift = {}));
	var Chronoshift;
	(function (Chronoshift) {
	    function adjustDay(day) {
	        return (day + 6) % 7;
	    }
	    function timeShifterFiller(tm) {
	        var floor = tm.floor, shift = tm.shift;
	        tm.ceil = function (dt, tz) {
	            var floored = floor(dt, tz);
	            if (floored.valueOf() === dt.valueOf())
	                return dt;
	            return shift(floored, tz, 1);
	        };
	        tm.move = tm.shift;
	        return tm;
	    }
	    Chronoshift.second = timeShifterFiller({
	        canonicalLength: 1000,
	        siblings: 60,
	        floor: function (dt, tz) {
	            dt = new Date(dt.valueOf());
	            dt.setUTCMilliseconds(0);
	            return dt;
	        },
	        round: function (dt, roundTo, tz) {
	            var cur = dt.getUTCSeconds();
	            var adj = Math.floor(cur / roundTo) * roundTo;
	            if (cur !== adj)
	                dt.setUTCSeconds(adj);
	            return dt;
	        },
	        shift: function (dt, tz, step) {
	            dt = new Date(dt.valueOf());
	            dt.setUTCSeconds(dt.getUTCSeconds() + step);
	            return dt;
	        }
	    });
	    Chronoshift.minute = timeShifterFiller({
	        canonicalLength: 60000,
	        siblings: 60,
	        floor: function (dt, tz) {
	            dt = new Date(dt.valueOf());
	            dt.setUTCSeconds(0, 0);
	            return dt;
	        },
	        round: function (dt, roundTo, tz) {
	            var cur = dt.getUTCMinutes();
	            var adj = Math.floor(cur / roundTo) * roundTo;
	            if (cur !== adj)
	                dt.setUTCMinutes(adj);
	            return dt;
	        },
	        shift: function (dt, tz, step) {
	            dt = new Date(dt.valueOf());
	            dt.setUTCMinutes(dt.getUTCMinutes() + step);
	            return dt;
	        }
	    });
	    function hourMove(dt, tz, step) {
	        if (tz.isUTC()) {
	            dt = new Date(dt.valueOf());
	            dt.setUTCHours(dt.getUTCHours() + step);
	        }
	        else {
	            var wt = Chronoshift.WallTime.UTCToWallTime(dt, tz.toString());
	            dt = Chronoshift.WallTime.WallTimeToUTC(tz.toString(), wt.getFullYear(), wt.getMonth(), wt.getDate(), wt.getHours() + step, wt.getMinutes(), wt.getSeconds(), wt.getMilliseconds());
	        }
	        return dt;
	    }
	    Chronoshift.hour = timeShifterFiller({
	        canonicalLength: 3600000,
	        siblings: 24,
	        floor: function (dt, tz) {
	            if (tz.isUTC()) {
	                dt = new Date(dt.valueOf());
	                dt.setUTCMinutes(0, 0, 0);
	            }
	            else {
	                var wt = Chronoshift.WallTime.UTCToWallTime(dt, tz.toString());
	                dt = Chronoshift.WallTime.WallTimeToUTC(tz.toString(), wt.getFullYear(), wt.getMonth(), wt.getDate(), wt.getHours(), 0, 0, 0);
	            }
	            return dt;
	        },
	        round: function (dt, roundTo, tz) {
	            if (tz.isUTC()) {
	                var cur = dt.getUTCHours();
	                var adj = Math.floor(cur / roundTo) * roundTo;
	                if (cur !== adj)
	                    dt.setUTCHours(adj);
	            }
	            else {
	                var cur = dt.getHours();
	                var adj = Math.floor(cur / roundTo) * roundTo;
	                if (cur !== adj)
	                    return hourMove(dt, tz, adj - cur);
	            }
	            return dt;
	        },
	        shift: hourMove
	    });
	    Chronoshift.day = timeShifterFiller({
	        canonicalLength: 24 * 3600000,
	        floor: function (dt, tz) {
	            if (tz.isUTC()) {
	                dt = new Date(dt.valueOf());
	                dt.setUTCHours(0, 0, 0, 0);
	            }
	            else {
	                var wt = Chronoshift.WallTime.UTCToWallTime(dt, tz.toString());
	                dt = Chronoshift.WallTime.WallTimeToUTC(tz.toString(), wt.getFullYear(), wt.getMonth(), wt.getDate(), 0, 0, 0, 0);
	            }
	            return dt;
	        },
	        shift: function (dt, tz, step) {
	            if (tz.isUTC()) {
	                dt = new Date(dt.valueOf());
	                dt.setUTCDate(dt.getUTCDate() + step);
	            }
	            else {
	                var wt = Chronoshift.WallTime.UTCToWallTime(dt, tz.toString());
	                dt = Chronoshift.WallTime.WallTimeToUTC(tz.toString(), wt.getFullYear(), wt.getMonth(), wt.getDate() + step, wt.getHours(), wt.getMinutes(), wt.getSeconds(), wt.getMilliseconds());
	            }
	            return dt;
	        }
	    });
	    Chronoshift.week = timeShifterFiller({
	        canonicalLength: 7 * 24 * 3600000,
	        floor: function (dt, tz) {
	            if (tz.isUTC()) {
	                dt = new Date(dt.valueOf());
	                dt.setUTCHours(0, 0, 0, 0);
	                dt.setUTCDate(dt.getUTCDate() - adjustDay(dt.getUTCDay()));
	            }
	            else {
	                var wt = Chronoshift.WallTime.UTCToWallTime(dt, tz.toString());
	                dt = Chronoshift.WallTime.WallTimeToUTC(tz.toString(), wt.getFullYear(), wt.getMonth(), wt.getDate() - adjustDay(wt.getDay()), 0, 0, 0, 0);
	            }
	            return dt;
	        },
	        shift: function (dt, tz, step) {
	            if (tz.isUTC()) {
	                dt = new Date(dt.valueOf());
	                dt.setUTCDate(dt.getUTCDate() + step * 7);
	            }
	            else {
	                var wt = Chronoshift.WallTime.UTCToWallTime(dt, tz.toString());
	                dt = Chronoshift.WallTime.WallTimeToUTC(tz.toString(), wt.getFullYear(), wt.getMonth(), wt.getDate() + step * 7, wt.getHours(), wt.getMinutes(), wt.getSeconds(), wt.getMilliseconds());
	            }
	            return dt;
	        }
	    });
	    function monthShift(dt, tz, step) {
	        if (tz.isUTC()) {
	            dt = new Date(dt.valueOf());
	            dt.setUTCMonth(dt.getUTCMonth() + step);
	        }
	        else {
	            var wt = Chronoshift.WallTime.UTCToWallTime(dt, tz.toString());
	            dt = Chronoshift.WallTime.WallTimeToUTC(tz.toString(), wt.getFullYear(), wt.getMonth() + step, wt.getDate(), wt.getHours(), wt.getMinutes(), wt.getSeconds(), wt.getMilliseconds());
	        }
	        return dt;
	    }
	    Chronoshift.month = timeShifterFiller({
	        canonicalLength: 30 * 24 * 3600000,
	        siblings: 12,
	        floor: function (dt, tz) {
	            if (tz.isUTC()) {
	                dt = new Date(dt.valueOf());
	                dt.setUTCHours(0, 0, 0, 0);
	                dt.setUTCDate(1);
	            }
	            else {
	                var wt = Chronoshift.WallTime.UTCToWallTime(dt, tz.toString());
	                dt = Chronoshift.WallTime.WallTimeToUTC(tz.toString(), wt.getFullYear(), wt.getMonth(), 1, 0, 0, 0, 0);
	            }
	            return dt;
	        },
	        round: function (dt, roundTo, tz) {
	            if (tz.isUTC()) {
	                var cur = dt.getUTCMonth();
	                var adj = Math.floor(cur / roundTo) * roundTo;
	                if (cur !== adj)
	                    dt.setUTCMonth(adj);
	            }
	            else {
	                var cur = dt.getMonth();
	                var adj = Math.floor(cur / roundTo) * roundTo;
	                if (cur !== adj)
	                    return monthShift(dt, tz, adj - cur);
	            }
	            return dt;
	        },
	        shift: monthShift
	    });
	    function yearShift(dt, tz, step) {
	        if (tz.isUTC()) {
	            dt = new Date(dt.valueOf());
	            dt.setUTCFullYear(dt.getUTCFullYear() + step);
	        }
	        else {
	            var wt = Chronoshift.WallTime.UTCToWallTime(dt, tz.toString());
	            dt = Chronoshift.WallTime.WallTimeToUTC(tz.toString(), wt.getFullYear() + step, wt.getMonth(), wt.getDate(), wt.getHours(), wt.getMinutes(), wt.getSeconds(), wt.getMilliseconds());
	        }
	        return dt;
	    }
	    Chronoshift.year = timeShifterFiller({
	        canonicalLength: 365 * 24 * 3600000,
	        siblings: 1000,
	        floor: function (dt, tz) {
	            if (tz.isUTC()) {
	                dt = new Date(dt.valueOf());
	                dt.setUTCHours(0, 0, 0, 0);
	                dt.setUTCMonth(0, 1);
	            }
	            else {
	                var wt = Chronoshift.WallTime.UTCToWallTime(dt, tz.toString());
	                dt = Chronoshift.WallTime.WallTimeToUTC(tz.toString(), wt.getFullYear(), 0, 1, 0, 0, 0, 0);
	            }
	            return dt;
	        },
	        round: function (dt, roundTo, tz) {
	            if (tz.isUTC()) {
	                var cur = dt.getUTCFullYear();
	                var adj = Math.floor(cur / roundTo) * roundTo;
	                if (cur !== adj)
	                    dt.setUTCFullYear(adj);
	            }
	            else {
	                var cur = dt.getFullYear();
	                var adj = Math.floor(cur / roundTo) * roundTo;
	                if (cur !== adj)
	                    return yearShift(dt, tz, adj - cur);
	            }
	            return dt;
	        },
	        shift: yearShift
	    });
	    Chronoshift.shifters = {
	        second: Chronoshift.second,
	        minute: Chronoshift.minute,
	        hour: Chronoshift.hour,
	        day: Chronoshift.day,
	        week: Chronoshift.week,
	        month: Chronoshift.month,
	        year: Chronoshift.year
	    };
	    Chronoshift.movers = Chronoshift.shifters;
	})(Chronoshift || (Chronoshift = {}));
	var Chronoshift;
	(function (Chronoshift) {
	    var spansWithWeek = ["year", "month", "week", "day", "hour", "minute", "second"];
	    var spansWithoutWeek = ["year", "month", "day", "hour", "minute", "second"];
	    var periodWeekRegExp = /^P(\d+)W$/;
	    var periodRegExp = /^P(?:(\d+)Y)?(?:(\d+)M)?(?:(\d+)D)?(?:T(?:(\d+)H)?(?:(\d+)M)?(?:(\d+)S)?)?$/;
	    function getSpansFromString(durationStr) {
	        var spans = {};
	        var matches;
	        if (matches = periodWeekRegExp.exec(durationStr)) {
	            spans.week = Number(matches[1]);
	            if (!spans.week)
	                throw new Error("Duration can not be empty");
	        }
	        else if (matches = periodRegExp.exec(durationStr)) {
	            matches = matches.map(Number);
	            for (var i = 0; i < spansWithoutWeek.length; i++) {
	                var span = spansWithoutWeek[i];
	                var value = matches[i + 1];
	                if (value)
	                    spans[span] = value;
	            }
	        }
	        else {
	            throw new Error("Can not parse duration '" + durationStr + "'");
	        }
	        return spans;
	    }
	    function getSpansFromStartEnd(start, end, timezone) {
	        start = Chronoshift.second.floor(start, timezone);
	        end = Chronoshift.second.floor(end, timezone);
	        if (end <= start)
	            throw new Error("start must come before end");
	        var spans = {};
	        var iterator = start;
	        for (var i = 0; i < spansWithoutWeek.length; i++) {
	            var span = spansWithoutWeek[i];
	            var spanCount = 0;
	            var length = end.valueOf() - iterator.valueOf();
	            var canonicalLength = Chronoshift.shifters[span].canonicalLength;
	            if (length < canonicalLength / 4)
	                continue;
	            var numberToFit = Math.min(0, Math.floor(length / canonicalLength) - 1);
	            var iteratorMove;
	            if (numberToFit > 0) {
	                iteratorMove = Chronoshift.shifters[span].shift(iterator, timezone, numberToFit);
	                if (iteratorMove <= end) {
	                    spanCount += numberToFit;
	                    iterator = iteratorMove;
	                }
	            }
	            while (true) {
	                iteratorMove = Chronoshift.shifters[span].shift(iterator, timezone, 1);
	                if (iteratorMove <= end) {
	                    iterator = iteratorMove;
	                    spanCount++;
	                }
	                else {
	                    break;
	                }
	            }
	            if (spanCount) {
	                spans[span] = spanCount;
	            }
	        }
	        return spans;
	    }
	    function removeZeros(spans) {
	        var newSpans = {};
	        for (var i = 0; i < spansWithWeek.length; i++) {
	            var span = spansWithWeek[i];
	            if (spans[span] > 0) {
	                newSpans[span] = spans[span];
	            }
	        }
	        return newSpans;
	    }
	    var check;
	    var Duration = (function () {
	        function Duration(spans, end, timezone) {
	            if (spans && end && timezone) {
	                spans = getSpansFromStartEnd(spans, end, timezone);
	            }
	            else if (typeof spans === 'object') {
	                spans = removeZeros(spans);
	            }
	            else {
	                throw new Error("new Duration called with bad argument");
	            }
	            var usedSpans = Object.keys(spans);
	            if (!usedSpans.length)
	                throw new Error("Duration can not be empty");
	            if (usedSpans.length === 1) {
	                this.singleSpan = usedSpans[0];
	            }
	            else if (spans.week) {
	                throw new Error("Can not mix 'week' and other spans");
	            }
	            this.spans = spans;
	        }
	        Duration.fromJS = function (durationStr) {
	            if (typeof durationStr !== 'string')
	                throw new TypeError("Duration JS must be a string");
	            return new Duration(getSpansFromString(durationStr));
	        };
	        Duration.fromCanonicalLength = function (length) {
	            var spans = {};
	            for (var i = 0; i < spansWithWeek.length; i++) {
	                var span = spansWithWeek[i];
	                var spanLength = Chronoshift.shifters[span].canonicalLength;
	                var count = Math.floor(length / spanLength);
	                length -= spanLength * count;
	                spans[span] = count;
	            }
	            return new Duration(spans);
	        };
	        Duration.isDuration = function (candidate) {
	            return Chronoshift.isInstanceOf(candidate, Duration);
	        };
	        Duration.prototype.toString = function () {
	            var strArr = ["P"];
	            var spans = this.spans;
	            if (spans.week) {
	                strArr.push(String(spans.week), 'W');
	            }
	            else {
	                var addedT = false;
	                for (var i = 0; i < spansWithoutWeek.length; i++) {
	                    var span = spansWithoutWeek[i];
	                    var value = spans[span];
	                    if (!value)
	                        continue;
	                    if (!addedT && i >= 3) {
	                        strArr.push("T");
	                        addedT = true;
	                    }
	                    strArr.push(String(value), span[0].toUpperCase());
	                }
	            }
	            return strArr.join("");
	        };
	        Duration.prototype.add = function (duration) {
	            return Duration.fromCanonicalLength(this.getCanonicalLength() + duration.getCanonicalLength());
	        };
	        Duration.prototype.subtract = function (duration) {
	            if (this.getCanonicalLength() - duration.getCanonicalLength() < 0) {
	                throw new Error("A duration can not be negative.");
	            }
	            return Duration.fromCanonicalLength(this.getCanonicalLength() - duration.getCanonicalLength());
	        };
	        Duration.prototype.valueOf = function () {
	            return this.spans;
	        };
	        Duration.prototype.toJS = function () {
	            return this.toString();
	        };
	        Duration.prototype.toJSON = function () {
	            return this.toString();
	        };
	        Duration.prototype.equals = function (other) {
	            return Boolean(other) &&
	                this.toString() === other.toString();
	        };
	        Duration.prototype.isSimple = function () {
	            var singleSpan = this.singleSpan;
	            if (!singleSpan)
	                return false;
	            return this.spans[singleSpan] === 1;
	        };
	        Duration.prototype.isFloorable = function () {
	            var singleSpan = this.singleSpan;
	            if (!singleSpan)
	                return false;
	            var span = this.spans[singleSpan];
	            if (span === 1)
	                return true;
	            var siblings = Chronoshift.shifters[singleSpan].siblings;
	            if (!siblings)
	                return false;
	            return siblings % span === 0;
	        };
	        Duration.prototype.floor = function (date, timezone) {
	            var singleSpan = this.singleSpan;
	            if (!singleSpan)
	                throw new Error("Can not floor on a complex duration");
	            var span = this.spans[singleSpan];
	            var mover = Chronoshift.shifters[singleSpan];
	            var dt = mover.floor(date, timezone);
	            if (span !== 1) {
	                if (!mover.siblings)
	                    throw new Error("Can not floor on a " + singleSpan + " duration that is not 1");
	                if (mover.siblings % span !== 0)
	                    throw new Error("Can not floor on a " + singleSpan + " duration that is not a multiple of " + span);
	                dt = mover.round(dt, span, timezone);
	            }
	            return dt;
	        };
	        Duration.prototype.shift = function (date, timezone, step) {
	            if (step === void 0) { step = 1; }
	            var spans = this.spans;
	            for (var _i = 0, spansWithWeek_1 = spansWithWeek; _i < spansWithWeek_1.length; _i++) {
	                var span = spansWithWeek_1[_i];
	                var value = spans[span];
	                if (value)
	                    date = Chronoshift.shifters[span].shift(date, timezone, step * value);
	            }
	            return date;
	        };
	        Duration.prototype.move = function (date, timezone, step) {
	            if (step === void 0) { step = 1; }
	            console.warn("The method 'move()' is deprecated. Please use 'shift()' instead.");
	            return this.shift(date, timezone, step);
	        };
	        Duration.prototype.getCanonicalLength = function () {
	            var spans = this.spans;
	            var length = 0;
	            for (var _i = 0, spansWithWeek_2 = spansWithWeek; _i < spansWithWeek_2.length; _i++) {
	                var span = spansWithWeek_2[_i];
	                var value = spans[span];
	                if (value)
	                    length += value * Chronoshift.shifters[span].canonicalLength;
	            }
	            return length;
	        };
	        Duration.prototype.getDescription = function () {
	            var spans = this.spans;
	            var description = [];
	            for (var _i = 0, spansWithWeek_3 = spansWithWeek; _i < spansWithWeek_3.length; _i++) {
	                var span = spansWithWeek_3[_i];
	                var value = spans[span];
	                if (value) {
	                    if (value === 1) {
	                        description.push(span);
	                    }
	                    else {
	                        description.push(String(value) + ' ' + span + 's');
	                    }
	                }
	            }
	            return description.join(', ');
	        };
	        return Duration;
	    }());
	    Chronoshift.Duration = Duration;
	    check = Duration;
	})(Chronoshift || (Chronoshift = {}));
	var Chronoshift;
	(function (Chronoshift) {
	    function parseYear(v) {
	        if (v.length === 2) {
	            var vn = parseInt(v, 10);
	            return (vn < 70 ? 2000 : 1900) + vn;
	        }
	        else if (v.length === 4) {
	            return parseInt(v, 10);
	        }
	        else {
	            throw new Error('Invalid year in date');
	        }
	    }
	    function parseMonth(v) {
	        var vn = parseInt(v, 10);
	        if (vn <= 0 || 12 < vn)
	            throw new Error('Invalid month in date');
	        return vn - 1;
	    }
	    function parseDay(v) {
	        var vn = parseInt(v, 10);
	        if (vn <= 0 || 31 < vn)
	            throw new Error('Invalid day in date');
	        return vn;
	    }
	    function parseHour(v) {
	        var vn = parseInt(v, 10);
	        if (vn < 0 || 24 < vn)
	            throw new Error('Invalid hour in date');
	        return vn;
	    }
	    function parseMinute(v) {
	        var vn = parseInt(v, 10);
	        if (vn < 0 || 60 < vn)
	            throw new Error('Invalid minute in date');
	        return vn;
	    }
	    function parseSecond(v) {
	        var vn = parseInt(v, 10);
	        if (vn < 0 || 60 < vn)
	            throw new Error('Invalid second in date');
	        return vn;
	    }
	    function parseMillisecond(v) {
	        if (!v)
	            return 0;
	        return parseInt(v.substr(0, 3), 10);
	    }
	    function parseSQLDate(type, v) {
	        if (type === 't')
	            throw new Error('time literals are not supported');
	        var m;
	        var d;
	        if (type === 'ts') {
	            if (m = v.match(/^(\d{2}(?:\d{2})?)(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})$/)) {
	                d = Date.UTC(parseYear(m[1]), parseMonth(m[2]), parseDay(m[3]), parseHour(m[4]), parseMinute(m[5]), parseSecond(m[6]));
	            }
	            else if (m = v.match(/^(\d{2}(?:\d{2})?)[~!@#$%^&*()_+=:.\-\/](\d{1,2})[~!@#$%^&*()_+=:.\-\/](\d{1,2})[T ](\d{1,2})[~!@#$%^&*()_+=:.\-\/](\d{1,2})[~!@#$%^&*()_+=:.\-\/](\d{1,2})(?:\.(\d{1,6}))?$/)) {
	                d = Date.UTC(parseYear(m[1]), parseMonth(m[2]), parseDay(m[3]), parseHour(m[4]), parseMinute(m[5]), parseSecond(m[6]), parseMillisecond(m[7]));
	            }
	            else {
	                throw new Error('Invalid timestamp');
	            }
	        }
	        else {
	            if (m = v.match(/^(\d{2}(?:\d{2})?)(\d{2})(\d{2})$/)) {
	                d = Date.UTC(parseYear(m[1]), parseMonth(m[2]), parseDay(m[3]));
	            }
	            else if (m = v.match(/^(\d{2}(?:\d{2})?)[~!@#$%^&*()_+=:.\-\/](\d{1,2})[~!@#$%^&*()_+=:.\-\/](\d{1,2})$/)) {
	                d = Date.UTC(parseYear(m[1]), parseMonth(m[2]), parseDay(m[3]));
	            }
	            else {
	                throw new Error('Invalid date');
	            }
	        }
	        return new Date(d);
	    }
	    Chronoshift.parseSQLDate = parseSQLDate;
	    var numericKeys = [1, 4, 5, 6, 10, 11];
	    function parseISODate(date, timezone) {
	        if (timezone === void 0) { timezone = Chronoshift.Timezone.UTC; }
	        var struct, minutesOffset = 0;
	        if ((struct = /^(\d{4}|[+\-]\d{6})(?:-?(\d{2})(?:-?(\d{2}))?)?(?:[ T]?(\d{2})(?::?(\d{2})(?::?(\d{2})(?:[,\.](\d{1,}))?)?)?)?(?:(Z)|([+\-])(\d{2})(?::?(\d{2}))?)?$/.exec(date))) {
	            for (var i = 0, k; (k = numericKeys[i]); ++i) {
	                struct[k] = +struct[k] || 0;
	            }
	            struct[2] = (+struct[2] || 1) - 1;
	            struct[3] = +struct[3] || 1;
	            struct[7] = struct[7] ? +(struct[7] + "00").substr(0, 3) : 0;
	            if ((struct[8] === undefined || struct[8] === '') && (struct[9] === undefined || struct[9] === '') && !Chronoshift.Timezone.UTC.equals(timezone)) {
	                if (timezone === null) {
	                    return new Date(struct[1], struct[2], struct[3], struct[4], struct[5], struct[6], struct[7]);
	                }
	                else {
	                    return Chronoshift.WallTime.WallTimeToUTC(timezone.toString(), struct[1], struct[2], struct[3], struct[4], struct[5], struct[6], struct[7]);
	                }
	            }
	            else {
	                if (struct[8] !== 'Z' && struct[9] !== undefined) {
	                    minutesOffset = struct[10] * 60 + struct[11];
	                    if (struct[9] === '+') {
	                        minutesOffset = 0 - minutesOffset;
	                    }
	                }
	                return new Date(Date.UTC(struct[1], struct[2], struct[3], struct[4], struct[5] + minutesOffset, struct[6], struct[7]));
	            }
	        }
	        else {
	            return null;
	        }
	    }
	    Chronoshift.parseISODate = parseISODate;
	    function parseInterval(str, timezone, now) {
	        if (timezone === void 0) { timezone = Chronoshift.Timezone.UTC; }
	        if (now === void 0) { now = new Date(); }
	        var parts = str.split('/');
	        if (parts.length > 2)
	            throw new Error("Can not parse string " + str);
	        var start = null;
	        var end = null;
	        var duration = null;
	        var p0 = parts[0];
	        if (parts.length === 1) {
	            duration = Chronoshift.Duration.fromJS(p0);
	        }
	        else {
	            var p1 = parts[1];
	            if (p0[0] === 'P') {
	                duration = Chronoshift.Duration.fromJS(p0);
	                end = parseISODate(p1, timezone);
	                if (!end)
	                    throw new Error("can not parse '" + p1 + "' as ISO date");
	            }
	            else if (p1[0] === 'P') {
	                start = parseISODate(p0, timezone);
	                if (!start)
	                    throw new Error("can not parse '" + p0 + "' as ISO date");
	                duration = Chronoshift.Duration.fromJS(p1);
	            }
	            else {
	                start = parseISODate(p0, timezone);
	                if (!start)
	                    throw new Error("can not parse '" + p0 + "' as ISO date");
	                end = parseISODate(p1, timezone);
	                if (!end)
	                    throw new Error("can not parse '" + p1 + "' as ISO date");
	                if (end < start) {
	                    throw new Error("start must be <= end in '" + str + "'");
	                }
	            }
	        }
	        var computedStart = null;
	        var computedEnd = null;
	        if (start) {
	            computedStart = start;
	            if (duration) {
	                computedEnd = duration.shift(computedStart, timezone, 1);
	            }
	            else {
	                computedEnd = end;
	            }
	        }
	        else {
	            computedEnd = end || now;
	            computedStart = duration.shift(computedEnd, timezone, -1);
	        }
	        return {
	            computedStart: computedStart,
	            computedEnd: computedEnd,
	            start: start,
	            end: end,
	            duration: duration
	        };
	    }
	    Chronoshift.parseInterval = parseInterval;
	})(Chronoshift || (Chronoshift = {}));
	if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {
	    module.exports = Chronoshift;
	}


/***/ },
/* 180 */
/***/ function(module, exports) {

	/*
	 *  WallTime 0.1.2
	 *  Copyright (c) 2013 Sprout Social, Inc.
	 *  Available under the MIT License (http://bit.ly/walltime-license)
	 */

	(function() {
	  var Days, Milliseconds, Months, Time, helpers, _base;

	  (_base = Array.prototype).indexOf || (_base.indexOf = function(item) {
	    var i, x, _i, _len;
	    for (i = _i = 0, _len = this.length; _i < _len; i = ++_i) {
	      x = this[i];
	      if (x === item) {
	        return i;
	      }
	    }
	    return -1;
	  });

	  Days = {
	    DayShortNames: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
	    DayIndex: function(name) {
	      return this.DayShortNames.indexOf(name);
	    },
	    DayNameFromIndex: function(dayIdx) {
	      return this.DayShortNames[dayIdx];
	    },
	    AddToDate: function(dt, days) {
	      return Time.MakeDateFromTimeStamp(dt.getTime() + (days * Milliseconds.inDay));
	    }
	  };

	  Months = {
	    MonthsShortNames: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
	    CompareRuleMatch: new RegExp("([a-zA-Z]*)([\\<\\>]?=)([0-9]*)"),
	    MonthIndex: function(shortName) {
	      return this.MonthsShortNames.indexOf(shortName.slice(0, 3));
	    },
	    IsDayOfMonthRule: function(str) {
	      return str.indexOf(">") > -1 || str.indexOf("<") > -1 || str.indexOf("=") > -1;
	    },
	    IsLastDayOfMonthRule: function(str) {
	      return str.slice(0, 4) === "last";
	    },
	    DayOfMonthByRule: function(str, year, month) {
	      var compareFunc, compares, dateIndex, dayIndex, dayName, ruleParse, testDate, testPart, _ref;
	      ruleParse = this.CompareRuleMatch.exec(str);
	      if (!ruleParse) {
	        throw new Error("Unable to parse the 'on' rule for " + str);
	      }
	      _ref = ruleParse.slice(1, 4), dayName = _ref[0], testPart = _ref[1], dateIndex = _ref[2];
	      dateIndex = parseInt(dateIndex, 10);
	      if (dateIndex === NaN) {
	        throw new Error("Unable to parse the dateIndex of the 'on' rule for " + str);
	      }
	      dayIndex = helpers.Days.DayIndex(dayName);
	      compares = {
	        ">=": function(a, b) {
	          return a >= b;
	        },
	        "<=": function(a, b) {
	          return a <= b;
	        },
	        ">": function(a, b) {
	          return a > b;
	        },
	        "<": function(a, b) {
	          return a < b;
	        },
	        "=": function(a, b) {
	          return a === b;
	        }
	      };
	      compareFunc = compares[testPart];
	      if (!compareFunc) {
	        throw new Error("Unable to parse the conditional for " + testPart);
	      }
	      testDate = helpers.Time.MakeDateFromParts(year, month);
	      while (!(dayIndex === testDate.getUTCDay() && compareFunc(testDate.getUTCDate(), dateIndex))) {
	        testDate = helpers.Days.AddToDate(testDate, 1);
	      }
	      return testDate.getUTCDate();
	    },
	    LastDayOfMonthRule: function(str, year, month) {
	      var dayIndex, dayName, lastDay;
	      dayName = str.slice(4);
	      dayIndex = helpers.Days.DayIndex(dayName);
	      if (month < 11) {
	        lastDay = helpers.Time.MakeDateFromParts(year, month + 1);
	      } else {
	        lastDay = helpers.Time.MakeDateFromParts(year + 1, 0);
	      }
	      lastDay = helpers.Days.AddToDate(lastDay, -1);
	      while (lastDay.getUTCDay() !== dayIndex) {
	        lastDay = helpers.Days.AddToDate(lastDay, -1);
	      }
	      return lastDay.getUTCDate();
	    }
	  };

	  Milliseconds = {
	    inDay: 86400000,
	    inHour: 3600000,
	    inMinute: 60000,
	    inSecond: 1000
	  };

	  Time = {
	    Add: function(dt, hours, mins, secs) {
	      var newTs;
	      if (hours == null) {
	        hours = 0;
	      }
	      if (mins == null) {
	        mins = 0;
	      }
	      if (secs == null) {
	        secs = 0;
	      }
	      newTs = dt.getTime() + (hours * Milliseconds.inHour) + (mins * Milliseconds.inMinute) + (secs * Milliseconds.inSecond);
	      return this.MakeDateFromTimeStamp(newTs);
	    },
	    ParseGMTOffset: function(str) {
	      var isNeg, match, matches, reg, result;
	      reg = new RegExp("(-)?([0-9]*):([0-9]*):?([0-9]*)?");
	      matches = reg.exec(str);
	      result = matches ? (function() {
	        var _i, _len, _ref, _results;
	        _ref = matches.slice(2);
	        _results = [];
	        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
	          match = _ref[_i];
	          _results.push(parseInt(match, 10));
	        }
	        return _results;
	      })() : [0, 0, 0];
	      isNeg = matches && matches[1] === "-";
	      result.splice(0, 0, isNeg);
	      return result;
	    },
	    ParseTime: function(str) {
	      var match, matches, qual, reg, timeParts;
	      reg = new RegExp("(\\d*)\\:(\\d*)([wsugz]?)");
	      matches = reg.exec(str);
	      if (!matches) {
	        return [0, 0, ''];
	      }
	      timeParts = (function() {
	        var _i, _len, _ref, _results;
	        _ref = matches.slice(1, 3);
	        _results = [];
	        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
	          match = _ref[_i];
	          _results.push(parseInt(match, 10));
	        }
	        return _results;
	      })();
	      qual = matches[3] ? matches[3] : '';
	      timeParts.push(qual);
	      return timeParts;
	    },
	    ApplyOffset: function(dt, offset, reverse) {
	      var offset_ms;
	      offset_ms = (Milliseconds.inHour * offset.hours) + (Milliseconds.inMinute * offset.mins) + (Milliseconds.inSecond * offset.secs);
	      if (!offset.negative) {
	        offset_ms = offset_ms * -1;
	      }
	      if (reverse) {
	        offset_ms = offset_ms * -1;
	      }
	      return this.MakeDateFromTimeStamp(dt.getTime() + offset_ms);
	    },
	    ApplySave: function(dt, save, reverse) {
	      if (reverse !== true) {
	        reverse = false;
	      }
	      return this.ApplyOffset(dt, {
	        negative: true,
	        hours: save.hours,
	        mins: save.mins,
	        secs: 0
	      }, reverse);
	    },
	    UTCToWallTime: function(dt, offset, save) {
	      var endTime;
	      endTime = this.UTCToStandardTime(dt, offset);
	      return this.ApplySave(endTime, save);
	    },
	    UTCToStandardTime: function(dt, offset) {
	      return this.ApplyOffset(dt, offset, true);
	    },
	    UTCToQualifiedTime: function(dt, qualifier, offset, getSave) {
	      var endTime;
	      endTime = dt;
	      switch (qualifier) {
	        case "w":
	          endTime = this.UTCToWallTime(endTime, offset, getSave());
	          break;
	        case "s":
	          endTime = this.UTCToStandardTime(endTime, offset);
	          break;
	      }
	      return endTime;
	    },
	    QualifiedTimeToUTC: function(dt, qualifier, offset, getSave) {
	      var endTime;
	      endTime = dt;
	      switch (qualifier) {
	        case "w":
	          endTime = this.WallTimeToUTC(offset, getSave(), endTime);
	          break;
	        case "s":
	          endTime = this.StandardTimeToUTC(offset, endTime);
	          break;
	      }
	      return endTime;
	    },
	    StandardTimeToUTC: function(offset, y, m, d, h, mi, s, ms) {
	      var dt;
	      if (m == null) {
	        m = 0;
	      }
	      if (d == null) {
	        d = 1;
	      }
	      if (h == null) {
	        h = 0;
	      }
	      if (mi == null) {
	        mi = 0;
	      }
	      if (s == null) {
	        s = 0;
	      }
	      if (ms == null) {
	        ms = 0;
	      }
	      dt = typeof y === "number" ? this.MakeDateFromParts(y, m, d, h, mi, s, ms) : y;
	      return this.ApplyOffset(dt, offset);
	    },
	    WallTimeToUTC: function(offset, save, y, m, d, h, mi, s, ms) {
	      var dt;
	      if (m == null) {
	        m = 0;
	      }
	      if (d == null) {
	        d = 1;
	      }
	      if (h == null) {
	        h = 0;
	      }
	      if (mi == null) {
	        mi = 0;
	      }
	      if (s == null) {
	        s = 0;
	      }
	      if (ms == null) {
	        ms = 0;
	      }
	      dt = this.StandardTimeToUTC(offset, y, m, d, h, mi, s, ms);
	      return this.ApplySave(dt, save, true);
	    },
	    MakeDateFromParts: function(y, m, d, h, mi, s, ms) {
	      var dt;
	      if (m == null) {
	        m = 0;
	      }
	      if (d == null) {
	        d = 1;
	      }
	      if (h == null) {
	        h = 0;
	      }
	      if (mi == null) {
	        mi = 0;
	      }
	      if (s == null) {
	        s = 0;
	      }
	      if (ms == null) {
	        ms = 0;
	      }
	      if (Date.UTC) {
	        return new Date(Date.UTC(y, m, d, h, mi, s, ms));
	      }
	      dt = new Date;
	      dt.setUTCFullYear(y);
	      dt.setUTCMonth(m);
	      dt.setUTCDate(d);
	      dt.setUTCHours(h);
	      dt.setUTCMinutes(mi);
	      dt.setUTCSeconds(s);
	      dt.setUTCMilliseconds(ms);
	      return dt;
	    },
	    LocalDate: function(offset, save, y, m, d, h, mi, s, ms) {
	      if (m == null) {
	        m = 0;
	      }
	      if (d == null) {
	        d = 1;
	      }
	      if (h == null) {
	        h = 0;
	      }
	      if (mi == null) {
	        mi = 0;
	      }
	      if (s == null) {
	        s = 0;
	      }
	      if (ms == null) {
	        ms = 0;
	      }
	      return this.WallTimeToUTC(offset, save, y, m, d, h, mi, s, ms);
	    },
	    MakeDateFromTimeStamp: function(ts) {
	      return new Date(ts);
	    },
	    MaxDate: function() {
	      return this.MakeDateFromTimeStamp(10000000 * 86400000);
	    },
	    MinDate: function() {
	      return this.MakeDateFromTimeStamp(-10000000 * 86400000);
	    }
	  };

	  helpers = {
	    Days: Days,
	    Months: Months,
	    Milliseconds: Milliseconds,
	    Time: Time,
	    noSave: {
	      hours: 0,
	      mins: 0
	    },
	    noZone: {
	      offset: {
	        negative: false,
	        hours: 0,
	        mins: 0,
	        secs: 0
	      },
	      name: "UTC"
	    }
	  };

	  this.WallTime || (this.WallTime = {});
	  this.WallTime.helpers = helpers;

	}).call(this);

	(function() {
	  var init, req_helpers;

	  init = function(helpers) {
	    var TimeZoneTime;
	    TimeZoneTime = (function() {
	      function TimeZoneTime(utc, zone, save) {
	        this.utc = utc;
	        this.zone = zone;
	        this.save = save;
	        this.offset = this.zone.offset;
	        this.wallTime = helpers.Time.UTCToWallTime(this.utc, this.offset, this.save);
	      }

	      TimeZoneTime.prototype.getFullYear = function() {
	        return this.wallTime.getUTCFullYear();
	      };

	      TimeZoneTime.prototype.getMonth = function() {
	        return this.wallTime.getUTCMonth();
	      };

	      TimeZoneTime.prototype.getDate = function() {
	        return this.wallTime.getUTCDate();
	      };

	      TimeZoneTime.prototype.getDay = function() {
	        return this.wallTime.getUTCDay();
	      };

	      TimeZoneTime.prototype.getHours = function() {
	        return this.wallTime.getUTCHours();
	      };

	      TimeZoneTime.prototype.getMinutes = function() {
	        return this.wallTime.getUTCMinutes();
	      };

	      TimeZoneTime.prototype.getSeconds = function() {
	        return this.wallTime.getUTCSeconds();
	      };

	      TimeZoneTime.prototype.getMilliseconds = function() {
	        return this.wallTime.getUTCMilliseconds();
	      };

	      TimeZoneTime.prototype.getUTCFullYear = function() {
	        return this.utc.getUTCFullYear();
	      };

	      TimeZoneTime.prototype.getUTCMonth = function() {
	        return this.utc.getUTCMonth();
	      };

	      TimeZoneTime.prototype.getUTCDate = function() {
	        return this.utc.getUTCDate();
	      };

	      TimeZoneTime.prototype.getUTCDay = function() {
	        return this.utc.getUTCDay();
	      };

	      TimeZoneTime.prototype.getUTCHours = function() {
	        return this.utc.getUTCHours();
	      };

	      TimeZoneTime.prototype.getUTCMinutes = function() {
	        return this.utc.getUTCMinutes();
	      };

	      TimeZoneTime.prototype.getUTCSeconds = function() {
	        return this.utc.getUTCSeconds();
	      };

	      TimeZoneTime.prototype.getUTCMilliseconds = function() {
	        return this.utc.getUTCMilliseconds();
	      };

	      TimeZoneTime.prototype.getTime = function() {
	        return this.utc.getTime();
	      };

	      TimeZoneTime.prototype.getTimezoneOffset = function() {
	        var base, dst;
	        base = (this.offset.hours * 60) + this.offset.mins;
	        dst = (this.save.hours * 60) + this.save.mins;
	        if (!this.offset.negative) {
	          base = -base;
	        }
	        return base - dst;
	      };

	      TimeZoneTime.prototype.toISOString = function() {
	        return this.utc.toISOString();
	      };

	      TimeZoneTime.prototype.toUTCString = function() {
	        return this.wallTime.toUTCString();
	      };

	      TimeZoneTime.prototype.toDateString = function() {
	        var caps, utcStr;
	        utcStr = this.wallTime.toUTCString();
	        caps = utcStr.match("([a-zA-Z]*), ([0-9]+) ([a-zA-Z]*) ([0-9]+)");
	        return [caps[1], caps[3], caps[2], caps[4]].join(" ");
	      };

	      TimeZoneTime.prototype.toFormattedTime = function(use24HourTime) {
	        var hour, meridiem, min, origHour;
	        if (use24HourTime == null) {
	          use24HourTime = false;
	        }
	        hour = origHour = this.getHours();
	        if (hour > 12 && !use24HourTime) {
	          hour -= 12;
	        }
	        if (hour === 0) {
	          hour = 12;
	        }
	        min = this.getMinutes();
	        if (min < 10) {
	          min = "0" + min;
	        }
	        meridiem = origHour > 11 ? ' PM' : ' AM';
	        if (use24HourTime) {
	          meridiem = '';
	        }
	        return "" + hour + ":" + min + meridiem;
	      };

	      TimeZoneTime.prototype.setTime = function(ms) {
	        this.wallTime = helpers.Time.UTCToWallTime(new Date(ms), this.zone.offset, this.save);
	        return this._updateUTC();
	      };

	      TimeZoneTime.prototype.setFullYear = function(y) {
	        this.wallTime.setUTCFullYear(y);
	        return this._updateUTC();
	      };

	      TimeZoneTime.prototype.setMonth = function(m) {
	        this.wallTime.setUTCMonth(m);
	        return this._updateUTC();
	      };

	      TimeZoneTime.prototype.setDate = function(utcDate) {
	        this.wallTime.setUTCDate(utcDate);
	        return this._updateUTC();
	      };

	      TimeZoneTime.prototype.setHours = function(hours) {
	        this.wallTime.setUTCHours(hours);
	        return this._updateUTC();
	      };

	      TimeZoneTime.prototype.setMinutes = function(m) {
	        this.wallTime.setUTCMinutes(m);
	        return this._updateUTC();
	      };

	      TimeZoneTime.prototype.setSeconds = function(s) {
	        this.wallTime.setUTCSeconds(s);
	        return this._updateUTC();
	      };

	      TimeZoneTime.prototype.setMilliseconds = function(ms) {
	        this.wallTime.setUTCMilliseconds(ms);
	        return this._updateUTC();
	      };

	      TimeZoneTime.prototype._updateUTC = function() {
	        this.utc = helpers.Time.WallTimeToUTC(this.offset, this.save, this.getFullYear(), this.getMonth(), this.getDate(), this.getHours(), this.getMinutes(), this.getSeconds(), this.getMilliseconds());
	        return this.utc.getTime();
	      };

	      return TimeZoneTime;

	    })();
	    return TimeZoneTime;
	  };

	  this.WallTime || (this.WallTime = {});
	  this.WallTime.TimeZoneTime = init(this.WallTime.helpers);

	}).call(this);

	(function() {
	  var init, req_TimeZoneTime, req_helpers,
	    __hasProp = {}.hasOwnProperty;

	  init = function(helpers, TimeZoneTime) {
	    var CompareOnFieldHandler, LastOnFieldHandler, NumberOnFieldHandler, Rule, RuleSet, lib;
	    NumberOnFieldHandler = (function() {
	      function NumberOnFieldHandler() {}

	      NumberOnFieldHandler.prototype.applies = function(str) {
	        return !isNaN(parseInt(str, 10));
	      };

	      NumberOnFieldHandler.prototype.parseDate = function(str) {
	        return parseInt(str, 10);
	      };

	      return NumberOnFieldHandler;

	    })();
	    LastOnFieldHandler = (function() {
	      function LastOnFieldHandler() {}

	      LastOnFieldHandler.prototype.applies = helpers.Months.IsLastDayOfMonthRule;

	      LastOnFieldHandler.prototype.parseDate = function(str, year, month, qualifier, gmtOffset, daylightOffset) {
	        return helpers.Months.LastDayOfMonthRule(str, year, month);
	      };

	      return LastOnFieldHandler;

	    })();
	    CompareOnFieldHandler = (function() {
	      function CompareOnFieldHandler() {}

	      CompareOnFieldHandler.prototype.applies = helpers.Months.IsDayOfMonthRule;

	      CompareOnFieldHandler.prototype.parseDate = function(str, year, month) {
	        return helpers.Months.DayOfMonthByRule(str, year, month);
	      };

	      return CompareOnFieldHandler;

	    })();
	    Rule = (function() {
	      function Rule(name, _from, _to, type, _in, on, at, _save, letter) {
	        var saveHour, saveMinute, toYear, _ref;
	        this.name = name;
	        this._from = _from;
	        this._to = _to;
	        this.type = type;
	        this["in"] = _in;
	        this.on = on;
	        this.at = at;
	        this._save = _save;
	        this.letter = letter;
	        this.from = parseInt(this._from, 10);
	        this.isMax = false;
	        toYear = this.from;
	        switch (this._to) {
	          case "max":
	            toYear = (helpers.Time.MaxDate()).getUTCFullYear();
	            this.isMax = true;
	            break;
	          case "only":
	            toYear = this.from;
	            break;
	          default:
	            toYear = parseInt(this._to, 10);
	        }
	        this.to = toYear;
	        _ref = this._parseTime(this._save), saveHour = _ref[0], saveMinute = _ref[1];
	        this.save = {
	          hours: saveHour,
	          mins: saveMinute
	        };
	      }

	      Rule.prototype.forZone = function(offset) {
	        this.offset = offset;
	        this.fromUTC = helpers.Time.MakeDateFromParts(this.from, 0, 1, 0, 0, 0);
	        this.fromUTC = helpers.Time.ApplyOffset(this.fromUTC, offset);
	        this.toUTC = helpers.Time.MakeDateFromParts(this.to, 11, 31, 23, 59, 59, 999);
	        return this.toUTC = helpers.Time.ApplyOffset(this.toUTC, offset);
	      };

	      Rule.prototype.setOnUTC = function(year, offset, getPrevSave) {
	        var atQualifier, onParsed, toDay, toHour, toMinute, toMonth, _ref,
	          _this = this;
	        toMonth = helpers.Months.MonthIndex(this["in"]);
	        onParsed = parseInt(this.on, 10);
	        toDay = !isNaN(onParsed) ? onParsed : this._parseOnDay(this.on, year, toMonth);
	        _ref = this._parseTime(this.at), toHour = _ref[0], toMinute = _ref[1], atQualifier = _ref[2];
	        this.onUTC = helpers.Time.MakeDateFromParts(year, toMonth, toDay, toHour, toMinute);
	        this.onUTC.setUTCMilliseconds(this.onUTC.getUTCMilliseconds() - 1);
	        this.atQualifier = atQualifier !== '' ? atQualifier : "w";
	        this.onUTC = helpers.Time.QualifiedTimeToUTC(this.onUTC, this.atQualifier, offset, function() {
	          return getPrevSave(_this);
	        });
	        return this.onSort = "" + toMonth + "-" + toDay + "-" + (this.onUTC.getUTCHours()) + "-" + (this.onUTC.getUTCMinutes());
	      };

	      Rule.prototype.appliesToUTC = function(dt) {
	        return (this.fromUTC <= dt && dt <= this.toUTC);
	      };

	      Rule.prototype._parseOnDay = function(onStr, year, month) {
	        var handler, handlers, _i, _len;
	        handlers = [new NumberOnFieldHandler, new LastOnFieldHandler, new CompareOnFieldHandler];
	        for (_i = 0, _len = handlers.length; _i < _len; _i++) {
	          handler = handlers[_i];
	          if (!handler.applies(onStr)) {
	            continue;
	          }
	          return handler.parseDate(onStr, year, month);
	        }
	        throw new Error("Unable to parse 'on' field for " + this.name + "|" + this._from + "|" + this._to + "|" + onStr);
	      };

	      Rule.prototype._parseTime = function(atStr) {
	        return helpers.Time.ParseTime(atStr);
	      };

	      return Rule;

	    })();
	    RuleSet = (function() {
	      function RuleSet(rules, timeZone) {
	        var beginYears, commonUpdateYearEnds, endYears, max, min, rule, _i, _len, _ref,
	          _this = this;
	        this.rules = rules != null ? rules : [];
	        this.timeZone = timeZone;
	        min = null;
	        max = null;
	        endYears = {};
	        beginYears = {};
	        _ref = this.rules;
	        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
	          rule = _ref[_i];
	          rule.forZone(this.timeZone.offset, function() {
	            return helpers.noSave;
	          });
	          if (min === null || rule.from < min) {
	            min = rule.from;
	          }
	          if (max === null || rule.to > max) {
	            max = rule.to;
	          }
	          endYears[rule.to] = endYears[rule.to] || [];
	          endYears[rule.to].push(rule);
	          beginYears[rule.from] = beginYears[rule.from] || [];
	          beginYears[rule.from].push(rule);
	        }
	        this.minYear = min;
	        this.maxYear = max;
	        commonUpdateYearEnds = function(end, years) {
	          var lastRule, year, yearRules, _results;
	          if (end == null) {
	            end = "toUTC";
	          }
	          if (years == null) {
	            years = endYears;
	          }
	          _results = [];
	          for (year in years) {
	            if (!__hasProp.call(years, year)) continue;
	            rules = years[year];
	            yearRules = _this.allThatAppliesTo(rules[0][end]);
	            if (yearRules.length < 1) {
	              continue;
	            }
	            rules = _this._sortRulesByOnTime(rules);
	            lastRule = yearRules.slice(-1)[0];
	            if (lastRule.save.hours === 0 && lastRule.save.mins === 0) {
	              continue;
	            }
	            _results.push((function() {
	              var _j, _len1, _results1;
	              _results1 = [];
	              for (_j = 0, _len1 = rules.length; _j < _len1; _j++) {
	                rule = rules[_j];
	                _results1.push(rule[end] = helpers.Time.ApplySave(rule[end], lastRule.save));
	              }
	              return _results1;
	            })());
	          }
	          return _results;
	        };
	        commonUpdateYearEnds("toUTC", endYears);
	        commonUpdateYearEnds("fromUTC", beginYears);
	      }

	      RuleSet.prototype.allThatAppliesTo = function(dt) {
	        var rule, _i, _len, _ref, _results;
	        _ref = this.rules;
	        _results = [];
	        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
	          rule = _ref[_i];
	          if (rule.appliesToUTC(dt)) {
	            _results.push(rule);
	          }
	        }
	        return _results;
	      };

	      RuleSet.prototype.getWallTimeForUTC = function(dt) {
	        var appliedRules, getPrevRuleSave, lastSave, rule, rules, _i, _len;
	        rules = this.allThatAppliesTo(dt);
	        if (rules.length < 1) {
	          return new TimeZoneTime(dt, this.timeZone, helpers.noSave);
	        }
	        rules = this._sortRulesByOnTime(rules);
	        getPrevRuleSave = function(r) {
	          var idx;
	          idx = rules.indexOf(r);
	          if (idx < 1) {
	            if (rules.length < 1) {
	              return helpers.noSave;
	            }
	            return rules.slice(-1)[0].save;
	          }
	          return rules[idx - 1].save;
	        };
	        for (_i = 0, _len = rules.length; _i < _len; _i++) {
	          rule = rules[_i];
	          rule.setOnUTC(dt.getUTCFullYear(), this.timeZone.offset, getPrevRuleSave);
	        }
	        appliedRules = (function() {
	          var _j, _len1, _results;
	          _results = [];
	          for (_j = 0, _len1 = rules.length; _j < _len1; _j++) {
	            rule = rules[_j];
	            if (rule.onUTC.getTime() < dt.getTime()) {
	              _results.push(rule);
	            }
	          }
	          return _results;
	        })();
	        lastSave = rules.length < 1 ? helpers.noSave : rules.slice(-1)[0].save;
	        if (appliedRules.length > 0) {
	          lastSave = appliedRules.slice(-1)[0].save;
	        }
	        return new TimeZoneTime(dt, this.timeZone, lastSave);
	      };

	      RuleSet.prototype.getUTCForWallTime = function(dt) {
	        var appliedRules, getPrevRuleSave, lastSave, rule, rules, utcStd, _i, _len;
	        utcStd = helpers.Time.StandardTimeToUTC(this.timeZone.offset, dt);
	        rules = (function() {
	          var _i, _len, _ref, _results;
	          _ref = this.rules;
	          _results = [];
	          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
	            rule = _ref[_i];
	            if (rule.appliesToUTC(utcStd)) {
	              _results.push(rule);
	            }
	          }
	          return _results;
	        }).call(this);
	        if (rules.length < 1) {
	          return utcStd;
	        }
	        rules = this._sortRulesByOnTime(rules);
	        getPrevRuleSave = function(r) {
	          var idx;
	          idx = rules.indexOf(r);
	          if (idx < 1) {
	            if (rules.length < 1) {
	              return helpers.noSave;
	            }
	            return rules.slice(-1)[0].save;
	          }
	          return rules[idx - 1].save;
	        };
	        for (_i = 0, _len = rules.length; _i < _len; _i++) {
	          rule = rules[_i];
	          rule.setOnUTC(utcStd.getUTCFullYear(), this.timeZone.offset, getPrevRuleSave);
	        }
	        appliedRules = (function() {
	          var _j, _len1, _results;
	          _results = [];
	          for (_j = 0, _len1 = rules.length; _j < _len1; _j++) {
	            rule = rules[_j];
	            if (rule.onUTC.getTime() < utcStd.getTime()) {
	              _results.push(rule);
	            }
	          }
	          return _results;
	        })();
	        lastSave = rules.length < 1 ? helpers.noSave : rules.slice(-1)[0].save;
	        if (appliedRules.length > 0) {
	          lastSave = appliedRules.slice(-1)[0].save;
	        }
	        return helpers.Time.WallTimeToUTC(this.timeZone.offset, lastSave, dt);
	      };

	      RuleSet.prototype.getYearEndDST = function(dt) {
	        var appliedRules, getPrevRuleSave, lastSave, rule, rules, utcStd, year, _i, _len;
	        year = typeof dt === number ? dt : dt.getUTCFullYear();
	        utcStd = helpers.Time.StandardTimeToUTC(this.timeZone.offset, year, 11, 31, 23, 59, 59);
	        rules = (function() {
	          var _i, _len, _ref, _results;
	          _ref = this.rules;
	          _results = [];
	          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
	            rule = _ref[_i];
	            if (rule.appliesToUTC(utcStd)) {
	              _results.push(rule);
	            }
	          }
	          return _results;
	        }).call(this);
	        if (rules.length < 1) {
	          return helpers.noSave;
	        }
	        rules = this._sortRulesByOnTime(rules);
	        getPrevRuleSave = function(r) {
	          var idx;
	          idx = rules.indexOf(r);
	          if (idx < 1) {
	            return helpers.noSave;
	          }
	          return rules[idx - 1].save;
	        };
	        for (_i = 0, _len = rules.length; _i < _len; _i++) {
	          rule = rules[_i];
	          rule.setOnUTC(utcStd.getUTCFullYear(), this.timeZone.offset, getPrevRuleSave);
	        }
	        appliedRules = (function() {
	          var _j, _len1, _results;
	          _results = [];
	          for (_j = 0, _len1 = rules.length; _j < _len1; _j++) {
	            rule = rules[_j];
	            if (rule.onUTC.getTime() < utcStd.getTime()) {
	              _results.push(rule);
	            }
	          }
	          return _results;
	        })();
	        lastSave = helpers.noSave;
	        if (appliedRules.length > 0) {
	          lastSave = appliedRules.slice(-1)[0].save;
	        }
	        return lastSave;
	      };

	      RuleSet.prototype.isAmbiguous = function(dt) {
	        var appliedRules, getPrevRuleSave, lastRule, makeAmbigRange, minsOff, prevSave, range, rule, rules, springForward, totalMinutes, utcStd, _i, _len;
	        utcStd = helpers.Time.StandardTimeToUTC(this.timeZone.offset, dt);
	        rules = (function() {
	          var _i, _len, _ref, _results;
	          _ref = this.rules;
	          _results = [];
	          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
	            rule = _ref[_i];
	            if (rule.appliesToUTC(utcStd)) {
	              _results.push(rule);
	            }
	          }
	          return _results;
	        }).call(this);
	        if (rules.length < 1) {
	          return false;
	        }
	        rules = this._sortRulesByOnTime(rules);
	        getPrevRuleSave = function(r) {
	          var idx;
	          idx = rules.indexOf(r);
	          if (idx < 1) {
	            return helpers.noSave;
	          }
	          return rules[idx - 1].save;
	        };
	        for (_i = 0, _len = rules.length; _i < _len; _i++) {
	          rule = rules[_i];
	          rule.setOnUTC(utcStd.getUTCFullYear(), this.timeZone.offset, getPrevRuleSave);
	        }
	        appliedRules = (function() {
	          var _j, _len1, _results;
	          _results = [];
	          for (_j = 0, _len1 = rules.length; _j < _len1; _j++) {
	            rule = rules[_j];
	            if (rule.onUTC.getTime() <= utcStd.getTime() - 1) {
	              _results.push(rule);
	            }
	          }
	          return _results;
	        })();
	        if (appliedRules.length < 1) {
	          return false;
	        }
	        lastRule = appliedRules.slice(-1)[0];
	        prevSave = getPrevRuleSave(lastRule);
	        totalMinutes = {
	          prev: (prevSave.hours * 60) + prevSave.mins,
	          last: (lastRule.save.hours * 60) + lastRule.save.mins
	        };
	        if (totalMinutes.prev === totalMinutes.last) {
	          return false;
	        }
	        springForward = totalMinutes.prev < totalMinutes.last;
	        makeAmbigRange = function(begin, minutesOff) {
	          var ambigRange, tmp;
	          ambigRange = {
	            begin: helpers.Time.MakeDateFromTimeStamp(begin.getTime() + 1)
	          };
	          ambigRange.end = helpers.Time.Add(ambigRange.begin, 0, minutesOff);
	          if (ambigRange.begin.getTime() > ambigRange.end.getTime()) {
	            tmp = ambigRange.begin;
	            ambigRange.begin = ambigRange.end;
	            ambigRange.end = tmp;
	          }
	          return ambigRange;
	        };
	        minsOff = springForward ? totalMinutes.last : -totalMinutes.prev;
	        range = makeAmbigRange(lastRule.onUTC, minsOff);
	        utcStd = helpers.Time.WallTimeToUTC(this.timeZone.offset, prevSave, dt);
	        return (range.begin <= utcStd && utcStd <= range.end);
	      };

	      RuleSet.prototype._sortRulesByOnTime = function(rules) {
	        return rules.sort(function(a, b) {
	          return (helpers.Months.MonthIndex(a["in"])) - (helpers.Months.MonthIndex(b["in"]));
	        });
	      };

	      return RuleSet;

	    })();
	    lib = {
	      Rule: Rule,
	      RuleSet: RuleSet,
	      OnFieldHandlers: {
	        NumberHandler: NumberOnFieldHandler,
	        LastHandler: LastOnFieldHandler,
	        CompareHandler: CompareOnFieldHandler
	      }
	    };
	    return lib;
	  };

	  this.WallTime || (this.WallTime = {});
	  this.WallTime.rule = init(this.WallTime.helpers, this.WallTime.TimeZoneTime);

	}).call(this);

	(function() {
	  var init, req_TimeZoneTime, req_helpers, req_rule;

	  init = function(helpers, rule, TimeZoneTime) {
	    var Zone, ZoneSet, lib;
	    Zone = (function() {
	      function Zone(name, _offset, _rule, format, _until, currZone) {
	        var begin, isNegative, offsetHours, offsetMins, offsetSecs, _ref;
	        this.name = name;
	        this._offset = _offset;
	        this._rule = _rule;
	        this.format = format;
	        this._until = _until;
	        _ref = helpers.Time.ParseGMTOffset(this._offset), isNegative = _ref[0], offsetHours = _ref[1], offsetMins = _ref[2], offsetSecs = _ref[3];
	        this.offset = {
	          negative: isNegative,
	          hours: offsetHours,
	          mins: offsetMins,
	          secs: isNaN(offsetSecs) ? 0 : offsetSecs
	        };
	        begin = currZone ? helpers.Time.MakeDateFromTimeStamp(currZone.range.end.getTime() + 1) : helpers.Time.MinDate();
	        this.range = {
	          begin: begin,
	          end: this._parseUntilDate(this._until)
	        };
	      }

	      Zone.prototype._parseUntilDate = function(til) {
	        var day, endTime, h, mi, month, monthName, neg, s, standardTime, time, year, _ref, _ref1;
	        _ref = til.split(" "), year = _ref[0], monthName = _ref[1], day = _ref[2], time = _ref[3];
	        _ref1 = time ? helpers.Time.ParseGMTOffset(time) : [false, 0, 0, 0], neg = _ref1[0], h = _ref1[1], mi = _ref1[2], s = _ref1[3];
	        s = isNaN(s) ? 0 : s;
	        if (!year || year === "") {
	          return helpers.Time.MaxDate();
	        }
	        year = parseInt(year, 10);
	        month = monthName ? helpers.Months.MonthIndex(monthName) : 0;
	        day || (day = "1");
	        if (helpers.Months.IsDayOfMonthRule(day)) {
	          day = helpers.Months.DayOfMonthByRule(day, year, month);
	        } else if (helpers.Months.IsLastDayOfMonthRule(day)) {
	          day = helpers.Months.LastDayOfMonthRule(day, year, month);
	        } else {
	          day = parseInt(day, 10);
	        }
	        standardTime = helpers.Time.StandardTimeToUTC(this.offset, year, month, day, h, mi, s);
	        endTime = helpers.Time.MakeDateFromTimeStamp(standardTime.getTime() - 1);
	        return endTime;
	      };

	      Zone.prototype.updateEndForRules = function(getRulesNamed) {
	        var endSave, hours, mins, rules, _ref;
	        if (this._rule === "-" || this._rule === "") {
	          return;
	        }
	        if (this._rule.indexOf(":") >= 0) {
	          _ref = helpers.Time.ParseTime(this._rule), hours = _ref[0], mins = _ref[1];
	          this.range.end = helpers.Time.ApplySave(this.range.end, {
	            hours: hours,
	            mins: mins
	          });
	        }
	        rules = new rule.RuleSet(getRulesNamed(this._rule), this);
	        endSave = rules.getYearEndDST(this.range.end);
	        return this.range.end = helpers.Time.ApplySave(this.range.end, endSave);
	      };

	      Zone.prototype.UTCToWallTime = function(dt, getRulesNamed) {
	        var hours, mins, rules, _ref;
	        if (this._rule === "-" || this._rule === "") {
	          return new TimeZoneTime(dt, this, helpers.noSave);
	        }
	        if (this._rule.indexOf(":") >= 0) {
	          _ref = helpers.Time.ParseTime(this._rule), hours = _ref[0], mins = _ref[1];
	          return new TimeZoneTime(dt, this, {
	            hours: hours,
	            mins: mins
	          });
	        }
	        rules = new rule.RuleSet(getRulesNamed(this._rule), this);
	        return rules.getWallTimeForUTC(dt);
	      };

	      Zone.prototype.WallTimeToUTC = function(dt, getRulesNamed) {
	        var hours, mins, rules, _ref;
	        if (this._rule === "-" || this._rule === "") {
	          return helpers.Time.StandardTimeToUTC(this.offset, dt);
	        }
	        if (this._rule.indexOf(":") >= 0) {
	          _ref = helpers.Time.ParseTime(this._rule), hours = _ref[0], mins = _ref[1];
	          return helpers.Time.WallTimeToUTC(this.offset, {
	            hours: hours,
	            mins: mins
	          }, dt);
	        }
	        rules = new rule.RuleSet(getRulesNamed(this._rule), this);
	        return rules.getUTCForWallTime(dt, this.offset);
	      };

	      Zone.prototype.IsAmbiguous = function(dt, getRulesNamed) {
	        var ambigCheck, hours, makeAmbigZone, mins, rules, utcDt, _ref, _ref1, _ref2;
	        if (this._rule === "-" || this._rule === "") {
	          return false;
	        }
	        if (this._rule.indexOf(":") >= 0) {
	          utcDt = helpers.Time.StandardTimeToUTC(this.offset, dt);
	          _ref = helpers.Time.ParseTime(this._rule), hours = _ref[0], mins = _ref[1];
	          makeAmbigZone = function(begin) {
	            var ambigZone, tmp;
	            ambigZone = {
	              begin: this.range.begin,
	              end: helpers.Time.ApplySave(this.range.begin, {
	                hours: hours,
	                mins: mins
	              })
	            };
	            if (ambigZone.end.getTime() < ambigZone.begin.getTime()) {
	              tmp = ambigZone.begin;
	              ambigZone.begin = ambigZone.end;
	              ambigZone.end = tmp;
	            }
	            return ambigZone;
	          };
	          ambigCheck = makeAmbigZone(this.range.begin);
	          if ((ambigCheck.begin.getTime() <= (_ref1 = utcDt.getTime()) && _ref1 < ambigCheck.end.getTime())) {
	            return true;
	          }
	          ambigCheck = makeAmbigZone(this.range.end);
	          (ambigCheck.begin.getTime() <= (_ref2 = utcDt.getTime()) && _ref2 < ambigCheck.end.getTime());
	        }
	        rules = new rule.RuleSet(getRulesNamed(this._rule), this);
	        return rules.isAmbiguous(dt, this.offset);
	      };

	      return Zone;

	    })();
	    ZoneSet = (function() {
	      function ZoneSet(zones, getRulesNamed) {
	        var zone, _i, _len, _ref;
	        this.zones = zones != null ? zones : [];
	        this.getRulesNamed = getRulesNamed;
	        if (this.zones.length > 0) {
	          this.name = this.zones[0].name;
	        } else {
	          this.name = "";
	        }
	        _ref = this.zones;
	        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
	          zone = _ref[_i];
	          zone.updateEndForRules;
	        }
	      }

	      ZoneSet.prototype.add = function(zone) {
	        if (this.zones.length === 0 && this.name === "") {
	          this.name = zone.name;
	        }
	        if (this.name !== zone.name) {
	          throw new Error("Cannot add different named zones to a ZoneSet");
	        }
	        return this.zones.push(zone);
	      };

	      ZoneSet.prototype.findApplicable = function(dt, useOffset) {
	        var findOffsetRange, found, range, ts, zone, _i, _len, _ref;
	        if (useOffset == null) {
	          useOffset = false;
	        }
	        ts = dt.getTime();
	        findOffsetRange = function(zone) {
	          return {
	            begin: helpers.Time.UTCToStandardTime(zone.range.begin, zone.offset),
	            end: helpers.Time.UTCToStandardTime(zone.range.end, zone.offset)
	          };
	        };
	        found = null;
	        _ref = this.zones;
	        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
	          zone = _ref[_i];
	          range = !useOffset ? zone.range : findOffsetRange(zone);
	          if ((range.begin.getTime() <= ts && ts <= range.end.getTime())) {
	            found = zone;
	            break;
	          }
	        }
	        return found;
	      };

	      ZoneSet.prototype.getWallTimeForUTC = function(dt) {
	        var applicable;
	        applicable = this.findApplicable(dt);
	        if (!applicable) {
	          return new TimeZoneTime(dt, helpers.noZone, helpers.noSave);
	        }
	        return applicable.UTCToWallTime(dt, this.getRulesNamed);
	      };

	      ZoneSet.prototype.getUTCForWallTime = function(dt) {
	        var applicable;
	        applicable = this.findApplicable(dt, true);
	        if (!applicable) {
	          return dt;
	        }
	        return applicable.WallTimeToUTC(dt, this.getRulesNamed);
	      };

	      ZoneSet.prototype.isAmbiguous = function(dt) {
	        var applicable;
	        applicable = this.findApplicable(dt, true);
	        if (!applicable) {
	          return false;
	        }
	        return applicable.IsAmbiguous(dt, this.getRulesNamed);
	      };

	      return ZoneSet;

	    })();
	    return lib = {
	      Zone: Zone,
	      ZoneSet: ZoneSet
	    };
	  };

	  this.WallTime || (this.WallTime = {});
	  this.WallTime.zone = init(this.WallTime.helpers, this.WallTime.rule, this.WallTime.TimeZoneTime);

	}).call(this);

	(function() {
	  var api, init, key, req_help, req_rule, req_zone, val, _ref, _ref1, _ref2,
	    __hasProp = {}.hasOwnProperty;

	  init = function(helpers, rule, zone) {
	    var WallTime;
	    WallTime = (function() {
	      function WallTime() {}

	      WallTime.prototype.init = function(rules, zones) {
	        if (rules == null) {
	          rules = {};
	        }
	        if (zones == null) {
	          zones = {};
	        }
	        this.zones = {};
	        this.rules = {};
	        this.addRulesZones(rules, zones);
	        this.zoneSet = null;
	        this.timeZoneName = null;
	        return this.doneInit = true;
	      };

	      WallTime.prototype.addRulesZones = function(rules, zones) {
	        var currZone, newRules, newZone, newZones, r, ruleName, ruleVals, z, zoneName, zoneVals, _i, _len, _results;
	        if (rules == null) {
	          rules = {};
	        }
	        if (zones == null) {
	          zones = {};
	        }
	        currZone = null;
	        for (zoneName in zones) {
	          if (!__hasProp.call(zones, zoneName)) continue;
	          zoneVals = zones[zoneName];
	          newZones = [];
	          currZone = null;
	          for (_i = 0, _len = zoneVals.length; _i < _len; _i++) {
	            z = zoneVals[_i];
	            newZone = new zone.Zone(z.name, z._offset, z._rule, z.format, z._until, currZone);
	            newZones.push(newZone);
	            currZone = newZone;
	          }
	          this.zones[zoneName] = newZones;
	        }
	        _results = [];
	        for (ruleName in rules) {
	          if (!__hasProp.call(rules, ruleName)) continue;
	          ruleVals = rules[ruleName];
	          newRules = (function() {
	            var _j, _len1, _results1;
	            _results1 = [];
	            for (_j = 0, _len1 = ruleVals.length; _j < _len1; _j++) {
	              r = ruleVals[_j];
	              _results1.push(new rule.Rule(r.name, r._from, r._to, r.type, r["in"], r.on, r.at, r._save, r.letter));
	            }
	            return _results1;
	          })();
	          _results.push(this.rules[ruleName] = newRules);
	        }
	        return _results;
	      };

	      WallTime.prototype.setTimeZone = function(name) {
	        var matches,
	          _this = this;
	        if (!this.doneInit) {
	          throw new Error("Must call init with rules and zones before setting time zone");
	        }
	        if (!this.zones[name]) {
	          throw new Error("Unable to find time zone named " + (name || '<blank>'));
	        }
	        matches = this.zones[name];
	        this.zoneSet = new zone.ZoneSet(matches, function(ruleName) {
	          return _this.rules[ruleName];
	        });
	        return this.timeZoneName = name;
	      };

	      WallTime.prototype.Date = function(y, m, d, h, mi, s, ms) {
	        if (m == null) {
	          m = 0;
	        }
	        if (d == null) {
	          d = 1;
	        }
	        if (h == null) {
	          h = 0;
	        }
	        if (mi == null) {
	          mi = 0;
	        }
	        if (s == null) {
	          s = 0;
	        }
	        if (ms == null) {
	          ms = 0;
	        }
	        y || (y = new Date().getUTCFullYear());
	        return helpers.Time.MakeDateFromParts(y, m, d, h, mi, s, ms);
	      };

	      WallTime.prototype.UTCToWallTime = function(dt, zoneName) {
	        if (zoneName == null) {
	          zoneName = this.timeZoneName;
	        }
	        if (typeof dt === "number") {
	          dt = new Date(dt);
	        }
	        if (zoneName !== this.timeZoneName) {
	          this.setTimeZone(zoneName);
	        }
	        if (!this.zoneSet) {
	          throw new Error("Must set the time zone before converting times");
	        }
	        return this.zoneSet.getWallTimeForUTC(dt);
	      };

	      WallTime.prototype.WallTimeToUTC = function(zoneName, y, m, d, h, mi, s, ms) {
	        var wallTime;
	        if (zoneName == null) {
	          zoneName = this.timeZoneName;
	        }
	        if (m == null) {
	          m = 0;
	        }
	        if (d == null) {
	          d = 1;
	        }
	        if (h == null) {
	          h = 0;
	        }
	        if (mi == null) {
	          mi = 0;
	        }
	        if (s == null) {
	          s = 0;
	        }
	        if (ms == null) {
	          ms = 0;
	        }
	        if (zoneName !== this.timeZoneName) {
	          this.setTimeZone(zoneName);
	        }
	        wallTime = typeof y === "number" ? helpers.Time.MakeDateFromParts(y, m, d, h, mi, s, ms) : y;
	        return this.zoneSet.getUTCForWallTime(wallTime);
	      };

	      WallTime.prototype.IsAmbiguous = function(zoneName, y, m, d, h, mi) {
	        var wallTime;
	        if (zoneName == null) {
	          zoneName = this.timeZoneName;
	        }
	        if (mi == null) {
	          mi = 0;
	        }
	        if (zoneName !== this.timeZoneName) {
	          this.setTimeZone(zoneName);
	        }
	        wallTime = typeof y === "number" ? helpers.Time.MakeDateFromParts(y, m, d, h, mi) : y;
	        return this.zoneSet.isAmbiguous(wallTime);
	      };

	      return WallTime;

	    })();
	    return new WallTime;
	  };

	  this.WallTime || (this.WallTime = {});
	  api = init(this.WallTime.helpers, this.WallTime.rule, this.WallTime.zone);
	  _ref = this.WallTime;
	  for (key in _ref) {
	    if (!__hasProp.call(_ref, key)) continue;
	    val = _ref[key];
	    api[key] = val;
	  }
	  this.WallTime = api;
	  if (this.WallTime.autoinit && ((_ref1 = this.WallTime.data) != null ? _ref1.rules : void 0) && ((_ref2 = this.WallTime.data) != null ? _ref2.zones : void 0)) {
	    this.WallTime.init(this.WallTime.data.rules, this.WallTime.data.zones);
	  }

	}).call(this);

	module.exports = this.WallTime;



/***/ },
/* 181 */
/***/ function(module, exports) {

	"use strict";
	function isInstanceOf(thing, constructor) {
	    if (typeof constructor !== 'function')
	        throw new TypeError("constructor must be a function");
	    if (thing instanceof constructor)
	        return true;
	    if (thing == null)
	        return false;
	    var constructorName = constructor.name;
	    if (!constructorName)
	        return false;
	    var thingProto = thing.__proto__;
	    while (thingProto && thingProto.constructor) {
	        if (thingProto.constructor.name === constructorName)
	            return true;
	        thingProto = thingProto.__proto__;
	    }
	    return false;
	}
	exports.isInstanceOf = isInstanceOf;
	function isArrayOf(things, constructor) {
	    if (!Array.isArray(things))
	        return false;
	    for (var i = 0, length = things.length; i < length; i++) {
	        if (!isInstanceOf(things[i], constructor))
	            return false;
	    }
	    return true;
	}
	exports.isArrayOf = isArrayOf;
	function isImmutableClass(thing) {
	    if (!thing || typeof thing !== 'object')
	        return false;
	    var ClassFn = thing.constructor;
	    return typeof ClassFn.fromJS === 'function' &&
	        typeof thing.toJS === 'function' &&
	        typeof thing.equals === 'function';
	}
	exports.isImmutableClass = isImmutableClass;
	function immutableEqual(a, b) {
	    if (a === b)
	        return true;
	    return Boolean(a) && a.equals(b);
	}
	exports.immutableEqual = immutableEqual;
	function immutableArraysEqual(arrayA, arrayB) {
	    if (arrayA === arrayB)
	        return true;
	    if (!arrayA !== !arrayB)
	        return false;
	    var length = arrayA.length;
	    if (length !== arrayB.length)
	        return false;
	    for (var i = 0; i < length; i++) {
	        if (!immutableEqual(arrayA[i], arrayB[i]))
	            return false;
	    }
	    return true;
	}
	exports.immutableArraysEqual = immutableArraysEqual;
	function immutableLookupsEqual(lookupA, lookupB) {
	    if (lookupA === lookupB)
	        return true;
	    if (!lookupA !== !lookupB)
	        return false;
	    var keysA = Object.keys(lookupA);
	    var keysB = Object.keys(lookupB);
	    if (keysA.length !== keysB.length)
	        return false;
	    for (var _i = 0, keysA_1 = keysA; _i < keysA_1.length; _i++) {
	        var k = keysA_1[_i];
	        if (!immutableEqual(lookupA[k], lookupB[k]))
	            return false;
	    }
	    return true;
	}
	exports.immutableLookupsEqual = immutableLookupsEqual;


/***/ },
/* 182 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 *  WallTime 0.2.0
	 *  Copyright (c) 2013 Sprout Social, Inc.
	 *  Available under the MIT License (http://bit.ly/walltime-license)
	 */
	"use strict";

	var tzData = {
	  rules: {"Algeria":[{"name":"Algeria","_from":"1916","_to":"only","type":"-","in":"Jun","on":"14","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Algeria","_from":"1916","_to":"1919","type":"-","in":"Oct","on":"Sun>=1","at":"23:00s","_save":"0","letter":"-"},{"name":"Algeria","_from":"1917","_to":"only","type":"-","in":"Mar","on":"24","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Algeria","_from":"1918","_to":"only","type":"-","in":"Mar","on":"9","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Algeria","_from":"1919","_to":"only","type":"-","in":"Mar","on":"1","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Algeria","_from":"1920","_to":"only","type":"-","in":"Feb","on":"14","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Algeria","_from":"1920","_to":"only","type":"-","in":"Oct","on":"23","at":"23:00s","_save":"0","letter":"-"},{"name":"Algeria","_from":"1921","_to":"only","type":"-","in":"Mar","on":"14","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Algeria","_from":"1921","_to":"only","type":"-","in":"Jun","on":"21","at":"23:00s","_save":"0","letter":"-"},{"name":"Algeria","_from":"1939","_to":"only","type":"-","in":"Sep","on":"11","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Algeria","_from":"1939","_to":"only","type":"-","in":"Nov","on":"19","at":"1:00","_save":"0","letter":"-"},{"name":"Algeria","_from":"1944","_to":"1945","type":"-","in":"Apr","on":"Mon>=1","at":"2:00","_save":"1:00","letter":"S"},{"name":"Algeria","_from":"1944","_to":"only","type":"-","in":"Oct","on":"8","at":"2:00","_save":"0","letter":"-"},{"name":"Algeria","_from":"1945","_to":"only","type":"-","in":"Sep","on":"16","at":"1:00","_save":"0","letter":"-"},{"name":"Algeria","_from":"1971","_to":"only","type":"-","in":"Apr","on":"25","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Algeria","_from":"1971","_to":"only","type":"-","in":"Sep","on":"26","at":"23:00s","_save":"0","letter":"-"},{"name":"Algeria","_from":"1977","_to":"only","type":"-","in":"May","on":"6","at":"0:00","_save":"1:00","letter":"S"},{"name":"Algeria","_from":"1977","_to":"only","type":"-","in":"Oct","on":"21","at":"0:00","_save":"0","letter":"-"},{"name":"Algeria","_from":"1978","_to":"only","type":"-","in":"Mar","on":"24","at":"1:00","_save":"1:00","letter":"S"},{"name":"Algeria","_from":"1978","_to":"only","type":"-","in":"Sep","on":"22","at":"3:00","_save":"0","letter":"-"},{"name":"Algeria","_from":"1980","_to":"only","type":"-","in":"Apr","on":"25","at":"0:00","_save":"1:00","letter":"S"},{"name":"Algeria","_from":"1980","_to":"only","type":"-","in":"Oct","on":"31","at":"2:00","_save":"0","letter":"-"}],"Egypt":[{"name":"Egypt","_from":"1940","_to":"only","type":"-","in":"Jul","on":"15","at":"0:00","_save":"1:00","letter":"S"},{"name":"Egypt","_from":"1940","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Egypt","_from":"1941","_to":"only","type":"-","in":"Apr","on":"15","at":"0:00","_save":"1:00","letter":"S"},{"name":"Egypt","_from":"1941","_to":"only","type":"-","in":"Sep","on":"16","at":"0:00","_save":"0","letter":"-"},{"name":"Egypt","_from":"1942","_to":"1944","type":"-","in":"Apr","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Egypt","_from":"1942","_to":"only","type":"-","in":"Oct","on":"27","at":"0:00","_save":"0","letter":"-"},{"name":"Egypt","_from":"1943","_to":"1945","type":"-","in":"Nov","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Egypt","_from":"1945","_to":"only","type":"-","in":"Apr","on":"16","at":"0:00","_save":"1:00","letter":"S"},{"name":"Egypt","_from":"1957","_to":"only","type":"-","in":"May","on":"10","at":"0:00","_save":"1:00","letter":"S"},{"name":"Egypt","_from":"1957","_to":"1958","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Egypt","_from":"1958","_to":"only","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Egypt","_from":"1959","_to":"1981","type":"-","in":"May","on":"1","at":"1:00","_save":"1:00","letter":"S"},{"name":"Egypt","_from":"1959","_to":"1965","type":"-","in":"Sep","on":"30","at":"3:00","_save":"0","letter":"-"},{"name":"Egypt","_from":"1966","_to":"1994","type":"-","in":"Oct","on":"1","at":"3:00","_save":"0","letter":"-"},{"name":"Egypt","_from":"1982","_to":"only","type":"-","in":"Jul","on":"25","at":"1:00","_save":"1:00","letter":"S"},{"name":"Egypt","_from":"1983","_to":"only","type":"-","in":"Jul","on":"12","at":"1:00","_save":"1:00","letter":"S"},{"name":"Egypt","_from":"1984","_to":"1988","type":"-","in":"May","on":"1","at":"1:00","_save":"1:00","letter":"S"},{"name":"Egypt","_from":"1989","_to":"only","type":"-","in":"May","on":"6","at":"1:00","_save":"1:00","letter":"S"},{"name":"Egypt","_from":"1990","_to":"1994","type":"-","in":"May","on":"1","at":"1:00","_save":"1:00","letter":"S"},{"name":"Egypt","_from":"1995","_to":"2010","type":"-","in":"Apr","on":"lastFri","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Egypt","_from":"1995","_to":"2005","type":"-","in":"Sep","on":"lastThu","at":"23:00s","_save":"0","letter":"-"},{"name":"Egypt","_from":"2006","_to":"only","type":"-","in":"Sep","on":"21","at":"23:00s","_save":"0","letter":"-"},{"name":"Egypt","_from":"2007","_to":"only","type":"-","in":"Sep","on":"Thu>=1","at":"23:00s","_save":"0","letter":"-"},{"name":"Egypt","_from":"2008","_to":"only","type":"-","in":"Aug","on":"lastThu","at":"23:00s","_save":"0","letter":"-"},{"name":"Egypt","_from":"2009","_to":"only","type":"-","in":"Aug","on":"20","at":"23:00s","_save":"0","letter":"-"},{"name":"Egypt","_from":"2010","_to":"only","type":"-","in":"Aug","on":"11","at":"0:00","_save":"0","letter":"-"},{"name":"Egypt","_from":"2010","_to":"only","type":"-","in":"Sep","on":"10","at":"0:00","_save":"1:00","letter":"S"},{"name":"Egypt","_from":"2010","_to":"only","type":"-","in":"Sep","on":"lastThu","at":"23:00s","_save":"0","letter":"-"}],"Ghana":[{"name":"Ghana","_from":"1936","_to":"1942","type":"-","in":"Sep","on":"1","at":"0:00","_save":"0:20","letter":"GHST"},{"name":"Ghana","_from":"1936","_to":"1942","type":"-","in":"Dec","on":"31","at":"0:00","_save":"0","letter":"GMT"}],"Libya":[{"name":"Libya","_from":"1951","_to":"only","type":"-","in":"Oct","on":"14","at":"2:00","_save":"1:00","letter":"S"},{"name":"Libya","_from":"1952","_to":"only","type":"-","in":"Jan","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Libya","_from":"1953","_to":"only","type":"-","in":"Oct","on":"9","at":"2:00","_save":"1:00","letter":"S"},{"name":"Libya","_from":"1954","_to":"only","type":"-","in":"Jan","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Libya","_from":"1955","_to":"only","type":"-","in":"Sep","on":"30","at":"0:00","_save":"1:00","letter":"S"},{"name":"Libya","_from":"1956","_to":"only","type":"-","in":"Jan","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Libya","_from":"1982","_to":"1984","type":"-","in":"Apr","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Libya","_from":"1982","_to":"1985","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Libya","_from":"1985","_to":"only","type":"-","in":"Apr","on":"6","at":"0:00","_save":"1:00","letter":"S"},{"name":"Libya","_from":"1986","_to":"only","type":"-","in":"Apr","on":"4","at":"0:00","_save":"1:00","letter":"S"},{"name":"Libya","_from":"1986","_to":"only","type":"-","in":"Oct","on":"3","at":"0:00","_save":"0","letter":"-"},{"name":"Libya","_from":"1987","_to":"1989","type":"-","in":"Apr","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Libya","_from":"1987","_to":"1989","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Libya","_from":"1997","_to":"only","type":"-","in":"Apr","on":"4","at":"0:00","_save":"1:00","letter":"S"},{"name":"Libya","_from":"1997","_to":"only","type":"-","in":"Oct","on":"4","at":"0:00","_save":"0","letter":"-"},{"name":"Libya","_from":"2013","_to":"max","type":"-","in":"Mar","on":"lastFri","at":"1:00","_save":"1:00","letter":"S"},{"name":"Libya","_from":"2013","_to":"max","type":"-","in":"Oct","on":"lastFri","at":"2:00","_save":"0","letter":"-"}],"Mauritius":[{"name":"Mauritius","_from":"1982","_to":"only","type":"-","in":"Oct","on":"10","at":"0:00","_save":"1:00","letter":"S"},{"name":"Mauritius","_from":"1983","_to":"only","type":"-","in":"Mar","on":"21","at":"0:00","_save":"0","letter":"-"},{"name":"Mauritius","_from":"2008","_to":"only","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"1:00","letter":"S"},{"name":"Mauritius","_from":"2009","_to":"only","type":"-","in":"Mar","on":"lastSun","at":"2:00","_save":"0","letter":"-"}],"Morocco":[{"name":"Morocco","_from":"1939","_to":"only","type":"-","in":"Sep","on":"12","at":"0:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"1939","_to":"only","type":"-","in":"Nov","on":"19","at":"0:00","_save":"0","letter":"-"},{"name":"Morocco","_from":"1940","_to":"only","type":"-","in":"Feb","on":"25","at":"0:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"1945","_to":"only","type":"-","in":"Nov","on":"18","at":"0:00","_save":"0","letter":"-"},{"name":"Morocco","_from":"1950","_to":"only","type":"-","in":"Jun","on":"11","at":"0:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"1950","_to":"only","type":"-","in":"Oct","on":"29","at":"0:00","_save":"0","letter":"-"},{"name":"Morocco","_from":"1967","_to":"only","type":"-","in":"Jun","on":"3","at":"12:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"1967","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Morocco","_from":"1974","_to":"only","type":"-","in":"Jun","on":"24","at":"0:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"1974","_to":"only","type":"-","in":"Sep","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Morocco","_from":"1976","_to":"1977","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"1976","_to":"only","type":"-","in":"Aug","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Morocco","_from":"1977","_to":"only","type":"-","in":"Sep","on":"28","at":"0:00","_save":"0","letter":"-"},{"name":"Morocco","_from":"1978","_to":"only","type":"-","in":"Jun","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"1978","_to":"only","type":"-","in":"Aug","on":"4","at":"0:00","_save":"0","letter":"-"},{"name":"Morocco","_from":"2008","_to":"only","type":"-","in":"Jun","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"2008","_to":"only","type":"-","in":"Sep","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Morocco","_from":"2009","_to":"only","type":"-","in":"Jun","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"2009","_to":"only","type":"-","in":"Aug","on":"21","at":"0:00","_save":"0","letter":"-"},{"name":"Morocco","_from":"2010","_to":"only","type":"-","in":"May","on":"2","at":"0:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"2010","_to":"only","type":"-","in":"Aug","on":"8","at":"0:00","_save":"0","letter":"-"},{"name":"Morocco","_from":"2011","_to":"only","type":"-","in":"Apr","on":"3","at":"0:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"2011","_to":"only","type":"-","in":"Jul","on":"31","at":"0","_save":"0","letter":"-"},{"name":"Morocco","_from":"2012","_to":"2019","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"2012","_to":"max","type":"-","in":"Sep","on":"lastSun","at":"3:00","_save":"0","letter":"-"},{"name":"Morocco","_from":"2012","_to":"only","type":"-","in":"Jul","on":"20","at":"3:00","_save":"0","letter":"-"},{"name":"Morocco","_from":"2012","_to":"only","type":"-","in":"Aug","on":"20","at":"2:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"2013","_to":"only","type":"-","in":"Jul","on":"7","at":"3:00","_save":"0","letter":"-"},{"name":"Morocco","_from":"2013","_to":"only","type":"-","in":"Aug","on":"10","at":"2:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"2014","_to":"only","type":"-","in":"Jun","on":"29","at":"3:00","_save":"0","letter":"-"},{"name":"Morocco","_from":"2014","_to":"only","type":"-","in":"Jul","on":"29","at":"2:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"2015","_to":"only","type":"-","in":"Jun","on":"18","at":"3:00","_save":"0","letter":"-"},{"name":"Morocco","_from":"2015","_to":"only","type":"-","in":"Jul","on":"18","at":"2:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"2016","_to":"only","type":"-","in":"Jun","on":"7","at":"3:00","_save":"0","letter":"-"},{"name":"Morocco","_from":"2016","_to":"only","type":"-","in":"Jul","on":"7","at":"2:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"2017","_to":"only","type":"-","in":"May","on":"27","at":"3:00","_save":"0","letter":"-"},{"name":"Morocco","_from":"2017","_to":"only","type":"-","in":"Jun","on":"26","at":"2:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"2018","_to":"only","type":"-","in":"May","on":"16","at":"3:00","_save":"0","letter":"-"},{"name":"Morocco","_from":"2018","_to":"only","type":"-","in":"Jun","on":"15","at":"2:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"2019","_to":"only","type":"-","in":"May","on":"6","at":"3:00","_save":"0","letter":"-"},{"name":"Morocco","_from":"2019","_to":"only","type":"-","in":"Jun","on":"5","at":"2:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"2020","_to":"only","type":"-","in":"May","on":"24","at":"2:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"2021","_to":"only","type":"-","in":"May","on":"13","at":"2:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"2022","_to":"only","type":"-","in":"May","on":"3","at":"2:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"2023","_to":"max","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"S"}],"Namibia":[{"name":"Namibia","_from":"1994","_to":"max","type":"-","in":"Sep","on":"Sun>=1","at":"2:00","_save":"1:00","letter":"S"},{"name":"Namibia","_from":"1995","_to":"max","type":"-","in":"Apr","on":"Sun>=1","at":"2:00","_save":"0","letter":"-"}],"SL":[{"name":"SL","_from":"1935","_to":"1942","type":"-","in":"Jun","on":"1","at":"0:00","_save":"0:40","letter":"SLST"},{"name":"SL","_from":"1935","_to":"1942","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"WAT"},{"name":"SL","_from":"1957","_to":"1962","type":"-","in":"Jun","on":"1","at":"0:00","_save":"1:00","letter":"SLST"},{"name":"SL","_from":"1957","_to":"1962","type":"-","in":"Sep","on":"1","at":"0:00","_save":"0","letter":"GMT"}],"SA":[{"name":"SA","_from":"1942","_to":"1943","type":"-","in":"Sep","on":"Sun>=15","at":"2:00","_save":"1:00","letter":"-"},{"name":"SA","_from":"1943","_to":"1944","type":"-","in":"Mar","on":"Sun>=15","at":"2:00","_save":"0","letter":"-"}],"Sudan":[{"name":"Sudan","_from":"1970","_to":"only","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Sudan","_from":"1970","_to":"1985","type":"-","in":"Oct","on":"15","at":"0:00","_save":"0","letter":"-"},{"name":"Sudan","_from":"1971","_to":"only","type":"-","in":"Apr","on":"30","at":"0:00","_save":"1:00","letter":"S"},{"name":"Sudan","_from":"1972","_to":"1985","type":"-","in":"Apr","on":"lastSun","at":"0:00","_save":"1:00","letter":"S"}],"Tunisia":[{"name":"Tunisia","_from":"1939","_to":"only","type":"-","in":"Apr","on":"15","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Tunisia","_from":"1939","_to":"only","type":"-","in":"Nov","on":"18","at":"23:00s","_save":"0","letter":"-"},{"name":"Tunisia","_from":"1940","_to":"only","type":"-","in":"Feb","on":"25","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Tunisia","_from":"1941","_to":"only","type":"-","in":"Oct","on":"6","at":"0:00","_save":"0","letter":"-"},{"name":"Tunisia","_from":"1942","_to":"only","type":"-","in":"Mar","on":"9","at":"0:00","_save":"1:00","letter":"S"},{"name":"Tunisia","_from":"1942","_to":"only","type":"-","in":"Nov","on":"2","at":"3:00","_save":"0","letter":"-"},{"name":"Tunisia","_from":"1943","_to":"only","type":"-","in":"Mar","on":"29","at":"2:00","_save":"1:00","letter":"S"},{"name":"Tunisia","_from":"1943","_to":"only","type":"-","in":"Apr","on":"17","at":"2:00","_save":"0","letter":"-"},{"name":"Tunisia","_from":"1943","_to":"only","type":"-","in":"Apr","on":"25","at":"2:00","_save":"1:00","letter":"S"},{"name":"Tunisia","_from":"1943","_to":"only","type":"-","in":"Oct","on":"4","at":"2:00","_save":"0","letter":"-"},{"name":"Tunisia","_from":"1944","_to":"1945","type":"-","in":"Apr","on":"Mon>=1","at":"2:00","_save":"1:00","letter":"S"},{"name":"Tunisia","_from":"1944","_to":"only","type":"-","in":"Oct","on":"8","at":"0:00","_save":"0","letter":"-"},{"name":"Tunisia","_from":"1945","_to":"only","type":"-","in":"Sep","on":"16","at":"0:00","_save":"0","letter":"-"},{"name":"Tunisia","_from":"1977","_to":"only","type":"-","in":"Apr","on":"30","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Tunisia","_from":"1977","_to":"only","type":"-","in":"Sep","on":"24","at":"0:00s","_save":"0","letter":"-"},{"name":"Tunisia","_from":"1978","_to":"only","type":"-","in":"May","on":"1","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Tunisia","_from":"1978","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00s","_save":"0","letter":"-"},{"name":"Tunisia","_from":"1988","_to":"only","type":"-","in":"Jun","on":"1","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Tunisia","_from":"1988","_to":"1990","type":"-","in":"Sep","on":"lastSun","at":"0:00s","_save":"0","letter":"-"},{"name":"Tunisia","_from":"1989","_to":"only","type":"-","in":"Mar","on":"26","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Tunisia","_from":"1990","_to":"only","type":"-","in":"May","on":"1","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Tunisia","_from":"2005","_to":"only","type":"-","in":"May","on":"1","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Tunisia","_from":"2005","_to":"only","type":"-","in":"Sep","on":"30","at":"1:00s","_save":"0","letter":"-"},{"name":"Tunisia","_from":"2006","_to":"2008","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Tunisia","_from":"2006","_to":"2008","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"0","letter":"-"}],"ArgAQ":[{"name":"ArgAQ","_from":"1964","_to":"1966","type":"-","in":"Mar","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"ArgAQ","_from":"1964","_to":"1966","type":"-","in":"Oct","on":"15","at":"0:00","_save":"1:00","letter":"S"},{"name":"ArgAQ","_from":"1967","_to":"only","type":"-","in":"Apr","on":"2","at":"0:00","_save":"0","letter":"-"},{"name":"ArgAQ","_from":"1967","_to":"1968","type":"-","in":"Oct","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"S"},{"name":"ArgAQ","_from":"1968","_to":"1969","type":"-","in":"Apr","on":"Sun>=1","at":"0:00","_save":"0","letter":"-"},{"name":"ArgAQ","_from":"1974","_to":"only","type":"-","in":"Jan","on":"23","at":"0:00","_save":"1:00","letter":"S"},{"name":"ArgAQ","_from":"1974","_to":"only","type":"-","in":"May","on":"1","at":"0:00","_save":"0","letter":"-"}],"ChileAQ":[{"name":"ChileAQ","_from":"1972","_to":"1986","type":"-","in":"Mar","on":"Sun>=9","at":"3:00u","_save":"0","letter":"-"},{"name":"ChileAQ","_from":"1974","_to":"1987","type":"-","in":"Oct","on":"Sun>=9","at":"4:00u","_save":"1:00","letter":"S"},{"name":"ChileAQ","_from":"1987","_to":"only","type":"-","in":"Apr","on":"12","at":"3:00u","_save":"0","letter":"-"},{"name":"ChileAQ","_from":"1988","_to":"1989","type":"-","in":"Mar","on":"Sun>=9","at":"3:00u","_save":"0","letter":"-"},{"name":"ChileAQ","_from":"1988","_to":"only","type":"-","in":"Oct","on":"Sun>=1","at":"4:00u","_save":"1:00","letter":"S"},{"name":"ChileAQ","_from":"1989","_to":"only","type":"-","in":"Oct","on":"Sun>=9","at":"4:00u","_save":"1:00","letter":"S"},{"name":"ChileAQ","_from":"1990","_to":"only","type":"-","in":"Mar","on":"18","at":"3:00u","_save":"0","letter":"-"},{"name":"ChileAQ","_from":"1990","_to":"only","type":"-","in":"Sep","on":"16","at":"4:00u","_save":"1:00","letter":"S"},{"name":"ChileAQ","_from":"1991","_to":"1996","type":"-","in":"Mar","on":"Sun>=9","at":"3:00u","_save":"0","letter":"-"},{"name":"ChileAQ","_from":"1991","_to":"1997","type":"-","in":"Oct","on":"Sun>=9","at":"4:00u","_save":"1:00","letter":"S"},{"name":"ChileAQ","_from":"1997","_to":"only","type":"-","in":"Mar","on":"30","at":"3:00u","_save":"0","letter":"-"},{"name":"ChileAQ","_from":"1998","_to":"only","type":"-","in":"Mar","on":"Sun>=9","at":"3:00u","_save":"0","letter":"-"},{"name":"ChileAQ","_from":"1998","_to":"only","type":"-","in":"Sep","on":"27","at":"4:00u","_save":"1:00","letter":"S"},{"name":"ChileAQ","_from":"1999","_to":"only","type":"-","in":"Apr","on":"4","at":"3:00u","_save":"0","letter":"-"},{"name":"ChileAQ","_from":"1999","_to":"2010","type":"-","in":"Oct","on":"Sun>=9","at":"4:00u","_save":"1:00","letter":"S"},{"name":"ChileAQ","_from":"2000","_to":"2007","type":"-","in":"Mar","on":"Sun>=9","at":"3:00u","_save":"0","letter":"-"},{"name":"ChileAQ","_from":"2008","_to":"only","type":"-","in":"Mar","on":"30","at":"3:00u","_save":"0","letter":"-"},{"name":"ChileAQ","_from":"2009","_to":"only","type":"-","in":"Mar","on":"Sun>=9","at":"3:00u","_save":"0","letter":"-"},{"name":"ChileAQ","_from":"2010","_to":"only","type":"-","in":"Apr","on":"Sun>=1","at":"3:00u","_save":"0","letter":"-"},{"name":"ChileAQ","_from":"2011","_to":"only","type":"-","in":"May","on":"Sun>=2","at":"3:00u","_save":"0","letter":"-"},{"name":"ChileAQ","_from":"2011","_to":"only","type":"-","in":"Aug","on":"Sun>=16","at":"4:00u","_save":"1:00","letter":"S"},{"name":"ChileAQ","_from":"2012","_to":"max","type":"-","in":"Apr","on":"Sun>=23","at":"3:00u","_save":"0","letter":"-"},{"name":"ChileAQ","_from":"2012","_to":"max","type":"-","in":"Sep","on":"Sun>=2","at":"4:00u","_save":"1:00","letter":"S"}],"NZAQ":[{"name":"NZAQ","_from":"1974","_to":"only","type":"-","in":"Nov","on":"3","at":"2:00s","_save":"1:00","letter":"D"},{"name":"NZAQ","_from":"1975","_to":"1988","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"1:00","letter":"D"},{"name":"NZAQ","_from":"1989","_to":"only","type":"-","in":"Oct","on":"8","at":"2:00s","_save":"1:00","letter":"D"},{"name":"NZAQ","_from":"1990","_to":"2006","type":"-","in":"Oct","on":"Sun>=1","at":"2:00s","_save":"1:00","letter":"D"},{"name":"NZAQ","_from":"1975","_to":"only","type":"-","in":"Feb","on":"23","at":"2:00s","_save":"0","letter":"S"},{"name":"NZAQ","_from":"1976","_to":"1989","type":"-","in":"Mar","on":"Sun>=1","at":"2:00s","_save":"0","letter":"S"},{"name":"NZAQ","_from":"1990","_to":"2007","type":"-","in":"Mar","on":"Sun>=15","at":"2:00s","_save":"0","letter":"S"},{"name":"NZAQ","_from":"2007","_to":"max","type":"-","in":"Sep","on":"lastSun","at":"2:00s","_save":"1:00","letter":"D"},{"name":"NZAQ","_from":"2008","_to":"max","type":"-","in":"Apr","on":"Sun>=1","at":"2:00s","_save":"0","letter":"S"}],"EUAsia":[{"name":"EUAsia","_from":"1981","_to":"max","type":"-","in":"Mar","on":"lastSun","at":"1:00u","_save":"1:00","letter":"S"},{"name":"EUAsia","_from":"1979","_to":"1995","type":"-","in":"Sep","on":"lastSun","at":"1:00u","_save":"0","letter":"-"},{"name":"EUAsia","_from":"1996","_to":"max","type":"-","in":"Oct","on":"lastSun","at":"1:00u","_save":"0","letter":"-"}],"E-EurAsia":[{"name":"E-EurAsia","_from":"1981","_to":"max","type":"-","in":"Mar","on":"lastSun","at":"0:00","_save":"1:00","letter":"S"},{"name":"E-EurAsia","_from":"1979","_to":"1995","type":"-","in":"Sep","on":"lastSun","at":"0:00","_save":"0","letter":"-"},{"name":"E-EurAsia","_from":"1996","_to":"max","type":"-","in":"Oct","on":"lastSun","at":"0:00","_save":"0","letter":"-"}],"RussiaAsia":[{"name":"RussiaAsia","_from":"1981","_to":"1984","type":"-","in":"Apr","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"RussiaAsia","_from":"1981","_to":"1983","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"RussiaAsia","_from":"1984","_to":"1991","type":"-","in":"Sep","on":"lastSun","at":"2:00s","_save":"0","letter":"-"},{"name":"RussiaAsia","_from":"1985","_to":"1991","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"1:00","letter":"S"},{"name":"RussiaAsia","_from":"1992","_to":"only","type":"-","in":"Mar","on":"lastSat","at":"23:00","_save":"1:00","letter":"S"},{"name":"RussiaAsia","_from":"1992","_to":"only","type":"-","in":"Sep","on":"lastSat","at":"23:00","_save":"0","letter":"-"},{"name":"RussiaAsia","_from":"1993","_to":"max","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"1:00","letter":"S"},{"name":"RussiaAsia","_from":"1993","_to":"1995","type":"-","in":"Sep","on":"lastSun","at":"2:00s","_save":"0","letter":"-"},{"name":"RussiaAsia","_from":"1996","_to":"max","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"0","letter":"-"}],"Azer":[{"name":"Azer","_from":"1997","_to":"max","type":"-","in":"Mar","on":"lastSun","at":"4:00","_save":"1:00","letter":"S"},{"name":"Azer","_from":"1997","_to":"max","type":"-","in":"Oct","on":"lastSun","at":"5:00","_save":"0","letter":"-"}],"Dhaka":[{"name":"Dhaka","_from":"2009","_to":"only","type":"-","in":"Jun","on":"19","at":"23:00","_save":"1:00","letter":"S"},{"name":"Dhaka","_from":"2009","_to":"only","type":"-","in":"Dec","on":"31","at":"23:59","_save":"0","letter":"-"}],"Shang":[{"name":"Shang","_from":"1940","_to":"only","type":"-","in":"Jun","on":"3","at":"0:00","_save":"1:00","letter":"D"},{"name":"Shang","_from":"1940","_to":"1941","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"S"},{"name":"Shang","_from":"1941","_to":"only","type":"-","in":"Mar","on":"16","at":"0:00","_save":"1:00","letter":"D"}],"PRC":[{"name":"PRC","_from":"1986","_to":"only","type":"-","in":"May","on":"4","at":"0:00","_save":"1:00","letter":"D"},{"name":"PRC","_from":"1986","_to":"1991","type":"-","in":"Sep","on":"Sun>=11","at":"0:00","_save":"0","letter":"S"},{"name":"PRC","_from":"1987","_to":"1991","type":"-","in":"Apr","on":"Sun>=10","at":"0:00","_save":"1:00","letter":"D"}],"HK":[{"name":"HK","_from":"1941","_to":"only","type":"-","in":"Apr","on":"1","at":"3:30","_save":"1:00","letter":"S"},{"name":"HK","_from":"1941","_to":"only","type":"-","in":"Sep","on":"30","at":"3:30","_save":"0","letter":"-"},{"name":"HK","_from":"1946","_to":"only","type":"-","in":"Apr","on":"20","at":"3:30","_save":"1:00","letter":"S"},{"name":"HK","_from":"1946","_to":"only","type":"-","in":"Dec","on":"1","at":"3:30","_save":"0","letter":"-"},{"name":"HK","_from":"1947","_to":"only","type":"-","in":"Apr","on":"13","at":"3:30","_save":"1:00","letter":"S"},{"name":"HK","_from":"1947","_to":"only","type":"-","in":"Dec","on":"30","at":"3:30","_save":"0","letter":"-"},{"name":"HK","_from":"1948","_to":"only","type":"-","in":"May","on":"2","at":"3:30","_save":"1:00","letter":"S"},{"name":"HK","_from":"1948","_to":"1951","type":"-","in":"Oct","on":"lastSun","at":"3:30","_save":"0","letter":"-"},{"name":"HK","_from":"1952","_to":"only","type":"-","in":"Oct","on":"25","at":"3:30","_save":"0","letter":"-"},{"name":"HK","_from":"1949","_to":"1953","type":"-","in":"Apr","on":"Sun>=1","at":"3:30","_save":"1:00","letter":"S"},{"name":"HK","_from":"1953","_to":"only","type":"-","in":"Nov","on":"1","at":"3:30","_save":"0","letter":"-"},{"name":"HK","_from":"1954","_to":"1964","type":"-","in":"Mar","on":"Sun>=18","at":"3:30","_save":"1:00","letter":"S"},{"name":"HK","_from":"1954","_to":"only","type":"-","in":"Oct","on":"31","at":"3:30","_save":"0","letter":"-"},{"name":"HK","_from":"1955","_to":"1964","type":"-","in":"Nov","on":"Sun>=1","at":"3:30","_save":"0","letter":"-"},{"name":"HK","_from":"1965","_to":"1976","type":"-","in":"Apr","on":"Sun>=16","at":"3:30","_save":"1:00","letter":"S"},{"name":"HK","_from":"1965","_to":"1976","type":"-","in":"Oct","on":"Sun>=16","at":"3:30","_save":"0","letter":"-"},{"name":"HK","_from":"1973","_to":"only","type":"-","in":"Dec","on":"30","at":"3:30","_save":"1:00","letter":"S"},{"name":"HK","_from":"1979","_to":"only","type":"-","in":"May","on":"Sun>=8","at":"3:30","_save":"1:00","letter":"S"},{"name":"HK","_from":"1979","_to":"only","type":"-","in":"Oct","on":"Sun>=16","at":"3:30","_save":"0","letter":"-"}],"Taiwan":[{"name":"Taiwan","_from":"1945","_to":"1951","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Taiwan","_from":"1945","_to":"1951","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"S"},{"name":"Taiwan","_from":"1952","_to":"only","type":"-","in":"Mar","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Taiwan","_from":"1952","_to":"1954","type":"-","in":"Nov","on":"1","at":"0:00","_save":"0","letter":"S"},{"name":"Taiwan","_from":"1953","_to":"1959","type":"-","in":"Apr","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Taiwan","_from":"1955","_to":"1961","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"S"},{"name":"Taiwan","_from":"1960","_to":"1961","type":"-","in":"Jun","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Taiwan","_from":"1974","_to":"1975","type":"-","in":"Apr","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Taiwan","_from":"1974","_to":"1975","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"S"},{"name":"Taiwan","_from":"1979","_to":"only","type":"-","in":"Jun","on":"30","at":"0:00","_save":"1:00","letter":"D"},{"name":"Taiwan","_from":"1979","_to":"only","type":"-","in":"Sep","on":"30","at":"0:00","_save":"0","letter":"S"}],"Macau":[{"name":"Macau","_from":"1961","_to":"1962","type":"-","in":"Mar","on":"Sun>=16","at":"3:30","_save":"1:00","letter":"S"},{"name":"Macau","_from":"1961","_to":"1964","type":"-","in":"Nov","on":"Sun>=1","at":"3:30","_save":"0","letter":"-"},{"name":"Macau","_from":"1963","_to":"only","type":"-","in":"Mar","on":"Sun>=16","at":"0:00","_save":"1:00","letter":"S"},{"name":"Macau","_from":"1964","_to":"only","type":"-","in":"Mar","on":"Sun>=16","at":"3:30","_save":"1:00","letter":"S"},{"name":"Macau","_from":"1965","_to":"only","type":"-","in":"Mar","on":"Sun>=16","at":"0:00","_save":"1:00","letter":"S"},{"name":"Macau","_from":"1965","_to":"only","type":"-","in":"Oct","on":"31","at":"0:00","_save":"0","letter":"-"},{"name":"Macau","_from":"1966","_to":"1971","type":"-","in":"Apr","on":"Sun>=16","at":"3:30","_save":"1:00","letter":"S"},{"name":"Macau","_from":"1966","_to":"1971","type":"-","in":"Oct","on":"Sun>=16","at":"3:30","_save":"0","letter":"-"},{"name":"Macau","_from":"1972","_to":"1974","type":"-","in":"Apr","on":"Sun>=15","at":"0:00","_save":"1:00","letter":"S"},{"name":"Macau","_from":"1972","_to":"1973","type":"-","in":"Oct","on":"Sun>=15","at":"0:00","_save":"0","letter":"-"},{"name":"Macau","_from":"1974","_to":"1977","type":"-","in":"Oct","on":"Sun>=15","at":"3:30","_save":"0","letter":"-"},{"name":"Macau","_from":"1975","_to":"1977","type":"-","in":"Apr","on":"Sun>=15","at":"3:30","_save":"1:00","letter":"S"},{"name":"Macau","_from":"1978","_to":"1980","type":"-","in":"Apr","on":"Sun>=15","at":"0:00","_save":"1:00","letter":"S"},{"name":"Macau","_from":"1978","_to":"1980","type":"-","in":"Oct","on":"Sun>=15","at":"0:00","_save":"0","letter":"-"}],"Cyprus":[{"name":"Cyprus","_from":"1975","_to":"only","type":"-","in":"Apr","on":"13","at":"0:00","_save":"1:00","letter":"S"},{"name":"Cyprus","_from":"1975","_to":"only","type":"-","in":"Oct","on":"12","at":"0:00","_save":"0","letter":"-"},{"name":"Cyprus","_from":"1976","_to":"only","type":"-","in":"May","on":"15","at":"0:00","_save":"1:00","letter":"S"},{"name":"Cyprus","_from":"1976","_to":"only","type":"-","in":"Oct","on":"11","at":"0:00","_save":"0","letter":"-"},{"name":"Cyprus","_from":"1977","_to":"1980","type":"-","in":"Apr","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Cyprus","_from":"1977","_to":"only","type":"-","in":"Sep","on":"25","at":"0:00","_save":"0","letter":"-"},{"name":"Cyprus","_from":"1978","_to":"only","type":"-","in":"Oct","on":"2","at":"0:00","_save":"0","letter":"-"},{"name":"Cyprus","_from":"1979","_to":"1997","type":"-","in":"Sep","on":"lastSun","at":"0:00","_save":"0","letter":"-"},{"name":"Cyprus","_from":"1981","_to":"1998","type":"-","in":"Mar","on":"lastSun","at":"0:00","_save":"1:00","letter":"S"}],"Iran":[{"name":"Iran","_from":"1978","_to":"1980","type":"-","in":"Mar","on":"21","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"1978","_to":"only","type":"-","in":"Oct","on":"21","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"1979","_to":"only","type":"-","in":"Sep","on":"19","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"1980","_to":"only","type":"-","in":"Sep","on":"23","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"1991","_to":"only","type":"-","in":"May","on":"3","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"1992","_to":"1995","type":"-","in":"Mar","on":"22","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"1991","_to":"1995","type":"-","in":"Sep","on":"22","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"1996","_to":"only","type":"-","in":"Mar","on":"21","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"1996","_to":"only","type":"-","in":"Sep","on":"21","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"1997","_to":"1999","type":"-","in":"Mar","on":"22","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"1997","_to":"1999","type":"-","in":"Sep","on":"22","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"2000","_to":"only","type":"-","in":"Mar","on":"21","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"2000","_to":"only","type":"-","in":"Sep","on":"21","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"2001","_to":"2003","type":"-","in":"Mar","on":"22","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"2001","_to":"2003","type":"-","in":"Sep","on":"22","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"2004","_to":"only","type":"-","in":"Mar","on":"21","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"2004","_to":"only","type":"-","in":"Sep","on":"21","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"2005","_to":"only","type":"-","in":"Mar","on":"22","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"2005","_to":"only","type":"-","in":"Sep","on":"22","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"2008","_to":"only","type":"-","in":"Mar","on":"21","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"2008","_to":"only","type":"-","in":"Sep","on":"21","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"2009","_to":"2011","type":"-","in":"Mar","on":"22","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"2009","_to":"2011","type":"-","in":"Sep","on":"22","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"2012","_to":"only","type":"-","in":"Mar","on":"21","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"2012","_to":"only","type":"-","in":"Sep","on":"21","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"2013","_to":"2015","type":"-","in":"Mar","on":"22","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"2013","_to":"2015","type":"-","in":"Sep","on":"22","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"2016","_to":"only","type":"-","in":"Mar","on":"21","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"2016","_to":"only","type":"-","in":"Sep","on":"21","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"2017","_to":"2019","type":"-","in":"Mar","on":"22","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"2017","_to":"2019","type":"-","in":"Sep","on":"22","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"2020","_to":"only","type":"-","in":"Mar","on":"21","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"2020","_to":"only","type":"-","in":"Sep","on":"21","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"2021","_to":"2023","type":"-","in":"Mar","on":"22","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"2021","_to":"2023","type":"-","in":"Sep","on":"22","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"2024","_to":"only","type":"-","in":"Mar","on":"21","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"2024","_to":"only","type":"-","in":"Sep","on":"21","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"2025","_to":"2027","type":"-","in":"Mar","on":"22","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"2025","_to":"2027","type":"-","in":"Sep","on":"22","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"2028","_to":"2029","type":"-","in":"Mar","on":"21","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"2028","_to":"2029","type":"-","in":"Sep","on":"21","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"2030","_to":"2031","type":"-","in":"Mar","on":"22","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"2030","_to":"2031","type":"-","in":"Sep","on":"22","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"2032","_to":"2033","type":"-","in":"Mar","on":"21","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"2032","_to":"2033","type":"-","in":"Sep","on":"21","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"2034","_to":"2035","type":"-","in":"Mar","on":"22","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"2034","_to":"2035","type":"-","in":"Sep","on":"22","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"2036","_to":"2037","type":"-","in":"Mar","on":"21","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"2036","_to":"2037","type":"-","in":"Sep","on":"21","at":"0:00","_save":"0","letter":"S"}],"Iraq":[{"name":"Iraq","_from":"1982","_to":"only","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iraq","_from":"1982","_to":"1984","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"S"},{"name":"Iraq","_from":"1983","_to":"only","type":"-","in":"Mar","on":"31","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iraq","_from":"1984","_to":"1985","type":"-","in":"Apr","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iraq","_from":"1985","_to":"1990","type":"-","in":"Sep","on":"lastSun","at":"1:00s","_save":"0","letter":"S"},{"name":"Iraq","_from":"1986","_to":"1990","type":"-","in":"Mar","on":"lastSun","at":"1:00s","_save":"1:00","letter":"D"},{"name":"Iraq","_from":"1991","_to":"2007","type":"-","in":"Apr","on":"1","at":"3:00s","_save":"1:00","letter":"D"},{"name":"Iraq","_from":"1991","_to":"2007","type":"-","in":"Oct","on":"1","at":"3:00s","_save":"0","letter":"S"}],"Zion":[{"name":"Zion","_from":"1940","_to":"only","type":"-","in":"Jun","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1942","_to":"1944","type":"-","in":"Nov","on":"1","at":"0:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1943","_to":"only","type":"-","in":"Apr","on":"1","at":"2:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1944","_to":"only","type":"-","in":"Apr","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1945","_to":"only","type":"-","in":"Apr","on":"16","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1945","_to":"only","type":"-","in":"Nov","on":"1","at":"2:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1946","_to":"only","type":"-","in":"Apr","on":"16","at":"2:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1946","_to":"only","type":"-","in":"Nov","on":"1","at":"0:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1948","_to":"only","type":"-","in":"May","on":"23","at":"0:00","_save":"2:00","letter":"DD"},{"name":"Zion","_from":"1948","_to":"only","type":"-","in":"Sep","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1948","_to":"1949","type":"-","in":"Nov","on":"1","at":"2:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1949","_to":"only","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1950","_to":"only","type":"-","in":"Apr","on":"16","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1950","_to":"only","type":"-","in":"Sep","on":"15","at":"3:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1951","_to":"only","type":"-","in":"Apr","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1951","_to":"only","type":"-","in":"Nov","on":"11","at":"3:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1952","_to":"only","type":"-","in":"Apr","on":"20","at":"2:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1952","_to":"only","type":"-","in":"Oct","on":"19","at":"3:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1953","_to":"only","type":"-","in":"Apr","on":"12","at":"2:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1953","_to":"only","type":"-","in":"Sep","on":"13","at":"3:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1954","_to":"only","type":"-","in":"Jun","on":"13","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1954","_to":"only","type":"-","in":"Sep","on":"12","at":"0:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1955","_to":"only","type":"-","in":"Jun","on":"11","at":"2:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1955","_to":"only","type":"-","in":"Sep","on":"11","at":"0:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1956","_to":"only","type":"-","in":"Jun","on":"3","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1956","_to":"only","type":"-","in":"Sep","on":"30","at":"3:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1957","_to":"only","type":"-","in":"Apr","on":"29","at":"2:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1957","_to":"only","type":"-","in":"Sep","on":"22","at":"0:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1974","_to":"only","type":"-","in":"Jul","on":"7","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1974","_to":"only","type":"-","in":"Oct","on":"13","at":"0:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1975","_to":"only","type":"-","in":"Apr","on":"20","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1975","_to":"only","type":"-","in":"Aug","on":"31","at":"0:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1985","_to":"only","type":"-","in":"Apr","on":"14","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1985","_to":"only","type":"-","in":"Sep","on":"15","at":"0:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1986","_to":"only","type":"-","in":"May","on":"18","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1986","_to":"only","type":"-","in":"Sep","on":"7","at":"0:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1987","_to":"only","type":"-","in":"Apr","on":"15","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1987","_to":"only","type":"-","in":"Sep","on":"13","at":"0:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1988","_to":"only","type":"-","in":"Apr","on":"9","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1988","_to":"only","type":"-","in":"Sep","on":"3","at":"0:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1989","_to":"only","type":"-","in":"Apr","on":"30","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1989","_to":"only","type":"-","in":"Sep","on":"3","at":"0:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1990","_to":"only","type":"-","in":"Mar","on":"25","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1990","_to":"only","type":"-","in":"Aug","on":"26","at":"0:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1991","_to":"only","type":"-","in":"Mar","on":"24","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1991","_to":"only","type":"-","in":"Sep","on":"1","at":"0:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1992","_to":"only","type":"-","in":"Mar","on":"29","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1992","_to":"only","type":"-","in":"Sep","on":"6","at":"0:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1993","_to":"only","type":"-","in":"Apr","on":"2","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1993","_to":"only","type":"-","in":"Sep","on":"5","at":"0:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1994","_to":"only","type":"-","in":"Apr","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1994","_to":"only","type":"-","in":"Aug","on":"28","at":"0:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1995","_to":"only","type":"-","in":"Mar","on":"31","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1995","_to":"only","type":"-","in":"Sep","on":"3","at":"0:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1996","_to":"only","type":"-","in":"Mar","on":"15","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1996","_to":"only","type":"-","in":"Sep","on":"16","at":"0:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1997","_to":"only","type":"-","in":"Mar","on":"21","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1997","_to":"only","type":"-","in":"Sep","on":"14","at":"0:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1998","_to":"only","type":"-","in":"Mar","on":"20","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1998","_to":"only","type":"-","in":"Sep","on":"6","at":"0:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1999","_to":"only","type":"-","in":"Apr","on":"2","at":"2:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1999","_to":"only","type":"-","in":"Sep","on":"3","at":"2:00","_save":"0","letter":"S"},{"name":"Zion","_from":"2000","_to":"only","type":"-","in":"Apr","on":"14","at":"2:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"2000","_to":"only","type":"-","in":"Oct","on":"6","at":"1:00","_save":"0","letter":"S"},{"name":"Zion","_from":"2001","_to":"only","type":"-","in":"Apr","on":"9","at":"1:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"2001","_to":"only","type":"-","in":"Sep","on":"24","at":"1:00","_save":"0","letter":"S"},{"name":"Zion","_from":"2002","_to":"only","type":"-","in":"Mar","on":"29","at":"1:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"2002","_to":"only","type":"-","in":"Oct","on":"7","at":"1:00","_save":"0","letter":"S"},{"name":"Zion","_from":"2003","_to":"only","type":"-","in":"Mar","on":"28","at":"1:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"2003","_to":"only","type":"-","in":"Oct","on":"3","at":"1:00","_save":"0","letter":"S"},{"name":"Zion","_from":"2004","_to":"only","type":"-","in":"Apr","on":"7","at":"1:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"2004","_to":"only","type":"-","in":"Sep","on":"22","at":"1:00","_save":"0","letter":"S"},{"name":"Zion","_from":"2005","_to":"only","type":"-","in":"Apr","on":"1","at":"2:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"2005","_to":"only","type":"-","in":"Oct","on":"9","at":"2:00","_save":"0","letter":"S"},{"name":"Zion","_from":"2006","_to":"2010","type":"-","in":"Mar","on":"Fri>=26","at":"2:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"2006","_to":"only","type":"-","in":"Oct","on":"1","at":"2:00","_save":"0","letter":"S"},{"name":"Zion","_from":"2007","_to":"only","type":"-","in":"Sep","on":"16","at":"2:00","_save":"0","letter":"S"},{"name":"Zion","_from":"2008","_to":"only","type":"-","in":"Oct","on":"5","at":"2:00","_save":"0","letter":"S"},{"name":"Zion","_from":"2009","_to":"only","type":"-","in":"Sep","on":"27","at":"2:00","_save":"0","letter":"S"},{"name":"Zion","_from":"2010","_to":"only","type":"-","in":"Sep","on":"12","at":"2:00","_save":"0","letter":"S"},{"name":"Zion","_from":"2011","_to":"only","type":"-","in":"Apr","on":"1","at":"2:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"2011","_to":"only","type":"-","in":"Oct","on":"2","at":"2:00","_save":"0","letter":"S"},{"name":"Zion","_from":"2012","_to":"only","type":"-","in":"Mar","on":"Fri>=26","at":"2:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"2012","_to":"only","type":"-","in":"Sep","on":"23","at":"2:00","_save":"0","letter":"S"},{"name":"Zion","_from":"2013","_to":"max","type":"-","in":"Mar","on":"Fri>=23","at":"2:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"2013","_to":"max","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"}],"Japan":[{"name":"Japan","_from":"1948","_to":"only","type":"-","in":"May","on":"Sun>=1","at":"2:00","_save":"1:00","letter":"D"},{"name":"Japan","_from":"1948","_to":"1951","type":"-","in":"Sep","on":"Sat>=8","at":"2:00","_save":"0","letter":"S"},{"name":"Japan","_from":"1949","_to":"only","type":"-","in":"Apr","on":"Sun>=1","at":"2:00","_save":"1:00","letter":"D"},{"name":"Japan","_from":"1950","_to":"1951","type":"-","in":"May","on":"Sun>=1","at":"2:00","_save":"1:00","letter":"D"}],"Jordan":[{"name":"Jordan","_from":"1973","_to":"only","type":"-","in":"Jun","on":"6","at":"0:00","_save":"1:00","letter":"S"},{"name":"Jordan","_from":"1973","_to":"1975","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Jordan","_from":"1974","_to":"1977","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Jordan","_from":"1976","_to":"only","type":"-","in":"Nov","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Jordan","_from":"1977","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Jordan","_from":"1978","_to":"only","type":"-","in":"Apr","on":"30","at":"0:00","_save":"1:00","letter":"S"},{"name":"Jordan","_from":"1978","_to":"only","type":"-","in":"Sep","on":"30","at":"0:00","_save":"0","letter":"-"},{"name":"Jordan","_from":"1985","_to":"only","type":"-","in":"Apr","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Jordan","_from":"1985","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Jordan","_from":"1986","_to":"1988","type":"-","in":"Apr","on":"Fri>=1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Jordan","_from":"1986","_to":"1990","type":"-","in":"Oct","on":"Fri>=1","at":"0:00","_save":"0","letter":"-"},{"name":"Jordan","_from":"1989","_to":"only","type":"-","in":"May","on":"8","at":"0:00","_save":"1:00","letter":"S"},{"name":"Jordan","_from":"1990","_to":"only","type":"-","in":"Apr","on":"27","at":"0:00","_save":"1:00","letter":"S"},{"name":"Jordan","_from":"1991","_to":"only","type":"-","in":"Apr","on":"17","at":"0:00","_save":"1:00","letter":"S"},{"name":"Jordan","_from":"1991","_to":"only","type":"-","in":"Sep","on":"27","at":"0:00","_save":"0","letter":"-"},{"name":"Jordan","_from":"1992","_to":"only","type":"-","in":"Apr","on":"10","at":"0:00","_save":"1:00","letter":"S"},{"name":"Jordan","_from":"1992","_to":"1993","type":"-","in":"Oct","on":"Fri>=1","at":"0:00","_save":"0","letter":"-"},{"name":"Jordan","_from":"1993","_to":"1998","type":"-","in":"Apr","on":"Fri>=1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Jordan","_from":"1994","_to":"only","type":"-","in":"Sep","on":"Fri>=15","at":"0:00","_save":"0","letter":"-"},{"name":"Jordan","_from":"1995","_to":"1998","type":"-","in":"Sep","on":"Fri>=15","at":"0:00s","_save":"0","letter":"-"},{"name":"Jordan","_from":"1999","_to":"only","type":"-","in":"Jul","on":"1","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Jordan","_from":"1999","_to":"2002","type":"-","in":"Sep","on":"lastFri","at":"0:00s","_save":"0","letter":"-"},{"name":"Jordan","_from":"2000","_to":"2001","type":"-","in":"Mar","on":"lastThu","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Jordan","_from":"2002","_to":"max","type":"-","in":"Mar","on":"lastThu","at":"24:00","_save":"1:00","letter":"S"},{"name":"Jordan","_from":"2003","_to":"only","type":"-","in":"Oct","on":"24","at":"0:00s","_save":"0","letter":"-"},{"name":"Jordan","_from":"2004","_to":"only","type":"-","in":"Oct","on":"15","at":"0:00s","_save":"0","letter":"-"},{"name":"Jordan","_from":"2005","_to":"only","type":"-","in":"Sep","on":"lastFri","at":"0:00s","_save":"0","letter":"-"},{"name":"Jordan","_from":"2006","_to":"2011","type":"-","in":"Oct","on":"lastFri","at":"0:00s","_save":"0","letter":"-"},{"name":"Jordan","_from":"2013","_to":"max","type":"-","in":"Oct","on":"lastFri","at":"0:00s","_save":"0","letter":"-"}],"Kyrgyz":[{"name":"Kyrgyz","_from":"1992","_to":"1996","type":"-","in":"Apr","on":"Sun>=7","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Kyrgyz","_from":"1992","_to":"1996","type":"-","in":"Sep","on":"lastSun","at":"0:00","_save":"0","letter":"-"},{"name":"Kyrgyz","_from":"1997","_to":"2005","type":"-","in":"Mar","on":"lastSun","at":"2:30","_save":"1:00","letter":"S"},{"name":"Kyrgyz","_from":"1997","_to":"2004","type":"-","in":"Oct","on":"lastSun","at":"2:30","_save":"0","letter":"-"}],"ROK":[{"name":"ROK","_from":"1960","_to":"only","type":"-","in":"May","on":"15","at":"0:00","_save":"1:00","letter":"D"},{"name":"ROK","_from":"1960","_to":"only","type":"-","in":"Sep","on":"13","at":"0:00","_save":"0","letter":"S"},{"name":"ROK","_from":"1987","_to":"1988","type":"-","in":"May","on":"Sun>=8","at":"0:00","_save":"1:00","letter":"D"},{"name":"ROK","_from":"1987","_to":"1988","type":"-","in":"Oct","on":"Sun>=8","at":"0:00","_save":"0","letter":"S"}],"Lebanon":[{"name":"Lebanon","_from":"1920","_to":"only","type":"-","in":"Mar","on":"28","at":"0:00","_save":"1:00","letter":"S"},{"name":"Lebanon","_from":"1920","_to":"only","type":"-","in":"Oct","on":"25","at":"0:00","_save":"0","letter":"-"},{"name":"Lebanon","_from":"1921","_to":"only","type":"-","in":"Apr","on":"3","at":"0:00","_save":"1:00","letter":"S"},{"name":"Lebanon","_from":"1921","_to":"only","type":"-","in":"Oct","on":"3","at":"0:00","_save":"0","letter":"-"},{"name":"Lebanon","_from":"1922","_to":"only","type":"-","in":"Mar","on":"26","at":"0:00","_save":"1:00","letter":"S"},{"name":"Lebanon","_from":"1922","_to":"only","type":"-","in":"Oct","on":"8","at":"0:00","_save":"0","letter":"-"},{"name":"Lebanon","_from":"1923","_to":"only","type":"-","in":"Apr","on":"22","at":"0:00","_save":"1:00","letter":"S"},{"name":"Lebanon","_from":"1923","_to":"only","type":"-","in":"Sep","on":"16","at":"0:00","_save":"0","letter":"-"},{"name":"Lebanon","_from":"1957","_to":"1961","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Lebanon","_from":"1957","_to":"1961","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Lebanon","_from":"1972","_to":"only","type":"-","in":"Jun","on":"22","at":"0:00","_save":"1:00","letter":"S"},{"name":"Lebanon","_from":"1972","_to":"1977","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Lebanon","_from":"1973","_to":"1977","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Lebanon","_from":"1978","_to":"only","type":"-","in":"Apr","on":"30","at":"0:00","_save":"1:00","letter":"S"},{"name":"Lebanon","_from":"1978","_to":"only","type":"-","in":"Sep","on":"30","at":"0:00","_save":"0","letter":"-"},{"name":"Lebanon","_from":"1984","_to":"1987","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Lebanon","_from":"1984","_to":"1991","type":"-","in":"Oct","on":"16","at":"0:00","_save":"0","letter":"-"},{"name":"Lebanon","_from":"1988","_to":"only","type":"-","in":"Jun","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Lebanon","_from":"1989","_to":"only","type":"-","in":"May","on":"10","at":"0:00","_save":"1:00","letter":"S"},{"name":"Lebanon","_from":"1990","_to":"1992","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Lebanon","_from":"1992","_to":"only","type":"-","in":"Oct","on":"4","at":"0:00","_save":"0","letter":"-"},{"name":"Lebanon","_from":"1993","_to":"max","type":"-","in":"Mar","on":"lastSun","at":"0:00","_save":"1:00","letter":"S"},{"name":"Lebanon","_from":"1993","_to":"1998","type":"-","in":"Sep","on":"lastSun","at":"0:00","_save":"0","letter":"-"},{"name":"Lebanon","_from":"1999","_to":"max","type":"-","in":"Oct","on":"lastSun","at":"0:00","_save":"0","letter":"-"}],"NBorneo":[{"name":"NBorneo","_from":"1935","_to":"1941","type":"-","in":"Sep","on":"14","at":"0:00","_save":"0:20","letter":"TS"},{"name":"NBorneo","_from":"1935","_to":"1941","type":"-","in":"Dec","on":"14","at":"0:00","_save":"0","letter":"-"}],"Mongol":[{"name":"Mongol","_from":"1983","_to":"1984","type":"-","in":"Apr","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Mongol","_from":"1983","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Mongol","_from":"1985","_to":"1998","type":"-","in":"Mar","on":"lastSun","at":"0:00","_save":"1:00","letter":"S"},{"name":"Mongol","_from":"1984","_to":"1998","type":"-","in":"Sep","on":"lastSun","at":"0:00","_save":"0","letter":"-"},{"name":"Mongol","_from":"2001","_to":"only","type":"-","in":"Apr","on":"lastSat","at":"2:00","_save":"1:00","letter":"S"},{"name":"Mongol","_from":"2001","_to":"2006","type":"-","in":"Sep","on":"lastSat","at":"2:00","_save":"0","letter":"-"},{"name":"Mongol","_from":"2002","_to":"2006","type":"-","in":"Mar","on":"lastSat","at":"2:00","_save":"1:00","letter":"S"}],"Pakistan":[{"name":"Pakistan","_from":"2002","_to":"only","type":"-","in":"Apr","on":"Sun>=2","at":"0:01","_save":"1:00","letter":"S"},{"name":"Pakistan","_from":"2002","_to":"only","type":"-","in":"Oct","on":"Sun>=2","at":"0:01","_save":"0","letter":"-"},{"name":"Pakistan","_from":"2008","_to":"only","type":"-","in":"Jun","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Pakistan","_from":"2008","_to":"only","type":"-","in":"Nov","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Pakistan","_from":"2009","_to":"only","type":"-","in":"Apr","on":"15","at":"0:00","_save":"1:00","letter":"S"},{"name":"Pakistan","_from":"2009","_to":"only","type":"-","in":"Nov","on":"1","at":"0:00","_save":"0","letter":"-"}],"EgyptAsia":[{"name":"EgyptAsia","_from":"1957","_to":"only","type":"-","in":"May","on":"10","at":"0:00","_save":"1:00","letter":"S"},{"name":"EgyptAsia","_from":"1957","_to":"1958","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"EgyptAsia","_from":"1958","_to":"only","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"EgyptAsia","_from":"1959","_to":"1967","type":"-","in":"May","on":"1","at":"1:00","_save":"1:00","letter":"S"},{"name":"EgyptAsia","_from":"1959","_to":"1965","type":"-","in":"Sep","on":"30","at":"3:00","_save":"0","letter":"-"},{"name":"EgyptAsia","_from":"1966","_to":"only","type":"-","in":"Oct","on":"1","at":"3:00","_save":"0","letter":"-"}],"Palestine":[{"name":"Palestine","_from":"1999","_to":"2005","type":"-","in":"Apr","on":"Fri>=15","at":"0:00","_save":"1:00","letter":"S"},{"name":"Palestine","_from":"1999","_to":"2003","type":"-","in":"Oct","on":"Fri>=15","at":"0:00","_save":"0","letter":"-"},{"name":"Palestine","_from":"2004","_to":"only","type":"-","in":"Oct","on":"1","at":"1:00","_save":"0","letter":"-"},{"name":"Palestine","_from":"2005","_to":"only","type":"-","in":"Oct","on":"4","at":"2:00","_save":"0","letter":"-"},{"name":"Palestine","_from":"2006","_to":"2007","type":"-","in":"Apr","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Palestine","_from":"2006","_to":"only","type":"-","in":"Sep","on":"22","at":"0:00","_save":"0","letter":"-"},{"name":"Palestine","_from":"2007","_to":"only","type":"-","in":"Sep","on":"Thu>=8","at":"2:00","_save":"0","letter":"-"},{"name":"Palestine","_from":"2008","_to":"2009","type":"-","in":"Mar","on":"lastFri","at":"0:00","_save":"1:00","letter":"S"},{"name":"Palestine","_from":"2008","_to":"only","type":"-","in":"Sep","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Palestine","_from":"2009","_to":"only","type":"-","in":"Sep","on":"Fri>=1","at":"1:00","_save":"0","letter":"-"},{"name":"Palestine","_from":"2010","_to":"only","type":"-","in":"Mar","on":"26","at":"0:00","_save":"1:00","letter":"S"},{"name":"Palestine","_from":"2010","_to":"only","type":"-","in":"Aug","on":"11","at":"0:00","_save":"0","letter":"-"},{"name":"Palestine","_from":"2011","_to":"only","type":"-","in":"Apr","on":"1","at":"0:01","_save":"1:00","letter":"S"},{"name":"Palestine","_from":"2011","_to":"only","type":"-","in":"Aug","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Palestine","_from":"2011","_to":"only","type":"-","in":"Aug","on":"30","at":"0:00","_save":"1:00","letter":"S"},{"name":"Palestine","_from":"2011","_to":"only","type":"-","in":"Sep","on":"30","at":"0:00","_save":"0","letter":"-"},{"name":"Palestine","_from":"2012","_to":"max","type":"-","in":"Mar","on":"lastThu","at":"24:00","_save":"1:00","letter":"S"},{"name":"Palestine","_from":"2012","_to":"max","type":"-","in":"Sep","on":"Fri>=21","at":"1:00","_save":"0","letter":"-"}],"Phil":[{"name":"Phil","_from":"1936","_to":"only","type":"-","in":"Nov","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Phil","_from":"1937","_to":"only","type":"-","in":"Feb","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Phil","_from":"1954","_to":"only","type":"-","in":"Apr","on":"12","at":"0:00","_save":"1:00","letter":"S"},{"name":"Phil","_from":"1954","_to":"only","type":"-","in":"Jul","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Phil","_from":"1978","_to":"only","type":"-","in":"Mar","on":"22","at":"0:00","_save":"1:00","letter":"S"},{"name":"Phil","_from":"1978","_to":"only","type":"-","in":"Sep","on":"21","at":"0:00","_save":"0","letter":"-"}],"Syria":[{"name":"Syria","_from":"1920","_to":"1923","type":"-","in":"Apr","on":"Sun>=15","at":"2:00","_save":"1:00","letter":"S"},{"name":"Syria","_from":"1920","_to":"1923","type":"-","in":"Oct","on":"Sun>=1","at":"2:00","_save":"0","letter":"-"},{"name":"Syria","_from":"1962","_to":"only","type":"-","in":"Apr","on":"29","at":"2:00","_save":"1:00","letter":"S"},{"name":"Syria","_from":"1962","_to":"only","type":"-","in":"Oct","on":"1","at":"2:00","_save":"0","letter":"-"},{"name":"Syria","_from":"1963","_to":"1965","type":"-","in":"May","on":"1","at":"2:00","_save":"1:00","letter":"S"},{"name":"Syria","_from":"1963","_to":"only","type":"-","in":"Sep","on":"30","at":"2:00","_save":"0","letter":"-"},{"name":"Syria","_from":"1964","_to":"only","type":"-","in":"Oct","on":"1","at":"2:00","_save":"0","letter":"-"},{"name":"Syria","_from":"1965","_to":"only","type":"-","in":"Sep","on":"30","at":"2:00","_save":"0","letter":"-"},{"name":"Syria","_from":"1966","_to":"only","type":"-","in":"Apr","on":"24","at":"2:00","_save":"1:00","letter":"S"},{"name":"Syria","_from":"1966","_to":"1976","type":"-","in":"Oct","on":"1","at":"2:00","_save":"0","letter":"-"},{"name":"Syria","_from":"1967","_to":"1978","type":"-","in":"May","on":"1","at":"2:00","_save":"1:00","letter":"S"},{"name":"Syria","_from":"1977","_to":"1978","type":"-","in":"Sep","on":"1","at":"2:00","_save":"0","letter":"-"},{"name":"Syria","_from":"1983","_to":"1984","type":"-","in":"Apr","on":"9","at":"2:00","_save":"1:00","letter":"S"},{"name":"Syria","_from":"1983","_to":"1984","type":"-","in":"Oct","on":"1","at":"2:00","_save":"0","letter":"-"},{"name":"Syria","_from":"1986","_to":"only","type":"-","in":"Feb","on":"16","at":"2:00","_save":"1:00","letter":"S"},{"name":"Syria","_from":"1986","_to":"only","type":"-","in":"Oct","on":"9","at":"2:00","_save":"0","letter":"-"},{"name":"Syria","_from":"1987","_to":"only","type":"-","in":"Mar","on":"1","at":"2:00","_save":"1:00","letter":"S"},{"name":"Syria","_from":"1987","_to":"1988","type":"-","in":"Oct","on":"31","at":"2:00","_save":"0","letter":"-"},{"name":"Syria","_from":"1988","_to":"only","type":"-","in":"Mar","on":"15","at":"2:00","_save":"1:00","letter":"S"},{"name":"Syria","_from":"1989","_to":"only","type":"-","in":"Mar","on":"31","at":"2:00","_save":"1:00","letter":"S"},{"name":"Syria","_from":"1989","_to":"only","type":"-","in":"Oct","on":"1","at":"2:00","_save":"0","letter":"-"},{"name":"Syria","_from":"1990","_to":"only","type":"-","in":"Apr","on":"1","at":"2:00","_save":"1:00","letter":"S"},{"name":"Syria","_from":"1990","_to":"only","type":"-","in":"Sep","on":"30","at":"2:00","_save":"0","letter":"-"},{"name":"Syria","_from":"1991","_to":"only","type":"-","in":"Apr","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Syria","_from":"1991","_to":"1992","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Syria","_from":"1992","_to":"only","type":"-","in":"Apr","on":"8","at":"0:00","_save":"1:00","letter":"S"},{"name":"Syria","_from":"1993","_to":"only","type":"-","in":"Mar","on":"26","at":"0:00","_save":"1:00","letter":"S"},{"name":"Syria","_from":"1993","_to":"only","type":"-","in":"Sep","on":"25","at":"0:00","_save":"0","letter":"-"},{"name":"Syria","_from":"1994","_to":"1996","type":"-","in":"Apr","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Syria","_from":"1994","_to":"2005","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Syria","_from":"1997","_to":"1998","type":"-","in":"Mar","on":"lastMon","at":"0:00","_save":"1:00","letter":"S"},{"name":"Syria","_from":"1999","_to":"2006","type":"-","in":"Apr","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Syria","_from":"2006","_to":"only","type":"-","in":"Sep","on":"22","at":"0:00","_save":"0","letter":"-"},{"name":"Syria","_from":"2007","_to":"only","type":"-","in":"Mar","on":"lastFri","at":"0:00","_save":"1:00","letter":"S"},{"name":"Syria","_from":"2007","_to":"only","type":"-","in":"Nov","on":"Fri>=1","at":"0:00","_save":"0","letter":"-"},{"name":"Syria","_from":"2008","_to":"only","type":"-","in":"Apr","on":"Fri>=1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Syria","_from":"2008","_to":"only","type":"-","in":"Nov","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Syria","_from":"2009","_to":"only","type":"-","in":"Mar","on":"lastFri","at":"0:00","_save":"1:00","letter":"S"},{"name":"Syria","_from":"2010","_to":"2011","type":"-","in":"Apr","on":"Fri>=1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Syria","_from":"2012","_to":"max","type":"-","in":"Mar","on":"lastFri","at":"0:00","_save":"1:00","letter":"S"},{"name":"Syria","_from":"2009","_to":"max","type":"-","in":"Oct","on":"lastFri","at":"0:00","_save":"0","letter":"-"}],"Aus":[{"name":"Aus","_from":"1917","_to":"only","type":"-","in":"Jan","on":"1","at":"0:01","_save":"1:00","letter":"-"},{"name":"Aus","_from":"1917","_to":"only","type":"-","in":"Mar","on":"25","at":"2:00","_save":"0","letter":"-"},{"name":"Aus","_from":"1942","_to":"only","type":"-","in":"Jan","on":"1","at":"2:00","_save":"1:00","letter":"-"},{"name":"Aus","_from":"1942","_to":"only","type":"-","in":"Mar","on":"29","at":"2:00","_save":"0","letter":"-"},{"name":"Aus","_from":"1942","_to":"only","type":"-","in":"Sep","on":"27","at":"2:00","_save":"1:00","letter":"-"},{"name":"Aus","_from":"1943","_to":"1944","type":"-","in":"Mar","on":"lastSun","at":"2:00","_save":"0","letter":"-"},{"name":"Aus","_from":"1943","_to":"only","type":"-","in":"Oct","on":"3","at":"2:00","_save":"1:00","letter":"-"}],"AW":[{"name":"AW","_from":"1974","_to":"only","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AW","_from":"1975","_to":"only","type":"-","in":"Mar","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"AW","_from":"1983","_to":"only","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AW","_from":"1984","_to":"only","type":"-","in":"Mar","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"AW","_from":"1991","_to":"only","type":"-","in":"Nov","on":"17","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AW","_from":"1992","_to":"only","type":"-","in":"Mar","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"AW","_from":"2006","_to":"only","type":"-","in":"Dec","on":"3","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AW","_from":"2007","_to":"2009","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"0","letter":"-"},{"name":"AW","_from":"2007","_to":"2008","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"1:00","letter":"-"}],"AQ":[{"name":"AQ","_from":"1971","_to":"only","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AQ","_from":"1972","_to":"only","type":"-","in":"Feb","on":"lastSun","at":"2:00s","_save":"0","letter":"-"},{"name":"AQ","_from":"1989","_to":"1991","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AQ","_from":"1990","_to":"1992","type":"-","in":"Mar","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"}],"Holiday":[{"name":"Holiday","_from":"1992","_to":"1993","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"1:00","letter":"-"},{"name":"Holiday","_from":"1993","_to":"1994","type":"-","in":"Mar","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"}],"AS":[{"name":"AS","_from":"1971","_to":"1985","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AS","_from":"1986","_to":"only","type":"-","in":"Oct","on":"19","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AS","_from":"1987","_to":"2007","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AS","_from":"1972","_to":"only","type":"-","in":"Feb","on":"27","at":"2:00s","_save":"0","letter":"-"},{"name":"AS","_from":"1973","_to":"1985","type":"-","in":"Mar","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"AS","_from":"1986","_to":"1990","type":"-","in":"Mar","on":"Sun>=15","at":"2:00s","_save":"0","letter":"-"},{"name":"AS","_from":"1991","_to":"only","type":"-","in":"Mar","on":"3","at":"2:00s","_save":"0","letter":"-"},{"name":"AS","_from":"1992","_to":"only","type":"-","in":"Mar","on":"22","at":"2:00s","_save":"0","letter":"-"},{"name":"AS","_from":"1993","_to":"only","type":"-","in":"Mar","on":"7","at":"2:00s","_save":"0","letter":"-"},{"name":"AS","_from":"1994","_to":"only","type":"-","in":"Mar","on":"20","at":"2:00s","_save":"0","letter":"-"},{"name":"AS","_from":"1995","_to":"2005","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"0","letter":"-"},{"name":"AS","_from":"2006","_to":"only","type":"-","in":"Apr","on":"2","at":"2:00s","_save":"0","letter":"-"},{"name":"AS","_from":"2007","_to":"only","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"0","letter":"-"},{"name":"AS","_from":"2008","_to":"max","type":"-","in":"Apr","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"AS","_from":"2008","_to":"max","type":"-","in":"Oct","on":"Sun>=1","at":"2:00s","_save":"1:00","letter":"-"}],"AT":[{"name":"AT","_from":"1967","_to":"only","type":"-","in":"Oct","on":"Sun>=1","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AT","_from":"1968","_to":"only","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"0","letter":"-"},{"name":"AT","_from":"1968","_to":"1985","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AT","_from":"1969","_to":"1971","type":"-","in":"Mar","on":"Sun>=8","at":"2:00s","_save":"0","letter":"-"},{"name":"AT","_from":"1972","_to":"only","type":"-","in":"Feb","on":"lastSun","at":"2:00s","_save":"0","letter":"-"},{"name":"AT","_from":"1973","_to":"1981","type":"-","in":"Mar","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"AT","_from":"1982","_to":"1983","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"0","letter":"-"},{"name":"AT","_from":"1984","_to":"1986","type":"-","in":"Mar","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"AT","_from":"1986","_to":"only","type":"-","in":"Oct","on":"Sun>=15","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AT","_from":"1987","_to":"1990","type":"-","in":"Mar","on":"Sun>=15","at":"2:00s","_save":"0","letter":"-"},{"name":"AT","_from":"1987","_to":"only","type":"-","in":"Oct","on":"Sun>=22","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AT","_from":"1988","_to":"1990","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AT","_from":"1991","_to":"1999","type":"-","in":"Oct","on":"Sun>=1","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AT","_from":"1991","_to":"2005","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"0","letter":"-"},{"name":"AT","_from":"2000","_to":"only","type":"-","in":"Aug","on":"lastSun","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AT","_from":"2001","_to":"max","type":"-","in":"Oct","on":"Sun>=1","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AT","_from":"2006","_to":"only","type":"-","in":"Apr","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"AT","_from":"2007","_to":"only","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"0","letter":"-"},{"name":"AT","_from":"2008","_to":"max","type":"-","in":"Apr","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"}],"AV":[{"name":"AV","_from":"1971","_to":"1985","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AV","_from":"1972","_to":"only","type":"-","in":"Feb","on":"lastSun","at":"2:00s","_save":"0","letter":"-"},{"name":"AV","_from":"1973","_to":"1985","type":"-","in":"Mar","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"AV","_from":"1986","_to":"1990","type":"-","in":"Mar","on":"Sun>=15","at":"2:00s","_save":"0","letter":"-"},{"name":"AV","_from":"1986","_to":"1987","type":"-","in":"Oct","on":"Sun>=15","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AV","_from":"1988","_to":"1999","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AV","_from":"1991","_to":"1994","type":"-","in":"Mar","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"AV","_from":"1995","_to":"2005","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"0","letter":"-"},{"name":"AV","_from":"2000","_to":"only","type":"-","in":"Aug","on":"lastSun","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AV","_from":"2001","_to":"2007","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AV","_from":"2006","_to":"only","type":"-","in":"Apr","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"AV","_from":"2007","_to":"only","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"0","letter":"-"},{"name":"AV","_from":"2008","_to":"max","type":"-","in":"Apr","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"AV","_from":"2008","_to":"max","type":"-","in":"Oct","on":"Sun>=1","at":"2:00s","_save":"1:00","letter":"-"}],"AN":[{"name":"AN","_from":"1971","_to":"1985","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AN","_from":"1972","_to":"only","type":"-","in":"Feb","on":"27","at":"2:00s","_save":"0","letter":"-"},{"name":"AN","_from":"1973","_to":"1981","type":"-","in":"Mar","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"AN","_from":"1982","_to":"only","type":"-","in":"Apr","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"AN","_from":"1983","_to":"1985","type":"-","in":"Mar","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"AN","_from":"1986","_to":"1989","type":"-","in":"Mar","on":"Sun>=15","at":"2:00s","_save":"0","letter":"-"},{"name":"AN","_from":"1986","_to":"only","type":"-","in":"Oct","on":"19","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AN","_from":"1987","_to":"1999","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AN","_from":"1990","_to":"1995","type":"-","in":"Mar","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"AN","_from":"1996","_to":"2005","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"0","letter":"-"},{"name":"AN","_from":"2000","_to":"only","type":"-","in":"Aug","on":"lastSun","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AN","_from":"2001","_to":"2007","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AN","_from":"2006","_to":"only","type":"-","in":"Apr","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"AN","_from":"2007","_to":"only","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"0","letter":"-"},{"name":"AN","_from":"2008","_to":"max","type":"-","in":"Apr","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"AN","_from":"2008","_to":"max","type":"-","in":"Oct","on":"Sun>=1","at":"2:00s","_save":"1:00","letter":"-"}],"LH":[{"name":"LH","_from":"1981","_to":"1984","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"1:00","letter":"-"},{"name":"LH","_from":"1982","_to":"1985","type":"-","in":"Mar","on":"Sun>=1","at":"2:00","_save":"0","letter":"-"},{"name":"LH","_from":"1985","_to":"only","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0:30","letter":"-"},{"name":"LH","_from":"1986","_to":"1989","type":"-","in":"Mar","on":"Sun>=15","at":"2:00","_save":"0","letter":"-"},{"name":"LH","_from":"1986","_to":"only","type":"-","in":"Oct","on":"19","at":"2:00","_save":"0:30","letter":"-"},{"name":"LH","_from":"1987","_to":"1999","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0:30","letter":"-"},{"name":"LH","_from":"1990","_to":"1995","type":"-","in":"Mar","on":"Sun>=1","at":"2:00","_save":"0","letter":"-"},{"name":"LH","_from":"1996","_to":"2005","type":"-","in":"Mar","on":"lastSun","at":"2:00","_save":"0","letter":"-"},{"name":"LH","_from":"2000","_to":"only","type":"-","in":"Aug","on":"lastSun","at":"2:00","_save":"0:30","letter":"-"},{"name":"LH","_from":"2001","_to":"2007","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0:30","letter":"-"},{"name":"LH","_from":"2006","_to":"only","type":"-","in":"Apr","on":"Sun>=1","at":"2:00","_save":"0","letter":"-"},{"name":"LH","_from":"2007","_to":"only","type":"-","in":"Mar","on":"lastSun","at":"2:00","_save":"0","letter":"-"},{"name":"LH","_from":"2008","_to":"max","type":"-","in":"Apr","on":"Sun>=1","at":"2:00","_save":"0","letter":"-"},{"name":"LH","_from":"2008","_to":"max","type":"-","in":"Oct","on":"Sun>=1","at":"2:00","_save":"0:30","letter":"-"}],"Cook":[{"name":"Cook","_from":"1978","_to":"only","type":"-","in":"Nov","on":"12","at":"0:00","_save":"0:30","letter":"HS"},{"name":"Cook","_from":"1979","_to":"1991","type":"-","in":"Mar","on":"Sun>=1","at":"0:00","_save":"0","letter":"-"},{"name":"Cook","_from":"1979","_to":"1990","type":"-","in":"Oct","on":"lastSun","at":"0:00","_save":"0:30","letter":"HS"}],"Fiji":[{"name":"Fiji","_from":"1998","_to":"1999","type":"-","in":"Nov","on":"Sun>=1","at":"2:00","_save":"1:00","letter":"S"},{"name":"Fiji","_from":"1999","_to":"2000","type":"-","in":"Feb","on":"lastSun","at":"3:00","_save":"0","letter":"-"},{"name":"Fiji","_from":"2009","_to":"only","type":"-","in":"Nov","on":"29","at":"2:00","_save":"1:00","letter":"S"},{"name":"Fiji","_from":"2010","_to":"only","type":"-","in":"Mar","on":"lastSun","at":"3:00","_save":"0","letter":"-"},{"name":"Fiji","_from":"2010","_to":"max","type":"-","in":"Oct","on":"Sun>=18","at":"2:00","_save":"1:00","letter":"S"},{"name":"Fiji","_from":"2011","_to":"only","type":"-","in":"Mar","on":"Sun>=1","at":"3:00","_save":"0","letter":"-"},{"name":"Fiji","_from":"2012","_to":"max","type":"-","in":"Jan","on":"Sun>=18","at":"3:00","_save":"0","letter":"-"}],"NC":[{"name":"NC","_from":"1977","_to":"1978","type":"-","in":"Dec","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"S"},{"name":"NC","_from":"1978","_to":"1979","type":"-","in":"Feb","on":"27","at":"0:00","_save":"0","letter":"-"},{"name":"NC","_from":"1996","_to":"only","type":"-","in":"Dec","on":"1","at":"2:00s","_save":"1:00","letter":"S"},{"name":"NC","_from":"1997","_to":"only","type":"-","in":"Mar","on":"2","at":"2:00s","_save":"0","letter":"-"}],"NZ":[{"name":"NZ","_from":"1927","_to":"only","type":"-","in":"Nov","on":"6","at":"2:00","_save":"1:00","letter":"S"},{"name":"NZ","_from":"1928","_to":"only","type":"-","in":"Mar","on":"4","at":"2:00","_save":"0","letter":"M"},{"name":"NZ","_from":"1928","_to":"1933","type":"-","in":"Oct","on":"Sun>=8","at":"2:00","_save":"0:30","letter":"S"},{"name":"NZ","_from":"1929","_to":"1933","type":"-","in":"Mar","on":"Sun>=15","at":"2:00","_save":"0","letter":"M"},{"name":"NZ","_from":"1934","_to":"1940","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"0","letter":"M"},{"name":"NZ","_from":"1934","_to":"1940","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0:30","letter":"S"},{"name":"NZ","_from":"1946","_to":"only","type":"-","in":"Jan","on":"1","at":"0:00","_save":"0","letter":"S"},{"name":"NZ","_from":"1974","_to":"only","type":"-","in":"Nov","on":"Sun>=1","at":"2:00s","_save":"1:00","letter":"D"},{"name":"NZ","_from":"1975","_to":"only","type":"-","in":"Feb","on":"lastSun","at":"2:00s","_save":"0","letter":"S"},{"name":"NZ","_from":"1975","_to":"1988","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"1:00","letter":"D"},{"name":"NZ","_from":"1976","_to":"1989","type":"-","in":"Mar","on":"Sun>=1","at":"2:00s","_save":"0","letter":"S"},{"name":"NZ","_from":"1989","_to":"only","type":"-","in":"Oct","on":"Sun>=8","at":"2:00s","_save":"1:00","letter":"D"},{"name":"NZ","_from":"1990","_to":"2006","type":"-","in":"Oct","on":"Sun>=1","at":"2:00s","_save":"1:00","letter":"D"},{"name":"NZ","_from":"1990","_to":"2007","type":"-","in":"Mar","on":"Sun>=15","at":"2:00s","_save":"0","letter":"S"},{"name":"NZ","_from":"2007","_to":"max","type":"-","in":"Sep","on":"lastSun","at":"2:00s","_save":"1:00","letter":"D"},{"name":"NZ","_from":"2008","_to":"max","type":"-","in":"Apr","on":"Sun>=1","at":"2:00s","_save":"0","letter":"S"}],"Chatham":[{"name":"Chatham","_from":"1974","_to":"only","type":"-","in":"Nov","on":"Sun>=1","at":"2:45s","_save":"1:00","letter":"D"},{"name":"Chatham","_from":"1975","_to":"only","type":"-","in":"Feb","on":"lastSun","at":"2:45s","_save":"0","letter":"S"},{"name":"Chatham","_from":"1975","_to":"1988","type":"-","in":"Oct","on":"lastSun","at":"2:45s","_save":"1:00","letter":"D"},{"name":"Chatham","_from":"1976","_to":"1989","type":"-","in":"Mar","on":"Sun>=1","at":"2:45s","_save":"0","letter":"S"},{"name":"Chatham","_from":"1989","_to":"only","type":"-","in":"Oct","on":"Sun>=8","at":"2:45s","_save":"1:00","letter":"D"},{"name":"Chatham","_from":"1990","_to":"2006","type":"-","in":"Oct","on":"Sun>=1","at":"2:45s","_save":"1:00","letter":"D"},{"name":"Chatham","_from":"1990","_to":"2007","type":"-","in":"Mar","on":"Sun>=15","at":"2:45s","_save":"0","letter":"S"},{"name":"Chatham","_from":"2007","_to":"max","type":"-","in":"Sep","on":"lastSun","at":"2:45s","_save":"1:00","letter":"D"},{"name":"Chatham","_from":"2008","_to":"max","type":"-","in":"Apr","on":"Sun>=1","at":"2:45s","_save":"0","letter":"S"}],"WS":[{"name":"WS","_from":"2012","_to":"max","type":"-","in":"Sep","on":"lastSun","at":"3:00","_save":"1","letter":"D"},{"name":"WS","_from":"2012","_to":"max","type":"-","in":"Apr","on":"Sun>=1","at":"4:00","_save":"0","letter":"-"}],"Tonga":[{"name":"Tonga","_from":"1999","_to":"only","type":"-","in":"Oct","on":"7","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Tonga","_from":"2000","_to":"only","type":"-","in":"Mar","on":"19","at":"2:00s","_save":"0","letter":"-"},{"name":"Tonga","_from":"2000","_to":"2001","type":"-","in":"Nov","on":"Sun>=1","at":"2:00","_save":"1:00","letter":"S"},{"name":"Tonga","_from":"2001","_to":"2002","type":"-","in":"Jan","on":"lastSun","at":"2:00","_save":"0","letter":"-"}],"Vanuatu":[{"name":"Vanuatu","_from":"1983","_to":"only","type":"-","in":"Sep","on":"25","at":"0:00","_save":"1:00","letter":"S"},{"name":"Vanuatu","_from":"1984","_to":"1991","type":"-","in":"Mar","on":"Sun>=23","at":"0:00","_save":"0","letter":"-"},{"name":"Vanuatu","_from":"1984","_to":"only","type":"-","in":"Oct","on":"23","at":"0:00","_save":"1:00","letter":"S"},{"name":"Vanuatu","_from":"1985","_to":"1991","type":"-","in":"Sep","on":"Sun>=23","at":"0:00","_save":"1:00","letter":"S"},{"name":"Vanuatu","_from":"1992","_to":"1993","type":"-","in":"Jan","on":"Sun>=23","at":"0:00","_save":"0","letter":"-"},{"name":"Vanuatu","_from":"1992","_to":"only","type":"-","in":"Oct","on":"Sun>=23","at":"0:00","_save":"1:00","letter":"S"}],"GB-Eire":[{"name":"GB-Eire","_from":"1916","_to":"only","type":"-","in":"May","on":"21","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1916","_to":"only","type":"-","in":"Oct","on":"1","at":"2:00s","_save":"0","letter":"GMT"},{"name":"GB-Eire","_from":"1917","_to":"only","type":"-","in":"Apr","on":"8","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1917","_to":"only","type":"-","in":"Sep","on":"17","at":"2:00s","_save":"0","letter":"GMT"},{"name":"GB-Eire","_from":"1918","_to":"only","type":"-","in":"Mar","on":"24","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1918","_to":"only","type":"-","in":"Sep","on":"30","at":"2:00s","_save":"0","letter":"GMT"},{"name":"GB-Eire","_from":"1919","_to":"only","type":"-","in":"Mar","on":"30","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1919","_to":"only","type":"-","in":"Sep","on":"29","at":"2:00s","_save":"0","letter":"GMT"},{"name":"GB-Eire","_from":"1920","_to":"only","type":"-","in":"Mar","on":"28","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1920","_to":"only","type":"-","in":"Oct","on":"25","at":"2:00s","_save":"0","letter":"GMT"},{"name":"GB-Eire","_from":"1921","_to":"only","type":"-","in":"Apr","on":"3","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1921","_to":"only","type":"-","in":"Oct","on":"3","at":"2:00s","_save":"0","letter":"GMT"},{"name":"GB-Eire","_from":"1922","_to":"only","type":"-","in":"Mar","on":"26","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1922","_to":"only","type":"-","in":"Oct","on":"8","at":"2:00s","_save":"0","letter":"GMT"},{"name":"GB-Eire","_from":"1923","_to":"only","type":"-","in":"Apr","on":"Sun>=16","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1923","_to":"1924","type":"-","in":"Sep","on":"Sun>=16","at":"2:00s","_save":"0","letter":"GMT"},{"name":"GB-Eire","_from":"1924","_to":"only","type":"-","in":"Apr","on":"Sun>=9","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1925","_to":"1926","type":"-","in":"Apr","on":"Sun>=16","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1925","_to":"1938","type":"-","in":"Oct","on":"Sun>=2","at":"2:00s","_save":"0","letter":"GMT"},{"name":"GB-Eire","_from":"1927","_to":"only","type":"-","in":"Apr","on":"Sun>=9","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1928","_to":"1929","type":"-","in":"Apr","on":"Sun>=16","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1930","_to":"only","type":"-","in":"Apr","on":"Sun>=9","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1931","_to":"1932","type":"-","in":"Apr","on":"Sun>=16","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1933","_to":"only","type":"-","in":"Apr","on":"Sun>=9","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1934","_to":"only","type":"-","in":"Apr","on":"Sun>=16","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1935","_to":"only","type":"-","in":"Apr","on":"Sun>=9","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1936","_to":"1937","type":"-","in":"Apr","on":"Sun>=16","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1938","_to":"only","type":"-","in":"Apr","on":"Sun>=9","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1939","_to":"only","type":"-","in":"Apr","on":"Sun>=16","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1939","_to":"only","type":"-","in":"Nov","on":"Sun>=16","at":"2:00s","_save":"0","letter":"GMT"},{"name":"GB-Eire","_from":"1940","_to":"only","type":"-","in":"Feb","on":"Sun>=23","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1941","_to":"only","type":"-","in":"May","on":"Sun>=2","at":"1:00s","_save":"2:00","letter":"BDST"},{"name":"GB-Eire","_from":"1941","_to":"1943","type":"-","in":"Aug","on":"Sun>=9","at":"1:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1942","_to":"1944","type":"-","in":"Apr","on":"Sun>=2","at":"1:00s","_save":"2:00","letter":"BDST"},{"name":"GB-Eire","_from":"1944","_to":"only","type":"-","in":"Sep","on":"Sun>=16","at":"1:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1945","_to":"only","type":"-","in":"Apr","on":"Mon>=2","at":"1:00s","_save":"2:00","letter":"BDST"},{"name":"GB-Eire","_from":"1945","_to":"only","type":"-","in":"Jul","on":"Sun>=9","at":"1:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1945","_to":"1946","type":"-","in":"Oct","on":"Sun>=2","at":"2:00s","_save":"0","letter":"GMT"},{"name":"GB-Eire","_from":"1946","_to":"only","type":"-","in":"Apr","on":"Sun>=9","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1947","_to":"only","type":"-","in":"Mar","on":"16","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1947","_to":"only","type":"-","in":"Apr","on":"13","at":"1:00s","_save":"2:00","letter":"BDST"},{"name":"GB-Eire","_from":"1947","_to":"only","type":"-","in":"Aug","on":"10","at":"1:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1947","_to":"only","type":"-","in":"Nov","on":"2","at":"2:00s","_save":"0","letter":"GMT"},{"name":"GB-Eire","_from":"1948","_to":"only","type":"-","in":"Mar","on":"14","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1948","_to":"only","type":"-","in":"Oct","on":"31","at":"2:00s","_save":"0","letter":"GMT"},{"name":"GB-Eire","_from":"1949","_to":"only","type":"-","in":"Apr","on":"3","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1949","_to":"only","type":"-","in":"Oct","on":"30","at":"2:00s","_save":"0","letter":"GMT"},{"name":"GB-Eire","_from":"1950","_to":"1952","type":"-","in":"Apr","on":"Sun>=14","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1950","_to":"1952","type":"-","in":"Oct","on":"Sun>=21","at":"2:00s","_save":"0","letter":"GMT"},{"name":"GB-Eire","_from":"1953","_to":"only","type":"-","in":"Apr","on":"Sun>=16","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1953","_to":"1960","type":"-","in":"Oct","on":"Sun>=2","at":"2:00s","_save":"0","letter":"GMT"},{"name":"GB-Eire","_from":"1954","_to":"only","type":"-","in":"Apr","on":"Sun>=9","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1955","_to":"1956","type":"-","in":"Apr","on":"Sun>=16","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1957","_to":"only","type":"-","in":"Apr","on":"Sun>=9","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1958","_to":"1959","type":"-","in":"Apr","on":"Sun>=16","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1960","_to":"only","type":"-","in":"Apr","on":"Sun>=9","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1961","_to":"1963","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1961","_to":"1968","type":"-","in":"Oct","on":"Sun>=23","at":"2:00s","_save":"0","letter":"GMT"},{"name":"GB-Eire","_from":"1964","_to":"1967","type":"-","in":"Mar","on":"Sun>=19","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1968","_to":"only","type":"-","in":"Feb","on":"18","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1972","_to":"1980","type":"-","in":"Mar","on":"Sun>=16","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1972","_to":"1980","type":"-","in":"Oct","on":"Sun>=23","at":"2:00s","_save":"0","letter":"GMT"},{"name":"GB-Eire","_from":"1981","_to":"1995","type":"-","in":"Mar","on":"lastSun","at":"1:00u","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1981","_to":"1989","type":"-","in":"Oct","on":"Sun>=23","at":"1:00u","_save":"0","letter":"GMT"},{"name":"GB-Eire","_from":"1990","_to":"1995","type":"-","in":"Oct","on":"Sun>=22","at":"1:00u","_save":"0","letter":"GMT"}],"EU":[{"name":"EU","_from":"1977","_to":"1980","type":"-","in":"Apr","on":"Sun>=1","at":"1:00u","_save":"1:00","letter":"S"},{"name":"EU","_from":"1977","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"1:00u","_save":"0","letter":"-"},{"name":"EU","_from":"1978","_to":"only","type":"-","in":"Oct","on":"1","at":"1:00u","_save":"0","letter":"-"},{"name":"EU","_from":"1979","_to":"1995","type":"-","in":"Sep","on":"lastSun","at":"1:00u","_save":"0","letter":"-"},{"name":"EU","_from":"1981","_to":"max","type":"-","in":"Mar","on":"lastSun","at":"1:00u","_save":"1:00","letter":"S"},{"name":"EU","_from":"1996","_to":"max","type":"-","in":"Oct","on":"lastSun","at":"1:00u","_save":"0","letter":"-"}],"W-Eur":[{"name":"W-Eur","_from":"1977","_to":"1980","type":"-","in":"Apr","on":"Sun>=1","at":"1:00s","_save":"1:00","letter":"S"},{"name":"W-Eur","_from":"1977","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"1:00s","_save":"0","letter":"-"},{"name":"W-Eur","_from":"1978","_to":"only","type":"-","in":"Oct","on":"1","at":"1:00s","_save":"0","letter":"-"},{"name":"W-Eur","_from":"1979","_to":"1995","type":"-","in":"Sep","on":"lastSun","at":"1:00s","_save":"0","letter":"-"},{"name":"W-Eur","_from":"1981","_to":"max","type":"-","in":"Mar","on":"lastSun","at":"1:00s","_save":"1:00","letter":"S"},{"name":"W-Eur","_from":"1996","_to":"max","type":"-","in":"Oct","on":"lastSun","at":"1:00s","_save":"0","letter":"-"}],"C-Eur":[{"name":"C-Eur","_from":"1916","_to":"only","type":"-","in":"Apr","on":"30","at":"23:00","_save":"1:00","letter":"S"},{"name":"C-Eur","_from":"1916","_to":"only","type":"-","in":"Oct","on":"1","at":"1:00","_save":"0","letter":"-"},{"name":"C-Eur","_from":"1917","_to":"1918","type":"-","in":"Apr","on":"Mon>=15","at":"2:00s","_save":"1:00","letter":"S"},{"name":"C-Eur","_from":"1917","_to":"1918","type":"-","in":"Sep","on":"Mon>=15","at":"2:00s","_save":"0","letter":"-"},{"name":"C-Eur","_from":"1940","_to":"only","type":"-","in":"Apr","on":"1","at":"2:00s","_save":"1:00","letter":"S"},{"name":"C-Eur","_from":"1942","_to":"only","type":"-","in":"Nov","on":"2","at":"2:00s","_save":"0","letter":"-"},{"name":"C-Eur","_from":"1943","_to":"only","type":"-","in":"Mar","on":"29","at":"2:00s","_save":"1:00","letter":"S"},{"name":"C-Eur","_from":"1943","_to":"only","type":"-","in":"Oct","on":"4","at":"2:00s","_save":"0","letter":"-"},{"name":"C-Eur","_from":"1944","_to":"1945","type":"-","in":"Apr","on":"Mon>=1","at":"2:00s","_save":"1:00","letter":"S"},{"name":"C-Eur","_from":"1944","_to":"only","type":"-","in":"Oct","on":"2","at":"2:00s","_save":"0","letter":"-"},{"name":"C-Eur","_from":"1945","_to":"only","type":"-","in":"Sep","on":"16","at":"2:00s","_save":"0","letter":"-"},{"name":"C-Eur","_from":"1977","_to":"1980","type":"-","in":"Apr","on":"Sun>=1","at":"2:00s","_save":"1:00","letter":"S"},{"name":"C-Eur","_from":"1977","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"2:00s","_save":"0","letter":"-"},{"name":"C-Eur","_from":"1978","_to":"only","type":"-","in":"Oct","on":"1","at":"2:00s","_save":"0","letter":"-"},{"name":"C-Eur","_from":"1979","_to":"1995","type":"-","in":"Sep","on":"lastSun","at":"2:00s","_save":"0","letter":"-"},{"name":"C-Eur","_from":"1981","_to":"max","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"1:00","letter":"S"},{"name":"C-Eur","_from":"1996","_to":"max","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"0","letter":"-"}],"E-Eur":[{"name":"E-Eur","_from":"1977","_to":"1980","type":"-","in":"Apr","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"S"},{"name":"E-Eur","_from":"1977","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"0:00","_save":"0","letter":"-"},{"name":"E-Eur","_from":"1978","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"E-Eur","_from":"1979","_to":"1995","type":"-","in":"Sep","on":"lastSun","at":"0:00","_save":"0","letter":"-"},{"name":"E-Eur","_from":"1981","_to":"max","type":"-","in":"Mar","on":"lastSun","at":"0:00","_save":"1:00","letter":"S"},{"name":"E-Eur","_from":"1996","_to":"max","type":"-","in":"Oct","on":"lastSun","at":"0:00","_save":"0","letter":"-"}],"Russia":[{"name":"Russia","_from":"1917","_to":"only","type":"-","in":"Jul","on":"1","at":"23:00","_save":"1:00","letter":"MST"},{"name":"Russia","_from":"1917","_to":"only","type":"-","in":"Dec","on":"28","at":"0:00","_save":"0","letter":"MMT"},{"name":"Russia","_from":"1918","_to":"only","type":"-","in":"May","on":"31","at":"22:00","_save":"2:00","letter":"MDST"},{"name":"Russia","_from":"1918","_to":"only","type":"-","in":"Sep","on":"16","at":"1:00","_save":"1:00","letter":"MST"},{"name":"Russia","_from":"1919","_to":"only","type":"-","in":"May","on":"31","at":"23:00","_save":"2:00","letter":"MDST"},{"name":"Russia","_from":"1919","_to":"only","type":"-","in":"Jul","on":"1","at":"2:00","_save":"1:00","letter":"S"},{"name":"Russia","_from":"1919","_to":"only","type":"-","in":"Aug","on":"16","at":"0:00","_save":"0","letter":"-"},{"name":"Russia","_from":"1921","_to":"only","type":"-","in":"Feb","on":"14","at":"23:00","_save":"1:00","letter":"S"},{"name":"Russia","_from":"1921","_to":"only","type":"-","in":"Mar","on":"20","at":"23:00","_save":"2:00","letter":"M"},{"name":"Russia","_from":"1921","_to":"only","type":"-","in":"Sep","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Russia","_from":"1921","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Russia","_from":"1981","_to":"1984","type":"-","in":"Apr","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Russia","_from":"1981","_to":"1983","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Russia","_from":"1984","_to":"1991","type":"-","in":"Sep","on":"lastSun","at":"2:00s","_save":"0","letter":"-"},{"name":"Russia","_from":"1985","_to":"1991","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Russia","_from":"1992","_to":"only","type":"-","in":"Mar","on":"lastSat","at":"23:00","_save":"1:00","letter":"S"},{"name":"Russia","_from":"1992","_to":"only","type":"-","in":"Sep","on":"lastSat","at":"23:00","_save":"0","letter":"-"},{"name":"Russia","_from":"1993","_to":"2010","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Russia","_from":"1993","_to":"1995","type":"-","in":"Sep","on":"lastSun","at":"2:00s","_save":"0","letter":"-"},{"name":"Russia","_from":"1996","_to":"2010","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"0","letter":"-"}],"Albania":[{"name":"Albania","_from":"1940","_to":"only","type":"-","in":"Jun","on":"16","at":"0:00","_save":"1:00","letter":"S"},{"name":"Albania","_from":"1942","_to":"only","type":"-","in":"Nov","on":"2","at":"3:00","_save":"0","letter":"-"},{"name":"Albania","_from":"1943","_to":"only","type":"-","in":"Mar","on":"29","at":"2:00","_save":"1:00","letter":"S"},{"name":"Albania","_from":"1943","_to":"only","type":"-","in":"Apr","on":"10","at":"3:00","_save":"0","letter":"-"},{"name":"Albania","_from":"1974","_to":"only","type":"-","in":"May","on":"4","at":"0:00","_save":"1:00","letter":"S"},{"name":"Albania","_from":"1974","_to":"only","type":"-","in":"Oct","on":"2","at":"0:00","_save":"0","letter":"-"},{"name":"Albania","_from":"1975","_to":"only","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Albania","_from":"1975","_to":"only","type":"-","in":"Oct","on":"2","at":"0:00","_save":"0","letter":"-"},{"name":"Albania","_from":"1976","_to":"only","type":"-","in":"May","on":"2","at":"0:00","_save":"1:00","letter":"S"},{"name":"Albania","_from":"1976","_to":"only","type":"-","in":"Oct","on":"3","at":"0:00","_save":"0","letter":"-"},{"name":"Albania","_from":"1977","_to":"only","type":"-","in":"May","on":"8","at":"0:00","_save":"1:00","letter":"S"},{"name":"Albania","_from":"1977","_to":"only","type":"-","in":"Oct","on":"2","at":"0:00","_save":"0","letter":"-"},{"name":"Albania","_from":"1978","_to":"only","type":"-","in":"May","on":"6","at":"0:00","_save":"1:00","letter":"S"},{"name":"Albania","_from":"1978","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Albania","_from":"1979","_to":"only","type":"-","in":"May","on":"5","at":"0:00","_save":"1:00","letter":"S"},{"name":"Albania","_from":"1979","_to":"only","type":"-","in":"Sep","on":"30","at":"0:00","_save":"0","letter":"-"},{"name":"Albania","_from":"1980","_to":"only","type":"-","in":"May","on":"3","at":"0:00","_save":"1:00","letter":"S"},{"name":"Albania","_from":"1980","_to":"only","type":"-","in":"Oct","on":"4","at":"0:00","_save":"0","letter":"-"},{"name":"Albania","_from":"1981","_to":"only","type":"-","in":"Apr","on":"26","at":"0:00","_save":"1:00","letter":"S"},{"name":"Albania","_from":"1981","_to":"only","type":"-","in":"Sep","on":"27","at":"0:00","_save":"0","letter":"-"},{"name":"Albania","_from":"1982","_to":"only","type":"-","in":"May","on":"2","at":"0:00","_save":"1:00","letter":"S"},{"name":"Albania","_from":"1982","_to":"only","type":"-","in":"Oct","on":"3","at":"0:00","_save":"0","letter":"-"},{"name":"Albania","_from":"1983","_to":"only","type":"-","in":"Apr","on":"18","at":"0:00","_save":"1:00","letter":"S"},{"name":"Albania","_from":"1983","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Albania","_from":"1984","_to":"only","type":"-","in":"Apr","on":"1","at":"0:00","_save":"1:00","letter":"S"}],"Austria":[{"name":"Austria","_from":"1920","_to":"only","type":"-","in":"Apr","on":"5","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Austria","_from":"1920","_to":"only","type":"-","in":"Sep","on":"13","at":"2:00s","_save":"0","letter":"-"},{"name":"Austria","_from":"1946","_to":"only","type":"-","in":"Apr","on":"14","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Austria","_from":"1946","_to":"1948","type":"-","in":"Oct","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"Austria","_from":"1947","_to":"only","type":"-","in":"Apr","on":"6","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Austria","_from":"1948","_to":"only","type":"-","in":"Apr","on":"18","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Austria","_from":"1980","_to":"only","type":"-","in":"Apr","on":"6","at":"0:00","_save":"1:00","letter":"S"},{"name":"Austria","_from":"1980","_to":"only","type":"-","in":"Sep","on":"28","at":"0:00","_save":"0","letter":"-"}],"Belgium":[{"name":"Belgium","_from":"1918","_to":"only","type":"-","in":"Mar","on":"9","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1918","_to":"1919","type":"-","in":"Oct","on":"Sat>=1","at":"23:00s","_save":"0","letter":"-"},{"name":"Belgium","_from":"1919","_to":"only","type":"-","in":"Mar","on":"1","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1920","_to":"only","type":"-","in":"Feb","on":"14","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1920","_to":"only","type":"-","in":"Oct","on":"23","at":"23:00s","_save":"0","letter":"-"},{"name":"Belgium","_from":"1921","_to":"only","type":"-","in":"Mar","on":"14","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1921","_to":"only","type":"-","in":"Oct","on":"25","at":"23:00s","_save":"0","letter":"-"},{"name":"Belgium","_from":"1922","_to":"only","type":"-","in":"Mar","on":"25","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1922","_to":"1927","type":"-","in":"Oct","on":"Sat>=1","at":"23:00s","_save":"0","letter":"-"},{"name":"Belgium","_from":"1923","_to":"only","type":"-","in":"Apr","on":"21","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1924","_to":"only","type":"-","in":"Mar","on":"29","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1925","_to":"only","type":"-","in":"Apr","on":"4","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1926","_to":"only","type":"-","in":"Apr","on":"17","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1927","_to":"only","type":"-","in":"Apr","on":"9","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1928","_to":"only","type":"-","in":"Apr","on":"14","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1928","_to":"1938","type":"-","in":"Oct","on":"Sun>=2","at":"2:00s","_save":"0","letter":"-"},{"name":"Belgium","_from":"1929","_to":"only","type":"-","in":"Apr","on":"21","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1930","_to":"only","type":"-","in":"Apr","on":"13","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1931","_to":"only","type":"-","in":"Apr","on":"19","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1932","_to":"only","type":"-","in":"Apr","on":"3","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1933","_to":"only","type":"-","in":"Mar","on":"26","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1934","_to":"only","type":"-","in":"Apr","on":"8","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1935","_to":"only","type":"-","in":"Mar","on":"31","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1936","_to":"only","type":"-","in":"Apr","on":"19","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1937","_to":"only","type":"-","in":"Apr","on":"4","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1938","_to":"only","type":"-","in":"Mar","on":"27","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1939","_to":"only","type":"-","in":"Apr","on":"16","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1939","_to":"only","type":"-","in":"Nov","on":"19","at":"2:00s","_save":"0","letter":"-"},{"name":"Belgium","_from":"1940","_to":"only","type":"-","in":"Feb","on":"25","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1944","_to":"only","type":"-","in":"Sep","on":"17","at":"2:00s","_save":"0","letter":"-"},{"name":"Belgium","_from":"1945","_to":"only","type":"-","in":"Apr","on":"2","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1945","_to":"only","type":"-","in":"Sep","on":"16","at":"2:00s","_save":"0","letter":"-"},{"name":"Belgium","_from":"1946","_to":"only","type":"-","in":"May","on":"19","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1946","_to":"only","type":"-","in":"Oct","on":"7","at":"2:00s","_save":"0","letter":"-"}],"Bulg":[{"name":"Bulg","_from":"1979","_to":"only","type":"-","in":"Mar","on":"31","at":"23:00","_save":"1:00","letter":"S"},{"name":"Bulg","_from":"1979","_to":"only","type":"-","in":"Oct","on":"1","at":"1:00","_save":"0","letter":"-"},{"name":"Bulg","_from":"1980","_to":"1982","type":"-","in":"Apr","on":"Sat>=1","at":"23:00","_save":"1:00","letter":"S"},{"name":"Bulg","_from":"1980","_to":"only","type":"-","in":"Sep","on":"29","at":"1:00","_save":"0","letter":"-"},{"name":"Bulg","_from":"1981","_to":"only","type":"-","in":"Sep","on":"27","at":"2:00","_save":"0","letter":"-"}],"Czech":[{"name":"Czech","_from":"1945","_to":"only","type":"-","in":"Apr","on":"8","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Czech","_from":"1945","_to":"only","type":"-","in":"Nov","on":"18","at":"2:00s","_save":"0","letter":"-"},{"name":"Czech","_from":"1946","_to":"only","type":"-","in":"May","on":"6","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Czech","_from":"1946","_to":"1949","type":"-","in":"Oct","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"Czech","_from":"1947","_to":"only","type":"-","in":"Apr","on":"20","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Czech","_from":"1948","_to":"only","type":"-","in":"Apr","on":"18","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Czech","_from":"1949","_to":"only","type":"-","in":"Apr","on":"9","at":"2:00s","_save":"1:00","letter":"S"}],"Denmark":[{"name":"Denmark","_from":"1916","_to":"only","type":"-","in":"May","on":"14","at":"23:00","_save":"1:00","letter":"S"},{"name":"Denmark","_from":"1916","_to":"only","type":"-","in":"Sep","on":"30","at":"23:00","_save":"0","letter":"-"},{"name":"Denmark","_from":"1940","_to":"only","type":"-","in":"May","on":"15","at":"0:00","_save":"1:00","letter":"S"},{"name":"Denmark","_from":"1945","_to":"only","type":"-","in":"Apr","on":"2","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Denmark","_from":"1945","_to":"only","type":"-","in":"Aug","on":"15","at":"2:00s","_save":"0","letter":"-"},{"name":"Denmark","_from":"1946","_to":"only","type":"-","in":"May","on":"1","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Denmark","_from":"1946","_to":"only","type":"-","in":"Sep","on":"1","at":"2:00s","_save":"0","letter":"-"},{"name":"Denmark","_from":"1947","_to":"only","type":"-","in":"May","on":"4","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Denmark","_from":"1947","_to":"only","type":"-","in":"Aug","on":"10","at":"2:00s","_save":"0","letter":"-"},{"name":"Denmark","_from":"1948","_to":"only","type":"-","in":"May","on":"9","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Denmark","_from":"1948","_to":"only","type":"-","in":"Aug","on":"8","at":"2:00s","_save":"0","letter":"-"}],"Thule":[{"name":"Thule","_from":"1991","_to":"1992","type":"-","in":"Mar","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Thule","_from":"1991","_to":"1992","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Thule","_from":"1993","_to":"2006","type":"-","in":"Apr","on":"Sun>=1","at":"2:00","_save":"1:00","letter":"D"},{"name":"Thule","_from":"1993","_to":"2006","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Thule","_from":"2007","_to":"max","type":"-","in":"Mar","on":"Sun>=8","at":"2:00","_save":"1:00","letter":"D"},{"name":"Thule","_from":"2007","_to":"max","type":"-","in":"Nov","on":"Sun>=1","at":"2:00","_save":"0","letter":"S"}],"Finland":[{"name":"Finland","_from":"1942","_to":"only","type":"-","in":"Apr","on":"3","at":"0:00","_save":"1:00","letter":"S"},{"name":"Finland","_from":"1942","_to":"only","type":"-","in":"Oct","on":"3","at":"0:00","_save":"0","letter":"-"},{"name":"Finland","_from":"1981","_to":"1982","type":"-","in":"Mar","on":"lastSun","at":"2:00","_save":"1:00","letter":"S"},{"name":"Finland","_from":"1981","_to":"1982","type":"-","in":"Sep","on":"lastSun","at":"3:00","_save":"0","letter":"-"}],"France":[{"name":"France","_from":"1916","_to":"only","type":"-","in":"Jun","on":"14","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1916","_to":"1919","type":"-","in":"Oct","on":"Sun>=1","at":"23:00s","_save":"0","letter":"-"},{"name":"France","_from":"1917","_to":"only","type":"-","in":"Mar","on":"24","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1918","_to":"only","type":"-","in":"Mar","on":"9","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1919","_to":"only","type":"-","in":"Mar","on":"1","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1920","_to":"only","type":"-","in":"Feb","on":"14","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1920","_to":"only","type":"-","in":"Oct","on":"23","at":"23:00s","_save":"0","letter":"-"},{"name":"France","_from":"1921","_to":"only","type":"-","in":"Mar","on":"14","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1921","_to":"only","type":"-","in":"Oct","on":"25","at":"23:00s","_save":"0","letter":"-"},{"name":"France","_from":"1922","_to":"only","type":"-","in":"Mar","on":"25","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1922","_to":"1938","type":"-","in":"Oct","on":"Sat>=1","at":"23:00s","_save":"0","letter":"-"},{"name":"France","_from":"1923","_to":"only","type":"-","in":"May","on":"26","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1924","_to":"only","type":"-","in":"Mar","on":"29","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1925","_to":"only","type":"-","in":"Apr","on":"4","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1926","_to":"only","type":"-","in":"Apr","on":"17","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1927","_to":"only","type":"-","in":"Apr","on":"9","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1928","_to":"only","type":"-","in":"Apr","on":"14","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1929","_to":"only","type":"-","in":"Apr","on":"20","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1930","_to":"only","type":"-","in":"Apr","on":"12","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1931","_to":"only","type":"-","in":"Apr","on":"18","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1932","_to":"only","type":"-","in":"Apr","on":"2","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1933","_to":"only","type":"-","in":"Mar","on":"25","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1934","_to":"only","type":"-","in":"Apr","on":"7","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1935","_to":"only","type":"-","in":"Mar","on":"30","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1936","_to":"only","type":"-","in":"Apr","on":"18","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1937","_to":"only","type":"-","in":"Apr","on":"3","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1938","_to":"only","type":"-","in":"Mar","on":"26","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1939","_to":"only","type":"-","in":"Apr","on":"15","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1939","_to":"only","type":"-","in":"Nov","on":"18","at":"23:00s","_save":"0","letter":"-"},{"name":"France","_from":"1940","_to":"only","type":"-","in":"Feb","on":"25","at":"2:00","_save":"1:00","letter":"S"},{"name":"France","_from":"1941","_to":"only","type":"-","in":"May","on":"5","at":"0:00","_save":"2:00","letter":"M"},{"name":"France","_from":"1941","_to":"only","type":"-","in":"Oct","on":"6","at":"0:00","_save":"1:00","letter":"S"},{"name":"France","_from":"1942","_to":"only","type":"-","in":"Mar","on":"9","at":"0:00","_save":"2:00","letter":"M"},{"name":"France","_from":"1942","_to":"only","type":"-","in":"Nov","on":"2","at":"3:00","_save":"1:00","letter":"S"},{"name":"France","_from":"1943","_to":"only","type":"-","in":"Mar","on":"29","at":"2:00","_save":"2:00","letter":"M"},{"name":"France","_from":"1943","_to":"only","type":"-","in":"Oct","on":"4","at":"3:00","_save":"1:00","letter":"S"},{"name":"France","_from":"1944","_to":"only","type":"-","in":"Apr","on":"3","at":"2:00","_save":"2:00","letter":"M"},{"name":"France","_from":"1944","_to":"only","type":"-","in":"Oct","on":"8","at":"1:00","_save":"1:00","letter":"S"},{"name":"France","_from":"1945","_to":"only","type":"-","in":"Apr","on":"2","at":"2:00","_save":"2:00","letter":"M"},{"name":"France","_from":"1945","_to":"only","type":"-","in":"Sep","on":"16","at":"3:00","_save":"0","letter":"-"},{"name":"France","_from":"1976","_to":"only","type":"-","in":"Mar","on":"28","at":"1:00","_save":"1:00","letter":"S"},{"name":"France","_from":"1976","_to":"only","type":"-","in":"Sep","on":"26","at":"1:00","_save":"0","letter":"-"}],"Germany":[{"name":"Germany","_from":"1946","_to":"only","type":"-","in":"Apr","on":"14","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Germany","_from":"1946","_to":"only","type":"-","in":"Oct","on":"7","at":"2:00s","_save":"0","letter":"-"},{"name":"Germany","_from":"1947","_to":"1949","type":"-","in":"Oct","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"Germany","_from":"1947","_to":"only","type":"-","in":"Apr","on":"6","at":"3:00s","_save":"1:00","letter":"S"},{"name":"Germany","_from":"1947","_to":"only","type":"-","in":"May","on":"11","at":"2:00s","_save":"2:00","letter":"M"},{"name":"Germany","_from":"1947","_to":"only","type":"-","in":"Jun","on":"29","at":"3:00","_save":"1:00","letter":"S"},{"name":"Germany","_from":"1948","_to":"only","type":"-","in":"Apr","on":"18","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Germany","_from":"1949","_to":"only","type":"-","in":"Apr","on":"10","at":"2:00s","_save":"1:00","letter":"S"}],"SovietZone":[{"name":"SovietZone","_from":"1945","_to":"only","type":"-","in":"May","on":"24","at":"2:00","_save":"2:00","letter":"M"},{"name":"SovietZone","_from":"1945","_to":"only","type":"-","in":"Sep","on":"24","at":"3:00","_save":"1:00","letter":"S"},{"name":"SovietZone","_from":"1945","_to":"only","type":"-","in":"Nov","on":"18","at":"2:00s","_save":"0","letter":"-"}],"Greece":[{"name":"Greece","_from":"1932","_to":"only","type":"-","in":"Jul","on":"7","at":"0:00","_save":"1:00","letter":"S"},{"name":"Greece","_from":"1932","_to":"only","type":"-","in":"Sep","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Greece","_from":"1941","_to":"only","type":"-","in":"Apr","on":"7","at":"0:00","_save":"1:00","letter":"S"},{"name":"Greece","_from":"1942","_to":"only","type":"-","in":"Nov","on":"2","at":"3:00","_save":"0","letter":"-"},{"name":"Greece","_from":"1943","_to":"only","type":"-","in":"Mar","on":"30","at":"0:00","_save":"1:00","letter":"S"},{"name":"Greece","_from":"1943","_to":"only","type":"-","in":"Oct","on":"4","at":"0:00","_save":"0","letter":"-"},{"name":"Greece","_from":"1952","_to":"only","type":"-","in":"Jul","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Greece","_from":"1952","_to":"only","type":"-","in":"Nov","on":"2","at":"0:00","_save":"0","letter":"-"},{"name":"Greece","_from":"1975","_to":"only","type":"-","in":"Apr","on":"12","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Greece","_from":"1975","_to":"only","type":"-","in":"Nov","on":"26","at":"0:00s","_save":"0","letter":"-"},{"name":"Greece","_from":"1976","_to":"only","type":"-","in":"Apr","on":"11","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Greece","_from":"1976","_to":"only","type":"-","in":"Oct","on":"10","at":"2:00s","_save":"0","letter":"-"},{"name":"Greece","_from":"1977","_to":"1978","type":"-","in":"Apr","on":"Sun>=1","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Greece","_from":"1977","_to":"only","type":"-","in":"Sep","on":"26","at":"2:00s","_save":"0","letter":"-"},{"name":"Greece","_from":"1978","_to":"only","type":"-","in":"Sep","on":"24","at":"4:00","_save":"0","letter":"-"},{"name":"Greece","_from":"1979","_to":"only","type":"-","in":"Apr","on":"1","at":"9:00","_save":"1:00","letter":"S"},{"name":"Greece","_from":"1979","_to":"only","type":"-","in":"Sep","on":"29","at":"2:00","_save":"0","letter":"-"},{"name":"Greece","_from":"1980","_to":"only","type":"-","in":"Apr","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Greece","_from":"1980","_to":"only","type":"-","in":"Sep","on":"28","at":"0:00","_save":"0","letter":"-"}],"Hungary":[{"name":"Hungary","_from":"1918","_to":"only","type":"-","in":"Apr","on":"1","at":"3:00","_save":"1:00","letter":"S"},{"name":"Hungary","_from":"1918","_to":"only","type":"-","in":"Sep","on":"29","at":"3:00","_save":"0","letter":"-"},{"name":"Hungary","_from":"1919","_to":"only","type":"-","in":"Apr","on":"15","at":"3:00","_save":"1:00","letter":"S"},{"name":"Hungary","_from":"1919","_to":"only","type":"-","in":"Sep","on":"15","at":"3:00","_save":"0","letter":"-"},{"name":"Hungary","_from":"1920","_to":"only","type":"-","in":"Apr","on":"5","at":"3:00","_save":"1:00","letter":"S"},{"name":"Hungary","_from":"1920","_to":"only","type":"-","in":"Sep","on":"30","at":"3:00","_save":"0","letter":"-"},{"name":"Hungary","_from":"1945","_to":"only","type":"-","in":"May","on":"1","at":"23:00","_save":"1:00","letter":"S"},{"name":"Hungary","_from":"1945","_to":"only","type":"-","in":"Nov","on":"3","at":"0:00","_save":"0","letter":"-"},{"name":"Hungary","_from":"1946","_to":"only","type":"-","in":"Mar","on":"31","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Hungary","_from":"1946","_to":"1949","type":"-","in":"Oct","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"Hungary","_from":"1947","_to":"1949","type":"-","in":"Apr","on":"Sun>=4","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Hungary","_from":"1950","_to":"only","type":"-","in":"Apr","on":"17","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Hungary","_from":"1950","_to":"only","type":"-","in":"Oct","on":"23","at":"2:00s","_save":"0","letter":"-"},{"name":"Hungary","_from":"1954","_to":"1955","type":"-","in":"May","on":"23","at":"0:00","_save":"1:00","letter":"S"},{"name":"Hungary","_from":"1954","_to":"1955","type":"-","in":"Oct","on":"3","at":"0:00","_save":"0","letter":"-"},{"name":"Hungary","_from":"1956","_to":"only","type":"-","in":"Jun","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Hungary","_from":"1956","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"0:00","_save":"0","letter":"-"},{"name":"Hungary","_from":"1957","_to":"only","type":"-","in":"Jun","on":"Sun>=1","at":"1:00","_save":"1:00","letter":"S"},{"name":"Hungary","_from":"1957","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"3:00","_save":"0","letter":"-"},{"name":"Hungary","_from":"1980","_to":"only","type":"-","in":"Apr","on":"6","at":"1:00","_save":"1:00","letter":"S"}],"Iceland":[{"name":"Iceland","_from":"1917","_to":"1918","type":"-","in":"Feb","on":"19","at":"23:00","_save":"1:00","letter":"S"},{"name":"Iceland","_from":"1917","_to":"only","type":"-","in":"Oct","on":"21","at":"1:00","_save":"0","letter":"-"},{"name":"Iceland","_from":"1918","_to":"only","type":"-","in":"Nov","on":"16","at":"1:00","_save":"0","letter":"-"},{"name":"Iceland","_from":"1939","_to":"only","type":"-","in":"Apr","on":"29","at":"23:00","_save":"1:00","letter":"S"},{"name":"Iceland","_from":"1939","_to":"only","type":"-","in":"Nov","on":"29","at":"2:00","_save":"0","letter":"-"},{"name":"Iceland","_from":"1940","_to":"only","type":"-","in":"Feb","on":"25","at":"2:00","_save":"1:00","letter":"S"},{"name":"Iceland","_from":"1940","_to":"only","type":"-","in":"Nov","on":"3","at":"2:00","_save":"0","letter":"-"},{"name":"Iceland","_from":"1941","_to":"only","type":"-","in":"Mar","on":"2","at":"1:00s","_save":"1:00","letter":"S"},{"name":"Iceland","_from":"1941","_to":"only","type":"-","in":"Nov","on":"2","at":"1:00s","_save":"0","letter":"-"},{"name":"Iceland","_from":"1942","_to":"only","type":"-","in":"Mar","on":"8","at":"1:00s","_save":"1:00","letter":"S"},{"name":"Iceland","_from":"1942","_to":"only","type":"-","in":"Oct","on":"25","at":"1:00s","_save":"0","letter":"-"},{"name":"Iceland","_from":"1943","_to":"1946","type":"-","in":"Mar","on":"Sun>=1","at":"1:00s","_save":"1:00","letter":"S"},{"name":"Iceland","_from":"1943","_to":"1948","type":"-","in":"Oct","on":"Sun>=22","at":"1:00s","_save":"0","letter":"-"},{"name":"Iceland","_from":"1947","_to":"1967","type":"-","in":"Apr","on":"Sun>=1","at":"1:00s","_save":"1:00","letter":"S"},{"name":"Iceland","_from":"1949","_to":"only","type":"-","in":"Oct","on":"30","at":"1:00s","_save":"0","letter":"-"},{"name":"Iceland","_from":"1950","_to":"1966","type":"-","in":"Oct","on":"Sun>=22","at":"1:00s","_save":"0","letter":"-"},{"name":"Iceland","_from":"1967","_to":"only","type":"-","in":"Oct","on":"29","at":"1:00s","_save":"0","letter":"-"}],"Italy":[{"name":"Italy","_from":"1916","_to":"only","type":"-","in":"Jun","on":"3","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Italy","_from":"1916","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00s","_save":"0","letter":"-"},{"name":"Italy","_from":"1917","_to":"only","type":"-","in":"Apr","on":"1","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Italy","_from":"1917","_to":"only","type":"-","in":"Sep","on":"30","at":"0:00s","_save":"0","letter":"-"},{"name":"Italy","_from":"1918","_to":"only","type":"-","in":"Mar","on":"10","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Italy","_from":"1918","_to":"1919","type":"-","in":"Oct","on":"Sun>=1","at":"0:00s","_save":"0","letter":"-"},{"name":"Italy","_from":"1919","_to":"only","type":"-","in":"Mar","on":"2","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Italy","_from":"1920","_to":"only","type":"-","in":"Mar","on":"21","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Italy","_from":"1920","_to":"only","type":"-","in":"Sep","on":"19","at":"0:00s","_save":"0","letter":"-"},{"name":"Italy","_from":"1940","_to":"only","type":"-","in":"Jun","on":"15","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Italy","_from":"1944","_to":"only","type":"-","in":"Sep","on":"17","at":"0:00s","_save":"0","letter":"-"},{"name":"Italy","_from":"1945","_to":"only","type":"-","in":"Apr","on":"2","at":"2:00","_save":"1:00","letter":"S"},{"name":"Italy","_from":"1945","_to":"only","type":"-","in":"Sep","on":"15","at":"0:00s","_save":"0","letter":"-"},{"name":"Italy","_from":"1946","_to":"only","type":"-","in":"Mar","on":"17","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Italy","_from":"1946","_to":"only","type":"-","in":"Oct","on":"6","at":"2:00s","_save":"0","letter":"-"},{"name":"Italy","_from":"1947","_to":"only","type":"-","in":"Mar","on":"16","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Italy","_from":"1947","_to":"only","type":"-","in":"Oct","on":"5","at":"0:00s","_save":"0","letter":"-"},{"name":"Italy","_from":"1948","_to":"only","type":"-","in":"Feb","on":"29","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Italy","_from":"1948","_to":"only","type":"-","in":"Oct","on":"3","at":"2:00s","_save":"0","letter":"-"},{"name":"Italy","_from":"1966","_to":"1968","type":"-","in":"May","on":"Sun>=22","at":"0:00","_save":"1:00","letter":"S"},{"name":"Italy","_from":"1966","_to":"1969","type":"-","in":"Sep","on":"Sun>=22","at":"0:00","_save":"0","letter":"-"},{"name":"Italy","_from":"1969","_to":"only","type":"-","in":"Jun","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Italy","_from":"1970","_to":"only","type":"-","in":"May","on":"31","at":"0:00","_save":"1:00","letter":"S"},{"name":"Italy","_from":"1970","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"0:00","_save":"0","letter":"-"},{"name":"Italy","_from":"1971","_to":"1972","type":"-","in":"May","on":"Sun>=22","at":"0:00","_save":"1:00","letter":"S"},{"name":"Italy","_from":"1971","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"1:00","_save":"0","letter":"-"},{"name":"Italy","_from":"1972","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Italy","_from":"1973","_to":"only","type":"-","in":"Jun","on":"3","at":"0:00","_save":"1:00","letter":"S"},{"name":"Italy","_from":"1973","_to":"1974","type":"-","in":"Sep","on":"lastSun","at":"0:00","_save":"0","letter":"-"},{"name":"Italy","_from":"1974","_to":"only","type":"-","in":"May","on":"26","at":"0:00","_save":"1:00","letter":"S"},{"name":"Italy","_from":"1975","_to":"only","type":"-","in":"Jun","on":"1","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Italy","_from":"1975","_to":"1977","type":"-","in":"Sep","on":"lastSun","at":"0:00s","_save":"0","letter":"-"},{"name":"Italy","_from":"1976","_to":"only","type":"-","in":"May","on":"30","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Italy","_from":"1977","_to":"1979","type":"-","in":"May","on":"Sun>=22","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Italy","_from":"1978","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00s","_save":"0","letter":"-"},{"name":"Italy","_from":"1979","_to":"only","type":"-","in":"Sep","on":"30","at":"0:00s","_save":"0","letter":"-"}],"Latvia":[{"name":"Latvia","_from":"1989","_to":"1996","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Latvia","_from":"1989","_to":"1996","type":"-","in":"Sep","on":"lastSun","at":"2:00s","_save":"0","letter":"-"}],"Lux":[{"name":"Lux","_from":"1916","_to":"only","type":"-","in":"May","on":"14","at":"23:00","_save":"1:00","letter":"S"},{"name":"Lux","_from":"1916","_to":"only","type":"-","in":"Oct","on":"1","at":"1:00","_save":"0","letter":"-"},{"name":"Lux","_from":"1917","_to":"only","type":"-","in":"Apr","on":"28","at":"23:00","_save":"1:00","letter":"S"},{"name":"Lux","_from":"1917","_to":"only","type":"-","in":"Sep","on":"17","at":"1:00","_save":"0","letter":"-"},{"name":"Lux","_from":"1918","_to":"only","type":"-","in":"Apr","on":"Mon>=15","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Lux","_from":"1918","_to":"only","type":"-","in":"Sep","on":"Mon>=15","at":"2:00s","_save":"0","letter":"-"},{"name":"Lux","_from":"1919","_to":"only","type":"-","in":"Mar","on":"1","at":"23:00","_save":"1:00","letter":"S"},{"name":"Lux","_from":"1919","_to":"only","type":"-","in":"Oct","on":"5","at":"3:00","_save":"0","letter":"-"},{"name":"Lux","_from":"1920","_to":"only","type":"-","in":"Feb","on":"14","at":"23:00","_save":"1:00","letter":"S"},{"name":"Lux","_from":"1920","_to":"only","type":"-","in":"Oct","on":"24","at":"2:00","_save":"0","letter":"-"},{"name":"Lux","_from":"1921","_to":"only","type":"-","in":"Mar","on":"14","at":"23:00","_save":"1:00","letter":"S"},{"name":"Lux","_from":"1921","_to":"only","type":"-","in":"Oct","on":"26","at":"2:00","_save":"0","letter":"-"},{"name":"Lux","_from":"1922","_to":"only","type":"-","in":"Mar","on":"25","at":"23:00","_save":"1:00","letter":"S"},{"name":"Lux","_from":"1922","_to":"only","type":"-","in":"Oct","on":"Sun>=2","at":"1:00","_save":"0","letter":"-"},{"name":"Lux","_from":"1923","_to":"only","type":"-","in":"Apr","on":"21","at":"23:00","_save":"1:00","letter":"S"},{"name":"Lux","_from":"1923","_to":"only","type":"-","in":"Oct","on":"Sun>=2","at":"2:00","_save":"0","letter":"-"},{"name":"Lux","_from":"1924","_to":"only","type":"-","in":"Mar","on":"29","at":"23:00","_save":"1:00","letter":"S"},{"name":"Lux","_from":"1924","_to":"1928","type":"-","in":"Oct","on":"Sun>=2","at":"1:00","_save":"0","letter":"-"},{"name":"Lux","_from":"1925","_to":"only","type":"-","in":"Apr","on":"5","at":"23:00","_save":"1:00","letter":"S"},{"name":"Lux","_from":"1926","_to":"only","type":"-","in":"Apr","on":"17","at":"23:00","_save":"1:00","letter":"S"},{"name":"Lux","_from":"1927","_to":"only","type":"-","in":"Apr","on":"9","at":"23:00","_save":"1:00","letter":"S"},{"name":"Lux","_from":"1928","_to":"only","type":"-","in":"Apr","on":"14","at":"23:00","_save":"1:00","letter":"S"},{"name":"Lux","_from":"1929","_to":"only","type":"-","in":"Apr","on":"20","at":"23:00","_save":"1:00","letter":"S"}],"Malta":[{"name":"Malta","_from":"1973","_to":"only","type":"-","in":"Mar","on":"31","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Malta","_from":"1973","_to":"only","type":"-","in":"Sep","on":"29","at":"0:00s","_save":"0","letter":"-"},{"name":"Malta","_from":"1974","_to":"only","type":"-","in":"Apr","on":"21","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Malta","_from":"1974","_to":"only","type":"-","in":"Sep","on":"16","at":"0:00s","_save":"0","letter":"-"},{"name":"Malta","_from":"1975","_to":"1979","type":"-","in":"Apr","on":"Sun>=15","at":"2:00","_save":"1:00","letter":"S"},{"name":"Malta","_from":"1975","_to":"1980","type":"-","in":"Sep","on":"Sun>=15","at":"2:00","_save":"0","letter":"-"},{"name":"Malta","_from":"1980","_to":"only","type":"-","in":"Mar","on":"31","at":"2:00","_save":"1:00","letter":"S"}],"Neth":[{"name":"Neth","_from":"1916","_to":"only","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"NST"},{"name":"Neth","_from":"1916","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"AMT"},{"name":"Neth","_from":"1917","_to":"only","type":"-","in":"Apr","on":"16","at":"2:00s","_save":"1:00","letter":"NST"},{"name":"Neth","_from":"1917","_to":"only","type":"-","in":"Sep","on":"17","at":"2:00s","_save":"0","letter":"AMT"},{"name":"Neth","_from":"1918","_to":"1921","type":"-","in":"Apr","on":"Mon>=1","at":"2:00s","_save":"1:00","letter":"NST"},{"name":"Neth","_from":"1918","_to":"1921","type":"-","in":"Sep","on":"lastMon","at":"2:00s","_save":"0","letter":"AMT"},{"name":"Neth","_from":"1922","_to":"only","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"1:00","letter":"NST"},{"name":"Neth","_from":"1922","_to":"1936","type":"-","in":"Oct","on":"Sun>=2","at":"2:00s","_save":"0","letter":"AMT"},{"name":"Neth","_from":"1923","_to":"only","type":"-","in":"Jun","on":"Fri>=1","at":"2:00s","_save":"1:00","letter":"NST"},{"name":"Neth","_from":"1924","_to":"only","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"1:00","letter":"NST"},{"name":"Neth","_from":"1925","_to":"only","type":"-","in":"Jun","on":"Fri>=1","at":"2:00s","_save":"1:00","letter":"NST"},{"name":"Neth","_from":"1926","_to":"1931","type":"-","in":"May","on":"15","at":"2:00s","_save":"1:00","letter":"NST"},{"name":"Neth","_from":"1932","_to":"only","type":"-","in":"May","on":"22","at":"2:00s","_save":"1:00","letter":"NST"},{"name":"Neth","_from":"1933","_to":"1936","type":"-","in":"May","on":"15","at":"2:00s","_save":"1:00","letter":"NST"},{"name":"Neth","_from":"1937","_to":"only","type":"-","in":"May","on":"22","at":"2:00s","_save":"1:00","letter":"NST"},{"name":"Neth","_from":"1937","_to":"only","type":"-","in":"Jul","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Neth","_from":"1937","_to":"1939","type":"-","in":"Oct","on":"Sun>=2","at":"2:00s","_save":"0","letter":"-"},{"name":"Neth","_from":"1938","_to":"1939","type":"-","in":"May","on":"15","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Neth","_from":"1945","_to":"only","type":"-","in":"Apr","on":"2","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Neth","_from":"1945","_to":"only","type":"-","in":"Sep","on":"16","at":"2:00s","_save":"0","letter":"-"}],"Norway":[{"name":"Norway","_from":"1916","_to":"only","type":"-","in":"May","on":"22","at":"1:00","_save":"1:00","letter":"S"},{"name":"Norway","_from":"1916","_to":"only","type":"-","in":"Sep","on":"30","at":"0:00","_save":"0","letter":"-"},{"name":"Norway","_from":"1945","_to":"only","type":"-","in":"Apr","on":"2","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Norway","_from":"1945","_to":"only","type":"-","in":"Oct","on":"1","at":"2:00s","_save":"0","letter":"-"},{"name":"Norway","_from":"1959","_to":"1964","type":"-","in":"Mar","on":"Sun>=15","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Norway","_from":"1959","_to":"1965","type":"-","in":"Sep","on":"Sun>=15","at":"2:00s","_save":"0","letter":"-"},{"name":"Norway","_from":"1965","_to":"only","type":"-","in":"Apr","on":"25","at":"2:00s","_save":"1:00","letter":"S"}],"Poland":[{"name":"Poland","_from":"1918","_to":"1919","type":"-","in":"Sep","on":"16","at":"2:00s","_save":"0","letter":"-"},{"name":"Poland","_from":"1919","_to":"only","type":"-","in":"Apr","on":"15","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Poland","_from":"1944","_to":"only","type":"-","in":"Apr","on":"3","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Poland","_from":"1944","_to":"only","type":"-","in":"Oct","on":"4","at":"2:00","_save":"0","letter":"-"},{"name":"Poland","_from":"1945","_to":"only","type":"-","in":"Apr","on":"29","at":"0:00","_save":"1:00","letter":"S"},{"name":"Poland","_from":"1945","_to":"only","type":"-","in":"Nov","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Poland","_from":"1946","_to":"only","type":"-","in":"Apr","on":"14","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Poland","_from":"1946","_to":"only","type":"-","in":"Oct","on":"7","at":"2:00s","_save":"0","letter":"-"},{"name":"Poland","_from":"1947","_to":"only","type":"-","in":"May","on":"4","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Poland","_from":"1947","_to":"1949","type":"-","in":"Oct","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"Poland","_from":"1948","_to":"only","type":"-","in":"Apr","on":"18","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Poland","_from":"1949","_to":"only","type":"-","in":"Apr","on":"10","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Poland","_from":"1957","_to":"only","type":"-","in":"Jun","on":"2","at":"1:00s","_save":"1:00","letter":"S"},{"name":"Poland","_from":"1957","_to":"1958","type":"-","in":"Sep","on":"lastSun","at":"1:00s","_save":"0","letter":"-"},{"name":"Poland","_from":"1958","_to":"only","type":"-","in":"Mar","on":"30","at":"1:00s","_save":"1:00","letter":"S"},{"name":"Poland","_from":"1959","_to":"only","type":"-","in":"May","on":"31","at":"1:00s","_save":"1:00","letter":"S"},{"name":"Poland","_from":"1959","_to":"1961","type":"-","in":"Oct","on":"Sun>=1","at":"1:00s","_save":"0","letter":"-"},{"name":"Poland","_from":"1960","_to":"only","type":"-","in":"Apr","on":"3","at":"1:00s","_save":"1:00","letter":"S"},{"name":"Poland","_from":"1961","_to":"1964","type":"-","in":"May","on":"lastSun","at":"1:00s","_save":"1:00","letter":"S"},{"name":"Poland","_from":"1962","_to":"1964","type":"-","in":"Sep","on":"lastSun","at":"1:00s","_save":"0","letter":"-"}],"Port":[{"name":"Port","_from":"1916","_to":"only","type":"-","in":"Jun","on":"17","at":"23:00","_save":"1:00","letter":"S"},{"name":"Port","_from":"1916","_to":"only","type":"-","in":"Nov","on":"1","at":"1:00","_save":"0","letter":"-"},{"name":"Port","_from":"1917","_to":"only","type":"-","in":"Feb","on":"28","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1917","_to":"1921","type":"-","in":"Oct","on":"14","at":"23:00s","_save":"0","letter":"-"},{"name":"Port","_from":"1918","_to":"only","type":"-","in":"Mar","on":"1","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1919","_to":"only","type":"-","in":"Feb","on":"28","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1920","_to":"only","type":"-","in":"Feb","on":"29","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1921","_to":"only","type":"-","in":"Feb","on":"28","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1924","_to":"only","type":"-","in":"Apr","on":"16","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1924","_to":"only","type":"-","in":"Oct","on":"14","at":"23:00s","_save":"0","letter":"-"},{"name":"Port","_from":"1926","_to":"only","type":"-","in":"Apr","on":"17","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1926","_to":"1929","type":"-","in":"Oct","on":"Sat>=1","at":"23:00s","_save":"0","letter":"-"},{"name":"Port","_from":"1927","_to":"only","type":"-","in":"Apr","on":"9","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1928","_to":"only","type":"-","in":"Apr","on":"14","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1929","_to":"only","type":"-","in":"Apr","on":"20","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1931","_to":"only","type":"-","in":"Apr","on":"18","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1931","_to":"1932","type":"-","in":"Oct","on":"Sat>=1","at":"23:00s","_save":"0","letter":"-"},{"name":"Port","_from":"1932","_to":"only","type":"-","in":"Apr","on":"2","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1934","_to":"only","type":"-","in":"Apr","on":"7","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1934","_to":"1938","type":"-","in":"Oct","on":"Sat>=1","at":"23:00s","_save":"0","letter":"-"},{"name":"Port","_from":"1935","_to":"only","type":"-","in":"Mar","on":"30","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1936","_to":"only","type":"-","in":"Apr","on":"18","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1937","_to":"only","type":"-","in":"Apr","on":"3","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1938","_to":"only","type":"-","in":"Mar","on":"26","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1939","_to":"only","type":"-","in":"Apr","on":"15","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1939","_to":"only","type":"-","in":"Nov","on":"18","at":"23:00s","_save":"0","letter":"-"},{"name":"Port","_from":"1940","_to":"only","type":"-","in":"Feb","on":"24","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1940","_to":"1941","type":"-","in":"Oct","on":"5","at":"23:00s","_save":"0","letter":"-"},{"name":"Port","_from":"1941","_to":"only","type":"-","in":"Apr","on":"5","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1942","_to":"1945","type":"-","in":"Mar","on":"Sat>=8","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1942","_to":"only","type":"-","in":"Apr","on":"25","at":"22:00s","_save":"2:00","letter":"M"},{"name":"Port","_from":"1942","_to":"only","type":"-","in":"Aug","on":"15","at":"22:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1942","_to":"1945","type":"-","in":"Oct","on":"Sat>=24","at":"23:00s","_save":"0","letter":"-"},{"name":"Port","_from":"1943","_to":"only","type":"-","in":"Apr","on":"17","at":"22:00s","_save":"2:00","letter":"M"},{"name":"Port","_from":"1943","_to":"1945","type":"-","in":"Aug","on":"Sat>=25","at":"22:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1944","_to":"1945","type":"-","in":"Apr","on":"Sat>=21","at":"22:00s","_save":"2:00","letter":"M"},{"name":"Port","_from":"1946","_to":"only","type":"-","in":"Apr","on":"Sat>=1","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1946","_to":"only","type":"-","in":"Oct","on":"Sat>=1","at":"23:00s","_save":"0","letter":"-"},{"name":"Port","_from":"1947","_to":"1949","type":"-","in":"Apr","on":"Sun>=1","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1947","_to":"1949","type":"-","in":"Oct","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"Port","_from":"1951","_to":"1965","type":"-","in":"Apr","on":"Sun>=1","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1951","_to":"1965","type":"-","in":"Oct","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"Port","_from":"1977","_to":"only","type":"-","in":"Mar","on":"27","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1977","_to":"only","type":"-","in":"Sep","on":"25","at":"0:00s","_save":"0","letter":"-"},{"name":"Port","_from":"1978","_to":"1979","type":"-","in":"Apr","on":"Sun>=1","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1978","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00s","_save":"0","letter":"-"},{"name":"Port","_from":"1979","_to":"1982","type":"-","in":"Sep","on":"lastSun","at":"1:00s","_save":"0","letter":"-"},{"name":"Port","_from":"1980","_to":"only","type":"-","in":"Mar","on":"lastSun","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1981","_to":"1982","type":"-","in":"Mar","on":"lastSun","at":"1:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1983","_to":"only","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"1:00","letter":"S"}],"Romania":[{"name":"Romania","_from":"1932","_to":"only","type":"-","in":"May","on":"21","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Romania","_from":"1932","_to":"1939","type":"-","in":"Oct","on":"Sun>=1","at":"0:00s","_save":"0","letter":"-"},{"name":"Romania","_from":"1933","_to":"1939","type":"-","in":"Apr","on":"Sun>=2","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Romania","_from":"1979","_to":"only","type":"-","in":"May","on":"27","at":"0:00","_save":"1:00","letter":"S"},{"name":"Romania","_from":"1979","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"0:00","_save":"0","letter":"-"},{"name":"Romania","_from":"1980","_to":"only","type":"-","in":"Apr","on":"5","at":"23:00","_save":"1:00","letter":"S"},{"name":"Romania","_from":"1980","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"1:00","_save":"0","letter":"-"},{"name":"Romania","_from":"1991","_to":"1993","type":"-","in":"Mar","on":"lastSun","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Romania","_from":"1991","_to":"1993","type":"-","in":"Sep","on":"lastSun","at":"0:00s","_save":"0","letter":"-"}],"Spain":[{"name":"Spain","_from":"1917","_to":"only","type":"-","in":"May","on":"5","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Spain","_from":"1917","_to":"1919","type":"-","in":"Oct","on":"6","at":"23:00s","_save":"0","letter":"-"},{"name":"Spain","_from":"1918","_to":"only","type":"-","in":"Apr","on":"15","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Spain","_from":"1919","_to":"only","type":"-","in":"Apr","on":"5","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Spain","_from":"1924","_to":"only","type":"-","in":"Apr","on":"16","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Spain","_from":"1924","_to":"only","type":"-","in":"Oct","on":"4","at":"23:00s","_save":"0","letter":"-"},{"name":"Spain","_from":"1926","_to":"only","type":"-","in":"Apr","on":"17","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Spain","_from":"1926","_to":"1929","type":"-","in":"Oct","on":"Sat>=1","at":"23:00s","_save":"0","letter":"-"},{"name":"Spain","_from":"1927","_to":"only","type":"-","in":"Apr","on":"9","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Spain","_from":"1928","_to":"only","type":"-","in":"Apr","on":"14","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Spain","_from":"1929","_to":"only","type":"-","in":"Apr","on":"20","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Spain","_from":"1937","_to":"only","type":"-","in":"May","on":"22","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Spain","_from":"1937","_to":"1939","type":"-","in":"Oct","on":"Sat>=1","at":"23:00s","_save":"0","letter":"-"},{"name":"Spain","_from":"1938","_to":"only","type":"-","in":"Mar","on":"22","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Spain","_from":"1939","_to":"only","type":"-","in":"Apr","on":"15","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Spain","_from":"1940","_to":"only","type":"-","in":"Mar","on":"16","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Spain","_from":"1942","_to":"only","type":"-","in":"May","on":"2","at":"22:00s","_save":"2:00","letter":"M"},{"name":"Spain","_from":"1942","_to":"only","type":"-","in":"Sep","on":"1","at":"22:00s","_save":"1:00","letter":"S"},{"name":"Spain","_from":"1943","_to":"1946","type":"-","in":"Apr","on":"Sat>=13","at":"22:00s","_save":"2:00","letter":"M"},{"name":"Spain","_from":"1943","_to":"only","type":"-","in":"Oct","on":"3","at":"22:00s","_save":"1:00","letter":"S"},{"name":"Spain","_from":"1944","_to":"only","type":"-","in":"Oct","on":"10","at":"22:00s","_save":"1:00","letter":"S"},{"name":"Spain","_from":"1945","_to":"only","type":"-","in":"Sep","on":"30","at":"1:00","_save":"1:00","letter":"S"},{"name":"Spain","_from":"1946","_to":"only","type":"-","in":"Sep","on":"30","at":"0:00","_save":"0","letter":"-"},{"name":"Spain","_from":"1949","_to":"only","type":"-","in":"Apr","on":"30","at":"23:00","_save":"1:00","letter":"S"},{"name":"Spain","_from":"1949","_to":"only","type":"-","in":"Sep","on":"30","at":"1:00","_save":"0","letter":"-"},{"name":"Spain","_from":"1974","_to":"1975","type":"-","in":"Apr","on":"Sat>=13","at":"23:00","_save":"1:00","letter":"S"},{"name":"Spain","_from":"1974","_to":"1975","type":"-","in":"Oct","on":"Sun>=1","at":"1:00","_save":"0","letter":"-"},{"name":"Spain","_from":"1976","_to":"only","type":"-","in":"Mar","on":"27","at":"23:00","_save":"1:00","letter":"S"},{"name":"Spain","_from":"1976","_to":"1977","type":"-","in":"Sep","on":"lastSun","at":"1:00","_save":"0","letter":"-"},{"name":"Spain","_from":"1977","_to":"1978","type":"-","in":"Apr","on":"2","at":"23:00","_save":"1:00","letter":"S"},{"name":"Spain","_from":"1978","_to":"only","type":"-","in":"Oct","on":"1","at":"1:00","_save":"0","letter":"-"}],"SpainAfrica":[{"name":"SpainAfrica","_from":"1967","_to":"only","type":"-","in":"Jun","on":"3","at":"12:00","_save":"1:00","letter":"S"},{"name":"SpainAfrica","_from":"1967","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"SpainAfrica","_from":"1974","_to":"only","type":"-","in":"Jun","on":"24","at":"0:00","_save":"1:00","letter":"S"},{"name":"SpainAfrica","_from":"1974","_to":"only","type":"-","in":"Sep","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"SpainAfrica","_from":"1976","_to":"1977","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"SpainAfrica","_from":"1976","_to":"only","type":"-","in":"Aug","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"SpainAfrica","_from":"1977","_to":"only","type":"-","in":"Sep","on":"28","at":"0:00","_save":"0","letter":"-"},{"name":"SpainAfrica","_from":"1978","_to":"only","type":"-","in":"Jun","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"SpainAfrica","_from":"1978","_to":"only","type":"-","in":"Aug","on":"4","at":"0:00","_save":"0","letter":"-"}],"Swiss":[{"name":"Swiss","_from":"1941","_to":"1942","type":"-","in":"May","on":"Mon>=1","at":"1:00","_save":"1:00","letter":"S"},{"name":"Swiss","_from":"1941","_to":"1942","type":"-","in":"Oct","on":"Mon>=1","at":"2:00","_save":"0","letter":"-"}],"Turkey":[{"name":"Turkey","_from":"1916","_to":"only","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1916","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Turkey","_from":"1920","_to":"only","type":"-","in":"Mar","on":"28","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1920","_to":"only","type":"-","in":"Oct","on":"25","at":"0:00","_save":"0","letter":"-"},{"name":"Turkey","_from":"1921","_to":"only","type":"-","in":"Apr","on":"3","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1921","_to":"only","type":"-","in":"Oct","on":"3","at":"0:00","_save":"0","letter":"-"},{"name":"Turkey","_from":"1922","_to":"only","type":"-","in":"Mar","on":"26","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1922","_to":"only","type":"-","in":"Oct","on":"8","at":"0:00","_save":"0","letter":"-"},{"name":"Turkey","_from":"1924","_to":"only","type":"-","in":"May","on":"13","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1924","_to":"1925","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Turkey","_from":"1925","_to":"only","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1940","_to":"only","type":"-","in":"Jun","on":"30","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1940","_to":"only","type":"-","in":"Oct","on":"5","at":"0:00","_save":"0","letter":"-"},{"name":"Turkey","_from":"1940","_to":"only","type":"-","in":"Dec","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1941","_to":"only","type":"-","in":"Sep","on":"21","at":"0:00","_save":"0","letter":"-"},{"name":"Turkey","_from":"1942","_to":"only","type":"-","in":"Apr","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1942","_to":"only","type":"-","in":"Nov","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Turkey","_from":"1945","_to":"only","type":"-","in":"Apr","on":"2","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1945","_to":"only","type":"-","in":"Oct","on":"8","at":"0:00","_save":"0","letter":"-"},{"name":"Turkey","_from":"1946","_to":"only","type":"-","in":"Jun","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1946","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Turkey","_from":"1947","_to":"1948","type":"-","in":"Apr","on":"Sun>=16","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1947","_to":"1950","type":"-","in":"Oct","on":"Sun>=2","at":"0:00","_save":"0","letter":"-"},{"name":"Turkey","_from":"1949","_to":"only","type":"-","in":"Apr","on":"10","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1950","_to":"only","type":"-","in":"Apr","on":"19","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1951","_to":"only","type":"-","in":"Apr","on":"22","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1951","_to":"only","type":"-","in":"Oct","on":"8","at":"0:00","_save":"0","letter":"-"},{"name":"Turkey","_from":"1962","_to":"only","type":"-","in":"Jul","on":"15","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1962","_to":"only","type":"-","in":"Oct","on":"8","at":"0:00","_save":"0","letter":"-"},{"name":"Turkey","_from":"1964","_to":"only","type":"-","in":"May","on":"15","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1964","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Turkey","_from":"1970","_to":"1972","type":"-","in":"May","on":"Sun>=2","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1970","_to":"1972","type":"-","in":"Oct","on":"Sun>=2","at":"0:00","_save":"0","letter":"-"},{"name":"Turkey","_from":"1973","_to":"only","type":"-","in":"Jun","on":"3","at":"1:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1973","_to":"only","type":"-","in":"Nov","on":"4","at":"3:00","_save":"0","letter":"-"},{"name":"Turkey","_from":"1974","_to":"only","type":"-","in":"Mar","on":"31","at":"2:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1974","_to":"only","type":"-","in":"Nov","on":"3","at":"5:00","_save":"0","letter":"-"},{"name":"Turkey","_from":"1975","_to":"only","type":"-","in":"Mar","on":"30","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1975","_to":"1976","type":"-","in":"Oct","on":"lastSun","at":"0:00","_save":"0","letter":"-"},{"name":"Turkey","_from":"1976","_to":"only","type":"-","in":"Jun","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1977","_to":"1978","type":"-","in":"Apr","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1977","_to":"only","type":"-","in":"Oct","on":"16","at":"0:00","_save":"0","letter":"-"},{"name":"Turkey","_from":"1979","_to":"1980","type":"-","in":"Apr","on":"Sun>=1","at":"3:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1979","_to":"1982","type":"-","in":"Oct","on":"Mon>=11","at":"0:00","_save":"0","letter":"-"},{"name":"Turkey","_from":"1981","_to":"1982","type":"-","in":"Mar","on":"lastSun","at":"3:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1983","_to":"only","type":"-","in":"Jul","on":"31","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1983","_to":"only","type":"-","in":"Oct","on":"2","at":"0:00","_save":"0","letter":"-"},{"name":"Turkey","_from":"1985","_to":"only","type":"-","in":"Apr","on":"20","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1985","_to":"only","type":"-","in":"Sep","on":"28","at":"0:00","_save":"0","letter":"-"},{"name":"Turkey","_from":"1986","_to":"1990","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1986","_to":"1990","type":"-","in":"Sep","on":"lastSun","at":"2:00s","_save":"0","letter":"-"},{"name":"Turkey","_from":"1991","_to":"2006","type":"-","in":"Mar","on":"lastSun","at":"1:00s","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1991","_to":"1995","type":"-","in":"Sep","on":"lastSun","at":"1:00s","_save":"0","letter":"-"},{"name":"Turkey","_from":"1996","_to":"2006","type":"-","in":"Oct","on":"lastSun","at":"1:00s","_save":"0","letter":"-"}],"US":[{"name":"US","_from":"1918","_to":"1919","type":"-","in":"Mar","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"US","_from":"1918","_to":"1919","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"US","_from":"1942","_to":"only","type":"-","in":"Feb","on":"9","at":"2:00","_save":"1:00","letter":"W"},{"name":"US","_from":"1945","_to":"only","type":"-","in":"Aug","on":"14","at":"23:00u","_save":"1:00","letter":"P"},{"name":"US","_from":"1945","_to":"only","type":"-","in":"Sep","on":"30","at":"2:00","_save":"0","letter":"S"},{"name":"US","_from":"1967","_to":"2006","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"US","_from":"1967","_to":"1973","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"US","_from":"1974","_to":"only","type":"-","in":"Jan","on":"6","at":"2:00","_save":"1:00","letter":"D"},{"name":"US","_from":"1975","_to":"only","type":"-","in":"Feb","on":"23","at":"2:00","_save":"1:00","letter":"D"},{"name":"US","_from":"1976","_to":"1986","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"US","_from":"1987","_to":"2006","type":"-","in":"Apr","on":"Sun>=1","at":"2:00","_save":"1:00","letter":"D"},{"name":"US","_from":"2007","_to":"max","type":"-","in":"Mar","on":"Sun>=8","at":"2:00","_save":"1:00","letter":"D"},{"name":"US","_from":"2007","_to":"max","type":"-","in":"Nov","on":"Sun>=1","at":"2:00","_save":"0","letter":"S"}],"NYC":[{"name":"NYC","_from":"1920","_to":"only","type":"-","in":"Mar","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"NYC","_from":"1920","_to":"only","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"NYC","_from":"1921","_to":"1966","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"NYC","_from":"1921","_to":"1954","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"NYC","_from":"1955","_to":"1966","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"}],"Chicago":[{"name":"Chicago","_from":"1920","_to":"only","type":"-","in":"Jun","on":"13","at":"2:00","_save":"1:00","letter":"D"},{"name":"Chicago","_from":"1920","_to":"1921","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Chicago","_from":"1921","_to":"only","type":"-","in":"Mar","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Chicago","_from":"1922","_to":"1966","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Chicago","_from":"1922","_to":"1954","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Chicago","_from":"1955","_to":"1966","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"}],"Denver":[{"name":"Denver","_from":"1920","_to":"1921","type":"-","in":"Mar","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Denver","_from":"1920","_to":"only","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Denver","_from":"1921","_to":"only","type":"-","in":"May","on":"22","at":"2:00","_save":"0","letter":"S"},{"name":"Denver","_from":"1965","_to":"1966","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Denver","_from":"1965","_to":"1966","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"}],"CA":[{"name":"CA","_from":"1948","_to":"only","type":"-","in":"Mar","on":"14","at":"2:00","_save":"1:00","letter":"D"},{"name":"CA","_from":"1949","_to":"only","type":"-","in":"Jan","on":"1","at":"2:00","_save":"0","letter":"S"},{"name":"CA","_from":"1950","_to":"1966","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"CA","_from":"1950","_to":"1961","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"CA","_from":"1962","_to":"1966","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"}],"Indianapolis":[{"name":"Indianapolis","_from":"1941","_to":"only","type":"-","in":"Jun","on":"22","at":"2:00","_save":"1:00","letter":"D"},{"name":"Indianapolis","_from":"1941","_to":"1954","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Indianapolis","_from":"1946","_to":"1954","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"}],"Marengo":[{"name":"Marengo","_from":"1951","_to":"only","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Marengo","_from":"1951","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Marengo","_from":"1954","_to":"1960","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Marengo","_from":"1954","_to":"1960","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"}],"Vincennes":[{"name":"Vincennes","_from":"1946","_to":"only","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Vincennes","_from":"1946","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Vincennes","_from":"1953","_to":"1954","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Vincennes","_from":"1953","_to":"1959","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Vincennes","_from":"1955","_to":"only","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Vincennes","_from":"1956","_to":"1963","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Vincennes","_from":"1960","_to":"only","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Vincennes","_from":"1961","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Vincennes","_from":"1962","_to":"1963","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"}],"Perry":[{"name":"Perry","_from":"1946","_to":"only","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Perry","_from":"1946","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Perry","_from":"1953","_to":"1954","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Perry","_from":"1953","_to":"1959","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Perry","_from":"1955","_to":"only","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Perry","_from":"1956","_to":"1963","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Perry","_from":"1960","_to":"only","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Perry","_from":"1961","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Perry","_from":"1962","_to":"1963","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"}],"Pike":[{"name":"Pike","_from":"1955","_to":"only","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Pike","_from":"1955","_to":"1960","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Pike","_from":"1956","_to":"1964","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Pike","_from":"1961","_to":"1964","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"}],"Starke":[{"name":"Starke","_from":"1947","_to":"1961","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Starke","_from":"1947","_to":"1954","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Starke","_from":"1955","_to":"1956","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Starke","_from":"1957","_to":"1958","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Starke","_from":"1959","_to":"1961","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"}],"Pulaski":[{"name":"Pulaski","_from":"1946","_to":"1960","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Pulaski","_from":"1946","_to":"1954","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Pulaski","_from":"1955","_to":"1956","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Pulaski","_from":"1957","_to":"1960","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"}],"Louisville":[{"name":"Louisville","_from":"1921","_to":"only","type":"-","in":"May","on":"1","at":"2:00","_save":"1:00","letter":"D"},{"name":"Louisville","_from":"1921","_to":"only","type":"-","in":"Sep","on":"1","at":"2:00","_save":"0","letter":"S"},{"name":"Louisville","_from":"1941","_to":"1961","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Louisville","_from":"1941","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Louisville","_from":"1946","_to":"only","type":"-","in":"Jun","on":"2","at":"2:00","_save":"0","letter":"S"},{"name":"Louisville","_from":"1950","_to":"1955","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Louisville","_from":"1956","_to":"1960","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"}],"Detroit":[{"name":"Detroit","_from":"1948","_to":"only","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Detroit","_from":"1948","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Detroit","_from":"1967","_to":"only","type":"-","in":"Jun","on":"14","at":"2:00","_save":"1:00","letter":"D"},{"name":"Detroit","_from":"1967","_to":"only","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"}],"Menominee":[{"name":"Menominee","_from":"1946","_to":"only","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Menominee","_from":"1946","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Menominee","_from":"1966","_to":"only","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Menominee","_from":"1966","_to":"only","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"}],"Canada":[{"name":"Canada","_from":"1918","_to":"only","type":"-","in":"Apr","on":"14","at":"2:00","_save":"1:00","letter":"D"},{"name":"Canada","_from":"1918","_to":"only","type":"-","in":"Oct","on":"27","at":"2:00","_save":"0","letter":"S"},{"name":"Canada","_from":"1942","_to":"only","type":"-","in":"Feb","on":"9","at":"2:00","_save":"1:00","letter":"W"},{"name":"Canada","_from":"1945","_to":"only","type":"-","in":"Aug","on":"14","at":"23:00u","_save":"1:00","letter":"P"},{"name":"Canada","_from":"1945","_to":"only","type":"-","in":"Sep","on":"30","at":"2:00","_save":"0","letter":"S"},{"name":"Canada","_from":"1974","_to":"1986","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Canada","_from":"1974","_to":"2006","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Canada","_from":"1987","_to":"2006","type":"-","in":"Apr","on":"Sun>=1","at":"2:00","_save":"1:00","letter":"D"},{"name":"Canada","_from":"2007","_to":"max","type":"-","in":"Mar","on":"Sun>=8","at":"2:00","_save":"1:00","letter":"D"},{"name":"Canada","_from":"2007","_to":"max","type":"-","in":"Nov","on":"Sun>=1","at":"2:00","_save":"0","letter":"S"}],"StJohns":[{"name":"StJohns","_from":"1917","_to":"only","type":"-","in":"Apr","on":"8","at":"2:00","_save":"1:00","letter":"D"},{"name":"StJohns","_from":"1917","_to":"only","type":"-","in":"Sep","on":"17","at":"2:00","_save":"0","letter":"S"},{"name":"StJohns","_from":"1919","_to":"only","type":"-","in":"May","on":"5","at":"23:00","_save":"1:00","letter":"D"},{"name":"StJohns","_from":"1919","_to":"only","type":"-","in":"Aug","on":"12","at":"23:00","_save":"0","letter":"S"},{"name":"StJohns","_from":"1920","_to":"1935","type":"-","in":"May","on":"Sun>=1","at":"23:00","_save":"1:00","letter":"D"},{"name":"StJohns","_from":"1920","_to":"1935","type":"-","in":"Oct","on":"lastSun","at":"23:00","_save":"0","letter":"S"},{"name":"StJohns","_from":"1936","_to":"1941","type":"-","in":"May","on":"Mon>=9","at":"0:00","_save":"1:00","letter":"D"},{"name":"StJohns","_from":"1936","_to":"1941","type":"-","in":"Oct","on":"Mon>=2","at":"0:00","_save":"0","letter":"S"},{"name":"StJohns","_from":"1946","_to":"1950","type":"-","in":"May","on":"Sun>=8","at":"2:00","_save":"1:00","letter":"D"},{"name":"StJohns","_from":"1946","_to":"1950","type":"-","in":"Oct","on":"Sun>=2","at":"2:00","_save":"0","letter":"S"},{"name":"StJohns","_from":"1951","_to":"1986","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"StJohns","_from":"1951","_to":"1959","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"StJohns","_from":"1960","_to":"1986","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"StJohns","_from":"1987","_to":"only","type":"-","in":"Apr","on":"Sun>=1","at":"0:01","_save":"1:00","letter":"D"},{"name":"StJohns","_from":"1987","_to":"2006","type":"-","in":"Oct","on":"lastSun","at":"0:01","_save":"0","letter":"S"},{"name":"StJohns","_from":"1988","_to":"only","type":"-","in":"Apr","on":"Sun>=1","at":"0:01","_save":"2:00","letter":"DD"},{"name":"StJohns","_from":"1989","_to":"2006","type":"-","in":"Apr","on":"Sun>=1","at":"0:01","_save":"1:00","letter":"D"},{"name":"StJohns","_from":"2007","_to":"2011","type":"-","in":"Mar","on":"Sun>=8","at":"0:01","_save":"1:00","letter":"D"},{"name":"StJohns","_from":"2007","_to":"2010","type":"-","in":"Nov","on":"Sun>=1","at":"0:01","_save":"0","letter":"S"}],"Halifax":[{"name":"Halifax","_from":"1916","_to":"only","type":"-","in":"Apr","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Halifax","_from":"1916","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"S"},{"name":"Halifax","_from":"1920","_to":"only","type":"-","in":"May","on":"9","at":"0:00","_save":"1:00","letter":"D"},{"name":"Halifax","_from":"1920","_to":"only","type":"-","in":"Aug","on":"29","at":"0:00","_save":"0","letter":"S"},{"name":"Halifax","_from":"1921","_to":"only","type":"-","in":"May","on":"6","at":"0:00","_save":"1:00","letter":"D"},{"name":"Halifax","_from":"1921","_to":"1922","type":"-","in":"Sep","on":"5","at":"0:00","_save":"0","letter":"S"},{"name":"Halifax","_from":"1922","_to":"only","type":"-","in":"Apr","on":"30","at":"0:00","_save":"1:00","letter":"D"},{"name":"Halifax","_from":"1923","_to":"1925","type":"-","in":"May","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Halifax","_from":"1923","_to":"only","type":"-","in":"Sep","on":"4","at":"0:00","_save":"0","letter":"S"},{"name":"Halifax","_from":"1924","_to":"only","type":"-","in":"Sep","on":"15","at":"0:00","_save":"0","letter":"S"},{"name":"Halifax","_from":"1925","_to":"only","type":"-","in":"Sep","on":"28","at":"0:00","_save":"0","letter":"S"},{"name":"Halifax","_from":"1926","_to":"only","type":"-","in":"May","on":"16","at":"0:00","_save":"1:00","letter":"D"},{"name":"Halifax","_from":"1926","_to":"only","type":"-","in":"Sep","on":"13","at":"0:00","_save":"0","letter":"S"},{"name":"Halifax","_from":"1927","_to":"only","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Halifax","_from":"1927","_to":"only","type":"-","in":"Sep","on":"26","at":"0:00","_save":"0","letter":"S"},{"name":"Halifax","_from":"1928","_to":"1931","type":"-","in":"May","on":"Sun>=8","at":"0:00","_save":"1:00","letter":"D"},{"name":"Halifax","_from":"1928","_to":"only","type":"-","in":"Sep","on":"9","at":"0:00","_save":"0","letter":"S"},{"name":"Halifax","_from":"1929","_to":"only","type":"-","in":"Sep","on":"3","at":"0:00","_save":"0","letter":"S"},{"name":"Halifax","_from":"1930","_to":"only","type":"-","in":"Sep","on":"15","at":"0:00","_save":"0","letter":"S"},{"name":"Halifax","_from":"1931","_to":"1932","type":"-","in":"Sep","on":"Mon>=24","at":"0:00","_save":"0","letter":"S"},{"name":"Halifax","_from":"1932","_to":"only","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Halifax","_from":"1933","_to":"only","type":"-","in":"Apr","on":"30","at":"0:00","_save":"1:00","letter":"D"},{"name":"Halifax","_from":"1933","_to":"only","type":"-","in":"Oct","on":"2","at":"0:00","_save":"0","letter":"S"},{"name":"Halifax","_from":"1934","_to":"only","type":"-","in":"May","on":"20","at":"0:00","_save":"1:00","letter":"D"},{"name":"Halifax","_from":"1934","_to":"only","type":"-","in":"Sep","on":"16","at":"0:00","_save":"0","letter":"S"},{"name":"Halifax","_from":"1935","_to":"only","type":"-","in":"Jun","on":"2","at":"0:00","_save":"1:00","letter":"D"},{"name":"Halifax","_from":"1935","_to":"only","type":"-","in":"Sep","on":"30","at":"0:00","_save":"0","letter":"S"},{"name":"Halifax","_from":"1936","_to":"only","type":"-","in":"Jun","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Halifax","_from":"1936","_to":"only","type":"-","in":"Sep","on":"14","at":"0:00","_save":"0","letter":"S"},{"name":"Halifax","_from":"1937","_to":"1938","type":"-","in":"May","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Halifax","_from":"1937","_to":"1941","type":"-","in":"Sep","on":"Mon>=24","at":"0:00","_save":"0","letter":"S"},{"name":"Halifax","_from":"1939","_to":"only","type":"-","in":"May","on":"28","at":"0:00","_save":"1:00","letter":"D"},{"name":"Halifax","_from":"1940","_to":"1941","type":"-","in":"May","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Halifax","_from":"1946","_to":"1949","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Halifax","_from":"1946","_to":"1949","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Halifax","_from":"1951","_to":"1954","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Halifax","_from":"1951","_to":"1954","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Halifax","_from":"1956","_to":"1959","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Halifax","_from":"1956","_to":"1959","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Halifax","_from":"1962","_to":"1973","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Halifax","_from":"1962","_to":"1973","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"}],"Moncton":[{"name":"Moncton","_from":"1933","_to":"1935","type":"-","in":"Jun","on":"Sun>=8","at":"1:00","_save":"1:00","letter":"D"},{"name":"Moncton","_from":"1933","_to":"1935","type":"-","in":"Sep","on":"Sun>=8","at":"1:00","_save":"0","letter":"S"},{"name":"Moncton","_from":"1936","_to":"1938","type":"-","in":"Jun","on":"Sun>=1","at":"1:00","_save":"1:00","letter":"D"},{"name":"Moncton","_from":"1936","_to":"1938","type":"-","in":"Sep","on":"Sun>=1","at":"1:00","_save":"0","letter":"S"},{"name":"Moncton","_from":"1939","_to":"only","type":"-","in":"May","on":"27","at":"1:00","_save":"1:00","letter":"D"},{"name":"Moncton","_from":"1939","_to":"1941","type":"-","in":"Sep","on":"Sat>=21","at":"1:00","_save":"0","letter":"S"},{"name":"Moncton","_from":"1940","_to":"only","type":"-","in":"May","on":"19","at":"1:00","_save":"1:00","letter":"D"},{"name":"Moncton","_from":"1941","_to":"only","type":"-","in":"May","on":"4","at":"1:00","_save":"1:00","letter":"D"},{"name":"Moncton","_from":"1946","_to":"1972","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Moncton","_from":"1946","_to":"1956","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Moncton","_from":"1957","_to":"1972","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Moncton","_from":"1993","_to":"2006","type":"-","in":"Apr","on":"Sun>=1","at":"0:01","_save":"1:00","letter":"D"},{"name":"Moncton","_from":"1993","_to":"2006","type":"-","in":"Oct","on":"lastSun","at":"0:01","_save":"0","letter":"S"}],"Mont":[{"name":"Mont","_from":"1917","_to":"only","type":"-","in":"Mar","on":"25","at":"2:00","_save":"1:00","letter":"D"},{"name":"Mont","_from":"1917","_to":"only","type":"-","in":"Apr","on":"24","at":"0:00","_save":"0","letter":"S"},{"name":"Mont","_from":"1919","_to":"only","type":"-","in":"Mar","on":"31","at":"2:30","_save":"1:00","letter":"D"},{"name":"Mont","_from":"1919","_to":"only","type":"-","in":"Oct","on":"25","at":"2:30","_save":"0","letter":"S"},{"name":"Mont","_from":"1920","_to":"only","type":"-","in":"May","on":"2","at":"2:30","_save":"1:00","letter":"D"},{"name":"Mont","_from":"1920","_to":"1922","type":"-","in":"Oct","on":"Sun>=1","at":"2:30","_save":"0","letter":"S"},{"name":"Mont","_from":"1921","_to":"only","type":"-","in":"May","on":"1","at":"2:00","_save":"1:00","letter":"D"},{"name":"Mont","_from":"1922","_to":"only","type":"-","in":"Apr","on":"30","at":"2:00","_save":"1:00","letter":"D"},{"name":"Mont","_from":"1924","_to":"only","type":"-","in":"May","on":"17","at":"2:00","_save":"1:00","letter":"D"},{"name":"Mont","_from":"1924","_to":"1926","type":"-","in":"Sep","on":"lastSun","at":"2:30","_save":"0","letter":"S"},{"name":"Mont","_from":"1925","_to":"1926","type":"-","in":"May","on":"Sun>=1","at":"2:00","_save":"1:00","letter":"D"},{"name":"Mont","_from":"1927","_to":"only","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Mont","_from":"1927","_to":"1932","type":"-","in":"Sep","on":"lastSun","at":"0:00","_save":"0","letter":"S"},{"name":"Mont","_from":"1928","_to":"1931","type":"-","in":"Apr","on":"lastSun","at":"0:00","_save":"1:00","letter":"D"},{"name":"Mont","_from":"1932","_to":"only","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Mont","_from":"1933","_to":"1940","type":"-","in":"Apr","on":"lastSun","at":"0:00","_save":"1:00","letter":"D"},{"name":"Mont","_from":"1933","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"S"},{"name":"Mont","_from":"1934","_to":"1939","type":"-","in":"Sep","on":"lastSun","at":"0:00","_save":"0","letter":"S"},{"name":"Mont","_from":"1946","_to":"1973","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Mont","_from":"1945","_to":"1948","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Mont","_from":"1949","_to":"1950","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Mont","_from":"1951","_to":"1956","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Mont","_from":"1957","_to":"1973","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"}],"Toronto":[{"name":"Toronto","_from":"1919","_to":"only","type":"-","in":"Mar","on":"30","at":"23:30","_save":"1:00","letter":"D"},{"name":"Toronto","_from":"1919","_to":"only","type":"-","in":"Oct","on":"26","at":"0:00","_save":"0","letter":"S"},{"name":"Toronto","_from":"1920","_to":"only","type":"-","in":"May","on":"2","at":"2:00","_save":"1:00","letter":"D"},{"name":"Toronto","_from":"1920","_to":"only","type":"-","in":"Sep","on":"26","at":"0:00","_save":"0","letter":"S"},{"name":"Toronto","_from":"1921","_to":"only","type":"-","in":"May","on":"15","at":"2:00","_save":"1:00","letter":"D"},{"name":"Toronto","_from":"1921","_to":"only","type":"-","in":"Sep","on":"15","at":"2:00","_save":"0","letter":"S"},{"name":"Toronto","_from":"1922","_to":"1923","type":"-","in":"May","on":"Sun>=8","at":"2:00","_save":"1:00","letter":"D"},{"name":"Toronto","_from":"1922","_to":"1926","type":"-","in":"Sep","on":"Sun>=15","at":"2:00","_save":"0","letter":"S"},{"name":"Toronto","_from":"1924","_to":"1927","type":"-","in":"May","on":"Sun>=1","at":"2:00","_save":"1:00","letter":"D"},{"name":"Toronto","_from":"1927","_to":"1932","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Toronto","_from":"1928","_to":"1931","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Toronto","_from":"1932","_to":"only","type":"-","in":"May","on":"1","at":"2:00","_save":"1:00","letter":"D"},{"name":"Toronto","_from":"1933","_to":"1940","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Toronto","_from":"1933","_to":"only","type":"-","in":"Oct","on":"1","at":"2:00","_save":"0","letter":"S"},{"name":"Toronto","_from":"1934","_to":"1939","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Toronto","_from":"1945","_to":"1946","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Toronto","_from":"1946","_to":"only","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Toronto","_from":"1947","_to":"1949","type":"-","in":"Apr","on":"lastSun","at":"0:00","_save":"1:00","letter":"D"},{"name":"Toronto","_from":"1947","_to":"1948","type":"-","in":"Sep","on":"lastSun","at":"0:00","_save":"0","letter":"S"},{"name":"Toronto","_from":"1949","_to":"only","type":"-","in":"Nov","on":"lastSun","at":"0:00","_save":"0","letter":"S"},{"name":"Toronto","_from":"1950","_to":"1973","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Toronto","_from":"1950","_to":"only","type":"-","in":"Nov","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Toronto","_from":"1951","_to":"1956","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Toronto","_from":"1957","_to":"1973","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"}],"Winn":[{"name":"Winn","_from":"1916","_to":"only","type":"-","in":"Apr","on":"23","at":"0:00","_save":"1:00","letter":"D"},{"name":"Winn","_from":"1916","_to":"only","type":"-","in":"Sep","on":"17","at":"0:00","_save":"0","letter":"S"},{"name":"Winn","_from":"1918","_to":"only","type":"-","in":"Apr","on":"14","at":"2:00","_save":"1:00","letter":"D"},{"name":"Winn","_from":"1918","_to":"only","type":"-","in":"Oct","on":"27","at":"2:00","_save":"0","letter":"S"},{"name":"Winn","_from":"1937","_to":"only","type":"-","in":"May","on":"16","at":"2:00","_save":"1:00","letter":"D"},{"name":"Winn","_from":"1937","_to":"only","type":"-","in":"Sep","on":"26","at":"2:00","_save":"0","letter":"S"},{"name":"Winn","_from":"1942","_to":"only","type":"-","in":"Feb","on":"9","at":"2:00","_save":"1:00","letter":"W"},{"name":"Winn","_from":"1945","_to":"only","type":"-","in":"Aug","on":"14","at":"23:00u","_save":"1:00","letter":"P"},{"name":"Winn","_from":"1945","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Winn","_from":"1946","_to":"only","type":"-","in":"May","on":"12","at":"2:00","_save":"1:00","letter":"D"},{"name":"Winn","_from":"1946","_to":"only","type":"-","in":"Oct","on":"13","at":"2:00","_save":"0","letter":"S"},{"name":"Winn","_from":"1947","_to":"1949","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Winn","_from":"1947","_to":"1949","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Winn","_from":"1950","_to":"only","type":"-","in":"May","on":"1","at":"2:00","_save":"1:00","letter":"D"},{"name":"Winn","_from":"1950","_to":"only","type":"-","in":"Sep","on":"30","at":"2:00","_save":"0","letter":"S"},{"name":"Winn","_from":"1951","_to":"1960","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Winn","_from":"1951","_to":"1958","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Winn","_from":"1959","_to":"only","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Winn","_from":"1960","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Winn","_from":"1963","_to":"only","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Winn","_from":"1963","_to":"only","type":"-","in":"Sep","on":"22","at":"2:00","_save":"0","letter":"S"},{"name":"Winn","_from":"1966","_to":"1986","type":"-","in":"Apr","on":"lastSun","at":"2:00s","_save":"1:00","letter":"D"},{"name":"Winn","_from":"1966","_to":"2005","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"0","letter":"S"},{"name":"Winn","_from":"1987","_to":"2005","type":"-","in":"Apr","on":"Sun>=1","at":"2:00s","_save":"1:00","letter":"D"}],"Regina":[{"name":"Regina","_from":"1918","_to":"only","type":"-","in":"Apr","on":"14","at":"2:00","_save":"1:00","letter":"D"},{"name":"Regina","_from":"1918","_to":"only","type":"-","in":"Oct","on":"27","at":"2:00","_save":"0","letter":"S"},{"name":"Regina","_from":"1930","_to":"1934","type":"-","in":"May","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Regina","_from":"1930","_to":"1934","type":"-","in":"Oct","on":"Sun>=1","at":"0:00","_save":"0","letter":"S"},{"name":"Regina","_from":"1937","_to":"1941","type":"-","in":"Apr","on":"Sun>=8","at":"0:00","_save":"1:00","letter":"D"},{"name":"Regina","_from":"1937","_to":"only","type":"-","in":"Oct","on":"Sun>=8","at":"0:00","_save":"0","letter":"S"},{"name":"Regina","_from":"1938","_to":"only","type":"-","in":"Oct","on":"Sun>=1","at":"0:00","_save":"0","letter":"S"},{"name":"Regina","_from":"1939","_to":"1941","type":"-","in":"Oct","on":"Sun>=8","at":"0:00","_save":"0","letter":"S"},{"name":"Regina","_from":"1942","_to":"only","type":"-","in":"Feb","on":"9","at":"2:00","_save":"1:00","letter":"W"},{"name":"Regina","_from":"1945","_to":"only","type":"-","in":"Aug","on":"14","at":"23:00u","_save":"1:00","letter":"P"},{"name":"Regina","_from":"1945","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Regina","_from":"1946","_to":"only","type":"-","in":"Apr","on":"Sun>=8","at":"2:00","_save":"1:00","letter":"D"},{"name":"Regina","_from":"1946","_to":"only","type":"-","in":"Oct","on":"Sun>=8","at":"2:00","_save":"0","letter":"S"},{"name":"Regina","_from":"1947","_to":"1957","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Regina","_from":"1947","_to":"1957","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Regina","_from":"1959","_to":"only","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Regina","_from":"1959","_to":"only","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"}],"Swift":[{"name":"Swift","_from":"1957","_to":"only","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Swift","_from":"1957","_to":"only","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Swift","_from":"1959","_to":"1961","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Swift","_from":"1959","_to":"only","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Swift","_from":"1960","_to":"1961","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"}],"Edm":[{"name":"Edm","_from":"1918","_to":"1919","type":"-","in":"Apr","on":"Sun>=8","at":"2:00","_save":"1:00","letter":"D"},{"name":"Edm","_from":"1918","_to":"only","type":"-","in":"Oct","on":"27","at":"2:00","_save":"0","letter":"S"},{"name":"Edm","_from":"1919","_to":"only","type":"-","in":"May","on":"27","at":"2:00","_save":"0","letter":"S"},{"name":"Edm","_from":"1920","_to":"1923","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Edm","_from":"1920","_to":"only","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Edm","_from":"1921","_to":"1923","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Edm","_from":"1942","_to":"only","type":"-","in":"Feb","on":"9","at":"2:00","_save":"1:00","letter":"W"},{"name":"Edm","_from":"1945","_to":"only","type":"-","in":"Aug","on":"14","at":"23:00u","_save":"1:00","letter":"P"},{"name":"Edm","_from":"1945","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Edm","_from":"1947","_to":"only","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Edm","_from":"1947","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Edm","_from":"1967","_to":"only","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Edm","_from":"1967","_to":"only","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Edm","_from":"1969","_to":"only","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Edm","_from":"1969","_to":"only","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Edm","_from":"1972","_to":"1986","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Edm","_from":"1972","_to":"2006","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"}],"Vanc":[{"name":"Vanc","_from":"1918","_to":"only","type":"-","in":"Apr","on":"14","at":"2:00","_save":"1:00","letter":"D"},{"name":"Vanc","_from":"1918","_to":"only","type":"-","in":"Oct","on":"27","at":"2:00","_save":"0","letter":"S"},{"name":"Vanc","_from":"1942","_to":"only","type":"-","in":"Feb","on":"9","at":"2:00","_save":"1:00","letter":"W"},{"name":"Vanc","_from":"1945","_to":"only","type":"-","in":"Aug","on":"14","at":"23:00u","_save":"1:00","letter":"P"},{"name":"Vanc","_from":"1945","_to":"only","type":"-","in":"Sep","on":"30","at":"2:00","_save":"0","letter":"S"},{"name":"Vanc","_from":"1946","_to":"1986","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Vanc","_from":"1946","_to":"only","type":"-","in":"Oct","on":"13","at":"2:00","_save":"0","letter":"S"},{"name":"Vanc","_from":"1947","_to":"1961","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Vanc","_from":"1962","_to":"2006","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"}],"NT_YK":[{"name":"NT_YK","_from":"1918","_to":"only","type":"-","in":"Apr","on":"14","at":"2:00","_save":"1:00","letter":"D"},{"name":"NT_YK","_from":"1918","_to":"only","type":"-","in":"Oct","on":"27","at":"2:00","_save":"0","letter":"S"},{"name":"NT_YK","_from":"1919","_to":"only","type":"-","in":"May","on":"25","at":"2:00","_save":"1:00","letter":"D"},{"name":"NT_YK","_from":"1919","_to":"only","type":"-","in":"Nov","on":"1","at":"0:00","_save":"0","letter":"S"},{"name":"NT_YK","_from":"1942","_to":"only","type":"-","in":"Feb","on":"9","at":"2:00","_save":"1:00","letter":"W"},{"name":"NT_YK","_from":"1945","_to":"only","type":"-","in":"Aug","on":"14","at":"23:00u","_save":"1:00","letter":"P"},{"name":"NT_YK","_from":"1945","_to":"only","type":"-","in":"Sep","on":"30","at":"2:00","_save":"0","letter":"S"},{"name":"NT_YK","_from":"1965","_to":"only","type":"-","in":"Apr","on":"lastSun","at":"0:00","_save":"2:00","letter":"DD"},{"name":"NT_YK","_from":"1965","_to":"only","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"NT_YK","_from":"1980","_to":"1986","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"NT_YK","_from":"1980","_to":"2006","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"NT_YK","_from":"1987","_to":"2006","type":"-","in":"Apr","on":"Sun>=1","at":"2:00","_save":"1:00","letter":"D"}],"Mexico":[{"name":"Mexico","_from":"1939","_to":"only","type":"-","in":"Feb","on":"5","at":"0:00","_save":"1:00","letter":"D"},{"name":"Mexico","_from":"1939","_to":"only","type":"-","in":"Jun","on":"25","at":"0:00","_save":"0","letter":"S"},{"name":"Mexico","_from":"1940","_to":"only","type":"-","in":"Dec","on":"9","at":"0:00","_save":"1:00","letter":"D"},{"name":"Mexico","_from":"1941","_to":"only","type":"-","in":"Apr","on":"1","at":"0:00","_save":"0","letter":"S"},{"name":"Mexico","_from":"1943","_to":"only","type":"-","in":"Dec","on":"16","at":"0:00","_save":"1:00","letter":"W"},{"name":"Mexico","_from":"1944","_to":"only","type":"-","in":"May","on":"1","at":"0:00","_save":"0","letter":"S"},{"name":"Mexico","_from":"1950","_to":"only","type":"-","in":"Feb","on":"12","at":"0:00","_save":"1:00","letter":"D"},{"name":"Mexico","_from":"1950","_to":"only","type":"-","in":"Jul","on":"30","at":"0:00","_save":"0","letter":"S"},{"name":"Mexico","_from":"1996","_to":"2000","type":"-","in":"Apr","on":"Sun>=1","at":"2:00","_save":"1:00","letter":"D"},{"name":"Mexico","_from":"1996","_to":"2000","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Mexico","_from":"2001","_to":"only","type":"-","in":"May","on":"Sun>=1","at":"2:00","_save":"1:00","letter":"D"},{"name":"Mexico","_from":"2001","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Mexico","_from":"2002","_to":"max","type":"-","in":"Apr","on":"Sun>=1","at":"2:00","_save":"1:00","letter":"D"},{"name":"Mexico","_from":"2002","_to":"max","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"}],"Bahamas":[{"name":"Bahamas","_from":"1964","_to":"1975","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Bahamas","_from":"1964","_to":"1975","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"}],"Barb":[{"name":"Barb","_from":"1977","_to":"only","type":"-","in":"Jun","on":"12","at":"2:00","_save":"1:00","letter":"D"},{"name":"Barb","_from":"1977","_to":"1978","type":"-","in":"Oct","on":"Sun>=1","at":"2:00","_save":"0","letter":"S"},{"name":"Barb","_from":"1978","_to":"1980","type":"-","in":"Apr","on":"Sun>=15","at":"2:00","_save":"1:00","letter":"D"},{"name":"Barb","_from":"1979","_to":"only","type":"-","in":"Sep","on":"30","at":"2:00","_save":"0","letter":"S"},{"name":"Barb","_from":"1980","_to":"only","type":"-","in":"Sep","on":"25","at":"2:00","_save":"0","letter":"S"}],"Belize":[{"name":"Belize","_from":"1918","_to":"1942","type":"-","in":"Oct","on":"Sun>=2","at":"0:00","_save":"0:30","letter":"HD"},{"name":"Belize","_from":"1919","_to":"1943","type":"-","in":"Feb","on":"Sun>=9","at":"0:00","_save":"0","letter":"S"},{"name":"Belize","_from":"1973","_to":"only","type":"-","in":"Dec","on":"5","at":"0:00","_save":"1:00","letter":"D"},{"name":"Belize","_from":"1974","_to":"only","type":"-","in":"Feb","on":"9","at":"0:00","_save":"0","letter":"S"},{"name":"Belize","_from":"1982","_to":"only","type":"-","in":"Dec","on":"18","at":"0:00","_save":"1:00","letter":"D"},{"name":"Belize","_from":"1983","_to":"only","type":"-","in":"Feb","on":"12","at":"0:00","_save":"0","letter":"S"}],"CR":[{"name":"CR","_from":"1979","_to":"1980","type":"-","in":"Feb","on":"lastSun","at":"0:00","_save":"1:00","letter":"D"},{"name":"CR","_from":"1979","_to":"1980","type":"-","in":"Jun","on":"Sun>=1","at":"0:00","_save":"0","letter":"S"},{"name":"CR","_from":"1991","_to":"1992","type":"-","in":"Jan","on":"Sat>=15","at":"0:00","_save":"1:00","letter":"D"},{"name":"CR","_from":"1991","_to":"only","type":"-","in":"Jul","on":"1","at":"0:00","_save":"0","letter":"S"},{"name":"CR","_from":"1992","_to":"only","type":"-","in":"Mar","on":"15","at":"0:00","_save":"0","letter":"S"}],"Cuba":[{"name":"Cuba","_from":"1928","_to":"only","type":"-","in":"Jun","on":"10","at":"0:00","_save":"1:00","letter":"D"},{"name":"Cuba","_from":"1928","_to":"only","type":"-","in":"Oct","on":"10","at":"0:00","_save":"0","letter":"S"},{"name":"Cuba","_from":"1940","_to":"1942","type":"-","in":"Jun","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Cuba","_from":"1940","_to":"1942","type":"-","in":"Sep","on":"Sun>=1","at":"0:00","_save":"0","letter":"S"},{"name":"Cuba","_from":"1945","_to":"1946","type":"-","in":"Jun","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Cuba","_from":"1945","_to":"1946","type":"-","in":"Sep","on":"Sun>=1","at":"0:00","_save":"0","letter":"S"},{"name":"Cuba","_from":"1965","_to":"only","type":"-","in":"Jun","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Cuba","_from":"1965","_to":"only","type":"-","in":"Sep","on":"30","at":"0:00","_save":"0","letter":"S"},{"name":"Cuba","_from":"1966","_to":"only","type":"-","in":"May","on":"29","at":"0:00","_save":"1:00","letter":"D"},{"name":"Cuba","_from":"1966","_to":"only","type":"-","in":"Oct","on":"2","at":"0:00","_save":"0","letter":"S"},{"name":"Cuba","_from":"1967","_to":"only","type":"-","in":"Apr","on":"8","at":"0:00","_save":"1:00","letter":"D"},{"name":"Cuba","_from":"1967","_to":"1968","type":"-","in":"Sep","on":"Sun>=8","at":"0:00","_save":"0","letter":"S"},{"name":"Cuba","_from":"1968","_to":"only","type":"-","in":"Apr","on":"14","at":"0:00","_save":"1:00","letter":"D"},{"name":"Cuba","_from":"1969","_to":"1977","type":"-","in":"Apr","on":"lastSun","at":"0:00","_save":"1:00","letter":"D"},{"name":"Cuba","_from":"1969","_to":"1971","type":"-","in":"Oct","on":"lastSun","at":"0:00","_save":"0","letter":"S"},{"name":"Cuba","_from":"1972","_to":"1974","type":"-","in":"Oct","on":"8","at":"0:00","_save":"0","letter":"S"},{"name":"Cuba","_from":"1975","_to":"1977","type":"-","in":"Oct","on":"lastSun","at":"0:00","_save":"0","letter":"S"},{"name":"Cuba","_from":"1978","_to":"only","type":"-","in":"May","on":"7","at":"0:00","_save":"1:00","letter":"D"},{"name":"Cuba","_from":"1978","_to":"1990","type":"-","in":"Oct","on":"Sun>=8","at":"0:00","_save":"0","letter":"S"},{"name":"Cuba","_from":"1979","_to":"1980","type":"-","in":"Mar","on":"Sun>=15","at":"0:00","_save":"1:00","letter":"D"},{"name":"Cuba","_from":"1981","_to":"1985","type":"-","in":"May","on":"Sun>=5","at":"0:00","_save":"1:00","letter":"D"},{"name":"Cuba","_from":"1986","_to":"1989","type":"-","in":"Mar","on":"Sun>=14","at":"0:00","_save":"1:00","letter":"D"},{"name":"Cuba","_from":"1990","_to":"1997","type":"-","in":"Apr","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Cuba","_from":"1991","_to":"1995","type":"-","in":"Oct","on":"Sun>=8","at":"0:00s","_save":"0","letter":"S"},{"name":"Cuba","_from":"1996","_to":"only","type":"-","in":"Oct","on":"6","at":"0:00s","_save":"0","letter":"S"},{"name":"Cuba","_from":"1997","_to":"only","type":"-","in":"Oct","on":"12","at":"0:00s","_save":"0","letter":"S"},{"name":"Cuba","_from":"1998","_to":"1999","type":"-","in":"Mar","on":"lastSun","at":"0:00s","_save":"1:00","letter":"D"},{"name":"Cuba","_from":"1998","_to":"2003","type":"-","in":"Oct","on":"lastSun","at":"0:00s","_save":"0","letter":"S"},{"name":"Cuba","_from":"2000","_to":"2004","type":"-","in":"Apr","on":"Sun>=1","at":"0:00s","_save":"1:00","letter":"D"},{"name":"Cuba","_from":"2006","_to":"2010","type":"-","in":"Oct","on":"lastSun","at":"0:00s","_save":"0","letter":"S"},{"name":"Cuba","_from":"2007","_to":"only","type":"-","in":"Mar","on":"Sun>=8","at":"0:00s","_save":"1:00","letter":"D"},{"name":"Cuba","_from":"2008","_to":"only","type":"-","in":"Mar","on":"Sun>=15","at":"0:00s","_save":"1:00","letter":"D"},{"name":"Cuba","_from":"2009","_to":"2010","type":"-","in":"Mar","on":"Sun>=8","at":"0:00s","_save":"1:00","letter":"D"},{"name":"Cuba","_from":"2011","_to":"only","type":"-","in":"Mar","on":"Sun>=15","at":"0:00s","_save":"1:00","letter":"D"},{"name":"Cuba","_from":"2011","_to":"only","type":"-","in":"Nov","on":"13","at":"0:00s","_save":"0","letter":"S"},{"name":"Cuba","_from":"2012","_to":"only","type":"-","in":"Apr","on":"1","at":"0:00s","_save":"1:00","letter":"D"},{"name":"Cuba","_from":"2012","_to":"max","type":"-","in":"Nov","on":"Sun>=1","at":"0:00s","_save":"0","letter":"S"},{"name":"Cuba","_from":"2013","_to":"max","type":"-","in":"Mar","on":"Sun>=8","at":"0:00s","_save":"1:00","letter":"D"}],"DR":[{"name":"DR","_from":"1966","_to":"only","type":"-","in":"Oct","on":"30","at":"0:00","_save":"1:00","letter":"D"},{"name":"DR","_from":"1967","_to":"only","type":"-","in":"Feb","on":"28","at":"0:00","_save":"0","letter":"S"},{"name":"DR","_from":"1969","_to":"1973","type":"-","in":"Oct","on":"lastSun","at":"0:00","_save":"0:30","letter":"HD"},{"name":"DR","_from":"1970","_to":"only","type":"-","in":"Feb","on":"21","at":"0:00","_save":"0","letter":"S"},{"name":"DR","_from":"1971","_to":"only","type":"-","in":"Jan","on":"20","at":"0:00","_save":"0","letter":"S"},{"name":"DR","_from":"1972","_to":"1974","type":"-","in":"Jan","on":"21","at":"0:00","_save":"0","letter":"S"}],"Salv":[{"name":"Salv","_from":"1987","_to":"1988","type":"-","in":"May","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Salv","_from":"1987","_to":"1988","type":"-","in":"Sep","on":"lastSun","at":"0:00","_save":"0","letter":"S"}],"Guat":[{"name":"Guat","_from":"1973","_to":"only","type":"-","in":"Nov","on":"25","at":"0:00","_save":"1:00","letter":"D"},{"name":"Guat","_from":"1974","_to":"only","type":"-","in":"Feb","on":"24","at":"0:00","_save":"0","letter":"S"},{"name":"Guat","_from":"1983","_to":"only","type":"-","in":"May","on":"21","at":"0:00","_save":"1:00","letter":"D"},{"name":"Guat","_from":"1983","_to":"only","type":"-","in":"Sep","on":"22","at":"0:00","_save":"0","letter":"S"},{"name":"Guat","_from":"1991","_to":"only","type":"-","in":"Mar","on":"23","at":"0:00","_save":"1:00","letter":"D"},{"name":"Guat","_from":"1991","_to":"only","type":"-","in":"Sep","on":"7","at":"0:00","_save":"0","letter":"S"},{"name":"Guat","_from":"2006","_to":"only","type":"-","in":"Apr","on":"30","at":"0:00","_save":"1:00","letter":"D"},{"name":"Guat","_from":"2006","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"S"}],"Haiti":[{"name":"Haiti","_from":"1983","_to":"only","type":"-","in":"May","on":"8","at":"0:00","_save":"1:00","letter":"D"},{"name":"Haiti","_from":"1984","_to":"1987","type":"-","in":"Apr","on":"lastSun","at":"0:00","_save":"1:00","letter":"D"},{"name":"Haiti","_from":"1983","_to":"1987","type":"-","in":"Oct","on":"lastSun","at":"0:00","_save":"0","letter":"S"},{"name":"Haiti","_from":"1988","_to":"1997","type":"-","in":"Apr","on":"Sun>=1","at":"1:00s","_save":"1:00","letter":"D"},{"name":"Haiti","_from":"1988","_to":"1997","type":"-","in":"Oct","on":"lastSun","at":"1:00s","_save":"0","letter":"S"},{"name":"Haiti","_from":"2005","_to":"2006","type":"-","in":"Apr","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Haiti","_from":"2005","_to":"2006","type":"-","in":"Oct","on":"lastSun","at":"0:00","_save":"0","letter":"S"},{"name":"Haiti","_from":"2012","_to":"max","type":"-","in":"Mar","on":"Sun>=8","at":"2:00","_save":"1:00","letter":"D"},{"name":"Haiti","_from":"2012","_to":"max","type":"-","in":"Nov","on":"Sun>=1","at":"2:00","_save":"0","letter":"S"}],"Hond":[{"name":"Hond","_from":"1987","_to":"1988","type":"-","in":"May","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Hond","_from":"1987","_to":"1988","type":"-","in":"Sep","on":"lastSun","at":"0:00","_save":"0","letter":"S"},{"name":"Hond","_from":"2006","_to":"only","type":"-","in":"May","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Hond","_from":"2006","_to":"only","type":"-","in":"Aug","on":"Mon>=1","at":"0:00","_save":"0","letter":"S"}],"Nic":[{"name":"Nic","_from":"1979","_to":"1980","type":"-","in":"Mar","on":"Sun>=16","at":"0:00","_save":"1:00","letter":"D"},{"name":"Nic","_from":"1979","_to":"1980","type":"-","in":"Jun","on":"Mon>=23","at":"0:00","_save":"0","letter":"S"},{"name":"Nic","_from":"2005","_to":"only","type":"-","in":"Apr","on":"10","at":"0:00","_save":"1:00","letter":"D"},{"name":"Nic","_from":"2005","_to":"only","type":"-","in":"Oct","on":"Sun>=1","at":"0:00","_save":"0","letter":"S"},{"name":"Nic","_from":"2006","_to":"only","type":"-","in":"Apr","on":"30","at":"2:00","_save":"1:00","letter":"D"},{"name":"Nic","_from":"2006","_to":"only","type":"-","in":"Oct","on":"Sun>=1","at":"1:00","_save":"0","letter":"S"}],"TC":[{"name":"TC","_from":"1979","_to":"1986","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"TC","_from":"1979","_to":"2006","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"TC","_from":"1987","_to":"2006","type":"-","in":"Apr","on":"Sun>=1","at":"2:00","_save":"1:00","letter":"D"},{"name":"TC","_from":"2007","_to":"max","type":"-","in":"Mar","on":"Sun>=8","at":"2:00","_save":"1:00","letter":"D"},{"name":"TC","_from":"2007","_to":"max","type":"-","in":"Nov","on":"Sun>=1","at":"2:00","_save":"0","letter":"S"}],"sol87":[{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"1","at":"12:03:20s","_save":"-0:03:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"2","at":"12:03:50s","_save":"-0:03:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"3","at":"12:04:15s","_save":"-0:04:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"4","at":"12:04:45s","_save":"-0:04:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"5","at":"12:05:10s","_save":"-0:05:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"6","at":"12:05:40s","_save":"-0:05:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"7","at":"12:06:05s","_save":"-0:06:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"8","at":"12:06:30s","_save":"-0:06:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"9","at":"12:06:55s","_save":"-0:06:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"10","at":"12:07:20s","_save":"-0:07:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"11","at":"12:07:45s","_save":"-0:07:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"12","at":"12:08:10s","_save":"-0:08:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"13","at":"12:08:30s","_save":"-0:08:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"14","at":"12:08:55s","_save":"-0:08:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"15","at":"12:09:15s","_save":"-0:09:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"16","at":"12:09:35s","_save":"-0:09:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"17","at":"12:09:55s","_save":"-0:09:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"18","at":"12:10:15s","_save":"-0:10:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"19","at":"12:10:35s","_save":"-0:10:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"20","at":"12:10:55s","_save":"-0:10:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"21","at":"12:11:10s","_save":"-0:11:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"22","at":"12:11:30s","_save":"-0:11:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"23","at":"12:11:45s","_save":"-0:11:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"24","at":"12:12:00s","_save":"-0:12:00","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"25","at":"12:12:15s","_save":"-0:12:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"26","at":"12:12:30s","_save":"-0:12:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"27","at":"12:12:40s","_save":"-0:12:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"28","at":"12:12:55s","_save":"-0:12:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"29","at":"12:13:05s","_save":"-0:13:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"30","at":"12:13:15s","_save":"-0:13:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"31","at":"12:13:25s","_save":"-0:13:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"1","at":"12:13:35s","_save":"-0:13:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"2","at":"12:13:40s","_save":"-0:13:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"3","at":"12:13:50s","_save":"-0:13:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"4","at":"12:13:55s","_save":"-0:13:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"5","at":"12:14:00s","_save":"-0:14:00","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"6","at":"12:14:05s","_save":"-0:14:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"7","at":"12:14:10s","_save":"-0:14:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"8","at":"12:14:10s","_save":"-0:14:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"9","at":"12:14:15s","_save":"-0:14:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"10","at":"12:14:15s","_save":"-0:14:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"11","at":"12:14:15s","_save":"-0:14:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"12","at":"12:14:15s","_save":"-0:14:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"13","at":"12:14:15s","_save":"-0:14:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"14","at":"12:14:15s","_save":"-0:14:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"15","at":"12:14:10s","_save":"-0:14:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"16","at":"12:14:10s","_save":"-0:14:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"17","at":"12:14:05s","_save":"-0:14:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"18","at":"12:14:00s","_save":"-0:14:00","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"19","at":"12:13:55s","_save":"-0:13:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"20","at":"12:13:50s","_save":"-0:13:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"21","at":"12:13:45s","_save":"-0:13:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"22","at":"12:13:35s","_save":"-0:13:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"23","at":"12:13:30s","_save":"-0:13:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"24","at":"12:13:20s","_save":"-0:13:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"25","at":"12:13:10s","_save":"-0:13:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"26","at":"12:13:00s","_save":"-0:13:00","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"27","at":"12:12:50s","_save":"-0:12:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"28","at":"12:12:40s","_save":"-0:12:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"1","at":"12:12:30s","_save":"-0:12:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"2","at":"12:12:20s","_save":"-0:12:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"3","at":"12:12:05s","_save":"-0:12:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"4","at":"12:11:55s","_save":"-0:11:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"5","at":"12:11:40s","_save":"-0:11:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"6","at":"12:11:25s","_save":"-0:11:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"7","at":"12:11:15s","_save":"-0:11:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"8","at":"12:11:00s","_save":"-0:11:00","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"9","at":"12:10:45s","_save":"-0:10:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"10","at":"12:10:30s","_save":"-0:10:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"11","at":"12:10:15s","_save":"-0:10:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"12","at":"12:09:55s","_save":"-0:09:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"13","at":"12:09:40s","_save":"-0:09:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"14","at":"12:09:25s","_save":"-0:09:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"15","at":"12:09:10s","_save":"-0:09:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"16","at":"12:08:50s","_save":"-0:08:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"17","at":"12:08:35s","_save":"-0:08:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"18","at":"12:08:15s","_save":"-0:08:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"19","at":"12:08:00s","_save":"-0:08:00","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"20","at":"12:07:40s","_save":"-0:07:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"21","at":"12:07:25s","_save":"-0:07:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"22","at":"12:07:05s","_save":"-0:07:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"23","at":"12:06:50s","_save":"-0:06:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"24","at":"12:06:30s","_save":"-0:06:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"25","at":"12:06:10s","_save":"-0:06:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"26","at":"12:05:55s","_save":"-0:05:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"27","at":"12:05:35s","_save":"-0:05:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"28","at":"12:05:15s","_save":"-0:05:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"29","at":"12:05:00s","_save":"-0:05:00","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"30","at":"12:04:40s","_save":"-0:04:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"31","at":"12:04:25s","_save":"-0:04:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"1","at":"12:04:05s","_save":"-0:04:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"2","at":"12:03:45s","_save":"-0:03:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"3","at":"12:03:30s","_save":"-0:03:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"4","at":"12:03:10s","_save":"-0:03:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"5","at":"12:02:55s","_save":"-0:02:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"6","at":"12:02:35s","_save":"-0:02:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"7","at":"12:02:20s","_save":"-0:02:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"8","at":"12:02:05s","_save":"-0:02:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"9","at":"12:01:45s","_save":"-0:01:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"10","at":"12:01:30s","_save":"-0:01:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"11","at":"12:01:15s","_save":"-0:01:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"12","at":"12:00:55s","_save":"-0:00:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"13","at":"12:00:40s","_save":"-0:00:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"14","at":"12:00:25s","_save":"-0:00:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"15","at":"12:00:10s","_save":"-0:00:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"16","at":"11:59:55s","_save":"0:00:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"17","at":"11:59:45s","_save":"0:00:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"18","at":"11:59:30s","_save":"0:00:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"19","at":"11:59:15s","_save":"0:00:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"20","at":"11:59:05s","_save":"0:00:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"21","at":"11:58:50s","_save":"0:01:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"22","at":"11:58:40s","_save":"0:01:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"23","at":"11:58:25s","_save":"0:01:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"24","at":"11:58:15s","_save":"0:01:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"25","at":"11:58:05s","_save":"0:01:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"26","at":"11:57:55s","_save":"0:02:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"27","at":"11:57:45s","_save":"0:02:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"28","at":"11:57:35s","_save":"0:02:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"29","at":"11:57:25s","_save":"0:02:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"30","at":"11:57:15s","_save":"0:02:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"1","at":"11:57:10s","_save":"0:02:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"2","at":"11:57:00s","_save":"0:03:00","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"3","at":"11:56:55s","_save":"0:03:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"4","at":"11:56:50s","_save":"0:03:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"5","at":"11:56:45s","_save":"0:03:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"6","at":"11:56:40s","_save":"0:03:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"7","at":"11:56:35s","_save":"0:03:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"8","at":"11:56:30s","_save":"0:03:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"9","at":"11:56:25s","_save":"0:03:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"10","at":"11:56:25s","_save":"0:03:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"11","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"12","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"13","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"14","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"15","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"16","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"17","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"18","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"19","at":"11:56:25s","_save":"0:03:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"20","at":"11:56:25s","_save":"0:03:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"21","at":"11:56:30s","_save":"0:03:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"22","at":"11:56:35s","_save":"0:03:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"23","at":"11:56:40s","_save":"0:03:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"24","at":"11:56:45s","_save":"0:03:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"25","at":"11:56:50s","_save":"0:03:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"26","at":"11:56:55s","_save":"0:03:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"27","at":"11:57:00s","_save":"0:03:00","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"28","at":"11:57:10s","_save":"0:02:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"29","at":"11:57:15s","_save":"0:02:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"30","at":"11:57:25s","_save":"0:02:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"31","at":"11:57:30s","_save":"0:02:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"1","at":"11:57:40s","_save":"0:02:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"2","at":"11:57:50s","_save":"0:02:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"3","at":"11:58:00s","_save":"0:02:00","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"4","at":"11:58:10s","_save":"0:01:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"5","at":"11:58:20s","_save":"0:01:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"6","at":"11:58:30s","_save":"0:01:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"7","at":"11:58:40s","_save":"0:01:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"8","at":"11:58:50s","_save":"0:01:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"9","at":"11:59:05s","_save":"0:00:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"10","at":"11:59:15s","_save":"0:00:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"11","at":"11:59:30s","_save":"0:00:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"12","at":"11:59:40s","_save":"0:00:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"13","at":"11:59:50s","_save":"0:00:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"14","at":"12:00:05s","_save":"-0:00:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"15","at":"12:00:15s","_save":"-0:00:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"16","at":"12:00:30s","_save":"-0:00:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"17","at":"12:00:45s","_save":"-0:00:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"18","at":"12:00:55s","_save":"-0:00:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"19","at":"12:01:10s","_save":"-0:01:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"20","at":"12:01:20s","_save":"-0:01:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"21","at":"12:01:35s","_save":"-0:01:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"22","at":"12:01:50s","_save":"-0:01:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"23","at":"12:02:00s","_save":"-0:02:00","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"24","at":"12:02:15s","_save":"-0:02:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"25","at":"12:02:25s","_save":"-0:02:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"26","at":"12:02:40s","_save":"-0:02:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"27","at":"12:02:50s","_save":"-0:02:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"28","at":"12:03:05s","_save":"-0:03:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"29","at":"12:03:15s","_save":"-0:03:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"30","at":"12:03:30s","_save":"-0:03:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"1","at":"12:03:40s","_save":"-0:03:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"2","at":"12:03:50s","_save":"-0:03:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"3","at":"12:04:05s","_save":"-0:04:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"4","at":"12:04:15s","_save":"-0:04:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"5","at":"12:04:25s","_save":"-0:04:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"6","at":"12:04:35s","_save":"-0:04:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"7","at":"12:04:45s","_save":"-0:04:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"8","at":"12:04:55s","_save":"-0:04:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"9","at":"12:05:05s","_save":"-0:05:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"10","at":"12:05:15s","_save":"-0:05:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"11","at":"12:05:20s","_save":"-0:05:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"12","at":"12:05:30s","_save":"-0:05:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"13","at":"12:05:40s","_save":"-0:05:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"14","at":"12:05:45s","_save":"-0:05:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"15","at":"12:05:50s","_save":"-0:05:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"16","at":"12:06:00s","_save":"-0:06:00","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"17","at":"12:06:05s","_save":"-0:06:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"18","at":"12:06:10s","_save":"-0:06:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"19","at":"12:06:15s","_save":"-0:06:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"20","at":"12:06:15s","_save":"-0:06:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"21","at":"12:06:20s","_save":"-0:06:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"22","at":"12:06:25s","_save":"-0:06:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"23","at":"12:06:25s","_save":"-0:06:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"24","at":"12:06:25s","_save":"-0:06:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"25","at":"12:06:30s","_save":"-0:06:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"26","at":"12:06:30s","_save":"-0:06:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"27","at":"12:06:30s","_save":"-0:06:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"28","at":"12:06:30s","_save":"-0:06:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"29","at":"12:06:25s","_save":"-0:06:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"30","at":"12:06:25s","_save":"-0:06:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"31","at":"12:06:25s","_save":"-0:06:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"1","at":"12:06:20s","_save":"-0:06:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"2","at":"12:06:15s","_save":"-0:06:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"3","at":"12:06:10s","_save":"-0:06:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"4","at":"12:06:05s","_save":"-0:06:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"5","at":"12:06:00s","_save":"-0:06:00","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"6","at":"12:05:55s","_save":"-0:05:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"7","at":"12:05:50s","_save":"-0:05:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"8","at":"12:05:40s","_save":"-0:05:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"9","at":"12:05:35s","_save":"-0:05:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"10","at":"12:05:25s","_save":"-0:05:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"11","at":"12:05:15s","_save":"-0:05:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"12","at":"12:05:05s","_save":"-0:05:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"13","at":"12:04:55s","_save":"-0:04:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"14","at":"12:04:45s","_save":"-0:04:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"15","at":"12:04:35s","_save":"-0:04:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"16","at":"12:04:25s","_save":"-0:04:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"17","at":"12:04:10s","_save":"-0:04:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"18","at":"12:04:00s","_save":"-0:04:00","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"19","at":"12:03:45s","_save":"-0:03:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"20","at":"12:03:30s","_save":"-0:03:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"21","at":"12:03:15s","_save":"-0:03:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"22","at":"12:03:00s","_save":"-0:03:00","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"23","at":"12:02:45s","_save":"-0:02:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"24","at":"12:02:30s","_save":"-0:02:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"25","at":"12:02:15s","_save":"-0:02:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"26","at":"12:02:00s","_save":"-0:02:00","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"27","at":"12:01:40s","_save":"-0:01:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"28","at":"12:01:25s","_save":"-0:01:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"29","at":"12:01:05s","_save":"-0:01:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"30","at":"12:00:50s","_save":"-0:00:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"31","at":"12:00:30s","_save":"-0:00:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"1","at":"12:00:10s","_save":"-0:00:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"2","at":"11:59:50s","_save":"0:00:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"3","at":"11:59:35s","_save":"0:00:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"4","at":"11:59:15s","_save":"0:00:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"5","at":"11:58:55s","_save":"0:01:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"6","at":"11:58:35s","_save":"0:01:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"7","at":"11:58:15s","_save":"0:01:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"8","at":"11:57:55s","_save":"0:02:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"9","at":"11:57:30s","_save":"0:02:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"10","at":"11:57:10s","_save":"0:02:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"11","at":"11:56:50s","_save":"0:03:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"12","at":"11:56:30s","_save":"0:03:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"13","at":"11:56:10s","_save":"0:03:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"14","at":"11:55:45s","_save":"0:04:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"15","at":"11:55:25s","_save":"0:04:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"16","at":"11:55:05s","_save":"0:04:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"17","at":"11:54:45s","_save":"0:05:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"18","at":"11:54:20s","_save":"0:05:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"19","at":"11:54:00s","_save":"0:06:00","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"20","at":"11:53:40s","_save":"0:06:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"21","at":"11:53:15s","_save":"0:06:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"22","at":"11:52:55s","_save":"0:07:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"23","at":"11:52:35s","_save":"0:07:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"24","at":"11:52:15s","_save":"0:07:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"25","at":"11:51:55s","_save":"0:08:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"26","at":"11:51:35s","_save":"0:08:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"27","at":"11:51:10s","_save":"0:08:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"28","at":"11:50:50s","_save":"0:09:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"29","at":"11:50:30s","_save":"0:09:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"30","at":"11:50:10s","_save":"0:09:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"1","at":"11:49:50s","_save":"0:10:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"2","at":"11:49:35s","_save":"0:10:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"3","at":"11:49:15s","_save":"0:10:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"4","at":"11:48:55s","_save":"0:11:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"5","at":"11:48:35s","_save":"0:11:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"6","at":"11:48:20s","_save":"0:11:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"7","at":"11:48:00s","_save":"0:12:00","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"8","at":"11:47:45s","_save":"0:12:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"9","at":"11:47:25s","_save":"0:12:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"10","at":"11:47:10s","_save":"0:12:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"11","at":"11:46:55s","_save":"0:13:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"12","at":"11:46:40s","_save":"0:13:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"13","at":"11:46:25s","_save":"0:13:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"14","at":"11:46:10s","_save":"0:13:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"15","at":"11:45:55s","_save":"0:14:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"16","at":"11:45:45s","_save":"0:14:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"17","at":"11:45:30s","_save":"0:14:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"18","at":"11:45:20s","_save":"0:14:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"19","at":"11:45:05s","_save":"0:14:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"20","at":"11:44:55s","_save":"0:15:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"21","at":"11:44:45s","_save":"0:15:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"22","at":"11:44:35s","_save":"0:15:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"23","at":"11:44:25s","_save":"0:15:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"24","at":"11:44:20s","_save":"0:15:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"25","at":"11:44:10s","_save":"0:15:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"26","at":"11:44:05s","_save":"0:15:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"27","at":"11:43:55s","_save":"0:16:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"28","at":"11:43:50s","_save":"0:16:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"29","at":"11:43:45s","_save":"0:16:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"30","at":"11:43:45s","_save":"0:16:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"31","at":"11:43:40s","_save":"0:16:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"1","at":"11:43:40s","_save":"0:16:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"2","at":"11:43:35s","_save":"0:16:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"3","at":"11:43:35s","_save":"0:16:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"4","at":"11:43:35s","_save":"0:16:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"5","at":"11:43:35s","_save":"0:16:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"6","at":"11:43:40s","_save":"0:16:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"7","at":"11:43:40s","_save":"0:16:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"8","at":"11:43:45s","_save":"0:16:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"9","at":"11:43:50s","_save":"0:16:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"10","at":"11:43:55s","_save":"0:16:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"11","at":"11:44:00s","_save":"0:16:00","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"12","at":"11:44:05s","_save":"0:15:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"13","at":"11:44:15s","_save":"0:15:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"14","at":"11:44:20s","_save":"0:15:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"15","at":"11:44:30s","_save":"0:15:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"16","at":"11:44:40s","_save":"0:15:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"17","at":"11:44:50s","_save":"0:15:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"18","at":"11:45:05s","_save":"0:14:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"19","at":"11:45:15s","_save":"0:14:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"20","at":"11:45:30s","_save":"0:14:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"21","at":"11:45:45s","_save":"0:14:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"22","at":"11:46:00s","_save":"0:14:00","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"23","at":"11:46:15s","_save":"0:13:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"24","at":"11:46:30s","_save":"0:13:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"25","at":"11:46:50s","_save":"0:13:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"26","at":"11:47:10s","_save":"0:12:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"27","at":"11:47:25s","_save":"0:12:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"28","at":"11:47:45s","_save":"0:12:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"29","at":"11:48:05s","_save":"0:11:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"30","at":"11:48:30s","_save":"0:11:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"1","at":"11:48:50s","_save":"0:11:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"2","at":"11:49:10s","_save":"0:10:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"3","at":"11:49:35s","_save":"0:10:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"4","at":"11:50:00s","_save":"0:10:00","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"5","at":"11:50:25s","_save":"0:09:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"6","at":"11:50:50s","_save":"0:09:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"7","at":"11:51:15s","_save":"0:08:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"8","at":"11:51:40s","_save":"0:08:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"9","at":"11:52:05s","_save":"0:07:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"10","at":"11:52:30s","_save":"0:07:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"11","at":"11:53:00s","_save":"0:07:00","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"12","at":"11:53:25s","_save":"0:06:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"13","at":"11:53:55s","_save":"0:06:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"14","at":"11:54:25s","_save":"0:05:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"15","at":"11:54:50s","_save":"0:05:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"16","at":"11:55:20s","_save":"0:04:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"17","at":"11:55:50s","_save":"0:04:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"18","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"19","at":"11:56:50s","_save":"0:03:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"20","at":"11:57:20s","_save":"0:02:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"21","at":"11:57:50s","_save":"0:02:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"22","at":"11:58:20s","_save":"0:01:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"23","at":"11:58:50s","_save":"0:01:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"24","at":"11:59:20s","_save":"0:00:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"25","at":"11:59:50s","_save":"0:00:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"26","at":"12:00:20s","_save":"-0:00:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"27","at":"12:00:45s","_save":"-0:00:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"28","at":"12:01:15s","_save":"-0:01:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"29","at":"12:01:45s","_save":"-0:01:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"30","at":"12:02:15s","_save":"-0:02:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"31","at":"12:02:45s","_save":"-0:02:45","letter":"-"}],"sol88":[{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"1","at":"12:03:15s","_save":"-0:03:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"2","at":"12:03:40s","_save":"-0:03:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"3","at":"12:04:10s","_save":"-0:04:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"4","at":"12:04:40s","_save":"-0:04:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"5","at":"12:05:05s","_save":"-0:05:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"6","at":"12:05:30s","_save":"-0:05:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"7","at":"12:06:00s","_save":"-0:06:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"8","at":"12:06:25s","_save":"-0:06:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"9","at":"12:06:50s","_save":"-0:06:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"10","at":"12:07:15s","_save":"-0:07:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"11","at":"12:07:40s","_save":"-0:07:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"12","at":"12:08:05s","_save":"-0:08:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"13","at":"12:08:25s","_save":"-0:08:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"14","at":"12:08:50s","_save":"-0:08:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"15","at":"12:09:10s","_save":"-0:09:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"16","at":"12:09:30s","_save":"-0:09:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"17","at":"12:09:50s","_save":"-0:09:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"18","at":"12:10:10s","_save":"-0:10:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"19","at":"12:10:30s","_save":"-0:10:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"20","at":"12:10:50s","_save":"-0:10:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"21","at":"12:11:05s","_save":"-0:11:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"22","at":"12:11:25s","_save":"-0:11:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"23","at":"12:11:40s","_save":"-0:11:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"24","at":"12:11:55s","_save":"-0:11:55","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"25","at":"12:12:10s","_save":"-0:12:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"26","at":"12:12:25s","_save":"-0:12:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"27","at":"12:12:40s","_save":"-0:12:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"28","at":"12:12:50s","_save":"-0:12:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"29","at":"12:13:00s","_save":"-0:13:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"30","at":"12:13:10s","_save":"-0:13:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"31","at":"12:13:20s","_save":"-0:13:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"1","at":"12:13:30s","_save":"-0:13:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"2","at":"12:13:40s","_save":"-0:13:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"3","at":"12:13:45s","_save":"-0:13:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"4","at":"12:13:55s","_save":"-0:13:55","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"5","at":"12:14:00s","_save":"-0:14:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"6","at":"12:14:05s","_save":"-0:14:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"7","at":"12:14:10s","_save":"-0:14:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"8","at":"12:14:10s","_save":"-0:14:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"9","at":"12:14:15s","_save":"-0:14:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"10","at":"12:14:15s","_save":"-0:14:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"11","at":"12:14:15s","_save":"-0:14:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"12","at":"12:14:15s","_save":"-0:14:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"13","at":"12:14:15s","_save":"-0:14:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"14","at":"12:14:15s","_save":"-0:14:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"15","at":"12:14:10s","_save":"-0:14:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"16","at":"12:14:10s","_save":"-0:14:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"17","at":"12:14:05s","_save":"-0:14:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"18","at":"12:14:00s","_save":"-0:14:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"19","at":"12:13:55s","_save":"-0:13:55","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"20","at":"12:13:50s","_save":"-0:13:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"21","at":"12:13:45s","_save":"-0:13:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"22","at":"12:13:40s","_save":"-0:13:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"23","at":"12:13:30s","_save":"-0:13:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"24","at":"12:13:20s","_save":"-0:13:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"25","at":"12:13:15s","_save":"-0:13:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"26","at":"12:13:05s","_save":"-0:13:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"27","at":"12:12:55s","_save":"-0:12:55","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"28","at":"12:12:45s","_save":"-0:12:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"29","at":"12:12:30s","_save":"-0:12:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"1","at":"12:12:20s","_save":"-0:12:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"2","at":"12:12:10s","_save":"-0:12:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"3","at":"12:11:55s","_save":"-0:11:55","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"4","at":"12:11:45s","_save":"-0:11:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"5","at":"12:11:30s","_save":"-0:11:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"6","at":"12:11:15s","_save":"-0:11:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"7","at":"12:11:00s","_save":"-0:11:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"8","at":"12:10:45s","_save":"-0:10:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"9","at":"12:10:30s","_save":"-0:10:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"10","at":"12:10:15s","_save":"-0:10:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"11","at":"12:10:00s","_save":"-0:10:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"12","at":"12:09:45s","_save":"-0:09:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"13","at":"12:09:30s","_save":"-0:09:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"14","at":"12:09:10s","_save":"-0:09:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"15","at":"12:08:55s","_save":"-0:08:55","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"16","at":"12:08:40s","_save":"-0:08:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"17","at":"12:08:20s","_save":"-0:08:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"18","at":"12:08:05s","_save":"-0:08:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"19","at":"12:07:45s","_save":"-0:07:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"20","at":"12:07:30s","_save":"-0:07:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"21","at":"12:07:10s","_save":"-0:07:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"22","at":"12:06:50s","_save":"-0:06:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"23","at":"12:06:35s","_save":"-0:06:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"24","at":"12:06:15s","_save":"-0:06:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"25","at":"12:06:00s","_save":"-0:06:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"26","at":"12:05:40s","_save":"-0:05:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"27","at":"12:05:20s","_save":"-0:05:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"28","at":"12:05:05s","_save":"-0:05:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"29","at":"12:04:45s","_save":"-0:04:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"30","at":"12:04:25s","_save":"-0:04:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"31","at":"12:04:10s","_save":"-0:04:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"1","at":"12:03:50s","_save":"-0:03:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"2","at":"12:03:35s","_save":"-0:03:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"3","at":"12:03:15s","_save":"-0:03:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"4","at":"12:03:00s","_save":"-0:03:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"5","at":"12:02:40s","_save":"-0:02:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"6","at":"12:02:25s","_save":"-0:02:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"7","at":"12:02:05s","_save":"-0:02:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"8","at":"12:01:50s","_save":"-0:01:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"9","at":"12:01:35s","_save":"-0:01:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"10","at":"12:01:15s","_save":"-0:01:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"11","at":"12:01:00s","_save":"-0:01:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"12","at":"12:00:45s","_save":"-0:00:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"13","at":"12:00:30s","_save":"-0:00:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"14","at":"12:00:15s","_save":"-0:00:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"15","at":"12:00:00s","_save":"0:00:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"16","at":"11:59:45s","_save":"0:00:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"17","at":"11:59:30s","_save":"0:00:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"18","at":"11:59:20s","_save":"0:00:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"19","at":"11:59:05s","_save":"0:00:55","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"20","at":"11:58:55s","_save":"0:01:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"21","at":"11:58:40s","_save":"0:01:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"22","at":"11:58:30s","_save":"0:01:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"23","at":"11:58:15s","_save":"0:01:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"24","at":"11:58:05s","_save":"0:01:55","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"25","at":"11:57:55s","_save":"0:02:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"26","at":"11:57:45s","_save":"0:02:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"27","at":"11:57:35s","_save":"0:02:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"28","at":"11:57:30s","_save":"0:02:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"29","at":"11:57:20s","_save":"0:02:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"30","at":"11:57:10s","_save":"0:02:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"1","at":"11:57:05s","_save":"0:02:55","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"2","at":"11:56:55s","_save":"0:03:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"3","at":"11:56:50s","_save":"0:03:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"4","at":"11:56:45s","_save":"0:03:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"5","at":"11:56:40s","_save":"0:03:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"6","at":"11:56:35s","_save":"0:03:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"7","at":"11:56:30s","_save":"0:03:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"8","at":"11:56:25s","_save":"0:03:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"9","at":"11:56:25s","_save":"0:03:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"10","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"11","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"12","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"13","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"14","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"15","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"16","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"17","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"18","at":"11:56:25s","_save":"0:03:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"19","at":"11:56:25s","_save":"0:03:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"20","at":"11:56:30s","_save":"0:03:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"21","at":"11:56:35s","_save":"0:03:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"22","at":"11:56:40s","_save":"0:03:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"23","at":"11:56:45s","_save":"0:03:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"24","at":"11:56:50s","_save":"0:03:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"25","at":"11:56:55s","_save":"0:03:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"26","at":"11:57:00s","_save":"0:03:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"27","at":"11:57:05s","_save":"0:02:55","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"28","at":"11:57:15s","_save":"0:02:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"29","at":"11:57:20s","_save":"0:02:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"30","at":"11:57:30s","_save":"0:02:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"31","at":"11:57:40s","_save":"0:02:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"1","at":"11:57:50s","_save":"0:02:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"2","at":"11:57:55s","_save":"0:02:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"3","at":"11:58:05s","_save":"0:01:55","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"4","at":"11:58:15s","_save":"0:01:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"5","at":"11:58:30s","_save":"0:01:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"6","at":"11:58:40s","_save":"0:01:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"7","at":"11:58:50s","_save":"0:01:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"8","at":"11:59:00s","_save":"0:01:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"9","at":"11:59:15s","_save":"0:00:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"10","at":"11:59:25s","_save":"0:00:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"11","at":"11:59:35s","_save":"0:00:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"12","at":"11:59:50s","_save":"0:00:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"13","at":"12:00:00s","_save":"0:00:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"14","at":"12:00:15s","_save":"-0:00:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"15","at":"12:00:25s","_save":"-0:00:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"16","at":"12:00:40s","_save":"-0:00:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"17","at":"12:00:55s","_save":"-0:00:55","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"18","at":"12:01:05s","_save":"-0:01:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"19","at":"12:01:20s","_save":"-0:01:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"20","at":"12:01:30s","_save":"-0:01:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"21","at":"12:01:45s","_save":"-0:01:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"22","at":"12:02:00s","_save":"-0:02:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"23","at":"12:02:10s","_save":"-0:02:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"24","at":"12:02:25s","_save":"-0:02:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"25","at":"12:02:35s","_save":"-0:02:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"26","at":"12:02:50s","_save":"-0:02:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"27","at":"12:03:00s","_save":"-0:03:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"28","at":"12:03:15s","_save":"-0:03:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"29","at":"12:03:25s","_save":"-0:03:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"30","at":"12:03:40s","_save":"-0:03:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"1","at":"12:03:50s","_save":"-0:03:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"2","at":"12:04:00s","_save":"-0:04:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"3","at":"12:04:10s","_save":"-0:04:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"4","at":"12:04:25s","_save":"-0:04:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"5","at":"12:04:35s","_save":"-0:04:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"6","at":"12:04:45s","_save":"-0:04:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"7","at":"12:04:55s","_save":"-0:04:55","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"8","at":"12:05:05s","_save":"-0:05:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"9","at":"12:05:10s","_save":"-0:05:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"10","at":"12:05:20s","_save":"-0:05:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"11","at":"12:05:30s","_save":"-0:05:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"12","at":"12:05:35s","_save":"-0:05:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"13","at":"12:05:45s","_save":"-0:05:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"14","at":"12:05:50s","_save":"-0:05:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"15","at":"12:05:55s","_save":"-0:05:55","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"16","at":"12:06:00s","_save":"-0:06:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"17","at":"12:06:05s","_save":"-0:06:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"18","at":"12:06:10s","_save":"-0:06:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"19","at":"12:06:15s","_save":"-0:06:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"20","at":"12:06:20s","_save":"-0:06:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"21","at":"12:06:25s","_save":"-0:06:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"22","at":"12:06:25s","_save":"-0:06:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"23","at":"12:06:25s","_save":"-0:06:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"24","at":"12:06:30s","_save":"-0:06:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"25","at":"12:06:30s","_save":"-0:06:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"26","at":"12:06:30s","_save":"-0:06:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"27","at":"12:06:30s","_save":"-0:06:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"28","at":"12:06:30s","_save":"-0:06:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"29","at":"12:06:25s","_save":"-0:06:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"30","at":"12:06:25s","_save":"-0:06:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"31","at":"12:06:20s","_save":"-0:06:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"1","at":"12:06:15s","_save":"-0:06:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"2","at":"12:06:15s","_save":"-0:06:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"3","at":"12:06:10s","_save":"-0:06:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"4","at":"12:06:05s","_save":"-0:06:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"5","at":"12:05:55s","_save":"-0:05:55","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"6","at":"12:05:50s","_save":"-0:05:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"7","at":"12:05:45s","_save":"-0:05:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"8","at":"12:05:35s","_save":"-0:05:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"9","at":"12:05:25s","_save":"-0:05:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"10","at":"12:05:20s","_save":"-0:05:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"11","at":"12:05:10s","_save":"-0:05:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"12","at":"12:05:00s","_save":"-0:05:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"13","at":"12:04:50s","_save":"-0:04:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"14","at":"12:04:35s","_save":"-0:04:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"15","at":"12:04:25s","_save":"-0:04:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"16","at":"12:04:15s","_save":"-0:04:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"17","at":"12:04:00s","_save":"-0:04:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"18","at":"12:03:50s","_save":"-0:03:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"19","at":"12:03:35s","_save":"-0:03:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"20","at":"12:03:20s","_save":"-0:03:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"21","at":"12:03:05s","_save":"-0:03:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"22","at":"12:02:50s","_save":"-0:02:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"23","at":"12:02:35s","_save":"-0:02:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"24","at":"12:02:20s","_save":"-0:02:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"25","at":"12:02:00s","_save":"-0:02:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"26","at":"12:01:45s","_save":"-0:01:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"27","at":"12:01:30s","_save":"-0:01:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"28","at":"12:01:10s","_save":"-0:01:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"29","at":"12:00:50s","_save":"-0:00:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"30","at":"12:00:35s","_save":"-0:00:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"31","at":"12:00:15s","_save":"-0:00:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"1","at":"11:59:55s","_save":"0:00:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"2","at":"11:59:35s","_save":"0:00:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"3","at":"11:59:20s","_save":"0:00:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"4","at":"11:59:00s","_save":"0:01:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"5","at":"11:58:40s","_save":"0:01:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"6","at":"11:58:20s","_save":"0:01:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"7","at":"11:58:00s","_save":"0:02:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"8","at":"11:57:35s","_save":"0:02:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"9","at":"11:57:15s","_save":"0:02:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"10","at":"11:56:55s","_save":"0:03:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"11","at":"11:56:35s","_save":"0:03:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"12","at":"11:56:15s","_save":"0:03:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"13","at":"11:55:50s","_save":"0:04:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"14","at":"11:55:30s","_save":"0:04:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"15","at":"11:55:10s","_save":"0:04:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"16","at":"11:54:50s","_save":"0:05:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"17","at":"11:54:25s","_save":"0:05:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"18","at":"11:54:05s","_save":"0:05:55","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"19","at":"11:53:45s","_save":"0:06:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"20","at":"11:53:25s","_save":"0:06:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"21","at":"11:53:00s","_save":"0:07:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"22","at":"11:52:40s","_save":"0:07:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"23","at":"11:52:20s","_save":"0:07:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"24","at":"11:52:00s","_save":"0:08:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"25","at":"11:51:40s","_save":"0:08:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"26","at":"11:51:15s","_save":"0:08:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"27","at":"11:50:55s","_save":"0:09:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"28","at":"11:50:35s","_save":"0:09:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"29","at":"11:50:15s","_save":"0:09:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"30","at":"11:49:55s","_save":"0:10:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"1","at":"11:49:35s","_save":"0:10:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"2","at":"11:49:20s","_save":"0:10:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"3","at":"11:49:00s","_save":"0:11:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"4","at":"11:48:40s","_save":"0:11:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"5","at":"11:48:25s","_save":"0:11:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"6","at":"11:48:05s","_save":"0:11:55","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"7","at":"11:47:50s","_save":"0:12:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"8","at":"11:47:30s","_save":"0:12:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"9","at":"11:47:15s","_save":"0:12:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"10","at":"11:47:00s","_save":"0:13:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"11","at":"11:46:45s","_save":"0:13:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"12","at":"11:46:30s","_save":"0:13:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"13","at":"11:46:15s","_save":"0:13:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"14","at":"11:46:00s","_save":"0:14:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"15","at":"11:45:45s","_save":"0:14:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"16","at":"11:45:35s","_save":"0:14:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"17","at":"11:45:20s","_save":"0:14:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"18","at":"11:45:10s","_save":"0:14:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"19","at":"11:45:00s","_save":"0:15:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"20","at":"11:44:45s","_save":"0:15:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"21","at":"11:44:40s","_save":"0:15:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"22","at":"11:44:30s","_save":"0:15:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"23","at":"11:44:20s","_save":"0:15:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"24","at":"11:44:10s","_save":"0:15:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"25","at":"11:44:05s","_save":"0:15:55","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"26","at":"11:44:00s","_save":"0:16:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"27","at":"11:43:55s","_save":"0:16:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"28","at":"11:43:50s","_save":"0:16:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"29","at":"11:43:45s","_save":"0:16:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"30","at":"11:43:40s","_save":"0:16:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"31","at":"11:43:40s","_save":"0:16:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"1","at":"11:43:35s","_save":"0:16:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"2","at":"11:43:35s","_save":"0:16:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"3","at":"11:43:35s","_save":"0:16:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"4","at":"11:43:35s","_save":"0:16:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"5","at":"11:43:40s","_save":"0:16:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"6","at":"11:43:40s","_save":"0:16:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"7","at":"11:43:45s","_save":"0:16:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"8","at":"11:43:45s","_save":"0:16:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"9","at":"11:43:50s","_save":"0:16:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"10","at":"11:44:00s","_save":"0:16:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"11","at":"11:44:05s","_save":"0:15:55","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"12","at":"11:44:10s","_save":"0:15:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"13","at":"11:44:20s","_save":"0:15:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"14","at":"11:44:30s","_save":"0:15:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"15","at":"11:44:40s","_save":"0:15:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"16","at":"11:44:50s","_save":"0:15:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"17","at":"11:45:00s","_save":"0:15:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"18","at":"11:45:15s","_save":"0:14:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"19","at":"11:45:25s","_save":"0:14:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"20","at":"11:45:40s","_save":"0:14:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"21","at":"11:45:55s","_save":"0:14:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"22","at":"11:46:10s","_save":"0:13:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"23","at":"11:46:30s","_save":"0:13:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"24","at":"11:46:45s","_save":"0:13:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"25","at":"11:47:05s","_save":"0:12:55","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"26","at":"11:47:20s","_save":"0:12:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"27","at":"11:47:40s","_save":"0:12:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"28","at":"11:48:00s","_save":"0:12:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"29","at":"11:48:25s","_save":"0:11:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"30","at":"11:48:45s","_save":"0:11:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"1","at":"11:49:05s","_save":"0:10:55","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"2","at":"11:49:30s","_save":"0:10:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"3","at":"11:49:55s","_save":"0:10:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"4","at":"11:50:15s","_save":"0:09:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"5","at":"11:50:40s","_save":"0:09:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"6","at":"11:51:05s","_save":"0:08:55","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"7","at":"11:51:35s","_save":"0:08:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"8","at":"11:52:00s","_save":"0:08:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"9","at":"11:52:25s","_save":"0:07:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"10","at":"11:52:55s","_save":"0:07:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"11","at":"11:53:20s","_save":"0:06:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"12","at":"11:53:50s","_save":"0:06:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"13","at":"11:54:15s","_save":"0:05:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"14","at":"11:54:45s","_save":"0:05:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"15","at":"11:55:15s","_save":"0:04:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"16","at":"11:55:45s","_save":"0:04:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"17","at":"11:56:15s","_save":"0:03:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"18","at":"11:56:40s","_save":"0:03:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"19","at":"11:57:10s","_save":"0:02:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"20","at":"11:57:40s","_save":"0:02:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"21","at":"11:58:10s","_save":"0:01:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"22","at":"11:58:40s","_save":"0:01:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"23","at":"11:59:10s","_save":"0:00:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"24","at":"11:59:40s","_save":"0:00:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"25","at":"12:00:10s","_save":"-0:00:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"26","at":"12:00:40s","_save":"-0:00:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"27","at":"12:01:10s","_save":"-0:01:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"28","at":"12:01:40s","_save":"-0:01:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"29","at":"12:02:10s","_save":"-0:02:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"30","at":"12:02:35s","_save":"-0:02:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"31","at":"12:03:05s","_save":"-0:03:05","letter":"-"}],"sol89":[{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"1","at":"12:03:35s","_save":"-0:03:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"2","at":"12:04:05s","_save":"-0:04:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"3","at":"12:04:30s","_save":"-0:04:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"4","at":"12:05:00s","_save":"-0:05:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"5","at":"12:05:25s","_save":"-0:05:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"6","at":"12:05:50s","_save":"-0:05:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"7","at":"12:06:15s","_save":"-0:06:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"8","at":"12:06:45s","_save":"-0:06:45","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"9","at":"12:07:10s","_save":"-0:07:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"10","at":"12:07:35s","_save":"-0:07:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"11","at":"12:07:55s","_save":"-0:07:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"12","at":"12:08:20s","_save":"-0:08:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"13","at":"12:08:45s","_save":"-0:08:45","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"14","at":"12:09:05s","_save":"-0:09:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"15","at":"12:09:25s","_save":"-0:09:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"16","at":"12:09:45s","_save":"-0:09:45","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"17","at":"12:10:05s","_save":"-0:10:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"18","at":"12:10:25s","_save":"-0:10:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"19","at":"12:10:45s","_save":"-0:10:45","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"20","at":"12:11:05s","_save":"-0:11:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"21","at":"12:11:20s","_save":"-0:11:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"22","at":"12:11:35s","_save":"-0:11:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"23","at":"12:11:55s","_save":"-0:11:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"24","at":"12:12:10s","_save":"-0:12:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"25","at":"12:12:20s","_save":"-0:12:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"26","at":"12:12:35s","_save":"-0:12:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"27","at":"12:12:50s","_save":"-0:12:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"28","at":"12:13:00s","_save":"-0:13:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"29","at":"12:13:10s","_save":"-0:13:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"30","at":"12:13:20s","_save":"-0:13:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"31","at":"12:13:30s","_save":"-0:13:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"1","at":"12:13:40s","_save":"-0:13:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"2","at":"12:13:45s","_save":"-0:13:45","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"3","at":"12:13:55s","_save":"-0:13:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"4","at":"12:14:00s","_save":"-0:14:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"5","at":"12:14:05s","_save":"-0:14:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"6","at":"12:14:10s","_save":"-0:14:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"7","at":"12:14:10s","_save":"-0:14:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"8","at":"12:14:15s","_save":"-0:14:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"9","at":"12:14:15s","_save":"-0:14:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"10","at":"12:14:20s","_save":"-0:14:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"11","at":"12:14:20s","_save":"-0:14:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"12","at":"12:14:20s","_save":"-0:14:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"13","at":"12:14:15s","_save":"-0:14:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"14","at":"12:14:15s","_save":"-0:14:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"15","at":"12:14:10s","_save":"-0:14:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"16","at":"12:14:10s","_save":"-0:14:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"17","at":"12:14:05s","_save":"-0:14:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"18","at":"12:14:00s","_save":"-0:14:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"19","at":"12:13:55s","_save":"-0:13:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"20","at":"12:13:50s","_save":"-0:13:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"21","at":"12:13:40s","_save":"-0:13:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"22","at":"12:13:35s","_save":"-0:13:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"23","at":"12:13:25s","_save":"-0:13:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"24","at":"12:13:15s","_save":"-0:13:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"25","at":"12:13:05s","_save":"-0:13:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"26","at":"12:12:55s","_save":"-0:12:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"27","at":"12:12:45s","_save":"-0:12:45","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"28","at":"12:12:35s","_save":"-0:12:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"1","at":"12:12:25s","_save":"-0:12:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"2","at":"12:12:10s","_save":"-0:12:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"3","at":"12:12:00s","_save":"-0:12:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"4","at":"12:11:45s","_save":"-0:11:45","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"5","at":"12:11:35s","_save":"-0:11:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"6","at":"12:11:20s","_save":"-0:11:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"7","at":"12:11:05s","_save":"-0:11:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"8","at":"12:10:50s","_save":"-0:10:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"9","at":"12:10:35s","_save":"-0:10:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"10","at":"12:10:20s","_save":"-0:10:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"11","at":"12:10:05s","_save":"-0:10:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"12","at":"12:09:50s","_save":"-0:09:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"13","at":"12:09:30s","_save":"-0:09:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"14","at":"12:09:15s","_save":"-0:09:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"15","at":"12:09:00s","_save":"-0:09:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"16","at":"12:08:40s","_save":"-0:08:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"17","at":"12:08:25s","_save":"-0:08:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"18","at":"12:08:05s","_save":"-0:08:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"19","at":"12:07:50s","_save":"-0:07:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"20","at":"12:07:30s","_save":"-0:07:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"21","at":"12:07:15s","_save":"-0:07:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"22","at":"12:06:55s","_save":"-0:06:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"23","at":"12:06:35s","_save":"-0:06:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"24","at":"12:06:20s","_save":"-0:06:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"25","at":"12:06:00s","_save":"-0:06:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"26","at":"12:05:40s","_save":"-0:05:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"27","at":"12:05:25s","_save":"-0:05:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"28","at":"12:05:05s","_save":"-0:05:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"29","at":"12:04:50s","_save":"-0:04:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"30","at":"12:04:30s","_save":"-0:04:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"31","at":"12:04:10s","_save":"-0:04:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"1","at":"12:03:55s","_save":"-0:03:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"2","at":"12:03:35s","_save":"-0:03:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"3","at":"12:03:20s","_save":"-0:03:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"4","at":"12:03:00s","_save":"-0:03:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"5","at":"12:02:45s","_save":"-0:02:45","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"6","at":"12:02:25s","_save":"-0:02:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"7","at":"12:02:10s","_save":"-0:02:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"8","at":"12:01:50s","_save":"-0:01:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"9","at":"12:01:35s","_save":"-0:01:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"10","at":"12:01:20s","_save":"-0:01:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"11","at":"12:01:05s","_save":"-0:01:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"12","at":"12:00:50s","_save":"-0:00:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"13","at":"12:00:35s","_save":"-0:00:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"14","at":"12:00:20s","_save":"-0:00:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"15","at":"12:00:05s","_save":"-0:00:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"16","at":"11:59:50s","_save":"0:00:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"17","at":"11:59:35s","_save":"0:00:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"18","at":"11:59:20s","_save":"0:00:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"19","at":"11:59:10s","_save":"0:00:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"20","at":"11:58:55s","_save":"0:01:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"21","at":"11:58:45s","_save":"0:01:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"22","at":"11:58:30s","_save":"0:01:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"23","at":"11:58:20s","_save":"0:01:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"24","at":"11:58:10s","_save":"0:01:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"25","at":"11:58:00s","_save":"0:02:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"26","at":"11:57:50s","_save":"0:02:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"27","at":"11:57:40s","_save":"0:02:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"28","at":"11:57:30s","_save":"0:02:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"29","at":"11:57:20s","_save":"0:02:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"30","at":"11:57:15s","_save":"0:02:45","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"1","at":"11:57:05s","_save":"0:02:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"2","at":"11:57:00s","_save":"0:03:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"3","at":"11:56:50s","_save":"0:03:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"4","at":"11:56:45s","_save":"0:03:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"5","at":"11:56:40s","_save":"0:03:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"6","at":"11:56:35s","_save":"0:03:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"7","at":"11:56:30s","_save":"0:03:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"8","at":"11:56:30s","_save":"0:03:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"9","at":"11:56:25s","_save":"0:03:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"10","at":"11:56:25s","_save":"0:03:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"11","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"12","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"13","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"14","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"15","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"16","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"17","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"18","at":"11:56:25s","_save":"0:03:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"19","at":"11:56:25s","_save":"0:03:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"20","at":"11:56:30s","_save":"0:03:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"21","at":"11:56:35s","_save":"0:03:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"22","at":"11:56:35s","_save":"0:03:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"23","at":"11:56:40s","_save":"0:03:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"24","at":"11:56:45s","_save":"0:03:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"25","at":"11:56:55s","_save":"0:03:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"26","at":"11:57:00s","_save":"0:03:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"27","at":"11:57:05s","_save":"0:02:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"28","at":"11:57:15s","_save":"0:02:45","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"29","at":"11:57:20s","_save":"0:02:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"30","at":"11:57:30s","_save":"0:02:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"31","at":"11:57:35s","_save":"0:02:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"1","at":"11:57:45s","_save":"0:02:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"2","at":"11:57:55s","_save":"0:02:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"3","at":"11:58:05s","_save":"0:01:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"4","at":"11:58:15s","_save":"0:01:45","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"5","at":"11:58:25s","_save":"0:01:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"6","at":"11:58:35s","_save":"0:01:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"7","at":"11:58:45s","_save":"0:01:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"8","at":"11:59:00s","_save":"0:01:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"9","at":"11:59:10s","_save":"0:00:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"10","at":"11:59:20s","_save":"0:00:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"11","at":"11:59:35s","_save":"0:00:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"12","at":"11:59:45s","_save":"0:00:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"13","at":"12:00:00s","_save":"0:00:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"14","at":"12:00:10s","_save":"-0:00:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"15","at":"12:00:25s","_save":"-0:00:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"16","at":"12:00:35s","_save":"-0:00:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"17","at":"12:00:50s","_save":"-0:00:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"18","at":"12:01:05s","_save":"-0:01:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"19","at":"12:01:15s","_save":"-0:01:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"20","at":"12:01:30s","_save":"-0:01:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"21","at":"12:01:40s","_save":"-0:01:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"22","at":"12:01:55s","_save":"-0:01:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"23","at":"12:02:10s","_save":"-0:02:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"24","at":"12:02:20s","_save":"-0:02:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"25","at":"12:02:35s","_save":"-0:02:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"26","at":"12:02:45s","_save":"-0:02:45","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"27","at":"12:03:00s","_save":"-0:03:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"28","at":"12:03:10s","_save":"-0:03:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"29","at":"12:03:25s","_save":"-0:03:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"30","at":"12:03:35s","_save":"-0:03:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"1","at":"12:03:45s","_save":"-0:03:45","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"2","at":"12:04:00s","_save":"-0:04:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"3","at":"12:04:10s","_save":"-0:04:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"4","at":"12:04:20s","_save":"-0:04:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"5","at":"12:04:30s","_save":"-0:04:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"6","at":"12:04:40s","_save":"-0:04:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"7","at":"12:04:50s","_save":"-0:04:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"8","at":"12:05:00s","_save":"-0:05:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"9","at":"12:05:10s","_save":"-0:05:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"10","at":"12:05:20s","_save":"-0:05:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"11","at":"12:05:25s","_save":"-0:05:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"12","at":"12:05:35s","_save":"-0:05:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"13","at":"12:05:40s","_save":"-0:05:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"14","at":"12:05:50s","_save":"-0:05:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"15","at":"12:05:55s","_save":"-0:05:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"16","at":"12:06:00s","_save":"-0:06:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"17","at":"12:06:05s","_save":"-0:06:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"18","at":"12:06:10s","_save":"-0:06:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"19","at":"12:06:15s","_save":"-0:06:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"20","at":"12:06:20s","_save":"-0:06:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"21","at":"12:06:20s","_save":"-0:06:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"22","at":"12:06:25s","_save":"-0:06:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"23","at":"12:06:25s","_save":"-0:06:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"24","at":"12:06:30s","_save":"-0:06:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"25","at":"12:06:30s","_save":"-0:06:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"26","at":"12:06:30s","_save":"-0:06:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"27","at":"12:06:30s","_save":"-0:06:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"28","at":"12:06:30s","_save":"-0:06:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"29","at":"12:06:25s","_save":"-0:06:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"30","at":"12:06:25s","_save":"-0:06:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"31","at":"12:06:20s","_save":"-0:06:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"1","at":"12:06:20s","_save":"-0:06:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"2","at":"12:06:15s","_save":"-0:06:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"3","at":"12:06:10s","_save":"-0:06:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"4","at":"12:06:05s","_save":"-0:06:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"5","at":"12:06:00s","_save":"-0:06:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"6","at":"12:05:50s","_save":"-0:05:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"7","at":"12:05:45s","_save":"-0:05:45","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"8","at":"12:05:35s","_save":"-0:05:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"9","at":"12:05:30s","_save":"-0:05:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"10","at":"12:05:20s","_save":"-0:05:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"11","at":"12:05:10s","_save":"-0:05:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"12","at":"12:05:00s","_save":"-0:05:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"13","at":"12:04:50s","_save":"-0:04:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"14","at":"12:04:40s","_save":"-0:04:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"15","at":"12:04:30s","_save":"-0:04:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"16","at":"12:04:15s","_save":"-0:04:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"17","at":"12:04:05s","_save":"-0:04:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"18","at":"12:03:50s","_save":"-0:03:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"19","at":"12:03:35s","_save":"-0:03:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"20","at":"12:03:25s","_save":"-0:03:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"21","at":"12:03:10s","_save":"-0:03:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"22","at":"12:02:55s","_save":"-0:02:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"23","at":"12:02:40s","_save":"-0:02:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"24","at":"12:02:20s","_save":"-0:02:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"25","at":"12:02:05s","_save":"-0:02:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"26","at":"12:01:50s","_save":"-0:01:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"27","at":"12:01:30s","_save":"-0:01:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"28","at":"12:01:15s","_save":"-0:01:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"29","at":"12:00:55s","_save":"-0:00:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"30","at":"12:00:40s","_save":"-0:00:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"31","at":"12:00:20s","_save":"-0:00:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"1","at":"12:00:00s","_save":"0:00:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"2","at":"11:59:45s","_save":"0:00:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"3","at":"11:59:25s","_save":"0:00:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"4","at":"11:59:05s","_save":"0:00:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"5","at":"11:58:45s","_save":"0:01:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"6","at":"11:58:25s","_save":"0:01:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"7","at":"11:58:05s","_save":"0:01:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"8","at":"11:57:45s","_save":"0:02:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"9","at":"11:57:20s","_save":"0:02:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"10","at":"11:57:00s","_save":"0:03:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"11","at":"11:56:40s","_save":"0:03:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"12","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"13","at":"11:56:00s","_save":"0:04:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"14","at":"11:55:35s","_save":"0:04:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"15","at":"11:55:15s","_save":"0:04:45","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"16","at":"11:54:55s","_save":"0:05:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"17","at":"11:54:35s","_save":"0:05:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"18","at":"11:54:10s","_save":"0:05:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"19","at":"11:53:50s","_save":"0:06:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"20","at":"11:53:30s","_save":"0:06:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"21","at":"11:53:10s","_save":"0:06:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"22","at":"11:52:45s","_save":"0:07:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"23","at":"11:52:25s","_save":"0:07:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"24","at":"11:52:05s","_save":"0:07:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"25","at":"11:51:45s","_save":"0:08:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"26","at":"11:51:25s","_save":"0:08:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"27","at":"11:51:05s","_save":"0:08:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"28","at":"11:50:40s","_save":"0:09:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"29","at":"11:50:20s","_save":"0:09:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"30","at":"11:50:00s","_save":"0:10:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"1","at":"11:49:45s","_save":"0:10:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"2","at":"11:49:25s","_save":"0:10:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"3","at":"11:49:05s","_save":"0:10:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"4","at":"11:48:45s","_save":"0:11:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"5","at":"11:48:30s","_save":"0:11:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"6","at":"11:48:10s","_save":"0:11:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"7","at":"11:47:50s","_save":"0:12:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"8","at":"11:47:35s","_save":"0:12:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"9","at":"11:47:20s","_save":"0:12:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"10","at":"11:47:00s","_save":"0:13:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"11","at":"11:46:45s","_save":"0:13:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"12","at":"11:46:30s","_save":"0:13:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"13","at":"11:46:15s","_save":"0:13:45","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"14","at":"11:46:00s","_save":"0:14:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"15","at":"11:45:50s","_save":"0:14:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"16","at":"11:45:35s","_save":"0:14:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"17","at":"11:45:20s","_save":"0:14:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"18","at":"11:45:10s","_save":"0:14:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"19","at":"11:45:00s","_save":"0:15:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"20","at":"11:44:50s","_save":"0:15:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"21","at":"11:44:40s","_save":"0:15:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"22","at":"11:44:30s","_save":"0:15:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"23","at":"11:44:20s","_save":"0:15:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"24","at":"11:44:10s","_save":"0:15:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"25","at":"11:44:05s","_save":"0:15:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"26","at":"11:44:00s","_save":"0:16:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"27","at":"11:43:50s","_save":"0:16:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"28","at":"11:43:45s","_save":"0:16:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"29","at":"11:43:40s","_save":"0:16:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"30","at":"11:43:40s","_save":"0:16:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"31","at":"11:43:35s","_save":"0:16:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"1","at":"11:43:35s","_save":"0:16:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"2","at":"11:43:35s","_save":"0:16:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"3","at":"11:43:30s","_save":"0:16:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"4","at":"11:43:35s","_save":"0:16:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"5","at":"11:43:35s","_save":"0:16:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"6","at":"11:43:35s","_save":"0:16:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"7","at":"11:43:40s","_save":"0:16:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"8","at":"11:43:45s","_save":"0:16:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"9","at":"11:43:50s","_save":"0:16:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"10","at":"11:43:55s","_save":"0:16:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"11","at":"11:44:00s","_save":"0:16:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"12","at":"11:44:05s","_save":"0:15:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"13","at":"11:44:15s","_save":"0:15:45","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"14","at":"11:44:25s","_save":"0:15:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"15","at":"11:44:35s","_save":"0:15:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"16","at":"11:44:45s","_save":"0:15:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"17","at":"11:44:55s","_save":"0:15:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"18","at":"11:45:10s","_save":"0:14:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"19","at":"11:45:20s","_save":"0:14:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"20","at":"11:45:35s","_save":"0:14:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"21","at":"11:45:50s","_save":"0:14:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"22","at":"11:46:05s","_save":"0:13:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"23","at":"11:46:25s","_save":"0:13:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"24","at":"11:46:40s","_save":"0:13:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"25","at":"11:47:00s","_save":"0:13:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"26","at":"11:47:20s","_save":"0:12:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"27","at":"11:47:35s","_save":"0:12:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"28","at":"11:47:55s","_save":"0:12:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"29","at":"11:48:20s","_save":"0:11:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"30","at":"11:48:40s","_save":"0:11:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"1","at":"11:49:00s","_save":"0:11:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"2","at":"11:49:25s","_save":"0:10:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"3","at":"11:49:50s","_save":"0:10:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"4","at":"11:50:15s","_save":"0:09:45","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"5","at":"11:50:35s","_save":"0:09:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"6","at":"11:51:00s","_save":"0:09:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"7","at":"11:51:30s","_save":"0:08:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"8","at":"11:51:55s","_save":"0:08:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"9","at":"11:52:20s","_save":"0:07:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"10","at":"11:52:50s","_save":"0:07:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"11","at":"11:53:15s","_save":"0:06:45","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"12","at":"11:53:45s","_save":"0:06:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"13","at":"11:54:10s","_save":"0:05:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"14","at":"11:54:40s","_save":"0:05:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"15","at":"11:55:10s","_save":"0:04:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"16","at":"11:55:40s","_save":"0:04:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"17","at":"11:56:05s","_save":"0:03:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"18","at":"11:56:35s","_save":"0:03:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"19","at":"11:57:05s","_save":"0:02:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"20","at":"11:57:35s","_save":"0:02:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"21","at":"11:58:05s","_save":"0:01:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"22","at":"11:58:35s","_save":"0:01:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"23","at":"11:59:05s","_save":"0:00:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"24","at":"11:59:35s","_save":"0:00:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"25","at":"12:00:05s","_save":"-0:00:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"26","at":"12:00:35s","_save":"-0:00:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"27","at":"12:01:05s","_save":"-0:01:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"28","at":"12:01:35s","_save":"-0:01:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"29","at":"12:02:00s","_save":"-0:02:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"30","at":"12:02:30s","_save":"-0:02:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"31","at":"12:03:00s","_save":"-0:03:00","letter":"-"}],"Arg":[{"name":"Arg","_from":"1930","_to":"only","type":"-","in":"Dec","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Arg","_from":"1931","_to":"only","type":"-","in":"Apr","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Arg","_from":"1931","_to":"only","type":"-","in":"Oct","on":"15","at":"0:00","_save":"1:00","letter":"S"},{"name":"Arg","_from":"1932","_to":"1940","type":"-","in":"Mar","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Arg","_from":"1932","_to":"1939","type":"-","in":"Nov","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Arg","_from":"1940","_to":"only","type":"-","in":"Jul","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Arg","_from":"1941","_to":"only","type":"-","in":"Jun","on":"15","at":"0:00","_save":"0","letter":"-"},{"name":"Arg","_from":"1941","_to":"only","type":"-","in":"Oct","on":"15","at":"0:00","_save":"1:00","letter":"S"},{"name":"Arg","_from":"1943","_to":"only","type":"-","in":"Aug","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Arg","_from":"1943","_to":"only","type":"-","in":"Oct","on":"15","at":"0:00","_save":"1:00","letter":"S"},{"name":"Arg","_from":"1946","_to":"only","type":"-","in":"Mar","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Arg","_from":"1946","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Arg","_from":"1963","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Arg","_from":"1963","_to":"only","type":"-","in":"Dec","on":"15","at":"0:00","_save":"1:00","letter":"S"},{"name":"Arg","_from":"1964","_to":"1966","type":"-","in":"Mar","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Arg","_from":"1964","_to":"1966","type":"-","in":"Oct","on":"15","at":"0:00","_save":"1:00","letter":"S"},{"name":"Arg","_from":"1967","_to":"only","type":"-","in":"Apr","on":"2","at":"0:00","_save":"0","letter":"-"},{"name":"Arg","_from":"1967","_to":"1968","type":"-","in":"Oct","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Arg","_from":"1968","_to":"1969","type":"-","in":"Apr","on":"Sun>=1","at":"0:00","_save":"0","letter":"-"},{"name":"Arg","_from":"1974","_to":"only","type":"-","in":"Jan","on":"23","at":"0:00","_save":"1:00","letter":"S"},{"name":"Arg","_from":"1974","_to":"only","type":"-","in":"May","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Arg","_from":"1988","_to":"only","type":"-","in":"Dec","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Arg","_from":"1989","_to":"1993","type":"-","in":"Mar","on":"Sun>=1","at":"0:00","_save":"0","letter":"-"},{"name":"Arg","_from":"1989","_to":"1992","type":"-","in":"Oct","on":"Sun>=15","at":"0:00","_save":"1:00","letter":"S"},{"name":"Arg","_from":"1999","_to":"only","type":"-","in":"Oct","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Arg","_from":"2000","_to":"only","type":"-","in":"Mar","on":"3","at":"0:00","_save":"0","letter":"-"},{"name":"Arg","_from":"2007","_to":"only","type":"-","in":"Dec","on":"30","at":"0:00","_save":"1:00","letter":"S"},{"name":"Arg","_from":"2008","_to":"2009","type":"-","in":"Mar","on":"Sun>=15","at":"0:00","_save":"0","letter":"-"},{"name":"Arg","_from":"2008","_to":"only","type":"-","in":"Oct","on":"Sun>=15","at":"0:00","_save":"1:00","letter":"S"}],"SanLuis":[{"name":"SanLuis","_from":"2008","_to":"2009","type":"-","in":"Mar","on":"Sun>=8","at":"0:00","_save":"0","letter":"-"},{"name":"SanLuis","_from":"2007","_to":"2009","type":"-","in":"Oct","on":"Sun>=8","at":"0:00","_save":"1:00","letter":"S"}],"Brazil":[{"name":"Brazil","_from":"1931","_to":"only","type":"-","in":"Oct","on":"3","at":"11:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"1932","_to":"1933","type":"-","in":"Apr","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"1932","_to":"only","type":"-","in":"Oct","on":"3","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"1949","_to":"1952","type":"-","in":"Dec","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"1950","_to":"only","type":"-","in":"Apr","on":"16","at":"1:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"1951","_to":"1952","type":"-","in":"Apr","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"1953","_to":"only","type":"-","in":"Mar","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"1963","_to":"only","type":"-","in":"Dec","on":"9","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"1964","_to":"only","type":"-","in":"Mar","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"1965","_to":"only","type":"-","in":"Jan","on":"31","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"1965","_to":"only","type":"-","in":"Mar","on":"31","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"1965","_to":"only","type":"-","in":"Dec","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"1966","_to":"1968","type":"-","in":"Mar","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"1966","_to":"1967","type":"-","in":"Nov","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"1985","_to":"only","type":"-","in":"Nov","on":"2","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"1986","_to":"only","type":"-","in":"Mar","on":"15","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"1986","_to":"only","type":"-","in":"Oct","on":"25","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"1987","_to":"only","type":"-","in":"Feb","on":"14","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"1987","_to":"only","type":"-","in":"Oct","on":"25","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"1988","_to":"only","type":"-","in":"Feb","on":"7","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"1988","_to":"only","type":"-","in":"Oct","on":"16","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"1989","_to":"only","type":"-","in":"Jan","on":"29","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"1989","_to":"only","type":"-","in":"Oct","on":"15","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"1990","_to":"only","type":"-","in":"Feb","on":"11","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"1990","_to":"only","type":"-","in":"Oct","on":"21","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"1991","_to":"only","type":"-","in":"Feb","on":"17","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"1991","_to":"only","type":"-","in":"Oct","on":"20","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"1992","_to":"only","type":"-","in":"Feb","on":"9","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"1992","_to":"only","type":"-","in":"Oct","on":"25","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"1993","_to":"only","type":"-","in":"Jan","on":"31","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"1993","_to":"1995","type":"-","in":"Oct","on":"Sun>=11","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"1994","_to":"1995","type":"-","in":"Feb","on":"Sun>=15","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"1996","_to":"only","type":"-","in":"Feb","on":"11","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"1996","_to":"only","type":"-","in":"Oct","on":"6","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"1997","_to":"only","type":"-","in":"Feb","on":"16","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"1997","_to":"only","type":"-","in":"Oct","on":"6","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"1998","_to":"only","type":"-","in":"Mar","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"1998","_to":"only","type":"-","in":"Oct","on":"11","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"1999","_to":"only","type":"-","in":"Feb","on":"21","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"1999","_to":"only","type":"-","in":"Oct","on":"3","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"2000","_to":"only","type":"-","in":"Feb","on":"27","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"2000","_to":"2001","type":"-","in":"Oct","on":"Sun>=8","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"2001","_to":"2006","type":"-","in":"Feb","on":"Sun>=15","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"2002","_to":"only","type":"-","in":"Nov","on":"3","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"2003","_to":"only","type":"-","in":"Oct","on":"19","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"2004","_to":"only","type":"-","in":"Nov","on":"2","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"2005","_to":"only","type":"-","in":"Oct","on":"16","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"2006","_to":"only","type":"-","in":"Nov","on":"5","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"2007","_to":"only","type":"-","in":"Feb","on":"25","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"2007","_to":"only","type":"-","in":"Oct","on":"Sun>=8","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"2008","_to":"max","type":"-","in":"Oct","on":"Sun>=15","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"2008","_to":"2011","type":"-","in":"Feb","on":"Sun>=15","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"2012","_to":"only","type":"-","in":"Feb","on":"Sun>=22","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"2013","_to":"2014","type":"-","in":"Feb","on":"Sun>=15","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"2015","_to":"only","type":"-","in":"Feb","on":"Sun>=22","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"2016","_to":"2022","type":"-","in":"Feb","on":"Sun>=15","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"2023","_to":"only","type":"-","in":"Feb","on":"Sun>=22","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"2024","_to":"2025","type":"-","in":"Feb","on":"Sun>=15","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"2026","_to":"only","type":"-","in":"Feb","on":"Sun>=22","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"2027","_to":"2033","type":"-","in":"Feb","on":"Sun>=15","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"2034","_to":"only","type":"-","in":"Feb","on":"Sun>=22","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"2035","_to":"2036","type":"-","in":"Feb","on":"Sun>=15","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"2037","_to":"only","type":"-","in":"Feb","on":"Sun>=22","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"2038","_to":"max","type":"-","in":"Feb","on":"Sun>=15","at":"0:00","_save":"0","letter":"-"}],"Chile":[{"name":"Chile","_from":"1927","_to":"1932","type":"-","in":"Sep","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Chile","_from":"1928","_to":"1932","type":"-","in":"Apr","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Chile","_from":"1942","_to":"only","type":"-","in":"Jun","on":"1","at":"4:00u","_save":"0","letter":"-"},{"name":"Chile","_from":"1942","_to":"only","type":"-","in":"Aug","on":"1","at":"5:00u","_save":"1:00","letter":"S"},{"name":"Chile","_from":"1946","_to":"only","type":"-","in":"Jul","on":"15","at":"4:00u","_save":"1:00","letter":"S"},{"name":"Chile","_from":"1946","_to":"only","type":"-","in":"Sep","on":"1","at":"3:00u","_save":"0:00","letter":"-"},{"name":"Chile","_from":"1947","_to":"only","type":"-","in":"Apr","on":"1","at":"4:00u","_save":"0","letter":"-"},{"name":"Chile","_from":"1968","_to":"only","type":"-","in":"Nov","on":"3","at":"4:00u","_save":"1:00","letter":"S"},{"name":"Chile","_from":"1969","_to":"only","type":"-","in":"Mar","on":"30","at":"3:00u","_save":"0","letter":"-"},{"name":"Chile","_from":"1969","_to":"only","type":"-","in":"Nov","on":"23","at":"4:00u","_save":"1:00","letter":"S"},{"name":"Chile","_from":"1970","_to":"only","type":"-","in":"Mar","on":"29","at":"3:00u","_save":"0","letter":"-"},{"name":"Chile","_from":"1971","_to":"only","type":"-","in":"Mar","on":"14","at":"3:00u","_save":"0","letter":"-"},{"name":"Chile","_from":"1970","_to":"1972","type":"-","in":"Oct","on":"Sun>=9","at":"4:00u","_save":"1:00","letter":"S"},{"name":"Chile","_from":"1972","_to":"1986","type":"-","in":"Mar","on":"Sun>=9","at":"3:00u","_save":"0","letter":"-"},{"name":"Chile","_from":"1973","_to":"only","type":"-","in":"Sep","on":"30","at":"4:00u","_save":"1:00","letter":"S"},{"name":"Chile","_from":"1974","_to":"1987","type":"-","in":"Oct","on":"Sun>=9","at":"4:00u","_save":"1:00","letter":"S"},{"name":"Chile","_from":"1987","_to":"only","type":"-","in":"Apr","on":"12","at":"3:00u","_save":"0","letter":"-"},{"name":"Chile","_from":"1988","_to":"1989","type":"-","in":"Mar","on":"Sun>=9","at":"3:00u","_save":"0","letter":"-"},{"name":"Chile","_from":"1988","_to":"only","type":"-","in":"Oct","on":"Sun>=1","at":"4:00u","_save":"1:00","letter":"S"},{"name":"Chile","_from":"1989","_to":"only","type":"-","in":"Oct","on":"Sun>=9","at":"4:00u","_save":"1:00","letter":"S"},{"name":"Chile","_from":"1990","_to":"only","type":"-","in":"Mar","on":"18","at":"3:00u","_save":"0","letter":"-"},{"name":"Chile","_from":"1990","_to":"only","type":"-","in":"Sep","on":"16","at":"4:00u","_save":"1:00","letter":"S"},{"name":"Chile","_from":"1991","_to":"1996","type":"-","in":"Mar","on":"Sun>=9","at":"3:00u","_save":"0","letter":"-"},{"name":"Chile","_from":"1991","_to":"1997","type":"-","in":"Oct","on":"Sun>=9","at":"4:00u","_save":"1:00","letter":"S"},{"name":"Chile","_from":"1997","_to":"only","type":"-","in":"Mar","on":"30","at":"3:00u","_save":"0","letter":"-"},{"name":"Chile","_from":"1998","_to":"only","type":"-","in":"Mar","on":"Sun>=9","at":"3:00u","_save":"0","letter":"-"},{"name":"Chile","_from":"1998","_to":"only","type":"-","in":"Sep","on":"27","at":"4:00u","_save":"1:00","letter":"S"},{"name":"Chile","_from":"1999","_to":"only","type":"-","in":"Apr","on":"4","at":"3:00u","_save":"0","letter":"-"},{"name":"Chile","_from":"1999","_to":"2010","type":"-","in":"Oct","on":"Sun>=9","at":"4:00u","_save":"1:00","letter":"S"},{"name":"Chile","_from":"2000","_to":"2007","type":"-","in":"Mar","on":"Sun>=9","at":"3:00u","_save":"0","letter":"-"},{"name":"Chile","_from":"2008","_to":"only","type":"-","in":"Mar","on":"30","at":"3:00u","_save":"0","letter":"-"},{"name":"Chile","_from":"2009","_to":"only","type":"-","in":"Mar","on":"Sun>=9","at":"3:00u","_save":"0","letter":"-"},{"name":"Chile","_from":"2010","_to":"only","type":"-","in":"Apr","on":"Sun>=1","at":"3:00u","_save":"0","letter":"-"},{"name":"Chile","_from":"2011","_to":"only","type":"-","in":"May","on":"Sun>=2","at":"3:00u","_save":"0","letter":"-"},{"name":"Chile","_from":"2011","_to":"only","type":"-","in":"Aug","on":"Sun>=16","at":"4:00u","_save":"1:00","letter":"S"},{"name":"Chile","_from":"2012","_to":"max","type":"-","in":"Apr","on":"Sun>=23","at":"3:00u","_save":"0","letter":"-"},{"name":"Chile","_from":"2012","_to":"max","type":"-","in":"Sep","on":"Sun>=2","at":"4:00u","_save":"1:00","letter":"S"}],"CO":[{"name":"CO","_from":"1992","_to":"only","type":"-","in":"May","on":"3","at":"0:00","_save":"1:00","letter":"S"},{"name":"CO","_from":"1993","_to":"only","type":"-","in":"Apr","on":"4","at":"0:00","_save":"0","letter":"-"}],"Falk":[{"name":"Falk","_from":"1937","_to":"1938","type":"-","in":"Sep","on":"lastSun","at":"0:00","_save":"1:00","letter":"S"},{"name":"Falk","_from":"1938","_to":"1942","type":"-","in":"Mar","on":"Sun>=19","at":"0:00","_save":"0","letter":"-"},{"name":"Falk","_from":"1939","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Falk","_from":"1940","_to":"1942","type":"-","in":"Sep","on":"lastSun","at":"0:00","_save":"1:00","letter":"S"},{"name":"Falk","_from":"1943","_to":"only","type":"-","in":"Jan","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Falk","_from":"1983","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"0:00","_save":"1:00","letter":"S"},{"name":"Falk","_from":"1984","_to":"1985","type":"-","in":"Apr","on":"lastSun","at":"0:00","_save":"0","letter":"-"},{"name":"Falk","_from":"1984","_to":"only","type":"-","in":"Sep","on":"16","at":"0:00","_save":"1:00","letter":"S"},{"name":"Falk","_from":"1985","_to":"2000","type":"-","in":"Sep","on":"Sun>=9","at":"0:00","_save":"1:00","letter":"S"},{"name":"Falk","_from":"1986","_to":"2000","type":"-","in":"Apr","on":"Sun>=16","at":"0:00","_save":"0","letter":"-"},{"name":"Falk","_from":"2001","_to":"2010","type":"-","in":"Apr","on":"Sun>=15","at":"2:00","_save":"0","letter":"-"},{"name":"Falk","_from":"2001","_to":"2010","type":"-","in":"Sep","on":"Sun>=1","at":"2:00","_save":"1:00","letter":"S"}],"Para":[{"name":"Para","_from":"1975","_to":"1988","type":"-","in":"Oct","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Para","_from":"1975","_to":"1978","type":"-","in":"Mar","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Para","_from":"1979","_to":"1991","type":"-","in":"Apr","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Para","_from":"1989","_to":"only","type":"-","in":"Oct","on":"22","at":"0:00","_save":"1:00","letter":"S"},{"name":"Para","_from":"1990","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Para","_from":"1991","_to":"only","type":"-","in":"Oct","on":"6","at":"0:00","_save":"1:00","letter":"S"},{"name":"Para","_from":"1992","_to":"only","type":"-","in":"Mar","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Para","_from":"1992","_to":"only","type":"-","in":"Oct","on":"5","at":"0:00","_save":"1:00","letter":"S"},{"name":"Para","_from":"1993","_to":"only","type":"-","in":"Mar","on":"31","at":"0:00","_save":"0","letter":"-"},{"name":"Para","_from":"1993","_to":"1995","type":"-","in":"Oct","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Para","_from":"1994","_to":"1995","type":"-","in":"Feb","on":"lastSun","at":"0:00","_save":"0","letter":"-"},{"name":"Para","_from":"1996","_to":"only","type":"-","in":"Mar","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Para","_from":"1996","_to":"2001","type":"-","in":"Oct","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Para","_from":"1997","_to":"only","type":"-","in":"Feb","on":"lastSun","at":"0:00","_save":"0","letter":"-"},{"name":"Para","_from":"1998","_to":"2001","type":"-","in":"Mar","on":"Sun>=1","at":"0:00","_save":"0","letter":"-"},{"name":"Para","_from":"2002","_to":"2004","type":"-","in":"Apr","on":"Sun>=1","at":"0:00","_save":"0","letter":"-"},{"name":"Para","_from":"2002","_to":"2003","type":"-","in":"Sep","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Para","_from":"2004","_to":"2009","type":"-","in":"Oct","on":"Sun>=15","at":"0:00","_save":"1:00","letter":"S"},{"name":"Para","_from":"2005","_to":"2009","type":"-","in":"Mar","on":"Sun>=8","at":"0:00","_save":"0","letter":"-"},{"name":"Para","_from":"2010","_to":"max","type":"-","in":"Oct","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Para","_from":"2010","_to":"2012","type":"-","in":"Apr","on":"Sun>=8","at":"0:00","_save":"0","letter":"-"},{"name":"Para","_from":"2013","_to":"max","type":"-","in":"Mar","on":"Sun>=22","at":"0:00","_save":"0","letter":"-"}],"Peru":[{"name":"Peru","_from":"1938","_to":"only","type":"-","in":"Jan","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Peru","_from":"1938","_to":"only","type":"-","in":"Apr","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Peru","_from":"1938","_to":"1939","type":"-","in":"Sep","on":"lastSun","at":"0:00","_save":"1:00","letter":"S"},{"name":"Peru","_from":"1939","_to":"1940","type":"-","in":"Mar","on":"Sun>=24","at":"0:00","_save":"0","letter":"-"},{"name":"Peru","_from":"1986","_to":"1987","type":"-","in":"Jan","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Peru","_from":"1986","_to":"1987","type":"-","in":"Apr","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Peru","_from":"1990","_to":"only","type":"-","in":"Jan","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Peru","_from":"1990","_to":"only","type":"-","in":"Apr","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Peru","_from":"1994","_to":"only","type":"-","in":"Jan","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Peru","_from":"1994","_to":"only","type":"-","in":"Apr","on":"1","at":"0:00","_save":"0","letter":"-"}],"Uruguay":[{"name":"Uruguay","_from":"1923","_to":"only","type":"-","in":"Oct","on":"2","at":"0:00","_save":"0:30","letter":"HS"},{"name":"Uruguay","_from":"1924","_to":"1926","type":"-","in":"Apr","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Uruguay","_from":"1924","_to":"1925","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0:30","letter":"HS"},{"name":"Uruguay","_from":"1933","_to":"1935","type":"-","in":"Oct","on":"lastSun","at":"0:00","_save":"0:30","letter":"HS"},{"name":"Uruguay","_from":"1934","_to":"1936","type":"-","in":"Mar","on":"Sat>=25","at":"23:30s","_save":"0","letter":"-"},{"name":"Uruguay","_from":"1936","_to":"only","type":"-","in":"Nov","on":"1","at":"0:00","_save":"0:30","letter":"HS"},{"name":"Uruguay","_from":"1937","_to":"1941","type":"-","in":"Mar","on":"lastSun","at":"0:00","_save":"0","letter":"-"},{"name":"Uruguay","_from":"1937","_to":"1940","type":"-","in":"Oct","on":"lastSun","at":"0:00","_save":"0:30","letter":"HS"},{"name":"Uruguay","_from":"1941","_to":"only","type":"-","in":"Aug","on":"1","at":"0:00","_save":"0:30","letter":"HS"},{"name":"Uruguay","_from":"1942","_to":"only","type":"-","in":"Jan","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Uruguay","_from":"1942","_to":"only","type":"-","in":"Dec","on":"14","at":"0:00","_save":"1:00","letter":"S"},{"name":"Uruguay","_from":"1943","_to":"only","type":"-","in":"Mar","on":"14","at":"0:00","_save":"0","letter":"-"},{"name":"Uruguay","_from":"1959","_to":"only","type":"-","in":"May","on":"24","at":"0:00","_save":"1:00","letter":"S"},{"name":"Uruguay","_from":"1959","_to":"only","type":"-","in":"Nov","on":"15","at":"0:00","_save":"0","letter":"-"},{"name":"Uruguay","_from":"1960","_to":"only","type":"-","in":"Jan","on":"17","at":"0:00","_save":"1:00","letter":"S"},{"name":"Uruguay","_from":"1960","_to":"only","type":"-","in":"Mar","on":"6","at":"0:00","_save":"0","letter":"-"},{"name":"Uruguay","_from":"1965","_to":"1967","type":"-","in":"Apr","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Uruguay","_from":"1965","_to":"only","type":"-","in":"Sep","on":"26","at":"0:00","_save":"0","letter":"-"},{"name":"Uruguay","_from":"1966","_to":"1967","type":"-","in":"Oct","on":"31","at":"0:00","_save":"0","letter":"-"},{"name":"Uruguay","_from":"1968","_to":"1970","type":"-","in":"May","on":"27","at":"0:00","_save":"0:30","letter":"HS"},{"name":"Uruguay","_from":"1968","_to":"1970","type":"-","in":"Dec","on":"2","at":"0:00","_save":"0","letter":"-"},{"name":"Uruguay","_from":"1972","_to":"only","type":"-","in":"Apr","on":"24","at":"0:00","_save":"1:00","letter":"S"},{"name":"Uruguay","_from":"1972","_to":"only","type":"-","in":"Aug","on":"15","at":"0:00","_save":"0","letter":"-"},{"name":"Uruguay","_from":"1974","_to":"only","type":"-","in":"Mar","on":"10","at":"0:00","_save":"0:30","letter":"HS"},{"name":"Uruguay","_from":"1974","_to":"only","type":"-","in":"Dec","on":"22","at":"0:00","_save":"1:00","letter":"S"},{"name":"Uruguay","_from":"1976","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Uruguay","_from":"1977","_to":"only","type":"-","in":"Dec","on":"4","at":"0:00","_save":"1:00","letter":"S"},{"name":"Uruguay","_from":"1978","_to":"only","type":"-","in":"Apr","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Uruguay","_from":"1979","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Uruguay","_from":"1980","_to":"only","type":"-","in":"May","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Uruguay","_from":"1987","_to":"only","type":"-","in":"Dec","on":"14","at":"0:00","_save":"1:00","letter":"S"},{"name":"Uruguay","_from":"1988","_to":"only","type":"-","in":"Mar","on":"14","at":"0:00","_save":"0","letter":"-"},{"name":"Uruguay","_from":"1988","_to":"only","type":"-","in":"Dec","on":"11","at":"0:00","_save":"1:00","letter":"S"},{"name":"Uruguay","_from":"1989","_to":"only","type":"-","in":"Mar","on":"12","at":"0:00","_save":"0","letter":"-"},{"name":"Uruguay","_from":"1989","_to":"only","type":"-","in":"Oct","on":"29","at":"0:00","_save":"1:00","letter":"S"},{"name":"Uruguay","_from":"1990","_to":"1992","type":"-","in":"Mar","on":"Sun>=1","at":"0:00","_save":"0","letter":"-"},{"name":"Uruguay","_from":"1990","_to":"1991","type":"-","in":"Oct","on":"Sun>=21","at":"0:00","_save":"1:00","letter":"S"},{"name":"Uruguay","_from":"1992","_to":"only","type":"-","in":"Oct","on":"18","at":"0:00","_save":"1:00","letter":"S"},{"name":"Uruguay","_from":"1993","_to":"only","type":"-","in":"Feb","on":"28","at":"0:00","_save":"0","letter":"-"},{"name":"Uruguay","_from":"2004","_to":"only","type":"-","in":"Sep","on":"19","at":"0:00","_save":"1:00","letter":"S"},{"name":"Uruguay","_from":"2005","_to":"only","type":"-","in":"Mar","on":"27","at":"2:00","_save":"0","letter":"-"},{"name":"Uruguay","_from":"2005","_to":"only","type":"-","in":"Oct","on":"9","at":"2:00","_save":"1:00","letter":"S"},{"name":"Uruguay","_from":"2006","_to":"only","type":"-","in":"Mar","on":"12","at":"2:00","_save":"0","letter":"-"},{"name":"Uruguay","_from":"2006","_to":"max","type":"-","in":"Oct","on":"Sun>=1","at":"2:00","_save":"1:00","letter":"S"},{"name":"Uruguay","_from":"2007","_to":"max","type":"-","in":"Mar","on":"Sun>=8","at":"2:00","_save":"0","letter":"-"}],"SystemV":[{"name":"SystemV","_from":"min","_to":"1973","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"SystemV","_from":"min","_to":"1973","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"SystemV","_from":"1974","_to":"only","type":"-","in":"Jan","on":"6","at":"2:00","_save":"1:00","letter":"D"},{"name":"SystemV","_from":"1974","_to":"only","type":"-","in":"Nov","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"SystemV","_from":"1975","_to":"only","type":"-","in":"Feb","on":"23","at":"2:00","_save":"1:00","letter":"D"},{"name":"SystemV","_from":"1975","_to":"only","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"SystemV","_from":"1976","_to":"max","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"SystemV","_from":"1976","_to":"max","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"}]},
	  zones: {"Africa/Algiers":[{"name":"Africa/Algiers","_offset":"0:12:12","_rule":"-","format":"LMT","_until":"1891 Mar 15 0:01"},{"name":"Africa/Algiers","_offset":"0:09:21","_rule":"-","format":"PMT","_until":"1911 Mar 11"},{"name":"Africa/Algiers","_offset":"0:00","_rule":"Algeria","format":"WE%sT","_until":"1940 Feb 25 2:00"},{"name":"Africa/Algiers","_offset":"1:00","_rule":"Algeria","format":"CE%sT","_until":"1946 Oct 7"},{"name":"Africa/Algiers","_offset":"0:00","_rule":"-","format":"WET","_until":"1956 Jan 29"},{"name":"Africa/Algiers","_offset":"1:00","_rule":"-","format":"CET","_until":"1963 Apr 14"},{"name":"Africa/Algiers","_offset":"0:00","_rule":"Algeria","format":"WE%sT","_until":"1977 Oct 21"},{"name":"Africa/Algiers","_offset":"1:00","_rule":"Algeria","format":"CE%sT","_until":"1979 Oct 26"},{"name":"Africa/Algiers","_offset":"0:00","_rule":"Algeria","format":"WE%sT","_until":"1981 May"},{"name":"Africa/Algiers","_offset":"1:00","_rule":"-","format":"CET","_until":""}],"Africa/Luanda":[{"name":"Africa/Luanda","_offset":"0:52:56","_rule":"-","format":"LMT","_until":"1892"},{"name":"Africa/Luanda","_offset":"0:52:04","_rule":"-","format":"AOT","_until":"1911 May 26"},{"name":"Africa/Luanda","_offset":"1:00","_rule":"-","format":"WAT","_until":""}],"Africa/Porto-Novo":[{"name":"Africa/Porto-Novo","_offset":"0:10:28","_rule":"-","format":"LMT","_until":"1912"},{"name":"Africa/Porto-Novo","_offset":"0:00","_rule":"-","format":"GMT","_until":"1934 Feb 26"},{"name":"Africa/Porto-Novo","_offset":"1:00","_rule":"-","format":"WAT","_until":""}],"Africa/Gaborone":[{"name":"Africa/Gaborone","_offset":"1:43:40","_rule":"-","format":"LMT","_until":"1885"},{"name":"Africa/Gaborone","_offset":"1:30","_rule":"-","format":"SAST","_until":"1903 Mar"},{"name":"Africa/Gaborone","_offset":"2:00","_rule":"-","format":"CAT","_until":"1943 Sep 19 2:00"},{"name":"Africa/Gaborone","_offset":"2:00","_rule":"1:00","format":"CAST","_until":"1944 Mar 19 2:00"},{"name":"Africa/Gaborone","_offset":"2:00","_rule":"-","format":"CAT","_until":""}],"Africa/Ouagadougou":[{"name":"Africa/Ouagadougou","_offset":"-0:06:04","_rule":"-","format":"LMT","_until":"1912"},{"name":"Africa/Ouagadougou","_offset":"0:00","_rule":"-","format":"GMT","_until":""}],"Africa/Bujumbura":[{"name":"Africa/Bujumbura","_offset":"1:57:28","_rule":"-","format":"LMT","_until":"1890"},{"name":"Africa/Bujumbura","_offset":"2:00","_rule":"-","format":"CAT","_until":""}],"Africa/Douala":[{"name":"Africa/Douala","_offset":"0:38:48","_rule":"-","format":"LMT","_until":"1912"},{"name":"Africa/Douala","_offset":"1:00","_rule":"-","format":"WAT","_until":""}],"Atlantic/Cape_Verde":[{"name":"Atlantic/Cape_Verde","_offset":"-1:34:04","_rule":"-","format":"LMT","_until":"1907"},{"name":"Atlantic/Cape_Verde","_offset":"-2:00","_rule":"-","format":"CVT","_until":"1942 Sep"},{"name":"Atlantic/Cape_Verde","_offset":"-2:00","_rule":"1:00","format":"CVST","_until":"1945 Oct 15"},{"name":"Atlantic/Cape_Verde","_offset":"-2:00","_rule":"-","format":"CVT","_until":"1975 Nov 25 2:00"},{"name":"Atlantic/Cape_Verde","_offset":"-1:00","_rule":"-","format":"CVT","_until":""}],"Africa/Bangui":[{"name":"Africa/Bangui","_offset":"1:14:20","_rule":"-","format":"LMT","_until":"1912"},{"name":"Africa/Bangui","_offset":"1:00","_rule":"-","format":"WAT","_until":""}],"Africa/Ndjamena":[{"name":"Africa/Ndjamena","_offset":"1:00:12","_rule":"-","format":"LMT","_until":"1912"},{"name":"Africa/Ndjamena","_offset":"1:00","_rule":"-","format":"WAT","_until":"1979 Oct 14"},{"name":"Africa/Ndjamena","_offset":"1:00","_rule":"1:00","format":"WAST","_until":"1980 Mar 8"},{"name":"Africa/Ndjamena","_offset":"1:00","_rule":"-","format":"WAT","_until":""}],"Indian/Comoro":[{"name":"Indian/Comoro","_offset":"2:53:04","_rule":"-","format":"LMT","_until":"1911 Jul"},{"name":"Indian/Comoro","_offset":"3:00","_rule":"-","format":"EAT","_until":""}],"Africa/Kinshasa":[{"name":"Africa/Kinshasa","_offset":"1:01:12","_rule":"-","format":"LMT","_until":"1897 Nov 9"},{"name":"Africa/Kinshasa","_offset":"1:00","_rule":"-","format":"WAT","_until":""}],"Africa/Lubumbashi":[{"name":"Africa/Lubumbashi","_offset":"1:49:52","_rule":"-","format":"LMT","_until":"1897 Nov 9"},{"name":"Africa/Lubumbashi","_offset":"2:00","_rule":"-","format":"CAT","_until":""}],"Africa/Brazzaville":[{"name":"Africa/Brazzaville","_offset":"1:01:08","_rule":"-","format":"LMT","_until":"1912"},{"name":"Africa/Brazzaville","_offset":"1:00","_rule":"-","format":"WAT","_until":""}],"Africa/Abidjan":[{"name":"Africa/Abidjan","_offset":"-0:16:08","_rule":"-","format":"LMT","_until":"1912"},{"name":"Africa/Abidjan","_offset":"0:00","_rule":"-","format":"GMT","_until":""}],"Africa/Djibouti":[{"name":"Africa/Djibouti","_offset":"2:52:36","_rule":"-","format":"LMT","_until":"1911 Jul"},{"name":"Africa/Djibouti","_offset":"3:00","_rule":"-","format":"EAT","_until":""}],"Africa/Cairo":[{"name":"Africa/Cairo","_offset":"2:05:09","_rule":"-","format":"LMT","_until":"1900 Oct"},{"name":"Africa/Cairo","_offset":"2:00","_rule":"Egypt","format":"EE%sT","_until":""}],"Africa/Malabo":[{"name":"Africa/Malabo","_offset":"0:35:08","_rule":"-","format":"LMT","_until":"1912"},{"name":"Africa/Malabo","_offset":"0:00","_rule":"-","format":"GMT","_until":"1963 Dec 15"},{"name":"Africa/Malabo","_offset":"1:00","_rule":"-","format":"WAT","_until":""}],"Africa/Asmara":[{"name":"Africa/Asmara","_offset":"2:35:32","_rule":"-","format":"LMT","_until":"1870"},{"name":"Africa/Asmara","_offset":"2:35:32","_rule":"-","format":"AMT","_until":"1890"},{"name":"Africa/Asmara","_offset":"2:35:20","_rule":"-","format":"ADMT","_until":"1936 May 5"},{"name":"Africa/Asmara","_offset":"3:00","_rule":"-","format":"EAT","_until":""}],"Africa/Addis_Ababa":[{"name":"Africa/Addis_Ababa","_offset":"2:34:48","_rule":"-","format":"LMT","_until":"1870"},{"name":"Africa/Addis_Ababa","_offset":"2:35:20","_rule":"-","format":"ADMT","_until":"1936 May 5"},{"name":"Africa/Addis_Ababa","_offset":"3:00","_rule":"-","format":"EAT","_until":""}],"Africa/Libreville":[{"name":"Africa/Libreville","_offset":"0:37:48","_rule":"-","format":"LMT","_until":"1912"},{"name":"Africa/Libreville","_offset":"1:00","_rule":"-","format":"WAT","_until":""}],"Africa/Banjul":[{"name":"Africa/Banjul","_offset":"-1:06:36","_rule":"-","format":"LMT","_until":"1912"},{"name":"Africa/Banjul","_offset":"-1:06:36","_rule":"-","format":"BMT","_until":"1935"},{"name":"Africa/Banjul","_offset":"-1:00","_rule":"-","format":"WAT","_until":"1964"},{"name":"Africa/Banjul","_offset":"0:00","_rule":"-","format":"GMT","_until":""}],"Africa/Accra":[{"name":"Africa/Accra","_offset":"-0:00:52","_rule":"-","format":"LMT","_until":"1918"},{"name":"Africa/Accra","_offset":"0:00","_rule":"Ghana","format":"%s","_until":""}],"Africa/Conakry":[{"name":"Africa/Conakry","_offset":"-0:54:52","_rule":"-","format":"LMT","_until":"1912"},{"name":"Africa/Conakry","_offset":"0:00","_rule":"-","format":"GMT","_until":"1934 Feb 26"},{"name":"Africa/Conakry","_offset":"-1:00","_rule":"-","format":"WAT","_until":"1960"},{"name":"Africa/Conakry","_offset":"0:00","_rule":"-","format":"GMT","_until":""}],"Africa/Bissau":[{"name":"Africa/Bissau","_offset":"-1:02:20","_rule":"-","format":"LMT","_until":"1911 May 26"},{"name":"Africa/Bissau","_offset":"-1:00","_rule":"-","format":"WAT","_until":"1975"},{"name":"Africa/Bissau","_offset":"0:00","_rule":"-","format":"GMT","_until":""}],"Africa/Nairobi":[{"name":"Africa/Nairobi","_offset":"2:27:16","_rule":"-","format":"LMT","_until":"1928 Jul"},{"name":"Africa/Nairobi","_offset":"3:00","_rule":"-","format":"EAT","_until":"1930"},{"name":"Africa/Nairobi","_offset":"2:30","_rule":"-","format":"BEAT","_until":"1940"},{"name":"Africa/Nairobi","_offset":"2:45","_rule":"-","format":"BEAUT","_until":"1960"},{"name":"Africa/Nairobi","_offset":"3:00","_rule":"-","format":"EAT","_until":""}],"Africa/Maseru":[{"name":"Africa/Maseru","_offset":"1:50:00","_rule":"-","format":"LMT","_until":"1903 Mar"},{"name":"Africa/Maseru","_offset":"2:00","_rule":"-","format":"SAST","_until":"1943 Sep 19 2:00"},{"name":"Africa/Maseru","_offset":"2:00","_rule":"1:00","format":"SAST","_until":"1944 Mar 19 2:00"},{"name":"Africa/Maseru","_offset":"2:00","_rule":"-","format":"SAST","_until":""}],"Africa/Monrovia":[{"name":"Africa/Monrovia","_offset":"-0:43:08","_rule":"-","format":"LMT","_until":"1882"},{"name":"Africa/Monrovia","_offset":"-0:43:08","_rule":"-","format":"MMT","_until":"1919 Mar"},{"name":"Africa/Monrovia","_offset":"-0:44:30","_rule":"-","format":"LRT","_until":"1972 May"},{"name":"Africa/Monrovia","_offset":"0:00","_rule":"-","format":"GMT","_until":""}],"Africa/Tripoli":[{"name":"Africa/Tripoli","_offset":"0:52:44","_rule":"-","format":"LMT","_until":"1920"},{"name":"Africa/Tripoli","_offset":"1:00","_rule":"Libya","format":"CE%sT","_until":"1959"},{"name":"Africa/Tripoli","_offset":"2:00","_rule":"-","format":"EET","_until":"1982"},{"name":"Africa/Tripoli","_offset":"1:00","_rule":"Libya","format":"CE%sT","_until":"1990 May 4"},{"name":"Africa/Tripoli","_offset":"2:00","_rule":"-","format":"EET","_until":"1996 Sep 30"},{"name":"Africa/Tripoli","_offset":"1:00","_rule":"Libya","format":"CE%sT","_until":"1997 Oct 4"},{"name":"Africa/Tripoli","_offset":"2:00","_rule":"-","format":"EET","_until":"2012 Nov 10 2:00"},{"name":"Africa/Tripoli","_offset":"1:00","_rule":"Libya","format":"CE%sT","_until":""}],"Indian/Antananarivo":[{"name":"Indian/Antananarivo","_offset":"3:10:04","_rule":"-","format":"LMT","_until":"1911 Jul"},{"name":"Indian/Antananarivo","_offset":"3:00","_rule":"-","format":"EAT","_until":"1954 Feb 27 23:00s"},{"name":"Indian/Antananarivo","_offset":"3:00","_rule":"1:00","format":"EAST","_until":"1954 May 29 23:00s"},{"name":"Indian/Antananarivo","_offset":"3:00","_rule":"-","format":"EAT","_until":""}],"Africa/Blantyre":[{"name":"Africa/Blantyre","_offset":"2:20:00","_rule":"-","format":"LMT","_until":"1903 Mar"},{"name":"Africa/Blantyre","_offset":"2:00","_rule":"-","format":"CAT","_until":""}],"Africa/Bamako":[{"name":"Africa/Bamako","_offset":"-0:32:00","_rule":"-","format":"LMT","_until":"1912"},{"name":"Africa/Bamako","_offset":"0:00","_rule":"-","format":"GMT","_until":"1934 Feb 26"},{"name":"Africa/Bamako","_offset":"-1:00","_rule":"-","format":"WAT","_until":"1960 Jun 20"},{"name":"Africa/Bamako","_offset":"0:00","_rule":"-","format":"GMT","_until":""}],"Africa/Nouakchott":[{"name":"Africa/Nouakchott","_offset":"-1:03:48","_rule":"-","format":"LMT","_until":"1912"},{"name":"Africa/Nouakchott","_offset":"0:00","_rule":"-","format":"GMT","_until":"1934 Feb 26"},{"name":"Africa/Nouakchott","_offset":"-1:00","_rule":"-","format":"WAT","_until":"1960 Nov 28"},{"name":"Africa/Nouakchott","_offset":"0:00","_rule":"-","format":"GMT","_until":""}],"Indian/Mauritius":[{"name":"Indian/Mauritius","_offset":"3:50:00","_rule":"-","format":"LMT","_until":"1907"},{"name":"Indian/Mauritius","_offset":"4:00","_rule":"Mauritius","format":"MU%sT","_until":""}],"Indian/Mayotte":[{"name":"Indian/Mayotte","_offset":"3:00:56","_rule":"-","format":"LMT","_until":"1911 Jul"},{"name":"Indian/Mayotte","_offset":"3:00","_rule":"-","format":"EAT","_until":""}],"Africa/Casablanca":[{"name":"Africa/Casablanca","_offset":"-0:30:20","_rule":"-","format":"LMT","_until":"1913 Oct 26"},{"name":"Africa/Casablanca","_offset":"0:00","_rule":"Morocco","format":"WE%sT","_until":"1984 Mar 16"},{"name":"Africa/Casablanca","_offset":"1:00","_rule":"-","format":"CET","_until":"1986"},{"name":"Africa/Casablanca","_offset":"0:00","_rule":"Morocco","format":"WE%sT","_until":""}],"Africa/El_Aaiun":[{"name":"Africa/El_Aaiun","_offset":"-0:52:48","_rule":"-","format":"LMT","_until":"1934 Jan"},{"name":"Africa/El_Aaiun","_offset":"-1:00","_rule":"-","format":"WAT","_until":"1976 Apr 14"},{"name":"Africa/El_Aaiun","_offset":"0:00","_rule":"-","format":"WET","_until":""}],"Africa/Maputo":[{"name":"Africa/Maputo","_offset":"2:10:20","_rule":"-","format":"LMT","_until":"1903 Mar"},{"name":"Africa/Maputo","_offset":"2:00","_rule":"-","format":"CAT","_until":""}],"Africa/Windhoek":[{"name":"Africa/Windhoek","_offset":"1:08:24","_rule":"-","format":"LMT","_until":"1892 Feb 8"},{"name":"Africa/Windhoek","_offset":"1:30","_rule":"-","format":"SWAT","_until":"1903 Mar"},{"name":"Africa/Windhoek","_offset":"2:00","_rule":"-","format":"SAST","_until":"1942 Sep 20 2:00"},{"name":"Africa/Windhoek","_offset":"2:00","_rule":"1:00","format":"SAST","_until":"1943 Mar 21 2:00"},{"name":"Africa/Windhoek","_offset":"2:00","_rule":"-","format":"SAST","_until":"1990 Mar 21"},{"name":"Africa/Windhoek","_offset":"2:00","_rule":"-","format":"CAT","_until":"1994 Apr 3"},{"name":"Africa/Windhoek","_offset":"1:00","_rule":"Namibia","format":"WA%sT","_until":""}],"Africa/Niamey":[{"name":"Africa/Niamey","_offset":"0:08:28","_rule":"-","format":"LMT","_until":"1912"},{"name":"Africa/Niamey","_offset":"-1:00","_rule":"-","format":"WAT","_until":"1934 Feb 26"},{"name":"Africa/Niamey","_offset":"0:00","_rule":"-","format":"GMT","_until":"1960"},{"name":"Africa/Niamey","_offset":"1:00","_rule":"-","format":"WAT","_until":""}],"Africa/Lagos":[{"name":"Africa/Lagos","_offset":"0:13:36","_rule":"-","format":"LMT","_until":"1919 Sep"},{"name":"Africa/Lagos","_offset":"1:00","_rule":"-","format":"WAT","_until":""}],"Indian/Reunion":[{"name":"Indian/Reunion","_offset":"3:41:52","_rule":"-","format":"LMT","_until":"1911 Jun"},{"name":"Indian/Reunion","_offset":"4:00","_rule":"-","format":"RET","_until":""}],"Africa/Kigali":[{"name":"Africa/Kigali","_offset":"2:00:16","_rule":"-","format":"LMT","_until":"1935 Jun"},{"name":"Africa/Kigali","_offset":"2:00","_rule":"-","format":"CAT","_until":""}],"Atlantic/St_Helena":[{"name":"Atlantic/St_Helena","_offset":"-0:22:48","_rule":"-","format":"LMT","_until":"1890"},{"name":"Atlantic/St_Helena","_offset":"-0:22:48","_rule":"-","format":"JMT","_until":"1951"},{"name":"Atlantic/St_Helena","_offset":"0:00","_rule":"-","format":"GMT","_until":""}],"Africa/Sao_Tome":[{"name":"Africa/Sao_Tome","_offset":"0:26:56","_rule":"-","format":"LMT","_until":"1884"},{"name":"Africa/Sao_Tome","_offset":"-0:36:32","_rule":"-","format":"LMT","_until":"1912"},{"name":"Africa/Sao_Tome","_offset":"0:00","_rule":"-","format":"GMT","_until":""}],"Africa/Dakar":[{"name":"Africa/Dakar","_offset":"-1:09:44","_rule":"-","format":"LMT","_until":"1912"},{"name":"Africa/Dakar","_offset":"-1:00","_rule":"-","format":"WAT","_until":"1941 Jun"},{"name":"Africa/Dakar","_offset":"0:00","_rule":"-","format":"GMT","_until":""}],"Indian/Mahe":[{"name":"Indian/Mahe","_offset":"3:41:48","_rule":"-","format":"LMT","_until":"1906 Jun"},{"name":"Indian/Mahe","_offset":"4:00","_rule":"-","format":"SCT","_until":""}],"Africa/Freetown":[{"name":"Africa/Freetown","_offset":"-0:53:00","_rule":"-","format":"LMT","_until":"1882"},{"name":"Africa/Freetown","_offset":"-0:53:00","_rule":"-","format":"FMT","_until":"1913 Jun"},{"name":"Africa/Freetown","_offset":"-1:00","_rule":"SL","format":"%s","_until":"1957"},{"name":"Africa/Freetown","_offset":"0:00","_rule":"SL","format":"%s","_until":""}],"Africa/Mogadishu":[{"name":"Africa/Mogadishu","_offset":"3:01:28","_rule":"-","format":"LMT","_until":"1893 Nov"},{"name":"Africa/Mogadishu","_offset":"3:00","_rule":"-","format":"EAT","_until":"1931"},{"name":"Africa/Mogadishu","_offset":"2:30","_rule":"-","format":"BEAT","_until":"1957"},{"name":"Africa/Mogadishu","_offset":"3:00","_rule":"-","format":"EAT","_until":""}],"Africa/Johannesburg":[{"name":"Africa/Johannesburg","_offset":"1:52:00","_rule":"-","format":"LMT","_until":"1892 Feb 8"},{"name":"Africa/Johannesburg","_offset":"1:30","_rule":"-","format":"SAST","_until":"1903 Mar"},{"name":"Africa/Johannesburg","_offset":"2:00","_rule":"SA","format":"SAST","_until":""}],"Africa/Khartoum":[{"name":"Africa/Khartoum","_offset":"2:10:08","_rule":"-","format":"LMT","_until":"1931"},{"name":"Africa/Khartoum","_offset":"2:00","_rule":"Sudan","format":"CA%sT","_until":"2000 Jan 15 12:00"},{"name":"Africa/Khartoum","_offset":"3:00","_rule":"-","format":"EAT","_until":""}],"Africa/Juba":[{"name":"Africa/Juba","_offset":"2:06:24","_rule":"-","format":"LMT","_until":"1931"},{"name":"Africa/Juba","_offset":"2:00","_rule":"Sudan","format":"CA%sT","_until":"2000 Jan 15 12:00"},{"name":"Africa/Juba","_offset":"3:00","_rule":"-","format":"EAT","_until":""}],"Africa/Mbabane":[{"name":"Africa/Mbabane","_offset":"2:04:24","_rule":"-","format":"LMT","_until":"1903 Mar"},{"name":"Africa/Mbabane","_offset":"2:00","_rule":"-","format":"SAST","_until":""}],"Africa/Dar_es_Salaam":[{"name":"Africa/Dar_es_Salaam","_offset":"2:37:08","_rule":"-","format":"LMT","_until":"1931"},{"name":"Africa/Dar_es_Salaam","_offset":"3:00","_rule":"-","format":"EAT","_until":"1948"},{"name":"Africa/Dar_es_Salaam","_offset":"2:45","_rule":"-","format":"BEAUT","_until":"1961"},{"name":"Africa/Dar_es_Salaam","_offset":"3:00","_rule":"-","format":"EAT","_until":""}],"Africa/Lome":[{"name":"Africa/Lome","_offset":"0:04:52","_rule":"-","format":"LMT","_until":"1893"},{"name":"Africa/Lome","_offset":"0:00","_rule":"-","format":"GMT","_until":""}],"Africa/Tunis":[{"name":"Africa/Tunis","_offset":"0:40:44","_rule":"-","format":"LMT","_until":"1881 May 12"},{"name":"Africa/Tunis","_offset":"0:09:21","_rule":"-","format":"PMT","_until":"1911 Mar 11"},{"name":"Africa/Tunis","_offset":"1:00","_rule":"Tunisia","format":"CE%sT","_until":""}],"Africa/Kampala":[{"name":"Africa/Kampala","_offset":"2:09:40","_rule":"-","format":"LMT","_until":"1928 Jul"},{"name":"Africa/Kampala","_offset":"3:00","_rule":"-","format":"EAT","_until":"1930"},{"name":"Africa/Kampala","_offset":"2:30","_rule":"-","format":"BEAT","_until":"1948"},{"name":"Africa/Kampala","_offset":"2:45","_rule":"-","format":"BEAUT","_until":"1957"},{"name":"Africa/Kampala","_offset":"3:00","_rule":"-","format":"EAT","_until":""}],"Africa/Lusaka":[{"name":"Africa/Lusaka","_offset":"1:53:08","_rule":"-","format":"LMT","_until":"1903 Mar"},{"name":"Africa/Lusaka","_offset":"2:00","_rule":"-","format":"CAT","_until":""}],"Africa/Harare":[{"name":"Africa/Harare","_offset":"2:04:12","_rule":"-","format":"LMT","_until":"1903 Mar"},{"name":"Africa/Harare","_offset":"2:00","_rule":"-","format":"CAT","_until":""}],"Antarctica/Casey":[{"name":"Antarctica/Casey","_offset":"0","_rule":"-","format":"zzz","_until":"1969"},{"name":"Antarctica/Casey","_offset":"8:00","_rule":"-","format":"WST","_until":"2009 Oct 18 2:00"},{"name":"Antarctica/Casey","_offset":"11:00","_rule":"-","format":"CAST","_until":"2010 Mar 5 2:00"},{"name":"Antarctica/Casey","_offset":"8:00","_rule":"-","format":"WST","_until":"2011 Oct 28 2:00"},{"name":"Antarctica/Casey","_offset":"11:00","_rule":"-","format":"CAST","_until":"2012 Feb 21 17:00u"},{"name":"Antarctica/Casey","_offset":"8:00","_rule":"-","format":"WST","_until":""}],"Antarctica/Davis":[{"name":"Antarctica/Davis","_offset":"0","_rule":"-","format":"zzz","_until":"1957 Jan 13"},{"name":"Antarctica/Davis","_offset":"7:00","_rule":"-","format":"DAVT","_until":"1964 Nov"},{"name":"Antarctica/Davis","_offset":"0","_rule":"-","format":"zzz","_until":"1969 Feb"},{"name":"Antarctica/Davis","_offset":"7:00","_rule":"-","format":"DAVT","_until":"2009 Oct 18 2:00"},{"name":"Antarctica/Davis","_offset":"5:00","_rule":"-","format":"DAVT","_until":"2010 Mar 10 20:00u"},{"name":"Antarctica/Davis","_offset":"7:00","_rule":"-","format":"DAVT","_until":"2011 Oct 28 2:00"},{"name":"Antarctica/Davis","_offset":"5:00","_rule":"-","format":"DAVT","_until":"2012 Feb 21 20:00u"},{"name":"Antarctica/Davis","_offset":"7:00","_rule":"-","format":"DAVT","_until":""}],"Antarctica/Mawson":[{"name":"Antarctica/Mawson","_offset":"0","_rule":"-","format":"zzz","_until":"1954 Feb 13"},{"name":"Antarctica/Mawson","_offset":"6:00","_rule":"-","format":"MAWT","_until":"2009 Oct 18 2:00"},{"name":"Antarctica/Mawson","_offset":"5:00","_rule":"-","format":"MAWT","_until":""}],"Indian/Kerguelen":[{"name":"Indian/Kerguelen","_offset":"0","_rule":"-","format":"zzz","_until":"1950"},{"name":"Indian/Kerguelen","_offset":"5:00","_rule":"-","format":"TFT","_until":""}],"Antarctica/DumontDUrville":[{"name":"Antarctica/DumontDUrville","_offset":"0","_rule":"-","format":"zzz","_until":"1947"},{"name":"Antarctica/DumontDUrville","_offset":"10:00","_rule":"-","format":"PMT","_until":"1952 Jan 14"},{"name":"Antarctica/DumontDUrville","_offset":"0","_rule":"-","format":"zzz","_until":"1956 Nov"},{"name":"Antarctica/DumontDUrville","_offset":"10:00","_rule":"-","format":"DDUT","_until":""}],"Antarctica/Syowa":[{"name":"Antarctica/Syowa","_offset":"0","_rule":"-","format":"zzz","_until":"1957 Jan 29"},{"name":"Antarctica/Syowa","_offset":"3:00","_rule":"-","format":"SYOT","_until":""}],"Antarctica/Vostok":[{"name":"Antarctica/Vostok","_offset":"0","_rule":"-","format":"zzz","_until":"1957 Dec 16"},{"name":"Antarctica/Vostok","_offset":"6:00","_rule":"-","format":"VOST","_until":""}],"Antarctica/Rothera":[{"name":"Antarctica/Rothera","_offset":"0","_rule":"-","format":"zzz","_until":"1976 Dec 1"},{"name":"Antarctica/Rothera","_offset":"-3:00","_rule":"-","format":"ROTT","_until":""}],"Antarctica/Palmer":[{"name":"Antarctica/Palmer","_offset":"0","_rule":"-","format":"zzz","_until":"1965"},{"name":"Antarctica/Palmer","_offset":"-4:00","_rule":"ArgAQ","format":"AR%sT","_until":"1969 Oct 5"},{"name":"Antarctica/Palmer","_offset":"-3:00","_rule":"ArgAQ","format":"AR%sT","_until":"1982 May"},{"name":"Antarctica/Palmer","_offset":"-4:00","_rule":"ChileAQ","format":"CL%sT","_until":""}],"Antarctica/McMurdo":[{"name":"Antarctica/McMurdo","_offset":"0","_rule":"-","format":"zzz","_until":"1956"},{"name":"Antarctica/McMurdo","_offset":"12:00","_rule":"NZAQ","format":"NZ%sT","_until":""}],"Asia/Kabul":[{"name":"Asia/Kabul","_offset":"4:36:48","_rule":"-","format":"LMT","_until":"1890"},{"name":"Asia/Kabul","_offset":"4:00","_rule":"-","format":"AFT","_until":"1945"},{"name":"Asia/Kabul","_offset":"4:30","_rule":"-","format":"AFT","_until":""}],"Asia/Yerevan":[{"name":"Asia/Yerevan","_offset":"2:58:00","_rule":"-","format":"LMT","_until":"1924 May 2"},{"name":"Asia/Yerevan","_offset":"3:00","_rule":"-","format":"YERT","_until":"1957 Mar"},{"name":"Asia/Yerevan","_offset":"4:00","_rule":"RussiaAsia","format":"YER%sT","_until":"1991 Mar 31 2:00s"},{"name":"Asia/Yerevan","_offset":"3:00","_rule":"1:00","format":"YERST","_until":"1991 Sep 23"},{"name":"Asia/Yerevan","_offset":"3:00","_rule":"RussiaAsia","format":"AM%sT","_until":"1995 Sep 24 2:00s"},{"name":"Asia/Yerevan","_offset":"4:00","_rule":"-","format":"AMT","_until":"1997"},{"name":"Asia/Yerevan","_offset":"4:00","_rule":"RussiaAsia","format":"AM%sT","_until":"2012 Mar 25 2:00s"},{"name":"Asia/Yerevan","_offset":"4:00","_rule":"-","format":"AMT","_until":""}],"Asia/Baku":[{"name":"Asia/Baku","_offset":"3:19:24","_rule":"-","format":"LMT","_until":"1924 May 2"},{"name":"Asia/Baku","_offset":"3:00","_rule":"-","format":"BAKT","_until":"1957 Mar"},{"name":"Asia/Baku","_offset":"4:00","_rule":"RussiaAsia","format":"BAK%sT","_until":"1991 Mar 31 2:00s"},{"name":"Asia/Baku","_offset":"3:00","_rule":"1:00","format":"BAKST","_until":"1991 Aug 30"},{"name":"Asia/Baku","_offset":"3:00","_rule":"RussiaAsia","format":"AZ%sT","_until":"1992 Sep lastSat 23:00"},{"name":"Asia/Baku","_offset":"4:00","_rule":"-","format":"AZT","_until":"1996"},{"name":"Asia/Baku","_offset":"4:00","_rule":"EUAsia","format":"AZ%sT","_until":"1997"},{"name":"Asia/Baku","_offset":"4:00","_rule":"Azer","format":"AZ%sT","_until":""}],"Asia/Bahrain":[{"name":"Asia/Bahrain","_offset":"3:22:20","_rule":"-","format":"LMT","_until":"1920"},{"name":"Asia/Bahrain","_offset":"4:00","_rule":"-","format":"GST","_until":"1972 Jun"},{"name":"Asia/Bahrain","_offset":"3:00","_rule":"-","format":"AST","_until":""}],"Asia/Dhaka":[{"name":"Asia/Dhaka","_offset":"6:01:40","_rule":"-","format":"LMT","_until":"1890"},{"name":"Asia/Dhaka","_offset":"5:53:20","_rule":"-","format":"HMT","_until":"1941 Oct"},{"name":"Asia/Dhaka","_offset":"6:30","_rule":"-","format":"BURT","_until":"1942 May 15"},{"name":"Asia/Dhaka","_offset":"5:30","_rule":"-","format":"IST","_until":"1942 Sep"},{"name":"Asia/Dhaka","_offset":"6:30","_rule":"-","format":"BURT","_until":"1951 Sep 30"},{"name":"Asia/Dhaka","_offset":"6:00","_rule":"-","format":"DACT","_until":"1971 Mar 26"},{"name":"Asia/Dhaka","_offset":"6:00","_rule":"-","format":"BDT","_until":"2009"},{"name":"Asia/Dhaka","_offset":"6:00","_rule":"Dhaka","format":"BD%sT","_until":""}],"Asia/Thimphu":[{"name":"Asia/Thimphu","_offset":"5:58:36","_rule":"-","format":"LMT","_until":"1947 Aug 15"},{"name":"Asia/Thimphu","_offset":"5:30","_rule":"-","format":"IST","_until":"1987 Oct"},{"name":"Asia/Thimphu","_offset":"6:00","_rule":"-","format":"BTT","_until":""}],"Indian/Chagos":[{"name":"Indian/Chagos","_offset":"4:49:40","_rule":"-","format":"LMT","_until":"1907"},{"name":"Indian/Chagos","_offset":"5:00","_rule":"-","format":"IOT","_until":"1996"},{"name":"Indian/Chagos","_offset":"6:00","_rule":"-","format":"IOT","_until":""}],"Asia/Brunei":[{"name":"Asia/Brunei","_offset":"7:39:40","_rule":"-","format":"LMT","_until":"1926 Mar"},{"name":"Asia/Brunei","_offset":"7:30","_rule":"-","format":"BNT","_until":"1933"},{"name":"Asia/Brunei","_offset":"8:00","_rule":"-","format":"BNT","_until":""}],"Asia/Rangoon":[{"name":"Asia/Rangoon","_offset":"6:24:40","_rule":"-","format":"LMT","_until":"1880"},{"name":"Asia/Rangoon","_offset":"6:24:40","_rule":"-","format":"RMT","_until":"1920"},{"name":"Asia/Rangoon","_offset":"6:30","_rule":"-","format":"BURT","_until":"1942 May"},{"name":"Asia/Rangoon","_offset":"9:00","_rule":"-","format":"JST","_until":"1945 May 3"},{"name":"Asia/Rangoon","_offset":"6:30","_rule":"-","format":"MMT","_until":""}],"Asia/Phnom_Penh":[{"name":"Asia/Phnom_Penh","_offset":"6:59:40","_rule":"-","format":"LMT","_until":"1906 Jun 9"},{"name":"Asia/Phnom_Penh","_offset":"7:06:20","_rule":"-","format":"SMT","_until":"1911 Mar 11 0:01"},{"name":"Asia/Phnom_Penh","_offset":"7:00","_rule":"-","format":"ICT","_until":"1912 May"},{"name":"Asia/Phnom_Penh","_offset":"8:00","_rule":"-","format":"ICT","_until":"1931 May"},{"name":"Asia/Phnom_Penh","_offset":"7:00","_rule":"-","format":"ICT","_until":""}],"Asia/Harbin":[{"name":"Asia/Harbin","_offset":"8:26:44","_rule":"-","format":"LMT","_until":"1928"},{"name":"Asia/Harbin","_offset":"8:30","_rule":"-","format":"CHAT","_until":"1932 Mar"},{"name":"Asia/Harbin","_offset":"8:00","_rule":"-","format":"CST","_until":"1940"},{"name":"Asia/Harbin","_offset":"9:00","_rule":"-","format":"CHAT","_until":"1966 May"},{"name":"Asia/Harbin","_offset":"8:30","_rule":"-","format":"CHAT","_until":"1980 May"},{"name":"Asia/Harbin","_offset":"8:00","_rule":"PRC","format":"C%sT","_until":""}],"Asia/Shanghai":[{"name":"Asia/Shanghai","_offset":"8:05:57","_rule":"-","format":"LMT","_until":"1928"},{"name":"Asia/Shanghai","_offset":"8:00","_rule":"Shang","format":"C%sT","_until":"1949"},{"name":"Asia/Shanghai","_offset":"8:00","_rule":"PRC","format":"C%sT","_until":""}],"Asia/Chongqing":[{"name":"Asia/Chongqing","_offset":"7:06:20","_rule":"-","format":"LMT","_until":"1928"},{"name":"Asia/Chongqing","_offset":"7:00","_rule":"-","format":"LONT","_until":"1980 May"},{"name":"Asia/Chongqing","_offset":"8:00","_rule":"PRC","format":"C%sT","_until":""}],"Asia/Urumqi":[{"name":"Asia/Urumqi","_offset":"5:50:20","_rule":"-","format":"LMT","_until":"1928"},{"name":"Asia/Urumqi","_offset":"6:00","_rule":"-","format":"URUT","_until":"1980 May"},{"name":"Asia/Urumqi","_offset":"8:00","_rule":"PRC","format":"C%sT","_until":""}],"Asia/Kashgar":[{"name":"Asia/Kashgar","_offset":"5:03:56","_rule":"-","format":"LMT","_until":"1928"},{"name":"Asia/Kashgar","_offset":"5:30","_rule":"-","format":"KAST","_until":"1940"},{"name":"Asia/Kashgar","_offset":"5:00","_rule":"-","format":"KAST","_until":"1980 May"},{"name":"Asia/Kashgar","_offset":"8:00","_rule":"PRC","format":"C%sT","_until":""}],"Asia/Hong_Kong":[{"name":"Asia/Hong_Kong","_offset":"7:36:42","_rule":"-","format":"LMT","_until":"1904 Oct 30"},{"name":"Asia/Hong_Kong","_offset":"8:00","_rule":"HK","format":"HK%sT","_until":"1941 Dec 25"},{"name":"Asia/Hong_Kong","_offset":"9:00","_rule":"-","format":"JST","_until":"1945 Sep 15"},{"name":"Asia/Hong_Kong","_offset":"8:00","_rule":"HK","format":"HK%sT","_until":""}],"Asia/Taipei":[{"name":"Asia/Taipei","_offset":"8:06:00","_rule":"-","format":"LMT","_until":"1896"},{"name":"Asia/Taipei","_offset":"8:00","_rule":"Taiwan","format":"C%sT","_until":""}],"Asia/Macau":[{"name":"Asia/Macau","_offset":"7:34:20","_rule":"-","format":"LMT","_until":"1912"},{"name":"Asia/Macau","_offset":"8:00","_rule":"Macau","format":"MO%sT","_until":"1999 Dec 20"},{"name":"Asia/Macau","_offset":"8:00","_rule":"PRC","format":"C%sT","_until":""}],"Asia/Nicosia":[{"name":"Asia/Nicosia","_offset":"2:13:28","_rule":"-","format":"LMT","_until":"1921 Nov 14"},{"name":"Asia/Nicosia","_offset":"2:00","_rule":"Cyprus","format":"EE%sT","_until":"1998 Sep"},{"name":"Asia/Nicosia","_offset":"2:00","_rule":"EUAsia","format":"EE%sT","_until":""}],"Asia/Tbilisi":[{"name":"Asia/Tbilisi","_offset":"2:59:16","_rule":"-","format":"LMT","_until":"1880"},{"name":"Asia/Tbilisi","_offset":"2:59:16","_rule":"-","format":"TBMT","_until":"1924 May 2"},{"name":"Asia/Tbilisi","_offset":"3:00","_rule":"-","format":"TBIT","_until":"1957 Mar"},{"name":"Asia/Tbilisi","_offset":"4:00","_rule":"RussiaAsia","format":"TBI%sT","_until":"1991 Mar 31 2:00s"},{"name":"Asia/Tbilisi","_offset":"3:00","_rule":"1:00","format":"TBIST","_until":"1991 Apr 9"},{"name":"Asia/Tbilisi","_offset":"3:00","_rule":"RussiaAsia","format":"GE%sT","_until":"1992"},{"name":"Asia/Tbilisi","_offset":"3:00","_rule":"E-EurAsia","format":"GE%sT","_until":"1994 Sep lastSun"},{"name":"Asia/Tbilisi","_offset":"4:00","_rule":"E-EurAsia","format":"GE%sT","_until":"1996 Oct lastSun"},{"name":"Asia/Tbilisi","_offset":"4:00","_rule":"1:00","format":"GEST","_until":"1997 Mar lastSun"},{"name":"Asia/Tbilisi","_offset":"4:00","_rule":"E-EurAsia","format":"GE%sT","_until":"2004 Jun 27"},{"name":"Asia/Tbilisi","_offset":"3:00","_rule":"RussiaAsia","format":"GE%sT","_until":"2005 Mar lastSun 2:00"},{"name":"Asia/Tbilisi","_offset":"4:00","_rule":"-","format":"GET","_until":""}],"Asia/Dili":[{"name":"Asia/Dili","_offset":"8:22:20","_rule":"-","format":"LMT","_until":"1912"},{"name":"Asia/Dili","_offset":"8:00","_rule":"-","format":"TLT","_until":"1942 Feb 21 23:00"},{"name":"Asia/Dili","_offset":"9:00","_rule":"-","format":"JST","_until":"1945 Sep 23"},{"name":"Asia/Dili","_offset":"9:00","_rule":"-","format":"TLT","_until":"1976 May 3"},{"name":"Asia/Dili","_offset":"8:00","_rule":"-","format":"CIT","_until":"2000 Sep 17 00:00"},{"name":"Asia/Dili","_offset":"9:00","_rule":"-","format":"TLT","_until":""}],"Asia/Kolkata":[{"name":"Asia/Kolkata","_offset":"5:53:28","_rule":"-","format":"LMT","_until":"1880"},{"name":"Asia/Kolkata","_offset":"5:53:20","_rule":"-","format":"HMT","_until":"1941 Oct"},{"name":"Asia/Kolkata","_offset":"6:30","_rule":"-","format":"BURT","_until":"1942 May 15"},{"name":"Asia/Kolkata","_offset":"5:30","_rule":"-","format":"IST","_until":"1942 Sep"},{"name":"Asia/Kolkata","_offset":"5:30","_rule":"1:00","format":"IST","_until":"1945 Oct 15"},{"name":"Asia/Kolkata","_offset":"5:30","_rule":"-","format":"IST","_until":""}],"Asia/Jakarta":[{"name":"Asia/Jakarta","_offset":"7:07:12","_rule":"-","format":"LMT","_until":"1867 Aug 10"},{"name":"Asia/Jakarta","_offset":"7:07:12","_rule":"-","format":"JMT","_until":"1923 Dec 31 23:47:12"},{"name":"Asia/Jakarta","_offset":"7:20","_rule":"-","format":"JAVT","_until":"1932 Nov"},{"name":"Asia/Jakarta","_offset":"7:30","_rule":"-","format":"WIT","_until":"1942 Mar 23"},{"name":"Asia/Jakarta","_offset":"9:00","_rule":"-","format":"JST","_until":"1945 Sep 23"},{"name":"Asia/Jakarta","_offset":"7:30","_rule":"-","format":"WIT","_until":"1948 May"},{"name":"Asia/Jakarta","_offset":"8:00","_rule":"-","format":"WIT","_until":"1950 May"},{"name":"Asia/Jakarta","_offset":"7:30","_rule":"-","format":"WIT","_until":"1964"},{"name":"Asia/Jakarta","_offset":"7:00","_rule":"-","format":"WIT","_until":""}],"Asia/Pontianak":[{"name":"Asia/Pontianak","_offset":"7:17:20","_rule":"-","format":"LMT","_until":"1908 May"},{"name":"Asia/Pontianak","_offset":"7:17:20","_rule":"-","format":"PMT","_until":"1932 Nov"},{"name":"Asia/Pontianak","_offset":"7:30","_rule":"-","format":"WIT","_until":"1942 Jan 29"},{"name":"Asia/Pontianak","_offset":"9:00","_rule":"-","format":"JST","_until":"1945 Sep 23"},{"name":"Asia/Pontianak","_offset":"7:30","_rule":"-","format":"WIT","_until":"1948 May"},{"name":"Asia/Pontianak","_offset":"8:00","_rule":"-","format":"WIT","_until":"1950 May"},{"name":"Asia/Pontianak","_offset":"7:30","_rule":"-","format":"WIT","_until":"1964"},{"name":"Asia/Pontianak","_offset":"8:00","_rule":"-","format":"CIT","_until":"1988 Jan 1"},{"name":"Asia/Pontianak","_offset":"7:00","_rule":"-","format":"WIT","_until":""}],"Asia/Makassar":[{"name":"Asia/Makassar","_offset":"7:57:36","_rule":"-","format":"LMT","_until":"1920"},{"name":"Asia/Makassar","_offset":"7:57:36","_rule":"-","format":"MMT","_until":"1932 Nov"},{"name":"Asia/Makassar","_offset":"8:00","_rule":"-","format":"CIT","_until":"1942 Feb 9"},{"name":"Asia/Makassar","_offset":"9:00","_rule":"-","format":"JST","_until":"1945 Sep 23"},{"name":"Asia/Makassar","_offset":"8:00","_rule":"-","format":"CIT","_until":""}],"Asia/Jayapura":[{"name":"Asia/Jayapura","_offset":"9:22:48","_rule":"-","format":"LMT","_until":"1932 Nov"},{"name":"Asia/Jayapura","_offset":"9:00","_rule":"-","format":"EIT","_until":"1944 Sep 1"},{"name":"Asia/Jayapura","_offset":"9:30","_rule":"-","format":"CST","_until":"1964"},{"name":"Asia/Jayapura","_offset":"9:00","_rule":"-","format":"EIT","_until":""}],"Asia/Tehran":[{"name":"Asia/Tehran","_offset":"3:25:44","_rule":"-","format":"LMT","_until":"1916"},{"name":"Asia/Tehran","_offset":"3:25:44","_rule":"-","format":"TMT","_until":"1946"},{"name":"Asia/Tehran","_offset":"3:30","_rule":"-","format":"IRST","_until":"1977 Nov"},{"name":"Asia/Tehran","_offset":"4:00","_rule":"Iran","format":"IR%sT","_until":"1979"},{"name":"Asia/Tehran","_offset":"3:30","_rule":"Iran","format":"IR%sT","_until":""}],"Asia/Baghdad":[{"name":"Asia/Baghdad","_offset":"2:57:40","_rule":"-","format":"LMT","_until":"1890"},{"name":"Asia/Baghdad","_offset":"2:57:36","_rule":"-","format":"BMT","_until":"1918"},{"name":"Asia/Baghdad","_offset":"3:00","_rule":"-","format":"AST","_until":"1982 May"},{"name":"Asia/Baghdad","_offset":"3:00","_rule":"Iraq","format":"A%sT","_until":""}],"Asia/Jerusalem":[{"name":"Asia/Jerusalem","_offset":"2:20:54","_rule":"-","format":"LMT","_until":"1880"},{"name":"Asia/Jerusalem","_offset":"2:20:40","_rule":"-","format":"JMT","_until":"1918"},{"name":"Asia/Jerusalem","_offset":"2:00","_rule":"Zion","format":"I%sT","_until":""}],"Asia/Tokyo":[{"name":"Asia/Tokyo","_offset":"9:18:59","_rule":"-","format":"LMT","_until":"1887 Dec 31 15:00u"},{"name":"Asia/Tokyo","_offset":"9:00","_rule":"-","format":"JST","_until":"1896"},{"name":"Asia/Tokyo","_offset":"9:00","_rule":"-","format":"CJT","_until":"1938"},{"name":"Asia/Tokyo","_offset":"9:00","_rule":"Japan","format":"J%sT","_until":""}],"Asia/Amman":[{"name":"Asia/Amman","_offset":"2:23:44","_rule":"-","format":"LMT","_until":"1931"},{"name":"Asia/Amman","_offset":"2:00","_rule":"Jordan","format":"EE%sT","_until":""}],"Asia/Almaty":[{"name":"Asia/Almaty","_offset":"5:07:48","_rule":"-","format":"LMT","_until":"1924 May 2"},{"name":"Asia/Almaty","_offset":"5:00","_rule":"-","format":"ALMT","_until":"1930 Jun 21"},{"name":"Asia/Almaty","_offset":"6:00","_rule":"RussiaAsia","format":"ALM%sT","_until":"1991"},{"name":"Asia/Almaty","_offset":"6:00","_rule":"-","format":"ALMT","_until":"1992"},{"name":"Asia/Almaty","_offset":"6:00","_rule":"RussiaAsia","format":"ALM%sT","_until":"2005 Mar 15"},{"name":"Asia/Almaty","_offset":"6:00","_rule":"-","format":"ALMT","_until":""}],"Asia/Qyzylorda":[{"name":"Asia/Qyzylorda","_offset":"4:21:52","_rule":"-","format":"LMT","_until":"1924 May 2"},{"name":"Asia/Qyzylorda","_offset":"4:00","_rule":"-","format":"KIZT","_until":"1930 Jun 21"},{"name":"Asia/Qyzylorda","_offset":"5:00","_rule":"-","format":"KIZT","_until":"1981 Apr 1"},{"name":"Asia/Qyzylorda","_offset":"5:00","_rule":"1:00","format":"KIZST","_until":"1981 Oct 1"},{"name":"Asia/Qyzylorda","_offset":"6:00","_rule":"-","format":"KIZT","_until":"1982 Apr 1"},{"name":"Asia/Qyzylorda","_offset":"5:00","_rule":"RussiaAsia","format":"KIZ%sT","_until":"1991"},{"name":"Asia/Qyzylorda","_offset":"5:00","_rule":"-","format":"KIZT","_until":"1991 Dec 16"},{"name":"Asia/Qyzylorda","_offset":"5:00","_rule":"-","format":"QYZT","_until":"1992 Jan 19 2:00"},{"name":"Asia/Qyzylorda","_offset":"6:00","_rule":"RussiaAsia","format":"QYZ%sT","_until":"2005 Mar 15"},{"name":"Asia/Qyzylorda","_offset":"6:00","_rule":"-","format":"QYZT","_until":""}],"Asia/Aqtobe":[{"name":"Asia/Aqtobe","_offset":"3:48:40","_rule":"-","format":"LMT","_until":"1924 May 2"},{"name":"Asia/Aqtobe","_offset":"4:00","_rule":"-","format":"AKTT","_until":"1930 Jun 21"},{"name":"Asia/Aqtobe","_offset":"5:00","_rule":"-","format":"AKTT","_until":"1981 Apr 1"},{"name":"Asia/Aqtobe","_offset":"5:00","_rule":"1:00","format":"AKTST","_until":"1981 Oct 1"},{"name":"Asia/Aqtobe","_offset":"6:00","_rule":"-","format":"AKTT","_until":"1982 Apr 1"},{"name":"Asia/Aqtobe","_offset":"5:00","_rule":"RussiaAsia","format":"AKT%sT","_until":"1991"},{"name":"Asia/Aqtobe","_offset":"5:00","_rule":"-","format":"AKTT","_until":"1991 Dec 16"},{"name":"Asia/Aqtobe","_offset":"5:00","_rule":"RussiaAsia","format":"AQT%sT","_until":"2005 Mar 15"},{"name":"Asia/Aqtobe","_offset":"5:00","_rule":"-","format":"AQTT","_until":""}],"Asia/Aqtau":[{"name":"Asia/Aqtau","_offset":"3:21:04","_rule":"-","format":"LMT","_until":"1924 May 2"},{"name":"Asia/Aqtau","_offset":"4:00","_rule":"-","format":"FORT","_until":"1930 Jun 21"},{"name":"Asia/Aqtau","_offset":"5:00","_rule":"-","format":"FORT","_until":"1963"},{"name":"Asia/Aqtau","_offset":"5:00","_rule":"-","format":"SHET","_until":"1981 Oct 1"},{"name":"Asia/Aqtau","_offset":"6:00","_rule":"-","format":"SHET","_until":"1982 Apr 1"},{"name":"Asia/Aqtau","_offset":"5:00","_rule":"RussiaAsia","format":"SHE%sT","_until":"1991"},{"name":"Asia/Aqtau","_offset":"5:00","_rule":"-","format":"SHET","_until":"1991 Dec 16"},{"name":"Asia/Aqtau","_offset":"5:00","_rule":"RussiaAsia","format":"AQT%sT","_until":"1995 Mar lastSun 2:00"},{"name":"Asia/Aqtau","_offset":"4:00","_rule":"RussiaAsia","format":"AQT%sT","_until":"2005 Mar 15"},{"name":"Asia/Aqtau","_offset":"5:00","_rule":"-","format":"AQTT","_until":""}],"Asia/Oral":[{"name":"Asia/Oral","_offset":"3:25:24","_rule":"-","format":"LMT","_until":"1924 May 2"},{"name":"Asia/Oral","_offset":"4:00","_rule":"-","format":"URAT","_until":"1930 Jun 21"},{"name":"Asia/Oral","_offset":"5:00","_rule":"-","format":"URAT","_until":"1981 Apr 1"},{"name":"Asia/Oral","_offset":"5:00","_rule":"1:00","format":"URAST","_until":"1981 Oct 1"},{"name":"Asia/Oral","_offset":"6:00","_rule":"-","format":"URAT","_until":"1982 Apr 1"},{"name":"Asia/Oral","_offset":"5:00","_rule":"RussiaAsia","format":"URA%sT","_until":"1989 Mar 26 2:00"},{"name":"Asia/Oral","_offset":"4:00","_rule":"RussiaAsia","format":"URA%sT","_until":"1991"},{"name":"Asia/Oral","_offset":"4:00","_rule":"-","format":"URAT","_until":"1991 Dec 16"},{"name":"Asia/Oral","_offset":"4:00","_rule":"RussiaAsia","format":"ORA%sT","_until":"2005 Mar 15"},{"name":"Asia/Oral","_offset":"5:00","_rule":"-","format":"ORAT","_until":""}],"Asia/Bishkek":[{"name":"Asia/Bishkek","_offset":"4:58:24","_rule":"-","format":"LMT","_until":"1924 May 2"},{"name":"Asia/Bishkek","_offset":"5:00","_rule":"-","format":"FRUT","_until":"1930 Jun 21"},{"name":"Asia/Bishkek","_offset":"6:00","_rule":"RussiaAsia","format":"FRU%sT","_until":"1991 Mar 31 2:00s"},{"name":"Asia/Bishkek","_offset":"5:00","_rule":"1:00","format":"FRUST","_until":"1991 Aug 31 2:00"},{"name":"Asia/Bishkek","_offset":"5:00","_rule":"Kyrgyz","format":"KG%sT","_until":"2005 Aug 12"},{"name":"Asia/Bishkek","_offset":"6:00","_rule":"-","format":"KGT","_until":""}],"Asia/Seoul":[{"name":"Asia/Seoul","_offset":"8:27:52","_rule":"-","format":"LMT","_until":"1890"},{"name":"Asia/Seoul","_offset":"8:30","_rule":"-","format":"KST","_until":"1904 Dec"},{"name":"Asia/Seoul","_offset":"9:00","_rule":"-","format":"KST","_until":"1928"},{"name":"Asia/Seoul","_offset":"8:30","_rule":"-","format":"KST","_until":"1932"},{"name":"Asia/Seoul","_offset":"9:00","_rule":"-","format":"KST","_until":"1954 Mar 21"},{"name":"Asia/Seoul","_offset":"8:00","_rule":"ROK","format":"K%sT","_until":"1961 Aug 10"},{"name":"Asia/Seoul","_offset":"8:30","_rule":"-","format":"KST","_until":"1968 Oct"},{"name":"Asia/Seoul","_offset":"9:00","_rule":"ROK","format":"K%sT","_until":""}],"Asia/Pyongyang":[{"name":"Asia/Pyongyang","_offset":"8:23:00","_rule":"-","format":"LMT","_until":"1890"},{"name":"Asia/Pyongyang","_offset":"8:30","_rule":"-","format":"KST","_until":"1904 Dec"},{"name":"Asia/Pyongyang","_offset":"9:00","_rule":"-","format":"KST","_until":"1928"},{"name":"Asia/Pyongyang","_offset":"8:30","_rule":"-","format":"KST","_until":"1932"},{"name":"Asia/Pyongyang","_offset":"9:00","_rule":"-","format":"KST","_until":"1954 Mar 21"},{"name":"Asia/Pyongyang","_offset":"8:00","_rule":"-","format":"KST","_until":"1961 Aug 10"},{"name":"Asia/Pyongyang","_offset":"9:00","_rule":"-","format":"KST","_until":""}],"Asia/Kuwait":[{"name":"Asia/Kuwait","_offset":"3:11:56","_rule":"-","format":"LMT","_until":"1950"},{"name":"Asia/Kuwait","_offset":"3:00","_rule":"-","format":"AST","_until":""}],"Asia/Vientiane":[{"name":"Asia/Vientiane","_offset":"6:50:24","_rule":"-","format":"LMT","_until":"1906 Jun 9"},{"name":"Asia/Vientiane","_offset":"7:06:20","_rule":"-","format":"SMT","_until":"1911 Mar 11 0:01"},{"name":"Asia/Vientiane","_offset":"7:00","_rule":"-","format":"ICT","_until":"1912 May"},{"name":"Asia/Vientiane","_offset":"8:00","_rule":"-","format":"ICT","_until":"1931 May"},{"name":"Asia/Vientiane","_offset":"7:00","_rule":"-","format":"ICT","_until":""}],"Asia/Beirut":[{"name":"Asia/Beirut","_offset":"2:22:00","_rule":"-","format":"LMT","_until":"1880"},{"name":"Asia/Beirut","_offset":"2:00","_rule":"Lebanon","format":"EE%sT","_until":""}],"Asia/Kuala_Lumpur":[{"name":"Asia/Kuala_Lumpur","_offset":"6:46:46","_rule":"-","format":"LMT","_until":"1901 Jan 1"},{"name":"Asia/Kuala_Lumpur","_offset":"6:55:25","_rule":"-","format":"SMT","_until":"1905 Jun 1"},{"name":"Asia/Kuala_Lumpur","_offset":"7:00","_rule":"-","format":"MALT","_until":"1933 Jan 1"},{"name":"Asia/Kuala_Lumpur","_offset":"7:00","_rule":"0:20","format":"MALST","_until":"1936 Jan 1"},{"name":"Asia/Kuala_Lumpur","_offset":"7:20","_rule":"-","format":"MALT","_until":"1941 Sep 1"},{"name":"Asia/Kuala_Lumpur","_offset":"7:30","_rule":"-","format":"MALT","_until":"1942 Feb 16"},{"name":"Asia/Kuala_Lumpur","_offset":"9:00","_rule":"-","format":"JST","_until":"1945 Sep 12"},{"name":"Asia/Kuala_Lumpur","_offset":"7:30","_rule":"-","format":"MALT","_until":"1982 Jan 1"},{"name":"Asia/Kuala_Lumpur","_offset":"8:00","_rule":"-","format":"MYT","_until":""}],"Asia/Kuching":[{"name":"Asia/Kuching","_offset":"7:21:20","_rule":"-","format":"LMT","_until":"1926 Mar"},{"name":"Asia/Kuching","_offset":"7:30","_rule":"-","format":"BORT","_until":"1933"},{"name":"Asia/Kuching","_offset":"8:00","_rule":"NBorneo","format":"BOR%sT","_until":"1942 Feb 16"},{"name":"Asia/Kuching","_offset":"9:00","_rule":"-","format":"JST","_until":"1945 Sep 12"},{"name":"Asia/Kuching","_offset":"8:00","_rule":"-","format":"BORT","_until":"1982 Jan 1"},{"name":"Asia/Kuching","_offset":"8:00","_rule":"-","format":"MYT","_until":""}],"Indian/Maldives":[{"name":"Indian/Maldives","_offset":"4:54:00","_rule":"-","format":"LMT","_until":"1880"},{"name":"Indian/Maldives","_offset":"4:54:00","_rule":"-","format":"MMT","_until":"1960"},{"name":"Indian/Maldives","_offset":"5:00","_rule":"-","format":"MVT","_until":""}],"Asia/Hovd":[{"name":"Asia/Hovd","_offset":"6:06:36","_rule":"-","format":"LMT","_until":"1905 Aug"},{"name":"Asia/Hovd","_offset":"6:00","_rule":"-","format":"HOVT","_until":"1978"},{"name":"Asia/Hovd","_offset":"7:00","_rule":"Mongol","format":"HOV%sT","_until":""}],"Asia/Ulaanbaatar":[{"name":"Asia/Ulaanbaatar","_offset":"7:07:32","_rule":"-","format":"LMT","_until":"1905 Aug"},{"name":"Asia/Ulaanbaatar","_offset":"7:00","_rule":"-","format":"ULAT","_until":"1978"},{"name":"Asia/Ulaanbaatar","_offset":"8:00","_rule":"Mongol","format":"ULA%sT","_until":""}],"Asia/Choibalsan":[{"name":"Asia/Choibalsan","_offset":"7:38:00","_rule":"-","format":"LMT","_until":"1905 Aug"},{"name":"Asia/Choibalsan","_offset":"7:00","_rule":"-","format":"ULAT","_until":"1978"},{"name":"Asia/Choibalsan","_offset":"8:00","_rule":"-","format":"ULAT","_until":"1983 Apr"},{"name":"Asia/Choibalsan","_offset":"9:00","_rule":"Mongol","format":"CHO%sT","_until":"2008 Mar 31"},{"name":"Asia/Choibalsan","_offset":"8:00","_rule":"Mongol","format":"CHO%sT","_until":""}],"Asia/Kathmandu":[{"name":"Asia/Kathmandu","_offset":"5:41:16","_rule":"-","format":"LMT","_until":"1920"},{"name":"Asia/Kathmandu","_offset":"5:30","_rule":"-","format":"IST","_until":"1986"},{"name":"Asia/Kathmandu","_offset":"5:45","_rule":"-","format":"NPT","_until":""}],"Asia/Muscat":[{"name":"Asia/Muscat","_offset":"3:54:24","_rule":"-","format":"LMT","_until":"1920"},{"name":"Asia/Muscat","_offset":"4:00","_rule":"-","format":"GST","_until":""}],"Asia/Karachi":[{"name":"Asia/Karachi","_offset":"4:28:12","_rule":"-","format":"LMT","_until":"1907"},{"name":"Asia/Karachi","_offset":"5:30","_rule":"-","format":"IST","_until":"1942 Sep"},{"name":"Asia/Karachi","_offset":"5:30","_rule":"1:00","format":"IST","_until":"1945 Oct 15"},{"name":"Asia/Karachi","_offset":"5:30","_rule":"-","format":"IST","_until":"1951 Sep 30"},{"name":"Asia/Karachi","_offset":"5:00","_rule":"-","format":"KART","_until":"1971 Mar 26"},{"name":"Asia/Karachi","_offset":"5:00","_rule":"Pakistan","format":"PK%sT","_until":""}],"Asia/Gaza":[{"name":"Asia/Gaza","_offset":"2:17:52","_rule":"-","format":"LMT","_until":"1900 Oct"},{"name":"Asia/Gaza","_offset":"2:00","_rule":"Zion","format":"EET","_until":"1948 May 15"},{"name":"Asia/Gaza","_offset":"2:00","_rule":"EgyptAsia","format":"EE%sT","_until":"1967 Jun 5"},{"name":"Asia/Gaza","_offset":"2:00","_rule":"Zion","format":"I%sT","_until":"1996"},{"name":"Asia/Gaza","_offset":"2:00","_rule":"Jordan","format":"EE%sT","_until":"1999"},{"name":"Asia/Gaza","_offset":"2:00","_rule":"Palestine","format":"EE%sT","_until":"2008 Aug 29 0:00"},{"name":"Asia/Gaza","_offset":"2:00","_rule":"-","format":"EET","_until":"2008 Sep"},{"name":"Asia/Gaza","_offset":"2:00","_rule":"Palestine","format":"EE%sT","_until":"2010"},{"name":"Asia/Gaza","_offset":"2:00","_rule":"-","format":"EET","_until":"2010 Mar 27 0:01"},{"name":"Asia/Gaza","_offset":"2:00","_rule":"Palestine","format":"EE%sT","_until":"2011 Aug 1"},{"name":"Asia/Gaza","_offset":"2:00","_rule":"-","format":"EET","_until":"2012"},{"name":"Asia/Gaza","_offset":"2:00","_rule":"Palestine","format":"EE%sT","_until":""}],"Asia/Hebron":[{"name":"Asia/Hebron","_offset":"2:20:23","_rule":"-","format":"LMT","_until":"1900 Oct"},{"name":"Asia/Hebron","_offset":"2:00","_rule":"Zion","format":"EET","_until":"1948 May 15"},{"name":"Asia/Hebron","_offset":"2:00","_rule":"EgyptAsia","format":"EE%sT","_until":"1967 Jun 5"},{"name":"Asia/Hebron","_offset":"2:00","_rule":"Zion","format":"I%sT","_until":"1996"},{"name":"Asia/Hebron","_offset":"2:00","_rule":"Jordan","format":"EE%sT","_until":"1999"},{"name":"Asia/Hebron","_offset":"2:00","_rule":"Palestine","format":"EE%sT","_until":""}],"Asia/Manila":[{"name":"Asia/Manila","_offset":"-15:56:00","_rule":"-","format":"LMT","_until":"1844 Dec 31"},{"name":"Asia/Manila","_offset":"8:04:00","_rule":"-","format":"LMT","_until":"1899 May 11"},{"name":"Asia/Manila","_offset":"8:00","_rule":"Phil","format":"PH%sT","_until":"1942 May"},{"name":"Asia/Manila","_offset":"9:00","_rule":"-","format":"JST","_until":"1944 Nov"},{"name":"Asia/Manila","_offset":"8:00","_rule":"Phil","format":"PH%sT","_until":""}],"Asia/Qatar":[{"name":"Asia/Qatar","_offset":"3:26:08","_rule":"-","format":"LMT","_until":"1920"},{"name":"Asia/Qatar","_offset":"4:00","_rule":"-","format":"GST","_until":"1972 Jun"},{"name":"Asia/Qatar","_offset":"3:00","_rule":"-","format":"AST","_until":""}],"Asia/Riyadh":[{"name":"Asia/Riyadh","_offset":"3:06:52","_rule":"-","format":"LMT","_until":"1950"},{"name":"Asia/Riyadh","_offset":"3:00","_rule":"-","format":"AST","_until":""}],"Asia/Singapore":[{"name":"Asia/Singapore","_offset":"6:55:25","_rule":"-","format":"LMT","_until":"1901 Jan 1"},{"name":"Asia/Singapore","_offset":"6:55:25","_rule":"-","format":"SMT","_until":"1905 Jun 1"},{"name":"Asia/Singapore","_offset":"7:00","_rule":"-","format":"MALT","_until":"1933 Jan 1"},{"name":"Asia/Singapore","_offset":"7:00","_rule":"0:20","format":"MALST","_until":"1936 Jan 1"},{"name":"Asia/Singapore","_offset":"7:20","_rule":"-","format":"MALT","_until":"1941 Sep 1"},{"name":"Asia/Singapore","_offset":"7:30","_rule":"-","format":"MALT","_until":"1942 Feb 16"},{"name":"Asia/Singapore","_offset":"9:00","_rule":"-","format":"JST","_until":"1945 Sep 12"},{"name":"Asia/Singapore","_offset":"7:30","_rule":"-","format":"MALT","_until":"1965 Aug 9"},{"name":"Asia/Singapore","_offset":"7:30","_rule":"-","format":"SGT","_until":"1982 Jan 1"},{"name":"Asia/Singapore","_offset":"8:00","_rule":"-","format":"SGT","_until":""}],"Asia/Colombo":[{"name":"Asia/Colombo","_offset":"5:19:24","_rule":"-","format":"LMT","_until":"1880"},{"name":"Asia/Colombo","_offset":"5:19:32","_rule":"-","format":"MMT","_until":"1906"},{"name":"Asia/Colombo","_offset":"5:30","_rule":"-","format":"IST","_until":"1942 Jan 5"},{"name":"Asia/Colombo","_offset":"5:30","_rule":"0:30","format":"IHST","_until":"1942 Sep"},{"name":"Asia/Colombo","_offset":"5:30","_rule":"1:00","format":"IST","_until":"1945 Oct 16 2:00"},{"name":"Asia/Colombo","_offset":"5:30","_rule":"-","format":"IST","_until":"1996 May 25 0:00"},{"name":"Asia/Colombo","_offset":"6:30","_rule":"-","format":"LKT","_until":"1996 Oct 26 0:30"},{"name":"Asia/Colombo","_offset":"6:00","_rule":"-","format":"LKT","_until":"2006 Apr 15 0:30"},{"name":"Asia/Colombo","_offset":"5:30","_rule":"-","format":"IST","_until":""}],"Asia/Damascus":[{"name":"Asia/Damascus","_offset":"2:25:12","_rule":"-","format":"LMT","_until":"1920"},{"name":"Asia/Damascus","_offset":"2:00","_rule":"Syria","format":"EE%sT","_until":""}],"Asia/Dushanbe":[{"name":"Asia/Dushanbe","_offset":"4:35:12","_rule":"-","format":"LMT","_until":"1924 May 2"},{"name":"Asia/Dushanbe","_offset":"5:00","_rule":"-","format":"DUST","_until":"1930 Jun 21"},{"name":"Asia/Dushanbe","_offset":"6:00","_rule":"RussiaAsia","format":"DUS%sT","_until":"1991 Mar 31 2:00s"},{"name":"Asia/Dushanbe","_offset":"5:00","_rule":"1:00","format":"DUSST","_until":"1991 Sep 9 2:00s"},{"name":"Asia/Dushanbe","_offset":"5:00","_rule":"-","format":"TJT","_until":""}],"Asia/Bangkok":[{"name":"Asia/Bangkok","_offset":"6:42:04","_rule":"-","format":"LMT","_until":"1880"},{"name":"Asia/Bangkok","_offset":"6:42:04","_rule":"-","format":"BMT","_until":"1920 Apr"},{"name":"Asia/Bangkok","_offset":"7:00","_rule":"-","format":"ICT","_until":""}],"Asia/Ashgabat":[{"name":"Asia/Ashgabat","_offset":"3:53:32","_rule":"-","format":"LMT","_until":"1924 May 2"},{"name":"Asia/Ashgabat","_offset":"4:00","_rule":"-","format":"ASHT","_until":"1930 Jun 21"},{"name":"Asia/Ashgabat","_offset":"5:00","_rule":"RussiaAsia","format":"ASH%sT","_until":"1991 Mar 31 2:00"},{"name":"Asia/Ashgabat","_offset":"4:00","_rule":"RussiaAsia","format":"ASH%sT","_until":"1991 Oct 27"},{"name":"Asia/Ashgabat","_offset":"4:00","_rule":"RussiaAsia","format":"TM%sT","_until":"1992 Jan 19 2:00"},{"name":"Asia/Ashgabat","_offset":"5:00","_rule":"-","format":"TMT","_until":""}],"Asia/Dubai":[{"name":"Asia/Dubai","_offset":"3:41:12","_rule":"-","format":"LMT","_until":"1920"},{"name":"Asia/Dubai","_offset":"4:00","_rule":"-","format":"GST","_until":""}],"Asia/Samarkand":[{"name":"Asia/Samarkand","_offset":"4:27:12","_rule":"-","format":"LMT","_until":"1924 May 2"},{"name":"Asia/Samarkand","_offset":"4:00","_rule":"-","format":"SAMT","_until":"1930 Jun 21"},{"name":"Asia/Samarkand","_offset":"5:00","_rule":"-","format":"SAMT","_until":"1981 Apr 1"},{"name":"Asia/Samarkand","_offset":"5:00","_rule":"1:00","format":"SAMST","_until":"1981 Oct 1"},{"name":"Asia/Samarkand","_offset":"6:00","_rule":"-","format":"TAST","_until":"1982 Apr 1"},{"name":"Asia/Samarkand","_offset":"5:00","_rule":"RussiaAsia","format":"SAM%sT","_until":"1991 Sep 1"},{"name":"Asia/Samarkand","_offset":"5:00","_rule":"RussiaAsia","format":"UZ%sT","_until":"1992"},{"name":"Asia/Samarkand","_offset":"5:00","_rule":"-","format":"UZT","_until":""}],"Asia/Tashkent":[{"name":"Asia/Tashkent","_offset":"4:37:12","_rule":"-","format":"LMT","_until":"1924 May 2"},{"name":"Asia/Tashkent","_offset":"5:00","_rule":"-","format":"TAST","_until":"1930 Jun 21"},{"name":"Asia/Tashkent","_offset":"6:00","_rule":"RussiaAsia","format":"TAS%sT","_until":"1991 Mar 31 2:00"},{"name":"Asia/Tashkent","_offset":"5:00","_rule":"RussiaAsia","format":"TAS%sT","_until":"1991 Sep 1"},{"name":"Asia/Tashkent","_offset":"5:00","_rule":"RussiaAsia","format":"UZ%sT","_until":"1992"},{"name":"Asia/Tashkent","_offset":"5:00","_rule":"-","format":"UZT","_until":""}],"Asia/Ho_Chi_Minh":[{"name":"Asia/Ho_Chi_Minh","_offset":"7:06:40","_rule":"-","format":"LMT","_until":"1906 Jun 9"},{"name":"Asia/Ho_Chi_Minh","_offset":"7:06:20","_rule":"-","format":"SMT","_until":"1911 Mar 11 0:01"},{"name":"Asia/Ho_Chi_Minh","_offset":"7:00","_rule":"-","format":"ICT","_until":"1912 May"},{"name":"Asia/Ho_Chi_Minh","_offset":"8:00","_rule":"-","format":"ICT","_until":"1931 May"},{"name":"Asia/Ho_Chi_Minh","_offset":"7:00","_rule":"-","format":"ICT","_until":""}],"Asia/Aden":[{"name":"Asia/Aden","_offset":"2:59:54","_rule":"-","format":"LMT","_until":"1950"},{"name":"Asia/Aden","_offset":"3:00","_rule":"-","format":"AST","_until":""}],"Australia/Darwin":[{"name":"Australia/Darwin","_offset":"8:43:20","_rule":"-","format":"LMT","_until":"1895 Feb"},{"name":"Australia/Darwin","_offset":"9:00","_rule":"-","format":"CST","_until":"1899 May"},{"name":"Australia/Darwin","_offset":"9:30","_rule":"Aus","format":"CST","_until":""}],"Australia/Perth":[{"name":"Australia/Perth","_offset":"7:43:24","_rule":"-","format":"LMT","_until":"1895 Dec"},{"name":"Australia/Perth","_offset":"8:00","_rule":"Aus","format":"WST","_until":"1943 Jul"},{"name":"Australia/Perth","_offset":"8:00","_rule":"AW","format":"WST","_until":""}],"Australia/Eucla":[{"name":"Australia/Eucla","_offset":"8:35:28","_rule":"-","format":"LMT","_until":"1895 Dec"},{"name":"Australia/Eucla","_offset":"8:45","_rule":"Aus","format":"CWST","_until":"1943 Jul"},{"name":"Australia/Eucla","_offset":"8:45","_rule":"AW","format":"CWST","_until":""}],"Australia/Brisbane":[{"name":"Australia/Brisbane","_offset":"10:12:08","_rule":"-","format":"LMT","_until":"1895"},{"name":"Australia/Brisbane","_offset":"10:00","_rule":"Aus","format":"EST","_until":"1971"},{"name":"Australia/Brisbane","_offset":"10:00","_rule":"AQ","format":"EST","_until":""}],"Australia/Lindeman":[{"name":"Australia/Lindeman","_offset":"9:55:56","_rule":"-","format":"LMT","_until":"1895"},{"name":"Australia/Lindeman","_offset":"10:00","_rule":"Aus","format":"EST","_until":"1971"},{"name":"Australia/Lindeman","_offset":"10:00","_rule":"AQ","format":"EST","_until":"1992 Jul"},{"name":"Australia/Lindeman","_offset":"10:00","_rule":"Holiday","format":"EST","_until":""}],"Australia/Adelaide":[{"name":"Australia/Adelaide","_offset":"9:14:20","_rule":"-","format":"LMT","_until":"1895 Feb"},{"name":"Australia/Adelaide","_offset":"9:00","_rule":"-","format":"CST","_until":"1899 May"},{"name":"Australia/Adelaide","_offset":"9:30","_rule":"Aus","format":"CST","_until":"1971"},{"name":"Australia/Adelaide","_offset":"9:30","_rule":"AS","format":"CST","_until":""}],"Australia/Hobart":[{"name":"Australia/Hobart","_offset":"9:49:16","_rule":"-","format":"LMT","_until":"1895 Sep"},{"name":"Australia/Hobart","_offset":"10:00","_rule":"-","format":"EST","_until":"1916 Oct 1 2:00"},{"name":"Australia/Hobart","_offset":"10:00","_rule":"1:00","format":"EST","_until":"1917 Feb"},{"name":"Australia/Hobart","_offset":"10:00","_rule":"Aus","format":"EST","_until":"1967"},{"name":"Australia/Hobart","_offset":"10:00","_rule":"AT","format":"EST","_until":""}],"Australia/Currie":[{"name":"Australia/Currie","_offset":"9:35:28","_rule":"-","format":"LMT","_until":"1895 Sep"},{"name":"Australia/Currie","_offset":"10:00","_rule":"-","format":"EST","_until":"1916 Oct 1 2:00"},{"name":"Australia/Currie","_offset":"10:00","_rule":"1:00","format":"EST","_until":"1917 Feb"},{"name":"Australia/Currie","_offset":"10:00","_rule":"Aus","format":"EST","_until":"1971 Jul"},{"name":"Australia/Currie","_offset":"10:00","_rule":"AT","format":"EST","_until":""}],"Australia/Melbourne":[{"name":"Australia/Melbourne","_offset":"9:39:52","_rule":"-","format":"LMT","_until":"1895 Feb"},{"name":"Australia/Melbourne","_offset":"10:00","_rule":"Aus","format":"EST","_until":"1971"},{"name":"Australia/Melbourne","_offset":"10:00","_rule":"AV","format":"EST","_until":""}],"Australia/Sydney":[{"name":"Australia/Sydney","_offset":"10:04:52","_rule":"-","format":"LMT","_until":"1895 Feb"},{"name":"Australia/Sydney","_offset":"10:00","_rule":"Aus","format":"EST","_until":"1971"},{"name":"Australia/Sydney","_offset":"10:00","_rule":"AN","format":"EST","_until":""}],"Australia/Broken_Hill":[{"name":"Australia/Broken_Hill","_offset":"9:25:48","_rule":"-","format":"LMT","_until":"1895 Feb"},{"name":"Australia/Broken_Hill","_offset":"10:00","_rule":"-","format":"EST","_until":"1896 Aug 23"},{"name":"Australia/Broken_Hill","_offset":"9:00","_rule":"-","format":"CST","_until":"1899 May"},{"name":"Australia/Broken_Hill","_offset":"9:30","_rule":"Aus","format":"CST","_until":"1971"},{"name":"Australia/Broken_Hill","_offset":"9:30","_rule":"AN","format":"CST","_until":"2000"},{"name":"Australia/Broken_Hill","_offset":"9:30","_rule":"AS","format":"CST","_until":""}],"Australia/Lord_Howe":[{"name":"Australia/Lord_Howe","_offset":"10:36:20","_rule":"-","format":"LMT","_until":"1895 Feb"},{"name":"Australia/Lord_Howe","_offset":"10:00","_rule":"-","format":"EST","_until":"1981 Mar"},{"name":"Australia/Lord_Howe","_offset":"10:30","_rule":"LH","format":"LHST","_until":""}],"Antarctica/Macquarie":[{"name":"Antarctica/Macquarie","_offset":"0","_rule":"-","format":"zzz","_until":"1899 Nov"},{"name":"Antarctica/Macquarie","_offset":"10:00","_rule":"-","format":"EST","_until":"1916 Oct 1 2:00"},{"name":"Antarctica/Macquarie","_offset":"10:00","_rule":"1:00","format":"EST","_until":"1917 Feb"},{"name":"Antarctica/Macquarie","_offset":"10:00","_rule":"Aus","format":"EST","_until":"1919 Apr 1 0:00s"},{"name":"Antarctica/Macquarie","_offset":"0","_rule":"-","format":"zzz","_until":"1948 Mar 25"},{"name":"Antarctica/Macquarie","_offset":"10:00","_rule":"Aus","format":"EST","_until":"1967"},{"name":"Antarctica/Macquarie","_offset":"10:00","_rule":"AT","format":"EST","_until":"2010 Apr 4 3:00"},{"name":"Antarctica/Macquarie","_offset":"11:00","_rule":"-","format":"MIST","_until":""}],"Indian/Christmas":[{"name":"Indian/Christmas","_offset":"7:02:52","_rule":"-","format":"LMT","_until":"1895 Feb"},{"name":"Indian/Christmas","_offset":"7:00","_rule":"-","format":"CXT","_until":""}],"Pacific/Rarotonga":[{"name":"Pacific/Rarotonga","_offset":"-10:39:04","_rule":"-","format":"LMT","_until":"1901"},{"name":"Pacific/Rarotonga","_offset":"-10:30","_rule":"-","format":"CKT","_until":"1978 Nov 12"},{"name":"Pacific/Rarotonga","_offset":"-10:00","_rule":"Cook","format":"CK%sT","_until":""}],"Indian/Cocos":[{"name":"Indian/Cocos","_offset":"6:27:40","_rule":"-","format":"LMT","_until":"1900"},{"name":"Indian/Cocos","_offset":"6:30","_rule":"-","format":"CCT","_until":""}],"Pacific/Fiji":[{"name":"Pacific/Fiji","_offset":"11:55:44","_rule":"-","format":"LMT","_until":"1915 Oct 26"},{"name":"Pacific/Fiji","_offset":"12:00","_rule":"Fiji","format":"FJ%sT","_until":""}],"Pacific/Gambier":[{"name":"Pacific/Gambier","_offset":"-8:59:48","_rule":"-","format":"LMT","_until":"1912 Oct"},{"name":"Pacific/Gambier","_offset":"-9:00","_rule":"-","format":"GAMT","_until":""}],"Pacific/Marquesas":[{"name":"Pacific/Marquesas","_offset":"-9:18:00","_rule":"-","format":"LMT","_until":"1912 Oct"},{"name":"Pacific/Marquesas","_offset":"-9:30","_rule":"-","format":"MART","_until":""}],"Pacific/Tahiti":[{"name":"Pacific/Tahiti","_offset":"-9:58:16","_rule":"-","format":"LMT","_until":"1912 Oct"},{"name":"Pacific/Tahiti","_offset":"-10:00","_rule":"-","format":"TAHT","_until":""}],"Pacific/Guam":[{"name":"Pacific/Guam","_offset":"-14:21:00","_rule":"-","format":"LMT","_until":"1844 Dec 31"},{"name":"Pacific/Guam","_offset":"9:39:00","_rule":"-","format":"LMT","_until":"1901"},{"name":"Pacific/Guam","_offset":"10:00","_rule":"-","format":"GST","_until":"2000 Dec 23"},{"name":"Pacific/Guam","_offset":"10:00","_rule":"-","format":"ChST","_until":""}],"Pacific/Tarawa":[{"name":"Pacific/Tarawa","_offset":"11:32:04","_rule":"-","format":"LMT","_until":"1901"},{"name":"Pacific/Tarawa","_offset":"12:00","_rule":"-","format":"GILT","_until":""}],"Pacific/Enderbury":[{"name":"Pacific/Enderbury","_offset":"-11:24:20","_rule":"-","format":"LMT","_until":"1901"},{"name":"Pacific/Enderbury","_offset":"-12:00","_rule":"-","format":"PHOT","_until":"1979 Oct"},{"name":"Pacific/Enderbury","_offset":"-11:00","_rule":"-","format":"PHOT","_until":"1995"},{"name":"Pacific/Enderbury","_offset":"13:00","_rule":"-","format":"PHOT","_until":""}],"Pacific/Kiritimati":[{"name":"Pacific/Kiritimati","_offset":"-10:29:20","_rule":"-","format":"LMT","_until":"1901"},{"name":"Pacific/Kiritimati","_offset":"-10:40","_rule":"-","format":"LINT","_until":"1979 Oct"},{"name":"Pacific/Kiritimati","_offset":"-10:00","_rule":"-","format":"LINT","_until":"1995"},{"name":"Pacific/Kiritimati","_offset":"14:00","_rule":"-","format":"LINT","_until":""}],"Pacific/Saipan":[{"name":"Pacific/Saipan","_offset":"-14:17:00","_rule":"-","format":"LMT","_until":"1844 Dec 31"},{"name":"Pacific/Saipan","_offset":"9:43:00","_rule":"-","format":"LMT","_until":"1901"},{"name":"Pacific/Saipan","_offset":"9:00","_rule":"-","format":"MPT","_until":"1969 Oct"},{"name":"Pacific/Saipan","_offset":"10:00","_rule":"-","format":"MPT","_until":"2000 Dec 23"},{"name":"Pacific/Saipan","_offset":"10:00","_rule":"-","format":"ChST","_until":""}],"Pacific/Majuro":[{"name":"Pacific/Majuro","_offset":"11:24:48","_rule":"-","format":"LMT","_until":"1901"},{"name":"Pacific/Majuro","_offset":"11:00","_rule":"-","format":"MHT","_until":"1969 Oct"},{"name":"Pacific/Majuro","_offset":"12:00","_rule":"-","format":"MHT","_until":""}],"Pacific/Kwajalein":[{"name":"Pacific/Kwajalein","_offset":"11:09:20","_rule":"-","format":"LMT","_until":"1901"},{"name":"Pacific/Kwajalein","_offset":"11:00","_rule":"-","format":"MHT","_until":"1969 Oct"},{"name":"Pacific/Kwajalein","_offset":"-12:00","_rule":"-","format":"KWAT","_until":"1993 Aug 20"},{"name":"Pacific/Kwajalein","_offset":"12:00","_rule":"-","format":"MHT","_until":""}],"Pacific/Chuuk":[{"name":"Pacific/Chuuk","_offset":"10:07:08","_rule":"-","format":"LMT","_until":"1901"},{"name":"Pacific/Chuuk","_offset":"10:00","_rule":"-","format":"CHUT","_until":""}],"Pacific/Pohnpei":[{"name":"Pacific/Pohnpei","_offset":"10:32:52","_rule":"-","format":"LMT","_until":"1901"},{"name":"Pacific/Pohnpei","_offset":"11:00","_rule":"-","format":"PONT","_until":""}],"Pacific/Kosrae":[{"name":"Pacific/Kosrae","_offset":"10:51:56","_rule":"-","format":"LMT","_until":"1901"},{"name":"Pacific/Kosrae","_offset":"11:00","_rule":"-","format":"KOST","_until":"1969 Oct"},{"name":"Pacific/Kosrae","_offset":"12:00","_rule":"-","format":"KOST","_until":"1999"},{"name":"Pacific/Kosrae","_offset":"11:00","_rule":"-","format":"KOST","_until":""}],"Pacific/Nauru":[{"name":"Pacific/Nauru","_offset":"11:07:40","_rule":"-","format":"LMT","_until":"1921 Jan 15"},{"name":"Pacific/Nauru","_offset":"11:30","_rule":"-","format":"NRT","_until":"1942 Mar 15"},{"name":"Pacific/Nauru","_offset":"9:00","_rule":"-","format":"JST","_until":"1944 Aug 15"},{"name":"Pacific/Nauru","_offset":"11:30","_rule":"-","format":"NRT","_until":"1979 May"},{"name":"Pacific/Nauru","_offset":"12:00","_rule":"-","format":"NRT","_until":""}],"Pacific/Noumea":[{"name":"Pacific/Noumea","_offset":"11:05:48","_rule":"-","format":"LMT","_until":"1912 Jan 13"},{"name":"Pacific/Noumea","_offset":"11:00","_rule":"NC","format":"NC%sT","_until":""}],"Pacific/Auckland":[{"name":"Pacific/Auckland","_offset":"11:39:04","_rule":"-","format":"LMT","_until":"1868 Nov 2"},{"name":"Pacific/Auckland","_offset":"11:30","_rule":"NZ","format":"NZ%sT","_until":"1946 Jan 1"},{"name":"Pacific/Auckland","_offset":"12:00","_rule":"NZ","format":"NZ%sT","_until":""}],"Pacific/Chatham":[{"name":"Pacific/Chatham","_offset":"12:13:48","_rule":"-","format":"LMT","_until":"1957 Jan 1"},{"name":"Pacific/Chatham","_offset":"12:45","_rule":"Chatham","format":"CHA%sT","_until":""}],"Pacific/Niue":[{"name":"Pacific/Niue","_offset":"-11:19:40","_rule":"-","format":"LMT","_until":"1901"},{"name":"Pacific/Niue","_offset":"-11:20","_rule":"-","format":"NUT","_until":"1951"},{"name":"Pacific/Niue","_offset":"-11:30","_rule":"-","format":"NUT","_until":"1978 Oct 1"},{"name":"Pacific/Niue","_offset":"-11:00","_rule":"-","format":"NUT","_until":""}],"Pacific/Norfolk":[{"name":"Pacific/Norfolk","_offset":"11:11:52","_rule":"-","format":"LMT","_until":"1901"},{"name":"Pacific/Norfolk","_offset":"11:12","_rule":"-","format":"NMT","_until":"1951"},{"name":"Pacific/Norfolk","_offset":"11:30","_rule":"-","format":"NFT","_until":""}],"Pacific/Palau":[{"name":"Pacific/Palau","_offset":"8:57:56","_rule":"-","format":"LMT","_until":"1901"},{"name":"Pacific/Palau","_offset":"9:00","_rule":"-","format":"PWT","_until":""}],"Pacific/Port_Moresby":[{"name":"Pacific/Port_Moresby","_offset":"9:48:40","_rule":"-","format":"LMT","_until":"1880"},{"name":"Pacific/Port_Moresby","_offset":"9:48:32","_rule":"-","format":"PMMT","_until":"1895"},{"name":"Pacific/Port_Moresby","_offset":"10:00","_rule":"-","format":"PGT","_until":""}],"Pacific/Pitcairn":[{"name":"Pacific/Pitcairn","_offset":"-8:40:20","_rule":"-","format":"LMT","_until":"1901"},{"name":"Pacific/Pitcairn","_offset":"-8:30","_rule":"-","format":"PNT","_until":"1998 Apr 27 00:00"},{"name":"Pacific/Pitcairn","_offset":"-8:00","_rule":"-","format":"PST","_until":""}],"Pacific/Pago_Pago":[{"name":"Pacific/Pago_Pago","_offset":"12:37:12","_rule":"-","format":"LMT","_until":"1879 Jul 5"},{"name":"Pacific/Pago_Pago","_offset":"-11:22:48","_rule":"-","format":"LMT","_until":"1911"},{"name":"Pacific/Pago_Pago","_offset":"-11:30","_rule":"-","format":"SAMT","_until":"1950"},{"name":"Pacific/Pago_Pago","_offset":"-11:00","_rule":"-","format":"NST","_until":"1967 Apr"},{"name":"Pacific/Pago_Pago","_offset":"-11:00","_rule":"-","format":"BST","_until":"1983 Nov 30"},{"name":"Pacific/Pago_Pago","_offset":"-11:00","_rule":"-","format":"SST","_until":""}],"Pacific/Apia":[{"name":"Pacific/Apia","_offset":"12:33:04","_rule":"-","format":"LMT","_until":"1879 Jul 5"},{"name":"Pacific/Apia","_offset":"-11:26:56","_rule":"-","format":"LMT","_until":"1911"},{"name":"Pacific/Apia","_offset":"-11:30","_rule":"-","format":"SAMT","_until":"1950"},{"name":"Pacific/Apia","_offset":"-11:00","_rule":"-","format":"WST","_until":"2010 Sep 26"},{"name":"Pacific/Apia","_offset":"-11:00","_rule":"1:00","format":"WSDT","_until":"2011 Apr 2 4:00"},{"name":"Pacific/Apia","_offset":"-11:00","_rule":"-","format":"WST","_until":"2011 Sep 24 3:00"},{"name":"Pacific/Apia","_offset":"-11:00","_rule":"1:00","format":"WSDT","_until":"2011 Dec 30"},{"name":"Pacific/Apia","_offset":"13:00","_rule":"1:00","format":"WSDT","_until":"2012 Apr Sun>=1 4:00"},{"name":"Pacific/Apia","_offset":"13:00","_rule":"WS","format":"WS%sT","_until":""}],"Pacific/Guadalcanal":[{"name":"Pacific/Guadalcanal","_offset":"10:39:48","_rule":"-","format":"LMT","_until":"1912 Oct"},{"name":"Pacific/Guadalcanal","_offset":"11:00","_rule":"-","format":"SBT","_until":""}],"Pacific/Fakaofo":[{"name":"Pacific/Fakaofo","_offset":"-11:24:56","_rule":"-","format":"LMT","_until":"1901"},{"name":"Pacific/Fakaofo","_offset":"-11:00","_rule":"-","format":"TKT","_until":"2011 Dec 30"},{"name":"Pacific/Fakaofo","_offset":"13:00","_rule":"-","format":"TKT","_until":""}],"Pacific/Tongatapu":[{"name":"Pacific/Tongatapu","_offset":"12:19:20","_rule":"-","format":"LMT","_until":"1901"},{"name":"Pacific/Tongatapu","_offset":"12:20","_rule":"-","format":"TOT","_until":"1941"},{"name":"Pacific/Tongatapu","_offset":"13:00","_rule":"-","format":"TOT","_until":"1999"},{"name":"Pacific/Tongatapu","_offset":"13:00","_rule":"Tonga","format":"TO%sT","_until":""}],"Pacific/Funafuti":[{"name":"Pacific/Funafuti","_offset":"11:56:52","_rule":"-","format":"LMT","_until":"1901"},{"name":"Pacific/Funafuti","_offset":"12:00","_rule":"-","format":"TVT","_until":""}],"Pacific/Johnston":[{"name":"Pacific/Johnston","_offset":"-10:00","_rule":"-","format":"HST","_until":""}],"Pacific/Midway":[{"name":"Pacific/Midway","_offset":"-11:49:28","_rule":"-","format":"LMT","_until":"1901"},{"name":"Pacific/Midway","_offset":"-11:00","_rule":"-","format":"NST","_until":"1956 Jun 3"},{"name":"Pacific/Midway","_offset":"-11:00","_rule":"1:00","format":"NDT","_until":"1956 Sep 2"},{"name":"Pacific/Midway","_offset":"-11:00","_rule":"-","format":"NST","_until":"1967 Apr"},{"name":"Pacific/Midway","_offset":"-11:00","_rule":"-","format":"BST","_until":"1983 Nov 30"},{"name":"Pacific/Midway","_offset":"-11:00","_rule":"-","format":"SST","_until":""}],"Pacific/Wake":[{"name":"Pacific/Wake","_offset":"11:06:28","_rule":"-","format":"LMT","_until":"1901"},{"name":"Pacific/Wake","_offset":"12:00","_rule":"-","format":"WAKT","_until":""}],"Pacific/Efate":[{"name":"Pacific/Efate","_offset":"11:13:16","_rule":"-","format":"LMT","_until":"1912 Jan 13"},{"name":"Pacific/Efate","_offset":"11:00","_rule":"Vanuatu","format":"VU%sT","_until":""}],"Pacific/Wallis":[{"name":"Pacific/Wallis","_offset":"12:15:20","_rule":"-","format":"LMT","_until":"1901"},{"name":"Pacific/Wallis","_offset":"12:00","_rule":"-","format":"WFT","_until":""}],"Etc/GMT":[{"name":"Etc/GMT","_offset":"0","_rule":"-","format":"GMT","_until":""}],"Etc/UTC":[{"name":"Etc/UTC","_offset":"0","_rule":"-","format":"UTC","_until":""}],"Etc/UCT":[{"name":"Etc/UCT","_offset":"0","_rule":"-","format":"UCT","_until":""}],"Etc/GMT-12":[{"name":"Etc/GMT-12","_offset":"-12:00","_rule":"-","format":"GMT-12","_until":""}],"Etc/GMT-11":[{"name":"Etc/GMT-11","_offset":"-11:00","_rule":"-","format":"GMT-11","_until":""}],"Etc/GMT-10":[{"name":"Etc/GMT-10","_offset":"-10:00","_rule":"-","format":"GMT-10","_until":""}],"Etc/GMT-9":[{"name":"Etc/GMT-9","_offset":"-9:00","_rule":"-","format":"GMT-9","_until":""}],"Etc/GMT-8":[{"name":"Etc/GMT-8","_offset":"-8:00","_rule":"-","format":"GMT-8","_until":""}],"Etc/GMT-7":[{"name":"Etc/GMT-7","_offset":"-7:00","_rule":"-","format":"GMT-7","_until":""}],"Etc/GMT-6":[{"name":"Etc/GMT-6","_offset":"-6:00","_rule":"-","format":"GMT-6","_until":""}],"Etc/GMT-5":[{"name":"Etc/GMT-5","_offset":"-5:00","_rule":"-","format":"GMT-5","_until":""}],"Etc/GMT-4":[{"name":"Etc/GMT-4","_offset":"-4:00","_rule":"-","format":"GMT-4","_until":""}],"Etc/GMT-3":[{"name":"Etc/GMT-3","_offset":"-3:00","_rule":"-","format":"GMT-3","_until":""}],"Etc/GMT-2":[{"name":"Etc/GMT-2","_offset":"-2:00","_rule":"-","format":"GMT-2","_until":""}],"Etc/GMT-1":[{"name":"Etc/GMT-1","_offset":"-1:00","_rule":"-","format":"GMT-1","_until":""}],"Etc/GMT+1":[{"name":"Etc/GMT+1","_offset":"1:00","_rule":"-","format":"GMT+1","_until":""}],"Etc/GMT+2":[{"name":"Etc/GMT+2","_offset":"2:00","_rule":"-","format":"GMT+2","_until":""}],"Etc/GMT+3":[{"name":"Etc/GMT+3","_offset":"3:00","_rule":"-","format":"GMT+3","_until":""}],"Etc/GMT+4":[{"name":"Etc/GMT+4","_offset":"4:00","_rule":"-","format":"GMT+4","_until":""}],"Etc/GMT+5":[{"name":"Etc/GMT+5","_offset":"5:00","_rule":"-","format":"GMT+5","_until":""}],"Etc/GMT+6":[{"name":"Etc/GMT+6","_offset":"6:00","_rule":"-","format":"GMT+6","_until":""}],"Etc/GMT+7":[{"name":"Etc/GMT+7","_offset":"7:00","_rule":"-","format":"GMT+7","_until":""}],"Etc/GMT+8":[{"name":"Etc/GMT+8","_offset":"8:00","_rule":"-","format":"GMT+8","_until":""}],"Etc/GMT+9":[{"name":"Etc/GMT+9","_offset":"9:00","_rule":"-","format":"GMT+9","_until":""}],"Etc/GMT+10":[{"name":"Etc/GMT+10","_offset":"10:00","_rule":"-","format":"GMT+10","_until":""}],"Etc/GMT+11":[{"name":"Etc/GMT+11","_offset":"11:00","_rule":"-","format":"GMT+11","_until":""}],"Etc/GMT+12":[{"name":"Etc/GMT+12","_offset":"12:00","_rule":"-","format":"GMT+12","_until":""}],"Etc/GMT+13":[{"name":"Etc/GMT+13","_offset":"13:00","_rule":"-","format":"GMT+13","_until":""}],"Etc/GMT+14":[{"name":"Etc/GMT+14","_offset":"14:00","_rule":"-","format":"GMT+14","_until":""}],"Europe/London":[{"name":"Europe/London","_offset":"-0:01:15","_rule":"-","format":"LMT","_until":"1847 Dec 1 0:00s"},{"name":"Europe/London","_offset":"0:00","_rule":"GB-Eire","format":"%s","_until":"1968 Oct 27"},{"name":"Europe/London","_offset":"1:00","_rule":"-","format":"BST","_until":"1971 Oct 31 2:00u"},{"name":"Europe/London","_offset":"0:00","_rule":"GB-Eire","format":"%s","_until":"1996"},{"name":"Europe/London","_offset":"0:00","_rule":"EU","format":"GMT/BST","_until":""}],"Europe/Dublin":[{"name":"Europe/Dublin","_offset":"-0:25:00","_rule":"-","format":"LMT","_until":"1880 Aug 2"},{"name":"Europe/Dublin","_offset":"-0:25:21","_rule":"-","format":"DMT","_until":"1916 May 21 2:00"},{"name":"Europe/Dublin","_offset":"-0:25:21","_rule":"1:00","format":"IST","_until":"1916 Oct 1 2:00s"},{"name":"Europe/Dublin","_offset":"0:00","_rule":"GB-Eire","format":"%s","_until":"1921 Dec 6"},{"name":"Europe/Dublin","_offset":"0:00","_rule":"GB-Eire","format":"GMT/IST","_until":"1940 Feb 25 2:00"},{"name":"Europe/Dublin","_offset":"0:00","_rule":"1:00","format":"IST","_until":"1946 Oct 6 2:00"},{"name":"Europe/Dublin","_offset":"0:00","_rule":"-","format":"GMT","_until":"1947 Mar 16 2:00"},{"name":"Europe/Dublin","_offset":"0:00","_rule":"1:00","format":"IST","_until":"1947 Nov 2 2:00"},{"name":"Europe/Dublin","_offset":"0:00","_rule":"-","format":"GMT","_until":"1948 Apr 18 2:00"},{"name":"Europe/Dublin","_offset":"0:00","_rule":"GB-Eire","format":"GMT/IST","_until":"1968 Oct 27"},{"name":"Europe/Dublin","_offset":"1:00","_rule":"-","format":"IST","_until":"1971 Oct 31 2:00u"},{"name":"Europe/Dublin","_offset":"0:00","_rule":"GB-Eire","format":"GMT/IST","_until":"1996"},{"name":"Europe/Dublin","_offset":"0:00","_rule":"EU","format":"GMT/IST","_until":""}],"WET":[{"name":"WET","_offset":"0:00","_rule":"EU","format":"WE%sT","_until":""}],"CET":[{"name":"CET","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":""}],"MET":[{"name":"MET","_offset":"1:00","_rule":"C-Eur","format":"ME%sT","_until":""}],"EET":[{"name":"EET","_offset":"2:00","_rule":"EU","format":"EE%sT","_until":""}],"Europe/Tirane":[{"name":"Europe/Tirane","_offset":"1:19:20","_rule":"-","format":"LMT","_until":"1914"},{"name":"Europe/Tirane","_offset":"1:00","_rule":"-","format":"CET","_until":"1940 Jun 16"},{"name":"Europe/Tirane","_offset":"1:00","_rule":"Albania","format":"CE%sT","_until":"1984 Jul"},{"name":"Europe/Tirane","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Europe/Andorra":[{"name":"Europe/Andorra","_offset":"0:06:04","_rule":"-","format":"LMT","_until":"1901"},{"name":"Europe/Andorra","_offset":"0:00","_rule":"-","format":"WET","_until":"1946 Sep 30"},{"name":"Europe/Andorra","_offset":"1:00","_rule":"-","format":"CET","_until":"1985 Mar 31 2:00"},{"name":"Europe/Andorra","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Europe/Vienna":[{"name":"Europe/Vienna","_offset":"1:05:21","_rule":"-","format":"LMT","_until":"1893 Apr"},{"name":"Europe/Vienna","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1920"},{"name":"Europe/Vienna","_offset":"1:00","_rule":"Austria","format":"CE%sT","_until":"1940 Apr 1 2:00s"},{"name":"Europe/Vienna","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1945 Apr 2 2:00s"},{"name":"Europe/Vienna","_offset":"1:00","_rule":"1:00","format":"CEST","_until":"1945 Apr 12 2:00s"},{"name":"Europe/Vienna","_offset":"1:00","_rule":"-","format":"CET","_until":"1946"},{"name":"Europe/Vienna","_offset":"1:00","_rule":"Austria","format":"CE%sT","_until":"1981"},{"name":"Europe/Vienna","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Europe/Minsk":[{"name":"Europe/Minsk","_offset":"1:50:16","_rule":"-","format":"LMT","_until":"1880"},{"name":"Europe/Minsk","_offset":"1:50","_rule":"-","format":"MMT","_until":"1924 May 2"},{"name":"Europe/Minsk","_offset":"2:00","_rule":"-","format":"EET","_until":"1930 Jun 21"},{"name":"Europe/Minsk","_offset":"3:00","_rule":"-","format":"MSK","_until":"1941 Jun 28"},{"name":"Europe/Minsk","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1944 Jul 3"},{"name":"Europe/Minsk","_offset":"3:00","_rule":"Russia","format":"MSK/MSD","_until":"1990"},{"name":"Europe/Minsk","_offset":"3:00","_rule":"-","format":"MSK","_until":"1991 Mar 31 2:00s"},{"name":"Europe/Minsk","_offset":"2:00","_rule":"1:00","format":"EEST","_until":"1991 Sep 29 2:00s"},{"name":"Europe/Minsk","_offset":"2:00","_rule":"-","format":"EET","_until":"1992 Mar 29 0:00s"},{"name":"Europe/Minsk","_offset":"2:00","_rule":"1:00","format":"EEST","_until":"1992 Sep 27 0:00s"},{"name":"Europe/Minsk","_offset":"2:00","_rule":"Russia","format":"EE%sT","_until":"2011 Mar 27 2:00s"},{"name":"Europe/Minsk","_offset":"3:00","_rule":"-","format":"FET","_until":""}],"Europe/Brussels":[{"name":"Europe/Brussels","_offset":"0:17:30","_rule":"-","format":"LMT","_until":"1880"},{"name":"Europe/Brussels","_offset":"0:17:30","_rule":"-","format":"BMT","_until":"1892 May 1 12:00"},{"name":"Europe/Brussels","_offset":"0:00","_rule":"-","format":"WET","_until":"1914 Nov 8"},{"name":"Europe/Brussels","_offset":"1:00","_rule":"-","format":"CET","_until":"1916 May 1 0:00"},{"name":"Europe/Brussels","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1918 Nov 11 11:00u"},{"name":"Europe/Brussels","_offset":"0:00","_rule":"Belgium","format":"WE%sT","_until":"1940 May 20 2:00s"},{"name":"Europe/Brussels","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1944 Sep 3"},{"name":"Europe/Brussels","_offset":"1:00","_rule":"Belgium","format":"CE%sT","_until":"1977"},{"name":"Europe/Brussels","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Europe/Sofia":[{"name":"Europe/Sofia","_offset":"1:33:16","_rule":"-","format":"LMT","_until":"1880"},{"name":"Europe/Sofia","_offset":"1:56:56","_rule":"-","format":"IMT","_until":"1894 Nov 30"},{"name":"Europe/Sofia","_offset":"2:00","_rule":"-","format":"EET","_until":"1942 Nov 2 3:00"},{"name":"Europe/Sofia","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1945"},{"name":"Europe/Sofia","_offset":"1:00","_rule":"-","format":"CET","_until":"1945 Apr 2 3:00"},{"name":"Europe/Sofia","_offset":"2:00","_rule":"-","format":"EET","_until":"1979 Mar 31 23:00"},{"name":"Europe/Sofia","_offset":"2:00","_rule":"Bulg","format":"EE%sT","_until":"1982 Sep 26 2:00"},{"name":"Europe/Sofia","_offset":"2:00","_rule":"C-Eur","format":"EE%sT","_until":"1991"},{"name":"Europe/Sofia","_offset":"2:00","_rule":"E-Eur","format":"EE%sT","_until":"1997"},{"name":"Europe/Sofia","_offset":"2:00","_rule":"EU","format":"EE%sT","_until":""}],"Europe/Prague":[{"name":"Europe/Prague","_offset":"0:57:44","_rule":"-","format":"LMT","_until":"1850"},{"name":"Europe/Prague","_offset":"0:57:44","_rule":"-","format":"PMT","_until":"1891 Oct"},{"name":"Europe/Prague","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1944 Sep 17 2:00s"},{"name":"Europe/Prague","_offset":"1:00","_rule":"Czech","format":"CE%sT","_until":"1979"},{"name":"Europe/Prague","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Europe/Copenhagen":[{"name":"Europe/Copenhagen","_offset":"0:50:20","_rule":"-","format":"LMT","_until":"1890"},{"name":"Europe/Copenhagen","_offset":"0:50:20","_rule":"-","format":"CMT","_until":"1894 Jan 1"},{"name":"Europe/Copenhagen","_offset":"1:00","_rule":"Denmark","format":"CE%sT","_until":"1942 Nov 2 2:00s"},{"name":"Europe/Copenhagen","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1945 Apr 2 2:00"},{"name":"Europe/Copenhagen","_offset":"1:00","_rule":"Denmark","format":"CE%sT","_until":"1980"},{"name":"Europe/Copenhagen","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Atlantic/Faroe":[{"name":"Atlantic/Faroe","_offset":"-0:27:04","_rule":"-","format":"LMT","_until":"1908 Jan 11"},{"name":"Atlantic/Faroe","_offset":"0:00","_rule":"-","format":"WET","_until":"1981"},{"name":"Atlantic/Faroe","_offset":"0:00","_rule":"EU","format":"WE%sT","_until":""}],"America/Danmarkshavn":[{"name":"America/Danmarkshavn","_offset":"-1:14:40","_rule":"-","format":"LMT","_until":"1916 Jul 28"},{"name":"America/Danmarkshavn","_offset":"-3:00","_rule":"-","format":"WGT","_until":"1980 Apr 6 2:00"},{"name":"America/Danmarkshavn","_offset":"-3:00","_rule":"EU","format":"WG%sT","_until":"1996"},{"name":"America/Danmarkshavn","_offset":"0:00","_rule":"-","format":"GMT","_until":""}],"America/Scoresbysund":[{"name":"America/Scoresbysund","_offset":"-1:27:52","_rule":"-","format":"LMT","_until":"1916 Jul 28"},{"name":"America/Scoresbysund","_offset":"-2:00","_rule":"-","format":"CGT","_until":"1980 Apr 6 2:00"},{"name":"America/Scoresbysund","_offset":"-2:00","_rule":"C-Eur","format":"CG%sT","_until":"1981 Mar 29"},{"name":"America/Scoresbysund","_offset":"-1:00","_rule":"EU","format":"EG%sT","_until":""}],"America/Godthab":[{"name":"America/Godthab","_offset":"-3:26:56","_rule":"-","format":"LMT","_until":"1916 Jul 28"},{"name":"America/Godthab","_offset":"-3:00","_rule":"-","format":"WGT","_until":"1980 Apr 6 2:00"},{"name":"America/Godthab","_offset":"-3:00","_rule":"EU","format":"WG%sT","_until":""}],"America/Thule":[{"name":"America/Thule","_offset":"-4:35:08","_rule":"-","format":"LMT","_until":"1916 Jul 28"},{"name":"America/Thule","_offset":"-4:00","_rule":"Thule","format":"A%sT","_until":""}],"Europe/Tallinn":[{"name":"Europe/Tallinn","_offset":"1:39:00","_rule":"-","format":"LMT","_until":"1880"},{"name":"Europe/Tallinn","_offset":"1:39:00","_rule":"-","format":"TMT","_until":"1918 Feb"},{"name":"Europe/Tallinn","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1919 Jul"},{"name":"Europe/Tallinn","_offset":"1:39:00","_rule":"-","format":"TMT","_until":"1921 May"},{"name":"Europe/Tallinn","_offset":"2:00","_rule":"-","format":"EET","_until":"1940 Aug 6"},{"name":"Europe/Tallinn","_offset":"3:00","_rule":"-","format":"MSK","_until":"1941 Sep 15"},{"name":"Europe/Tallinn","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1944 Sep 22"},{"name":"Europe/Tallinn","_offset":"3:00","_rule":"Russia","format":"MSK/MSD","_until":"1989 Mar 26 2:00s"},{"name":"Europe/Tallinn","_offset":"2:00","_rule":"1:00","format":"EEST","_until":"1989 Sep 24 2:00s"},{"name":"Europe/Tallinn","_offset":"2:00","_rule":"C-Eur","format":"EE%sT","_until":"1998 Sep 22"},{"name":"Europe/Tallinn","_offset":"2:00","_rule":"EU","format":"EE%sT","_until":"1999 Nov 1"},{"name":"Europe/Tallinn","_offset":"2:00","_rule":"-","format":"EET","_until":"2002 Feb 21"},{"name":"Europe/Tallinn","_offset":"2:00","_rule":"EU","format":"EE%sT","_until":""}],"Europe/Helsinki":[{"name":"Europe/Helsinki","_offset":"1:39:52","_rule":"-","format":"LMT","_until":"1878 May 31"},{"name":"Europe/Helsinki","_offset":"1:39:52","_rule":"-","format":"HMT","_until":"1921 May"},{"name":"Europe/Helsinki","_offset":"2:00","_rule":"Finland","format":"EE%sT","_until":"1983"},{"name":"Europe/Helsinki","_offset":"2:00","_rule":"EU","format":"EE%sT","_until":""}],"Europe/Paris":[{"name":"Europe/Paris","_offset":"0:09:21","_rule":"-","format":"LMT","_until":"1891 Mar 15 0:01"},{"name":"Europe/Paris","_offset":"0:09:21","_rule":"-","format":"PMT","_until":"1911 Mar 11 0:01"},{"name":"Europe/Paris","_offset":"0:00","_rule":"France","format":"WE%sT","_until":"1940 Jun 14 23:00"},{"name":"Europe/Paris","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1944 Aug 25"},{"name":"Europe/Paris","_offset":"0:00","_rule":"France","format":"WE%sT","_until":"1945 Sep 16 3:00"},{"name":"Europe/Paris","_offset":"1:00","_rule":"France","format":"CE%sT","_until":"1977"},{"name":"Europe/Paris","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Europe/Berlin":[{"name":"Europe/Berlin","_offset":"0:53:28","_rule":"-","format":"LMT","_until":"1893 Apr"},{"name":"Europe/Berlin","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1945 May 24 2:00"},{"name":"Europe/Berlin","_offset":"1:00","_rule":"SovietZone","format":"CE%sT","_until":"1946"},{"name":"Europe/Berlin","_offset":"1:00","_rule":"Germany","format":"CE%sT","_until":"1980"},{"name":"Europe/Berlin","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Europe/Gibraltar":[{"name":"Europe/Gibraltar","_offset":"-0:21:24","_rule":"-","format":"LMT","_until":"1880 Aug 2 0:00s"},{"name":"Europe/Gibraltar","_offset":"0:00","_rule":"GB-Eire","format":"%s","_until":"1957 Apr 14 2:00"},{"name":"Europe/Gibraltar","_offset":"1:00","_rule":"-","format":"CET","_until":"1982"},{"name":"Europe/Gibraltar","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Europe/Athens":[{"name":"Europe/Athens","_offset":"1:34:52","_rule":"-","format":"LMT","_until":"1895 Sep 14"},{"name":"Europe/Athens","_offset":"1:34:52","_rule":"-","format":"AMT","_until":"1916 Jul 28 0:01"},{"name":"Europe/Athens","_offset":"2:00","_rule":"Greece","format":"EE%sT","_until":"1941 Apr 30"},{"name":"Europe/Athens","_offset":"1:00","_rule":"Greece","format":"CE%sT","_until":"1944 Apr 4"},{"name":"Europe/Athens","_offset":"2:00","_rule":"Greece","format":"EE%sT","_until":"1981"},{"name":"Europe/Athens","_offset":"2:00","_rule":"EU","format":"EE%sT","_until":""}],"Europe/Budapest":[{"name":"Europe/Budapest","_offset":"1:16:20","_rule":"-","format":"LMT","_until":"1890 Oct"},{"name":"Europe/Budapest","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1918"},{"name":"Europe/Budapest","_offset":"1:00","_rule":"Hungary","format":"CE%sT","_until":"1941 Apr 6 2:00"},{"name":"Europe/Budapest","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1945"},{"name":"Europe/Budapest","_offset":"1:00","_rule":"Hungary","format":"CE%sT","_until":"1980 Sep 28 2:00s"},{"name":"Europe/Budapest","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Atlantic/Reykjavik":[{"name":"Atlantic/Reykjavik","_offset":"-1:27:24","_rule":"-","format":"LMT","_until":"1837"},{"name":"Atlantic/Reykjavik","_offset":"-1:27:48","_rule":"-","format":"RMT","_until":"1908"},{"name":"Atlantic/Reykjavik","_offset":"-1:00","_rule":"Iceland","format":"IS%sT","_until":"1968 Apr 7 1:00s"},{"name":"Atlantic/Reykjavik","_offset":"0:00","_rule":"-","format":"GMT","_until":""}],"Europe/Rome":[{"name":"Europe/Rome","_offset":"0:49:56","_rule":"-","format":"LMT","_until":"1866 Sep 22"},{"name":"Europe/Rome","_offset":"0:49:56","_rule":"-","format":"RMT","_until":"1893 Nov 1 0:00s"},{"name":"Europe/Rome","_offset":"1:00","_rule":"Italy","format":"CE%sT","_until":"1942 Nov 2 2:00s"},{"name":"Europe/Rome","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1944 Jul"},{"name":"Europe/Rome","_offset":"1:00","_rule":"Italy","format":"CE%sT","_until":"1980"},{"name":"Europe/Rome","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Europe/Riga":[{"name":"Europe/Riga","_offset":"1:36:24","_rule":"-","format":"LMT","_until":"1880"},{"name":"Europe/Riga","_offset":"1:36:24","_rule":"-","format":"RMT","_until":"1918 Apr 15 2:00"},{"name":"Europe/Riga","_offset":"1:36:24","_rule":"1:00","format":"LST","_until":"1918 Sep 16 3:00"},{"name":"Europe/Riga","_offset":"1:36:24","_rule":"-","format":"RMT","_until":"1919 Apr 1 2:00"},{"name":"Europe/Riga","_offset":"1:36:24","_rule":"1:00","format":"LST","_until":"1919 May 22 3:00"},{"name":"Europe/Riga","_offset":"1:36:24","_rule":"-","format":"RMT","_until":"1926 May 11"},{"name":"Europe/Riga","_offset":"2:00","_rule":"-","format":"EET","_until":"1940 Aug 5"},{"name":"Europe/Riga","_offset":"3:00","_rule":"-","format":"MSK","_until":"1941 Jul"},{"name":"Europe/Riga","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1944 Oct 13"},{"name":"Europe/Riga","_offset":"3:00","_rule":"Russia","format":"MSK/MSD","_until":"1989 Mar lastSun 2:00s"},{"name":"Europe/Riga","_offset":"2:00","_rule":"1:00","format":"EEST","_until":"1989 Sep lastSun 2:00s"},{"name":"Europe/Riga","_offset":"2:00","_rule":"Latvia","format":"EE%sT","_until":"1997 Jan 21"},{"name":"Europe/Riga","_offset":"2:00","_rule":"EU","format":"EE%sT","_until":"2000 Feb 29"},{"name":"Europe/Riga","_offset":"2:00","_rule":"-","format":"EET","_until":"2001 Jan 2"},{"name":"Europe/Riga","_offset":"2:00","_rule":"EU","format":"EE%sT","_until":""}],"Europe/Vaduz":[{"name":"Europe/Vaduz","_offset":"0:38:04","_rule":"-","format":"LMT","_until":"1894 Jun"},{"name":"Europe/Vaduz","_offset":"1:00","_rule":"-","format":"CET","_until":"1981"},{"name":"Europe/Vaduz","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Europe/Vilnius":[{"name":"Europe/Vilnius","_offset":"1:41:16","_rule":"-","format":"LMT","_until":"1880"},{"name":"Europe/Vilnius","_offset":"1:24:00","_rule":"-","format":"WMT","_until":"1917"},{"name":"Europe/Vilnius","_offset":"1:35:36","_rule":"-","format":"KMT","_until":"1919 Oct 10"},{"name":"Europe/Vilnius","_offset":"1:00","_rule":"-","format":"CET","_until":"1920 Jul 12"},{"name":"Europe/Vilnius","_offset":"2:00","_rule":"-","format":"EET","_until":"1920 Oct 9"},{"name":"Europe/Vilnius","_offset":"1:00","_rule":"-","format":"CET","_until":"1940 Aug 3"},{"name":"Europe/Vilnius","_offset":"3:00","_rule":"-","format":"MSK","_until":"1941 Jun 24"},{"name":"Europe/Vilnius","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1944 Aug"},{"name":"Europe/Vilnius","_offset":"3:00","_rule":"Russia","format":"MSK/MSD","_until":"1991 Mar 31 2:00s"},{"name":"Europe/Vilnius","_offset":"2:00","_rule":"1:00","format":"EEST","_until":"1991 Sep 29 2:00s"},{"name":"Europe/Vilnius","_offset":"2:00","_rule":"C-Eur","format":"EE%sT","_until":"1998"},{"name":"Europe/Vilnius","_offset":"2:00","_rule":"-","format":"EET","_until":"1998 Mar 29 1:00u"},{"name":"Europe/Vilnius","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":"1999 Oct 31 1:00u"},{"name":"Europe/Vilnius","_offset":"2:00","_rule":"-","format":"EET","_until":"2003 Jan 1"},{"name":"Europe/Vilnius","_offset":"2:00","_rule":"EU","format":"EE%sT","_until":""}],"Europe/Luxembourg":[{"name":"Europe/Luxembourg","_offset":"0:24:36","_rule":"-","format":"LMT","_until":"1904 Jun"},{"name":"Europe/Luxembourg","_offset":"1:00","_rule":"Lux","format":"CE%sT","_until":"1918 Nov 25"},{"name":"Europe/Luxembourg","_offset":"0:00","_rule":"Lux","format":"WE%sT","_until":"1929 Oct 6 2:00s"},{"name":"Europe/Luxembourg","_offset":"0:00","_rule":"Belgium","format":"WE%sT","_until":"1940 May 14 3:00"},{"name":"Europe/Luxembourg","_offset":"1:00","_rule":"C-Eur","format":"WE%sT","_until":"1944 Sep 18 3:00"},{"name":"Europe/Luxembourg","_offset":"1:00","_rule":"Belgium","format":"CE%sT","_until":"1977"},{"name":"Europe/Luxembourg","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Europe/Malta":[{"name":"Europe/Malta","_offset":"0:58:04","_rule":"-","format":"LMT","_until":"1893 Nov 2 0:00s"},{"name":"Europe/Malta","_offset":"1:00","_rule":"Italy","format":"CE%sT","_until":"1942 Nov 2 2:00s"},{"name":"Europe/Malta","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1945 Apr 2 2:00s"},{"name":"Europe/Malta","_offset":"1:00","_rule":"Italy","format":"CE%sT","_until":"1973 Mar 31"},{"name":"Europe/Malta","_offset":"1:00","_rule":"Malta","format":"CE%sT","_until":"1981"},{"name":"Europe/Malta","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Europe/Chisinau":[{"name":"Europe/Chisinau","_offset":"1:55:20","_rule":"-","format":"LMT","_until":"1880"},{"name":"Europe/Chisinau","_offset":"1:55","_rule":"-","format":"CMT","_until":"1918 Feb 15"},{"name":"Europe/Chisinau","_offset":"1:44:24","_rule":"-","format":"BMT","_until":"1931 Jul 24"},{"name":"Europe/Chisinau","_offset":"2:00","_rule":"Romania","format":"EE%sT","_until":"1940 Aug 15"},{"name":"Europe/Chisinau","_offset":"2:00","_rule":"1:00","format":"EEST","_until":"1941 Jul 17"},{"name":"Europe/Chisinau","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1944 Aug 24"},{"name":"Europe/Chisinau","_offset":"3:00","_rule":"Russia","format":"MSK/MSD","_until":"1990"},{"name":"Europe/Chisinau","_offset":"3:00","_rule":"-","format":"MSK","_until":"1990 May 6"},{"name":"Europe/Chisinau","_offset":"2:00","_rule":"-","format":"EET","_until":"1991"},{"name":"Europe/Chisinau","_offset":"2:00","_rule":"Russia","format":"EE%sT","_until":"1992"},{"name":"Europe/Chisinau","_offset":"2:00","_rule":"E-Eur","format":"EE%sT","_until":"1997"},{"name":"Europe/Chisinau","_offset":"2:00","_rule":"EU","format":"EE%sT","_until":""}],"Europe/Monaco":[{"name":"Europe/Monaco","_offset":"0:29:32","_rule":"-","format":"LMT","_until":"1891 Mar 15"},{"name":"Europe/Monaco","_offset":"0:09:21","_rule":"-","format":"PMT","_until":"1911 Mar 11"},{"name":"Europe/Monaco","_offset":"0:00","_rule":"France","format":"WE%sT","_until":"1945 Sep 16 3:00"},{"name":"Europe/Monaco","_offset":"1:00","_rule":"France","format":"CE%sT","_until":"1977"},{"name":"Europe/Monaco","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Europe/Amsterdam":[{"name":"Europe/Amsterdam","_offset":"0:19:32","_rule":"-","format":"LMT","_until":"1835"},{"name":"Europe/Amsterdam","_offset":"0:19:32","_rule":"Neth","format":"%s","_until":"1937 Jul 1"},{"name":"Europe/Amsterdam","_offset":"0:20","_rule":"Neth","format":"NE%sT","_until":"1940 May 16 0:00"},{"name":"Europe/Amsterdam","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1945 Apr 2 2:00"},{"name":"Europe/Amsterdam","_offset":"1:00","_rule":"Neth","format":"CE%sT","_until":"1977"},{"name":"Europe/Amsterdam","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Europe/Oslo":[{"name":"Europe/Oslo","_offset":"0:43:00","_rule":"-","format":"LMT","_until":"1895 Jan 1"},{"name":"Europe/Oslo","_offset":"1:00","_rule":"Norway","format":"CE%sT","_until":"1940 Aug 10 23:00"},{"name":"Europe/Oslo","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1945 Apr 2 2:00"},{"name":"Europe/Oslo","_offset":"1:00","_rule":"Norway","format":"CE%sT","_until":"1980"},{"name":"Europe/Oslo","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Europe/Warsaw":[{"name":"Europe/Warsaw","_offset":"1:24:00","_rule":"-","format":"LMT","_until":"1880"},{"name":"Europe/Warsaw","_offset":"1:24:00","_rule":"-","format":"WMT","_until":"1915 Aug 5"},{"name":"Europe/Warsaw","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1918 Sep 16 3:00"},{"name":"Europe/Warsaw","_offset":"2:00","_rule":"Poland","format":"EE%sT","_until":"1922 Jun"},{"name":"Europe/Warsaw","_offset":"1:00","_rule":"Poland","format":"CE%sT","_until":"1940 Jun 23 2:00"},{"name":"Europe/Warsaw","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1944 Oct"},{"name":"Europe/Warsaw","_offset":"1:00","_rule":"Poland","format":"CE%sT","_until":"1977"},{"name":"Europe/Warsaw","_offset":"1:00","_rule":"W-Eur","format":"CE%sT","_until":"1988"},{"name":"Europe/Warsaw","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Europe/Lisbon":[{"name":"Europe/Lisbon","_offset":"-0:36:32","_rule":"-","format":"LMT","_until":"1884"},{"name":"Europe/Lisbon","_offset":"-0:36:32","_rule":"-","format":"LMT","_until":"1912 Jan 1"},{"name":"Europe/Lisbon","_offset":"0:00","_rule":"Port","format":"WE%sT","_until":"1966 Apr 3 2:00"},{"name":"Europe/Lisbon","_offset":"1:00","_rule":"-","format":"CET","_until":"1976 Sep 26 1:00"},{"name":"Europe/Lisbon","_offset":"0:00","_rule":"Port","format":"WE%sT","_until":"1983 Sep 25 1:00s"},{"name":"Europe/Lisbon","_offset":"0:00","_rule":"W-Eur","format":"WE%sT","_until":"1992 Sep 27 1:00s"},{"name":"Europe/Lisbon","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":"1996 Mar 31 1:00u"},{"name":"Europe/Lisbon","_offset":"0:00","_rule":"EU","format":"WE%sT","_until":""}],"Atlantic/Azores":[{"name":"Atlantic/Azores","_offset":"-1:42:40","_rule":"-","format":"LMT","_until":"1884"},{"name":"Atlantic/Azores","_offset":"-1:54:32","_rule":"-","format":"HMT","_until":"1911 May 24"},{"name":"Atlantic/Azores","_offset":"-2:00","_rule":"Port","format":"AZO%sT","_until":"1966 Apr 3 2:00"},{"name":"Atlantic/Azores","_offset":"-1:00","_rule":"Port","format":"AZO%sT","_until":"1983 Sep 25 1:00s"},{"name":"Atlantic/Azores","_offset":"-1:00","_rule":"W-Eur","format":"AZO%sT","_until":"1992 Sep 27 1:00s"},{"name":"Atlantic/Azores","_offset":"0:00","_rule":"EU","format":"WE%sT","_until":"1993 Mar 28 1:00u"},{"name":"Atlantic/Azores","_offset":"-1:00","_rule":"EU","format":"AZO%sT","_until":""}],"Atlantic/Madeira":[{"name":"Atlantic/Madeira","_offset":"-1:07:36","_rule":"-","format":"LMT","_until":"1884"},{"name":"Atlantic/Madeira","_offset":"-1:07:36","_rule":"-","format":"FMT","_until":"1911 May 24"},{"name":"Atlantic/Madeira","_offset":"-1:00","_rule":"Port","format":"MAD%sT","_until":"1966 Apr 3 2:00"},{"name":"Atlantic/Madeira","_offset":"0:00","_rule":"Port","format":"WE%sT","_until":"1983 Sep 25 1:00s"},{"name":"Atlantic/Madeira","_offset":"0:00","_rule":"EU","format":"WE%sT","_until":""}],"Europe/Bucharest":[{"name":"Europe/Bucharest","_offset":"1:44:24","_rule":"-","format":"LMT","_until":"1891 Oct"},{"name":"Europe/Bucharest","_offset":"1:44:24","_rule":"-","format":"BMT","_until":"1931 Jul 24"},{"name":"Europe/Bucharest","_offset":"2:00","_rule":"Romania","format":"EE%sT","_until":"1981 Mar 29 2:00s"},{"name":"Europe/Bucharest","_offset":"2:00","_rule":"C-Eur","format":"EE%sT","_until":"1991"},{"name":"Europe/Bucharest","_offset":"2:00","_rule":"Romania","format":"EE%sT","_until":"1994"},{"name":"Europe/Bucharest","_offset":"2:00","_rule":"E-Eur","format":"EE%sT","_until":"1997"},{"name":"Europe/Bucharest","_offset":"2:00","_rule":"EU","format":"EE%sT","_until":""}],"Europe/Kaliningrad":[{"name":"Europe/Kaliningrad","_offset":"1:22:00","_rule":"-","format":"LMT","_until":"1893 Apr"},{"name":"Europe/Kaliningrad","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1945"},{"name":"Europe/Kaliningrad","_offset":"2:00","_rule":"Poland","format":"CE%sT","_until":"1946"},{"name":"Europe/Kaliningrad","_offset":"3:00","_rule":"Russia","format":"MSK/MSD","_until":"1991 Mar 31 2:00s"},{"name":"Europe/Kaliningrad","_offset":"2:00","_rule":"Russia","format":"EE%sT","_until":"2011 Mar 27 2:00s"},{"name":"Europe/Kaliningrad","_offset":"3:00","_rule":"-","format":"FET","_until":""}],"Europe/Moscow":[{"name":"Europe/Moscow","_offset":"2:30:20","_rule":"-","format":"LMT","_until":"1880"},{"name":"Europe/Moscow","_offset":"2:30","_rule":"-","format":"MMT","_until":"1916 Jul 3"},{"name":"Europe/Moscow","_offset":"2:30:48","_rule":"Russia","format":"%s","_until":"1919 Jul 1 2:00"},{"name":"Europe/Moscow","_offset":"3:00","_rule":"Russia","format":"MSK/MSD","_until":"1922 Oct"},{"name":"Europe/Moscow","_offset":"2:00","_rule":"-","format":"EET","_until":"1930 Jun 21"},{"name":"Europe/Moscow","_offset":"3:00","_rule":"Russia","format":"MSK/MSD","_until":"1991 Mar 31 2:00s"},{"name":"Europe/Moscow","_offset":"2:00","_rule":"Russia","format":"EE%sT","_until":"1992 Jan 19 2:00s"},{"name":"Europe/Moscow","_offset":"3:00","_rule":"Russia","format":"MSK/MSD","_until":"2011 Mar 27 2:00s"},{"name":"Europe/Moscow","_offset":"4:00","_rule":"-","format":"MSK","_until":""}],"Europe/Volgograd":[{"name":"Europe/Volgograd","_offset":"2:57:40","_rule":"-","format":"LMT","_until":"1920 Jan 3"},{"name":"Europe/Volgograd","_offset":"3:00","_rule":"-","format":"TSAT","_until":"1925 Apr 6"},{"name":"Europe/Volgograd","_offset":"3:00","_rule":"-","format":"STAT","_until":"1930 Jun 21"},{"name":"Europe/Volgograd","_offset":"4:00","_rule":"-","format":"STAT","_until":"1961 Nov 11"},{"name":"Europe/Volgograd","_offset":"4:00","_rule":"Russia","format":"VOL%sT","_until":"1989 Mar 26 2:00s"},{"name":"Europe/Volgograd","_offset":"3:00","_rule":"Russia","format":"VOL%sT","_until":"1991 Mar 31 2:00s"},{"name":"Europe/Volgograd","_offset":"4:00","_rule":"-","format":"VOLT","_until":"1992 Mar 29 2:00s"},{"name":"Europe/Volgograd","_offset":"3:00","_rule":"Russia","format":"VOL%sT","_until":"2011 Mar 27 2:00s"},{"name":"Europe/Volgograd","_offset":"4:00","_rule":"-","format":"VOLT","_until":""}],"Europe/Samara":[{"name":"Europe/Samara","_offset":"3:20:36","_rule":"-","format":"LMT","_until":"1919 Jul 1 2:00"},{"name":"Europe/Samara","_offset":"3:00","_rule":"-","format":"SAMT","_until":"1930 Jun 21"},{"name":"Europe/Samara","_offset":"4:00","_rule":"-","format":"SAMT","_until":"1935 Jan 27"},{"name":"Europe/Samara","_offset":"4:00","_rule":"Russia","format":"KUY%sT","_until":"1989 Mar 26 2:00s"},{"name":"Europe/Samara","_offset":"3:00","_rule":"Russia","format":"KUY%sT","_until":"1991 Mar 31 2:00s"},{"name":"Europe/Samara","_offset":"2:00","_rule":"Russia","format":"KUY%sT","_until":"1991 Sep 29 2:00s"},{"name":"Europe/Samara","_offset":"3:00","_rule":"-","format":"KUYT","_until":"1991 Oct 20 3:00"},{"name":"Europe/Samara","_offset":"4:00","_rule":"Russia","format":"SAM%sT","_until":"2010 Mar 28 2:00s"},{"name":"Europe/Samara","_offset":"3:00","_rule":"Russia","format":"SAM%sT","_until":"2011 Mar 27 2:00s"},{"name":"Europe/Samara","_offset":"4:00","_rule":"-","format":"SAMT","_until":""}],"Asia/Yekaterinburg":[{"name":"Asia/Yekaterinburg","_offset":"4:02:24","_rule":"-","format":"LMT","_until":"1919 Jul 15 4:00"},{"name":"Asia/Yekaterinburg","_offset":"4:00","_rule":"-","format":"SVET","_until":"1930 Jun 21"},{"name":"Asia/Yekaterinburg","_offset":"5:00","_rule":"Russia","format":"SVE%sT","_until":"1991 Mar 31 2:00s"},{"name":"Asia/Yekaterinburg","_offset":"4:00","_rule":"Russia","format":"SVE%sT","_until":"1992 Jan 19 2:00s"},{"name":"Asia/Yekaterinburg","_offset":"5:00","_rule":"Russia","format":"YEK%sT","_until":"2011 Mar 27 2:00s"},{"name":"Asia/Yekaterinburg","_offset":"6:00","_rule":"-","format":"YEKT","_until":""}],"Asia/Omsk":[{"name":"Asia/Omsk","_offset":"4:53:36","_rule":"-","format":"LMT","_until":"1919 Nov 14"},{"name":"Asia/Omsk","_offset":"5:00","_rule":"-","format":"OMST","_until":"1930 Jun 21"},{"name":"Asia/Omsk","_offset":"6:00","_rule":"Russia","format":"OMS%sT","_until":"1991 Mar 31 2:00s"},{"name":"Asia/Omsk","_offset":"5:00","_rule":"Russia","format":"OMS%sT","_until":"1992 Jan 19 2:00s"},{"name":"Asia/Omsk","_offset":"6:00","_rule":"Russia","format":"OMS%sT","_until":"2011 Mar 27 2:00s"},{"name":"Asia/Omsk","_offset":"7:00","_rule":"-","format":"OMST","_until":""}],"Asia/Novosibirsk":[{"name":"Asia/Novosibirsk","_offset":"5:31:40","_rule":"-","format":"LMT","_until":"1919 Dec 14 6:00"},{"name":"Asia/Novosibirsk","_offset":"6:00","_rule":"-","format":"NOVT","_until":"1930 Jun 21"},{"name":"Asia/Novosibirsk","_offset":"7:00","_rule":"Russia","format":"NOV%sT","_until":"1991 Mar 31 2:00s"},{"name":"Asia/Novosibirsk","_offset":"6:00","_rule":"Russia","format":"NOV%sT","_until":"1992 Jan 19 2:00s"},{"name":"Asia/Novosibirsk","_offset":"7:00","_rule":"Russia","format":"NOV%sT","_until":"1993 May 23"},{"name":"Asia/Novosibirsk","_offset":"6:00","_rule":"Russia","format":"NOV%sT","_until":"2011 Mar 27 2:00s"},{"name":"Asia/Novosibirsk","_offset":"7:00","_rule":"-","format":"NOVT","_until":""}],"Asia/Novokuznetsk":[{"name":"Asia/Novokuznetsk","_offset":"5:48:48","_rule":"-","format":"NMT","_until":"1920 Jan 6"},{"name":"Asia/Novokuznetsk","_offset":"6:00","_rule":"-","format":"KRAT","_until":"1930 Jun 21"},{"name":"Asia/Novokuznetsk","_offset":"7:00","_rule":"Russia","format":"KRA%sT","_until":"1991 Mar 31 2:00s"},{"name":"Asia/Novokuznetsk","_offset":"6:00","_rule":"Russia","format":"KRA%sT","_until":"1992 Jan 19 2:00s"},{"name":"Asia/Novokuznetsk","_offset":"7:00","_rule":"Russia","format":"KRA%sT","_until":"2010 Mar 28 2:00s"},{"name":"Asia/Novokuznetsk","_offset":"6:00","_rule":"Russia","format":"NOV%sT","_until":"2011 Mar 27 2:00s"},{"name":"Asia/Novokuznetsk","_offset":"7:00","_rule":"-","format":"NOVT","_until":""}],"Asia/Krasnoyarsk":[{"name":"Asia/Krasnoyarsk","_offset":"6:11:20","_rule":"-","format":"LMT","_until":"1920 Jan 6"},{"name":"Asia/Krasnoyarsk","_offset":"6:00","_rule":"-","format":"KRAT","_until":"1930 Jun 21"},{"name":"Asia/Krasnoyarsk","_offset":"7:00","_rule":"Russia","format":"KRA%sT","_until":"1991 Mar 31 2:00s"},{"name":"Asia/Krasnoyarsk","_offset":"6:00","_rule":"Russia","format":"KRA%sT","_until":"1992 Jan 19 2:00s"},{"name":"Asia/Krasnoyarsk","_offset":"7:00","_rule":"Russia","format":"KRA%sT","_until":"2011 Mar 27 2:00s"},{"name":"Asia/Krasnoyarsk","_offset":"8:00","_rule":"-","format":"KRAT","_until":""}],"Asia/Irkutsk":[{"name":"Asia/Irkutsk","_offset":"6:57:20","_rule":"-","format":"LMT","_until":"1880"},{"name":"Asia/Irkutsk","_offset":"6:57:20","_rule":"-","format":"IMT","_until":"1920 Jan 25"},{"name":"Asia/Irkutsk","_offset":"7:00","_rule":"-","format":"IRKT","_until":"1930 Jun 21"},{"name":"Asia/Irkutsk","_offset":"8:00","_rule":"Russia","format":"IRK%sT","_until":"1991 Mar 31 2:00s"},{"name":"Asia/Irkutsk","_offset":"7:00","_rule":"Russia","format":"IRK%sT","_until":"1992 Jan 19 2:00s"},{"name":"Asia/Irkutsk","_offset":"8:00","_rule":"Russia","format":"IRK%sT","_until":"2011 Mar 27 2:00s"},{"name":"Asia/Irkutsk","_offset":"9:00","_rule":"-","format":"IRKT","_until":""}],"Asia/Yakutsk":[{"name":"Asia/Yakutsk","_offset":"8:38:40","_rule":"-","format":"LMT","_until":"1919 Dec 15"},{"name":"Asia/Yakutsk","_offset":"8:00","_rule":"-","format":"YAKT","_until":"1930 Jun 21"},{"name":"Asia/Yakutsk","_offset":"9:00","_rule":"Russia","format":"YAK%sT","_until":"1991 Mar 31 2:00s"},{"name":"Asia/Yakutsk","_offset":"8:00","_rule":"Russia","format":"YAK%sT","_until":"1992 Jan 19 2:00s"},{"name":"Asia/Yakutsk","_offset":"9:00","_rule":"Russia","format":"YAK%sT","_until":"2011 Mar 27 2:00s"},{"name":"Asia/Yakutsk","_offset":"10:00","_rule":"-","format":"YAKT","_until":""}],"Asia/Vladivostok":[{"name":"Asia/Vladivostok","_offset":"8:47:44","_rule":"-","format":"LMT","_until":"1922 Nov 15"},{"name":"Asia/Vladivostok","_offset":"9:00","_rule":"-","format":"VLAT","_until":"1930 Jun 21"},{"name":"Asia/Vladivostok","_offset":"10:00","_rule":"Russia","format":"VLA%sT","_until":"1991 Mar 31 2:00s"},{"name":"Asia/Vladivostok","_offset":"9:00","_rule":"Russia","format":"VLA%sST","_until":"1992 Jan 19 2:00s"},{"name":"Asia/Vladivostok","_offset":"10:00","_rule":"Russia","format":"VLA%sT","_until":"2011 Mar 27 2:00s"},{"name":"Asia/Vladivostok","_offset":"11:00","_rule":"-","format":"VLAT","_until":""}],"Asia/Khandyga":[{"name":"Asia/Khandyga","_offset":"9:02:13","_rule":"-","format":"LMT","_until":"1919 Dec 15"},{"name":"Asia/Khandyga","_offset":"8:00","_rule":"-","format":"YAKT","_until":"1930 Jun 21"},{"name":"Asia/Khandyga","_offset":"9:00","_rule":"Russia","format":"YAK%sT","_until":"1991 Mar 31 2:00s"},{"name":"Asia/Khandyga","_offset":"8:00","_rule":"Russia","format":"YAK%sT","_until":"1992 Jan 19 2:00s"},{"name":"Asia/Khandyga","_offset":"9:00","_rule":"Russia","format":"YAK%sT","_until":"2004"},{"name":"Asia/Khandyga","_offset":"10:00","_rule":"Russia","format":"VLA%sT","_until":"2011 Mar 27 2:00s"},{"name":"Asia/Khandyga","_offset":"11:00","_rule":"-","format":"VLAT","_until":"2011 Sep 13 0:00s"},{"name":"Asia/Khandyga","_offset":"10:00","_rule":"-","format":"YAKT","_until":""}],"Asia/Sakhalin":[{"name":"Asia/Sakhalin","_offset":"9:30:48","_rule":"-","format":"LMT","_until":"1905 Aug 23"},{"name":"Asia/Sakhalin","_offset":"9:00","_rule":"-","format":"CJT","_until":"1938"},{"name":"Asia/Sakhalin","_offset":"9:00","_rule":"-","format":"JST","_until":"1945 Aug 25"},{"name":"Asia/Sakhalin","_offset":"11:00","_rule":"Russia","format":"SAK%sT","_until":"1991 Mar 31 2:00s"},{"name":"Asia/Sakhalin","_offset":"10:00","_rule":"Russia","format":"SAK%sT","_until":"1992 Jan 19 2:00s"},{"name":"Asia/Sakhalin","_offset":"11:00","_rule":"Russia","format":"SAK%sT","_until":"1997 Mar lastSun 2:00s"},{"name":"Asia/Sakhalin","_offset":"10:00","_rule":"Russia","format":"SAK%sT","_until":"2011 Mar 27 2:00s"},{"name":"Asia/Sakhalin","_offset":"11:00","_rule":"-","format":"SAKT","_until":""}],"Asia/Magadan":[{"name":"Asia/Magadan","_offset":"10:03:12","_rule":"-","format":"LMT","_until":"1924 May 2"},{"name":"Asia/Magadan","_offset":"10:00","_rule":"-","format":"MAGT","_until":"1930 Jun 21"},{"name":"Asia/Magadan","_offset":"11:00","_rule":"Russia","format":"MAG%sT","_until":"1991 Mar 31 2:00s"},{"name":"Asia/Magadan","_offset":"10:00","_rule":"Russia","format":"MAG%sT","_until":"1992 Jan 19 2:00s"},{"name":"Asia/Magadan","_offset":"11:00","_rule":"Russia","format":"MAG%sT","_until":"2011 Mar 27 2:00s"},{"name":"Asia/Magadan","_offset":"12:00","_rule":"-","format":"MAGT","_until":""}],"Asia/Ust-Nera":[{"name":"Asia/Ust-Nera","_offset":"9:32:54","_rule":"-","format":"LMT","_until":"1919 Dec 15"},{"name":"Asia/Ust-Nera","_offset":"8:00","_rule":"-","format":"YAKT","_until":"1930 Jun 21"},{"name":"Asia/Ust-Nera","_offset":"9:00","_rule":"Russia","format":"YAKT","_until":"1981 Apr 1"},{"name":"Asia/Ust-Nera","_offset":"11:00","_rule":"Russia","format":"MAG%sT","_until":"1991 Mar 31 2:00s"},{"name":"Asia/Ust-Nera","_offset":"10:00","_rule":"Russia","format":"MAG%sT","_until":"1992 Jan 19 2:00s"},{"name":"Asia/Ust-Nera","_offset":"11:00","_rule":"Russia","format":"MAG%sT","_until":"2011 Mar 27 2:00s"},{"name":"Asia/Ust-Nera","_offset":"12:00","_rule":"-","format":"MAGT","_until":"2011 Sep 13 0:00s"},{"name":"Asia/Ust-Nera","_offset":"11:00","_rule":"-","format":"VLAT","_until":""}],"Asia/Kamchatka":[{"name":"Asia/Kamchatka","_offset":"10:34:36","_rule":"-","format":"LMT","_until":"1922 Nov 10"},{"name":"Asia/Kamchatka","_offset":"11:00","_rule":"-","format":"PETT","_until":"1930 Jun 21"},{"name":"Asia/Kamchatka","_offset":"12:00","_rule":"Russia","format":"PET%sT","_until":"1991 Mar 31 2:00s"},{"name":"Asia/Kamchatka","_offset":"11:00","_rule":"Russia","format":"PET%sT","_until":"1992 Jan 19 2:00s"},{"name":"Asia/Kamchatka","_offset":"12:00","_rule":"Russia","format":"PET%sT","_until":"2010 Mar 28 2:00s"},{"name":"Asia/Kamchatka","_offset":"11:00","_rule":"Russia","format":"PET%sT","_until":"2011 Mar 27 2:00s"},{"name":"Asia/Kamchatka","_offset":"12:00","_rule":"-","format":"PETT","_until":""}],"Asia/Anadyr":[{"name":"Asia/Anadyr","_offset":"11:49:56","_rule":"-","format":"LMT","_until":"1924 May 2"},{"name":"Asia/Anadyr","_offset":"12:00","_rule":"-","format":"ANAT","_until":"1930 Jun 21"},{"name":"Asia/Anadyr","_offset":"13:00","_rule":"Russia","format":"ANA%sT","_until":"1982 Apr 1 0:00s"},{"name":"Asia/Anadyr","_offset":"12:00","_rule":"Russia","format":"ANA%sT","_until":"1991 Mar 31 2:00s"},{"name":"Asia/Anadyr","_offset":"11:00","_rule":"Russia","format":"ANA%sT","_until":"1992 Jan 19 2:00s"},{"name":"Asia/Anadyr","_offset":"12:00","_rule":"Russia","format":"ANA%sT","_until":"2010 Mar 28 2:00s"},{"name":"Asia/Anadyr","_offset":"11:00","_rule":"Russia","format":"ANA%sT","_until":"2011 Mar 27 2:00s"},{"name":"Asia/Anadyr","_offset":"12:00","_rule":"-","format":"ANAT","_until":""}],"Europe/Belgrade":[{"name":"Europe/Belgrade","_offset":"1:22:00","_rule":"-","format":"LMT","_until":"1884"},{"name":"Europe/Belgrade","_offset":"1:00","_rule":"-","format":"CET","_until":"1941 Apr 18 23:00"},{"name":"Europe/Belgrade","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1945"},{"name":"Europe/Belgrade","_offset":"1:00","_rule":"-","format":"CET","_until":"1945 May 8 2:00s"},{"name":"Europe/Belgrade","_offset":"1:00","_rule":"1:00","format":"CEST","_until":"1945 Sep 16 2:00s"},{"name":"Europe/Belgrade","_offset":"1:00","_rule":"-","format":"CET","_until":"1982 Nov 27"},{"name":"Europe/Belgrade","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Europe/Madrid":[{"name":"Europe/Madrid","_offset":"-0:14:44","_rule":"-","format":"LMT","_until":"1901 Jan 1 0:00s"},{"name":"Europe/Madrid","_offset":"0:00","_rule":"Spain","format":"WE%sT","_until":"1946 Sep 30"},{"name":"Europe/Madrid","_offset":"1:00","_rule":"Spain","format":"CE%sT","_until":"1979"},{"name":"Europe/Madrid","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Africa/Ceuta":[{"name":"Africa/Ceuta","_offset":"-0:21:16","_rule":"-","format":"LMT","_until":"1901"},{"name":"Africa/Ceuta","_offset":"0:00","_rule":"-","format":"WET","_until":"1918 May 6 23:00"},{"name":"Africa/Ceuta","_offset":"0:00","_rule":"1:00","format":"WEST","_until":"1918 Oct 7 23:00"},{"name":"Africa/Ceuta","_offset":"0:00","_rule":"-","format":"WET","_until":"1924"},{"name":"Africa/Ceuta","_offset":"0:00","_rule":"Spain","format":"WE%sT","_until":"1929"},{"name":"Africa/Ceuta","_offset":"0:00","_rule":"SpainAfrica","format":"WE%sT","_until":"1984 Mar 16"},{"name":"Africa/Ceuta","_offset":"1:00","_rule":"-","format":"CET","_until":"1986"},{"name":"Africa/Ceuta","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Atlantic/Canary":[{"name":"Atlantic/Canary","_offset":"-1:01:36","_rule":"-","format":"LMT","_until":"1922 Mar"},{"name":"Atlantic/Canary","_offset":"-1:00","_rule":"-","format":"CANT","_until":"1946 Sep 30 1:00"},{"name":"Atlantic/Canary","_offset":"0:00","_rule":"-","format":"WET","_until":"1980 Apr 6 0:00s"},{"name":"Atlantic/Canary","_offset":"0:00","_rule":"1:00","format":"WEST","_until":"1980 Sep 28 0:00s"},{"name":"Atlantic/Canary","_offset":"0:00","_rule":"EU","format":"WE%sT","_until":""}],"Europe/Stockholm":[{"name":"Europe/Stockholm","_offset":"1:12:12","_rule":"-","format":"LMT","_until":"1879 Jan 1"},{"name":"Europe/Stockholm","_offset":"1:00:14","_rule":"-","format":"SET","_until":"1900 Jan 1"},{"name":"Europe/Stockholm","_offset":"1:00","_rule":"-","format":"CET","_until":"1916 May 14 23:00"},{"name":"Europe/Stockholm","_offset":"1:00","_rule":"1:00","format":"CEST","_until":"1916 Oct 1 01:00"},{"name":"Europe/Stockholm","_offset":"1:00","_rule":"-","format":"CET","_until":"1980"},{"name":"Europe/Stockholm","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Europe/Zurich":[{"name":"Europe/Zurich","_offset":"0:34:08","_rule":"-","format":"LMT","_until":"1848 Sep 12"},{"name":"Europe/Zurich","_offset":"0:29:44","_rule":"-","format":"BMT","_until":"1894 Jun"},{"name":"Europe/Zurich","_offset":"1:00","_rule":"Swiss","format":"CE%sT","_until":"1981"},{"name":"Europe/Zurich","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Europe/Istanbul":[{"name":"Europe/Istanbul","_offset":"1:55:52","_rule":"-","format":"LMT","_until":"1880"},{"name":"Europe/Istanbul","_offset":"1:56:56","_rule":"-","format":"IMT","_until":"1910 Oct"},{"name":"Europe/Istanbul","_offset":"2:00","_rule":"Turkey","format":"EE%sT","_until":"1978 Oct 15"},{"name":"Europe/Istanbul","_offset":"3:00","_rule":"Turkey","format":"TR%sT","_until":"1985 Apr 20"},{"name":"Europe/Istanbul","_offset":"2:00","_rule":"Turkey","format":"EE%sT","_until":"2007"},{"name":"Europe/Istanbul","_offset":"2:00","_rule":"EU","format":"EE%sT","_until":"2011 Mar 27 1:00u"},{"name":"Europe/Istanbul","_offset":"2:00","_rule":"-","format":"EET","_until":"2011 Mar 28 1:00u"},{"name":"Europe/Istanbul","_offset":"2:00","_rule":"EU","format":"EE%sT","_until":""}],"Europe/Kiev":[{"name":"Europe/Kiev","_offset":"2:02:04","_rule":"-","format":"LMT","_until":"1880"},{"name":"Europe/Kiev","_offset":"2:02:04","_rule":"-","format":"KMT","_until":"1924 May 2"},{"name":"Europe/Kiev","_offset":"2:00","_rule":"-","format":"EET","_until":"1930 Jun 21"},{"name":"Europe/Kiev","_offset":"3:00","_rule":"-","format":"MSK","_until":"1941 Sep 20"},{"name":"Europe/Kiev","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1943 Nov 6"},{"name":"Europe/Kiev","_offset":"3:00","_rule":"Russia","format":"MSK/MSD","_until":"1990"},{"name":"Europe/Kiev","_offset":"3:00","_rule":"-","format":"MSK","_until":"1990 Jul 1 2:00"},{"name":"Europe/Kiev","_offset":"2:00","_rule":"-","format":"EET","_until":"1992"},{"name":"Europe/Kiev","_offset":"2:00","_rule":"E-Eur","format":"EE%sT","_until":"1995"},{"name":"Europe/Kiev","_offset":"2:00","_rule":"EU","format":"EE%sT","_until":""}],"Europe/Uzhgorod":[{"name":"Europe/Uzhgorod","_offset":"1:29:12","_rule":"-","format":"LMT","_until":"1890 Oct"},{"name":"Europe/Uzhgorod","_offset":"1:00","_rule":"-","format":"CET","_until":"1940"},{"name":"Europe/Uzhgorod","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1944 Oct"},{"name":"Europe/Uzhgorod","_offset":"1:00","_rule":"1:00","format":"CEST","_until":"1944 Oct 26"},{"name":"Europe/Uzhgorod","_offset":"1:00","_rule":"-","format":"CET","_until":"1945 Jun 29"},{"name":"Europe/Uzhgorod","_offset":"3:00","_rule":"Russia","format":"MSK/MSD","_until":"1990"},{"name":"Europe/Uzhgorod","_offset":"3:00","_rule":"-","format":"MSK","_until":"1990 Jul 1 2:00"},{"name":"Europe/Uzhgorod","_offset":"1:00","_rule":"-","format":"CET","_until":"1991 Mar 31 3:00"},{"name":"Europe/Uzhgorod","_offset":"2:00","_rule":"-","format":"EET","_until":"1992"},{"name":"Europe/Uzhgorod","_offset":"2:00","_rule":"E-Eur","format":"EE%sT","_until":"1995"},{"name":"Europe/Uzhgorod","_offset":"2:00","_rule":"EU","format":"EE%sT","_until":""}],"Europe/Zaporozhye":[{"name":"Europe/Zaporozhye","_offset":"2:20:40","_rule":"-","format":"LMT","_until":"1880"},{"name":"Europe/Zaporozhye","_offset":"2:20","_rule":"-","format":"CUT","_until":"1924 May 2"},{"name":"Europe/Zaporozhye","_offset":"2:00","_rule":"-","format":"EET","_until":"1930 Jun 21"},{"name":"Europe/Zaporozhye","_offset":"3:00","_rule":"-","format":"MSK","_until":"1941 Aug 25"},{"name":"Europe/Zaporozhye","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1943 Oct 25"},{"name":"Europe/Zaporozhye","_offset":"3:00","_rule":"Russia","format":"MSK/MSD","_until":"1991 Mar 31 2:00"},{"name":"Europe/Zaporozhye","_offset":"2:00","_rule":"E-Eur","format":"EE%sT","_until":"1995"},{"name":"Europe/Zaporozhye","_offset":"2:00","_rule":"EU","format":"EE%sT","_until":""}],"Europe/Simferopol":[{"name":"Europe/Simferopol","_offset":"2:16:24","_rule":"-","format":"LMT","_until":"1880"},{"name":"Europe/Simferopol","_offset":"2:16","_rule":"-","format":"SMT","_until":"1924 May 2"},{"name":"Europe/Simferopol","_offset":"2:00","_rule":"-","format":"EET","_until":"1930 Jun 21"},{"name":"Europe/Simferopol","_offset":"3:00","_rule":"-","format":"MSK","_until":"1941 Nov"},{"name":"Europe/Simferopol","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1944 Apr 13"},{"name":"Europe/Simferopol","_offset":"3:00","_rule":"Russia","format":"MSK/MSD","_until":"1990"},{"name":"Europe/Simferopol","_offset":"3:00","_rule":"-","format":"MSK","_until":"1990 Jul 1 2:00"},{"name":"Europe/Simferopol","_offset":"2:00","_rule":"-","format":"EET","_until":"1992"},{"name":"Europe/Simferopol","_offset":"2:00","_rule":"E-Eur","format":"EE%sT","_until":"1994 May"},{"name":"Europe/Simferopol","_offset":"3:00","_rule":"E-Eur","format":"MSK/MSD","_until":"1996 Mar 31 3:00s"},{"name":"Europe/Simferopol","_offset":"3:00","_rule":"1:00","format":"MSD","_until":"1996 Oct 27 3:00s"},{"name":"Europe/Simferopol","_offset":"3:00","_rule":"Russia","format":"MSK/MSD","_until":"1997"},{"name":"Europe/Simferopol","_offset":"3:00","_rule":"-","format":"MSK","_until":"1997 Mar lastSun 1:00u"},{"name":"Europe/Simferopol","_offset":"2:00","_rule":"EU","format":"EE%sT","_until":""}],"Factory":[],"EST":[{"name":"EST","_offset":"-5:00","_rule":"-","format":"EST","_until":""}],"MST":[{"name":"MST","_offset":"-7:00","_rule":"-","format":"MST","_until":""}],"HST":[{"name":"HST","_offset":"-10:00","_rule":"-","format":"HST","_until":""}],"EST5EDT":[{"name":"EST5EDT","_offset":"-5:00","_rule":"US","format":"E%sT","_until":""}],"CST6CDT":[{"name":"CST6CDT","_offset":"-6:00","_rule":"US","format":"C%sT","_until":""}],"MST7MDT":[{"name":"MST7MDT","_offset":"-7:00","_rule":"US","format":"M%sT","_until":""}],"PST8PDT":[{"name":"PST8PDT","_offset":"-8:00","_rule":"US","format":"P%sT","_until":""}],"America/New_York":[{"name":"America/New_York","_offset":"-4:56:02","_rule":"-","format":"LMT","_until":"1883 Nov 18 12:03:58"},{"name":"America/New_York","_offset":"-5:00","_rule":"US","format":"E%sT","_until":"1920"},{"name":"America/New_York","_offset":"-5:00","_rule":"NYC","format":"E%sT","_until":"1942"},{"name":"America/New_York","_offset":"-5:00","_rule":"US","format":"E%sT","_until":"1946"},{"name":"America/New_York","_offset":"-5:00","_rule":"NYC","format":"E%sT","_until":"1967"},{"name":"America/New_York","_offset":"-5:00","_rule":"US","format":"E%sT","_until":""}],"America/Chicago":[{"name":"America/Chicago","_offset":"-5:50:36","_rule":"-","format":"LMT","_until":"1883 Nov 18 12:09:24"},{"name":"America/Chicago","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"1920"},{"name":"America/Chicago","_offset":"-6:00","_rule":"Chicago","format":"C%sT","_until":"1936 Mar 1 2:00"},{"name":"America/Chicago","_offset":"-5:00","_rule":"-","format":"EST","_until":"1936 Nov 15 2:00"},{"name":"America/Chicago","_offset":"-6:00","_rule":"Chicago","format":"C%sT","_until":"1942"},{"name":"America/Chicago","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"1946"},{"name":"America/Chicago","_offset":"-6:00","_rule":"Chicago","format":"C%sT","_until":"1967"},{"name":"America/Chicago","_offset":"-6:00","_rule":"US","format":"C%sT","_until":""}],"America/North_Dakota/Center":[{"name":"America/North_Dakota/Center","_offset":"-6:45:12","_rule":"-","format":"LMT","_until":"1883 Nov 18 12:14:48"},{"name":"America/North_Dakota/Center","_offset":"-7:00","_rule":"US","format":"M%sT","_until":"1992 Oct 25 02:00"},{"name":"America/North_Dakota/Center","_offset":"-6:00","_rule":"US","format":"C%sT","_until":""}],"America/North_Dakota/New_Salem":[{"name":"America/North_Dakota/New_Salem","_offset":"-6:45:39","_rule":"-","format":"LMT","_until":"1883 Nov 18 12:14:21"},{"name":"America/North_Dakota/New_Salem","_offset":"-7:00","_rule":"US","format":"M%sT","_until":"2003 Oct 26 02:00"},{"name":"America/North_Dakota/New_Salem","_offset":"-6:00","_rule":"US","format":"C%sT","_until":""}],"America/North_Dakota/Beulah":[{"name":"America/North_Dakota/Beulah","_offset":"-6:47:07","_rule":"-","format":"LMT","_until":"1883 Nov 18 12:12:53"},{"name":"America/North_Dakota/Beulah","_offset":"-7:00","_rule":"US","format":"M%sT","_until":"2010 Nov 7 2:00"},{"name":"America/North_Dakota/Beulah","_offset":"-6:00","_rule":"US","format":"C%sT","_until":""}],"America/Denver":[{"name":"America/Denver","_offset":"-6:59:56","_rule":"-","format":"LMT","_until":"1883 Nov 18 12:00:04"},{"name":"America/Denver","_offset":"-7:00","_rule":"US","format":"M%sT","_until":"1920"},{"name":"America/Denver","_offset":"-7:00","_rule":"Denver","format":"M%sT","_until":"1942"},{"name":"America/Denver","_offset":"-7:00","_rule":"US","format":"M%sT","_until":"1946"},{"name":"America/Denver","_offset":"-7:00","_rule":"Denver","format":"M%sT","_until":"1967"},{"name":"America/Denver","_offset":"-7:00","_rule":"US","format":"M%sT","_until":""}],"America/Los_Angeles":[{"name":"America/Los_Angeles","_offset":"-7:52:58","_rule":"-","format":"LMT","_until":"1883 Nov 18 12:07:02"},{"name":"America/Los_Angeles","_offset":"-8:00","_rule":"US","format":"P%sT","_until":"1946"},{"name":"America/Los_Angeles","_offset":"-8:00","_rule":"CA","format":"P%sT","_until":"1967"},{"name":"America/Los_Angeles","_offset":"-8:00","_rule":"US","format":"P%sT","_until":""}],"America/Juneau":[{"name":"America/Juneau","_offset":"15:02:19","_rule":"-","format":"LMT","_until":"1867 Oct 18"},{"name":"America/Juneau","_offset":"-8:57:41","_rule":"-","format":"LMT","_until":"1900 Aug 20 12:00"},{"name":"America/Juneau","_offset":"-8:00","_rule":"-","format":"PST","_until":"1942"},{"name":"America/Juneau","_offset":"-8:00","_rule":"US","format":"P%sT","_until":"1946"},{"name":"America/Juneau","_offset":"-8:00","_rule":"-","format":"PST","_until":"1969"},{"name":"America/Juneau","_offset":"-8:00","_rule":"US","format":"P%sT","_until":"1980 Apr 27 2:00"},{"name":"America/Juneau","_offset":"-9:00","_rule":"US","format":"Y%sT","_until":"1980 Oct 26 2:00"},{"name":"America/Juneau","_offset":"-8:00","_rule":"US","format":"P%sT","_until":"1983 Oct 30 2:00"},{"name":"America/Juneau","_offset":"-9:00","_rule":"US","format":"Y%sT","_until":"1983 Nov 30"},{"name":"America/Juneau","_offset":"-9:00","_rule":"US","format":"AK%sT","_until":""}],"America/Sitka":[{"name":"America/Sitka","_offset":"14:58:47","_rule":"-","format":"LMT","_until":"1867 Oct 18"},{"name":"America/Sitka","_offset":"-9:01:13","_rule":"-","format":"LMT","_until":"1900 Aug 20 12:00"},{"name":"America/Sitka","_offset":"-8:00","_rule":"-","format":"PST","_until":"1942"},{"name":"America/Sitka","_offset":"-8:00","_rule":"US","format":"P%sT","_until":"1946"},{"name":"America/Sitka","_offset":"-8:00","_rule":"-","format":"PST","_until":"1969"},{"name":"America/Sitka","_offset":"-8:00","_rule":"US","format":"P%sT","_until":"1983 Oct 30 2:00"},{"name":"America/Sitka","_offset":"-9:00","_rule":"US","format":"Y%sT","_until":"1983 Nov 30"},{"name":"America/Sitka","_offset":"-9:00","_rule":"US","format":"AK%sT","_until":""}],"America/Metlakatla":[{"name":"America/Metlakatla","_offset":"15:13:42","_rule":"-","format":"LMT","_until":"1867 Oct 18"},{"name":"America/Metlakatla","_offset":"-8:46:18","_rule":"-","format":"LMT","_until":"1900 Aug 20 12:00"},{"name":"America/Metlakatla","_offset":"-8:00","_rule":"-","format":"PST","_until":"1942"},{"name":"America/Metlakatla","_offset":"-8:00","_rule":"US","format":"P%sT","_until":"1946"},{"name":"America/Metlakatla","_offset":"-8:00","_rule":"-","format":"PST","_until":"1969"},{"name":"America/Metlakatla","_offset":"-8:00","_rule":"US","format":"P%sT","_until":"1983 Oct 30 2:00"},{"name":"America/Metlakatla","_offset":"-8:00","_rule":"-","format":"MeST","_until":""}],"America/Yakutat":[{"name":"America/Yakutat","_offset":"14:41:05","_rule":"-","format":"LMT","_until":"1867 Oct 18"},{"name":"America/Yakutat","_offset":"-9:18:55","_rule":"-","format":"LMT","_until":"1900 Aug 20 12:00"},{"name":"America/Yakutat","_offset":"-9:00","_rule":"-","format":"YST","_until":"1942"},{"name":"America/Yakutat","_offset":"-9:00","_rule":"US","format":"Y%sT","_until":"1946"},{"name":"America/Yakutat","_offset":"-9:00","_rule":"-","format":"YST","_until":"1969"},{"name":"America/Yakutat","_offset":"-9:00","_rule":"US","format":"Y%sT","_until":"1983 Nov 30"},{"name":"America/Yakutat","_offset":"-9:00","_rule":"US","format":"AK%sT","_until":""}],"America/Anchorage":[{"name":"America/Anchorage","_offset":"14:00:24","_rule":"-","format":"LMT","_until":"1867 Oct 18"},{"name":"America/Anchorage","_offset":"-9:59:36","_rule":"-","format":"LMT","_until":"1900 Aug 20 12:00"},{"name":"America/Anchorage","_offset":"-10:00","_rule":"-","format":"CAT","_until":"1942"},{"name":"America/Anchorage","_offset":"-10:00","_rule":"US","format":"CAT/CAWT","_until":"1945 Aug 14 23:00u"},{"name":"America/Anchorage","_offset":"-10:00","_rule":"US","format":"CAT/CAPT","_until":"1946"},{"name":"America/Anchorage","_offset":"-10:00","_rule":"-","format":"CAT","_until":"1967 Apr"},{"name":"America/Anchorage","_offset":"-10:00","_rule":"-","format":"AHST","_until":"1969"},{"name":"America/Anchorage","_offset":"-10:00","_rule":"US","format":"AH%sT","_until":"1983 Oct 30 2:00"},{"name":"America/Anchorage","_offset":"-9:00","_rule":"US","format":"Y%sT","_until":"1983 Nov 30"},{"name":"America/Anchorage","_offset":"-9:00","_rule":"US","format":"AK%sT","_until":""}],"America/Nome":[{"name":"America/Nome","_offset":"12:58:21","_rule":"-","format":"LMT","_until":"1867 Oct 18"},{"name":"America/Nome","_offset":"-11:01:38","_rule":"-","format":"LMT","_until":"1900 Aug 20 12:00"},{"name":"America/Nome","_offset":"-11:00","_rule":"-","format":"NST","_until":"1942"},{"name":"America/Nome","_offset":"-11:00","_rule":"US","format":"N%sT","_until":"1946"},{"name":"America/Nome","_offset":"-11:00","_rule":"-","format":"NST","_until":"1967 Apr"},{"name":"America/Nome","_offset":"-11:00","_rule":"-","format":"BST","_until":"1969"},{"name":"America/Nome","_offset":"-11:00","_rule":"US","format":"B%sT","_until":"1983 Oct 30 2:00"},{"name":"America/Nome","_offset":"-9:00","_rule":"US","format":"Y%sT","_until":"1983 Nov 30"},{"name":"America/Nome","_offset":"-9:00","_rule":"US","format":"AK%sT","_until":""}],"America/Adak":[{"name":"America/Adak","_offset":"12:13:21","_rule":"-","format":"LMT","_until":"1867 Oct 18"},{"name":"America/Adak","_offset":"-11:46:38","_rule":"-","format":"LMT","_until":"1900 Aug 20 12:00"},{"name":"America/Adak","_offset":"-11:00","_rule":"-","format":"NST","_until":"1942"},{"name":"America/Adak","_offset":"-11:00","_rule":"US","format":"N%sT","_until":"1946"},{"name":"America/Adak","_offset":"-11:00","_rule":"-","format":"NST","_until":"1967 Apr"},{"name":"America/Adak","_offset":"-11:00","_rule":"-","format":"BST","_until":"1969"},{"name":"America/Adak","_offset":"-11:00","_rule":"US","format":"B%sT","_until":"1983 Oct 30 2:00"},{"name":"America/Adak","_offset":"-10:00","_rule":"US","format":"AH%sT","_until":"1983 Nov 30"},{"name":"America/Adak","_offset":"-10:00","_rule":"US","format":"HA%sT","_until":""}],"Pacific/Honolulu":[{"name":"Pacific/Honolulu","_offset":"-10:31:26","_rule":"-","format":"LMT","_until":"1896 Jan 13 12:00"},{"name":"Pacific/Honolulu","_offset":"-10:30","_rule":"-","format":"HST","_until":"1933 Apr 30 2:00"},{"name":"Pacific/Honolulu","_offset":"-10:30","_rule":"1:00","format":"HDT","_until":"1933 May 21 12:00"},{"name":"Pacific/Honolulu","_offset":"-10:30","_rule":"-","format":"HST","_until":"1942 Feb 09 2:00"},{"name":"Pacific/Honolulu","_offset":"-10:30","_rule":"1:00","format":"HDT","_until":"1945 Sep 30 2:00"},{"name":"Pacific/Honolulu","_offset":"-10:30","_rule":"-","format":"HST","_until":"1947 Jun 8 2:00"},{"name":"Pacific/Honolulu","_offset":"-10:00","_rule":"-","format":"HST","_until":""}],"America/Phoenix":[{"name":"America/Phoenix","_offset":"-7:28:18","_rule":"-","format":"LMT","_until":"1883 Nov 18 11:31:42"},{"name":"America/Phoenix","_offset":"-7:00","_rule":"US","format":"M%sT","_until":"1944 Jan 1 00:01"},{"name":"America/Phoenix","_offset":"-7:00","_rule":"-","format":"MST","_until":"1944 Apr 1 00:01"},{"name":"America/Phoenix","_offset":"-7:00","_rule":"US","format":"M%sT","_until":"1944 Oct 1 00:01"},{"name":"America/Phoenix","_offset":"-7:00","_rule":"-","format":"MST","_until":"1967"},{"name":"America/Phoenix","_offset":"-7:00","_rule":"US","format":"M%sT","_until":"1968 Mar 21"},{"name":"America/Phoenix","_offset":"-7:00","_rule":"-","format":"MST","_until":""}],"America/Boise":[{"name":"America/Boise","_offset":"-7:44:49","_rule":"-","format":"LMT","_until":"1883 Nov 18 12:15:11"},{"name":"America/Boise","_offset":"-8:00","_rule":"US","format":"P%sT","_until":"1923 May 13 2:00"},{"name":"America/Boise","_offset":"-7:00","_rule":"US","format":"M%sT","_until":"1974"},{"name":"America/Boise","_offset":"-7:00","_rule":"-","format":"MST","_until":"1974 Feb 3 2:00"},{"name":"America/Boise","_offset":"-7:00","_rule":"US","format":"M%sT","_until":""}],"America/Indiana/Indianapolis":[{"name":"America/Indiana/Indianapolis","_offset":"-5:44:38","_rule":"-","format":"LMT","_until":"1883 Nov 18 12:15:22"},{"name":"America/Indiana/Indianapolis","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"1920"},{"name":"America/Indiana/Indianapolis","_offset":"-6:00","_rule":"Indianapolis","format":"C%sT","_until":"1942"},{"name":"America/Indiana/Indianapolis","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"1946"},{"name":"America/Indiana/Indianapolis","_offset":"-6:00","_rule":"Indianapolis","format":"C%sT","_until":"1955 Apr 24 2:00"},{"name":"America/Indiana/Indianapolis","_offset":"-5:00","_rule":"-","format":"EST","_until":"1957 Sep 29 2:00"},{"name":"America/Indiana/Indianapolis","_offset":"-6:00","_rule":"-","format":"CST","_until":"1958 Apr 27 2:00"},{"name":"America/Indiana/Indianapolis","_offset":"-5:00","_rule":"-","format":"EST","_until":"1969"},{"name":"America/Indiana/Indianapolis","_offset":"-5:00","_rule":"US","format":"E%sT","_until":"1971"},{"name":"America/Indiana/Indianapolis","_offset":"-5:00","_rule":"-","format":"EST","_until":"2006"},{"name":"America/Indiana/Indianapolis","_offset":"-5:00","_rule":"US","format":"E%sT","_until":""}],"America/Indiana/Marengo":[{"name":"America/Indiana/Marengo","_offset":"-5:45:23","_rule":"-","format":"LMT","_until":"1883 Nov 18 12:14:37"},{"name":"America/Indiana/Marengo","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"1951"},{"name":"America/Indiana/Marengo","_offset":"-6:00","_rule":"Marengo","format":"C%sT","_until":"1961 Apr 30 2:00"},{"name":"America/Indiana/Marengo","_offset":"-5:00","_rule":"-","format":"EST","_until":"1969"},{"name":"America/Indiana/Marengo","_offset":"-5:00","_rule":"US","format":"E%sT","_until":"1974 Jan 6 2:00"},{"name":"America/Indiana/Marengo","_offset":"-6:00","_rule":"1:00","format":"CDT","_until":"1974 Oct 27 2:00"},{"name":"America/Indiana/Marengo","_offset":"-5:00","_rule":"US","format":"E%sT","_until":"1976"},{"name":"America/Indiana/Marengo","_offset":"-5:00","_rule":"-","format":"EST","_until":"2006"},{"name":"America/Indiana/Marengo","_offset":"-5:00","_rule":"US","format":"E%sT","_until":""}],"America/Indiana/Vincennes":[{"name":"America/Indiana/Vincennes","_offset":"-5:50:07","_rule":"-","format":"LMT","_until":"1883 Nov 18 12:09:53"},{"name":"America/Indiana/Vincennes","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"1946"},{"name":"America/Indiana/Vincennes","_offset":"-6:00","_rule":"Vincennes","format":"C%sT","_until":"1964 Apr 26 2:00"},{"name":"America/Indiana/Vincennes","_offset":"-5:00","_rule":"-","format":"EST","_until":"1969"},{"name":"America/Indiana/Vincennes","_offset":"-5:00","_rule":"US","format":"E%sT","_until":"1971"},{"name":"America/Indiana/Vincennes","_offset":"-5:00","_rule":"-","format":"EST","_until":"2006 Apr 2 2:00"},{"name":"America/Indiana/Vincennes","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"2007 Nov 4 2:00"},{"name":"America/Indiana/Vincennes","_offset":"-5:00","_rule":"US","format":"E%sT","_until":""}],"America/Indiana/Tell_City":[{"name":"America/Indiana/Tell_City","_offset":"-5:47:03","_rule":"-","format":"LMT","_until":"1883 Nov 18 12:12:57"},{"name":"America/Indiana/Tell_City","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"1946"},{"name":"America/Indiana/Tell_City","_offset":"-6:00","_rule":"Perry","format":"C%sT","_until":"1964 Apr 26 2:00"},{"name":"America/Indiana/Tell_City","_offset":"-5:00","_rule":"-","format":"EST","_until":"1969"},{"name":"America/Indiana/Tell_City","_offset":"-5:00","_rule":"US","format":"E%sT","_until":"1971"},{"name":"America/Indiana/Tell_City","_offset":"-5:00","_rule":"-","format":"EST","_until":"2006 Apr 2 2:00"},{"name":"America/Indiana/Tell_City","_offset":"-6:00","_rule":"US","format":"C%sT","_until":""}],"America/Indiana/Petersburg":[{"name":"America/Indiana/Petersburg","_offset":"-5:49:07","_rule":"-","format":"LMT","_until":"1883 Nov 18 12:10:53"},{"name":"America/Indiana/Petersburg","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"1955"},{"name":"America/Indiana/Petersburg","_offset":"-6:00","_rule":"Pike","format":"C%sT","_until":"1965 Apr 25 2:00"},{"name":"America/Indiana/Petersburg","_offset":"-5:00","_rule":"-","format":"EST","_until":"1966 Oct 30 2:00"},{"name":"America/Indiana/Petersburg","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"1977 Oct 30 2:00"},{"name":"America/Indiana/Petersburg","_offset":"-5:00","_rule":"-","format":"EST","_until":"2006 Apr 2 2:00"},{"name":"America/Indiana/Petersburg","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"2007 Nov 4 2:00"},{"name":"America/Indiana/Petersburg","_offset":"-5:00","_rule":"US","format":"E%sT","_until":""}],"America/Indiana/Knox":[{"name":"America/Indiana/Knox","_offset":"-5:46:30","_rule":"-","format":"LMT","_until":"1883 Nov 18 12:13:30"},{"name":"America/Indiana/Knox","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"1947"},{"name":"America/Indiana/Knox","_offset":"-6:00","_rule":"Starke","format":"C%sT","_until":"1962 Apr 29 2:00"},{"name":"America/Indiana/Knox","_offset":"-5:00","_rule":"-","format":"EST","_until":"1963 Oct 27 2:00"},{"name":"America/Indiana/Knox","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"1991 Oct 27 2:00"},{"name":"America/Indiana/Knox","_offset":"-5:00","_rule":"-","format":"EST","_until":"2006 Apr 2 2:00"},{"name":"America/Indiana/Knox","_offset":"-6:00","_rule":"US","format":"C%sT","_until":""}],"America/Indiana/Winamac":[{"name":"America/Indiana/Winamac","_offset":"-5:46:25","_rule":"-","format":"LMT","_until":"1883 Nov 18 12:13:35"},{"name":"America/Indiana/Winamac","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"1946"},{"name":"America/Indiana/Winamac","_offset":"-6:00","_rule":"Pulaski","format":"C%sT","_until":"1961 Apr 30 2:00"},{"name":"America/Indiana/Winamac","_offset":"-5:00","_rule":"-","format":"EST","_until":"1969"},{"name":"America/Indiana/Winamac","_offset":"-5:00","_rule":"US","format":"E%sT","_until":"1971"},{"name":"America/Indiana/Winamac","_offset":"-5:00","_rule":"-","format":"EST","_until":"2006 Apr 2 2:00"},{"name":"America/Indiana/Winamac","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"2007 Mar 11 2:00"},{"name":"America/Indiana/Winamac","_offset":"-5:00","_rule":"US","format":"E%sT","_until":""}],"America/Indiana/Vevay":[{"name":"America/Indiana/Vevay","_offset":"-5:40:16","_rule":"-","format":"LMT","_until":"1883 Nov 18 12:19:44"},{"name":"America/Indiana/Vevay","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"1954 Apr 25 2:00"},{"name":"America/Indiana/Vevay","_offset":"-5:00","_rule":"-","format":"EST","_until":"1969"},{"name":"America/Indiana/Vevay","_offset":"-5:00","_rule":"US","format":"E%sT","_until":"1973"},{"name":"America/Indiana/Vevay","_offset":"-5:00","_rule":"-","format":"EST","_until":"2006"},{"name":"America/Indiana/Vevay","_offset":"-5:00","_rule":"US","format":"E%sT","_until":""}],"America/Kentucky/Louisville":[{"name":"America/Kentucky/Louisville","_offset":"-5:43:02","_rule":"-","format":"LMT","_until":"1883 Nov 18 12:16:58"},{"name":"America/Kentucky/Louisville","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"1921"},{"name":"America/Kentucky/Louisville","_offset":"-6:00","_rule":"Louisville","format":"C%sT","_until":"1942"},{"name":"America/Kentucky/Louisville","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"1946"},{"name":"America/Kentucky/Louisville","_offset":"-6:00","_rule":"Louisville","format":"C%sT","_until":"1961 Jul 23 2:00"},{"name":"America/Kentucky/Louisville","_offset":"-5:00","_rule":"-","format":"EST","_until":"1968"},{"name":"America/Kentucky/Louisville","_offset":"-5:00","_rule":"US","format":"E%sT","_until":"1974 Jan 6 2:00"},{"name":"America/Kentucky/Louisville","_offset":"-6:00","_rule":"1:00","format":"CDT","_until":"1974 Oct 27 2:00"},{"name":"America/Kentucky/Louisville","_offset":"-5:00","_rule":"US","format":"E%sT","_until":""}],"America/Kentucky/Monticello":[{"name":"America/Kentucky/Monticello","_offset":"-5:39:24","_rule":"-","format":"LMT","_until":"1883 Nov 18 12:20:36"},{"name":"America/Kentucky/Monticello","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"1946"},{"name":"America/Kentucky/Monticello","_offset":"-6:00","_rule":"-","format":"CST","_until":"1968"},{"name":"America/Kentucky/Monticello","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"2000 Oct 29 2:00"},{"name":"America/Kentucky/Monticello","_offset":"-5:00","_rule":"US","format":"E%sT","_until":""}],"America/Detroit":[{"name":"America/Detroit","_offset":"-5:32:11","_rule":"-","format":"LMT","_until":"1905"},{"name":"America/Detroit","_offset":"-6:00","_rule":"-","format":"CST","_until":"1915 May 15 2:00"},{"name":"America/Detroit","_offset":"-5:00","_rule":"-","format":"EST","_until":"1942"},{"name":"America/Detroit","_offset":"-5:00","_rule":"US","format":"E%sT","_until":"1946"},{"name":"America/Detroit","_offset":"-5:00","_rule":"Detroit","format":"E%sT","_until":"1973"},{"name":"America/Detroit","_offset":"-5:00","_rule":"US","format":"E%sT","_until":"1975"},{"name":"America/Detroit","_offset":"-5:00","_rule":"-","format":"EST","_until":"1975 Apr 27 2:00"},{"name":"America/Detroit","_offset":"-5:00","_rule":"US","format":"E%sT","_until":""}],"America/Menominee":[{"name":"America/Menominee","_offset":"-5:50:27","_rule":"-","format":"LMT","_until":"1885 Sep 18 12:00"},{"name":"America/Menominee","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"1946"},{"name":"America/Menominee","_offset":"-6:00","_rule":"Menominee","format":"C%sT","_until":"1969 Apr 27 2:00"},{"name":"America/Menominee","_offset":"-5:00","_rule":"-","format":"EST","_until":"1973 Apr 29 2:00"},{"name":"America/Menominee","_offset":"-6:00","_rule":"US","format":"C%sT","_until":""}],"America/St_Johns":[{"name":"America/St_Johns","_offset":"-3:30:52","_rule":"-","format":"LMT","_until":"1884"},{"name":"America/St_Johns","_offset":"-3:30:52","_rule":"StJohns","format":"N%sT","_until":"1918"},{"name":"America/St_Johns","_offset":"-3:30:52","_rule":"Canada","format":"N%sT","_until":"1919"},{"name":"America/St_Johns","_offset":"-3:30:52","_rule":"StJohns","format":"N%sT","_until":"1935 Mar 30"},{"name":"America/St_Johns","_offset":"-3:30","_rule":"StJohns","format":"N%sT","_until":"1942 May 11"},{"name":"America/St_Johns","_offset":"-3:30","_rule":"Canada","format":"N%sT","_until":"1946"},{"name":"America/St_Johns","_offset":"-3:30","_rule":"StJohns","format":"N%sT","_until":"2011 Nov"},{"name":"America/St_Johns","_offset":"-3:30","_rule":"Canada","format":"N%sT","_until":""}],"America/Goose_Bay":[{"name":"America/Goose_Bay","_offset":"-4:01:40","_rule":"-","format":"LMT","_until":"1884"},{"name":"America/Goose_Bay","_offset":"-3:30:52","_rule":"-","format":"NST","_until":"1918"},{"name":"America/Goose_Bay","_offset":"-3:30:52","_rule":"Canada","format":"N%sT","_until":"1919"},{"name":"America/Goose_Bay","_offset":"-3:30:52","_rule":"-","format":"NST","_until":"1935 Mar 30"},{"name":"America/Goose_Bay","_offset":"-3:30","_rule":"-","format":"NST","_until":"1936"},{"name":"America/Goose_Bay","_offset":"-3:30","_rule":"StJohns","format":"N%sT","_until":"1942 May 11"},{"name":"America/Goose_Bay","_offset":"-3:30","_rule":"Canada","format":"N%sT","_until":"1946"},{"name":"America/Goose_Bay","_offset":"-3:30","_rule":"StJohns","format":"N%sT","_until":"1966 Mar 15 2:00"},{"name":"America/Goose_Bay","_offset":"-4:00","_rule":"StJohns","format":"A%sT","_until":"2011 Nov"},{"name":"America/Goose_Bay","_offset":"-4:00","_rule":"Canada","format":"A%sT","_until":""}],"America/Halifax":[{"name":"America/Halifax","_offset":"-4:14:24","_rule":"-","format":"LMT","_until":"1902 Jun 15"},{"name":"America/Halifax","_offset":"-4:00","_rule":"Halifax","format":"A%sT","_until":"1918"},{"name":"America/Halifax","_offset":"-4:00","_rule":"Canada","format":"A%sT","_until":"1919"},{"name":"America/Halifax","_offset":"-4:00","_rule":"Halifax","format":"A%sT","_until":"1942 Feb 9 2:00s"},{"name":"America/Halifax","_offset":"-4:00","_rule":"Canada","format":"A%sT","_until":"1946"},{"name":"America/Halifax","_offset":"-4:00","_rule":"Halifax","format":"A%sT","_until":"1974"},{"name":"America/Halifax","_offset":"-4:00","_rule":"Canada","format":"A%sT","_until":""}],"America/Glace_Bay":[{"name":"America/Glace_Bay","_offset":"-3:59:48","_rule":"-","format":"LMT","_until":"1902 Jun 15"},{"name":"America/Glace_Bay","_offset":"-4:00","_rule":"Canada","format":"A%sT","_until":"1953"},{"name":"America/Glace_Bay","_offset":"-4:00","_rule":"Halifax","format":"A%sT","_until":"1954"},{"name":"America/Glace_Bay","_offset":"-4:00","_rule":"-","format":"AST","_until":"1972"},{"name":"America/Glace_Bay","_offset":"-4:00","_rule":"Halifax","format":"A%sT","_until":"1974"},{"name":"America/Glace_Bay","_offset":"-4:00","_rule":"Canada","format":"A%sT","_until":""}],"America/Moncton":[{"name":"America/Moncton","_offset":"-4:19:08","_rule":"-","format":"LMT","_until":"1883 Dec 9"},{"name":"America/Moncton","_offset":"-5:00","_rule":"-","format":"EST","_until":"1902 Jun 15"},{"name":"America/Moncton","_offset":"-4:00","_rule":"Canada","format":"A%sT","_until":"1933"},{"name":"America/Moncton","_offset":"-4:00","_rule":"Moncton","format":"A%sT","_until":"1942"},{"name":"America/Moncton","_offset":"-4:00","_rule":"Canada","format":"A%sT","_until":"1946"},{"name":"America/Moncton","_offset":"-4:00","_rule":"Moncton","format":"A%sT","_until":"1973"},{"name":"America/Moncton","_offset":"-4:00","_rule":"Canada","format":"A%sT","_until":"1993"},{"name":"America/Moncton","_offset":"-4:00","_rule":"Moncton","format":"A%sT","_until":"2007"},{"name":"America/Moncton","_offset":"-4:00","_rule":"Canada","format":"A%sT","_until":""}],"America/Blanc-Sablon":[{"name":"America/Blanc-Sablon","_offset":"-3:48:28","_rule":"-","format":"LMT","_until":"1884"},{"name":"America/Blanc-Sablon","_offset":"-4:00","_rule":"Canada","format":"A%sT","_until":"1970"},{"name":"America/Blanc-Sablon","_offset":"-4:00","_rule":"-","format":"AST","_until":""}],"America/Montreal":[{"name":"America/Montreal","_offset":"-4:54:16","_rule":"-","format":"LMT","_until":"1884"},{"name":"America/Montreal","_offset":"-5:00","_rule":"Mont","format":"E%sT","_until":"1918"},{"name":"America/Montreal","_offset":"-5:00","_rule":"Canada","format":"E%sT","_until":"1919"},{"name":"America/Montreal","_offset":"-5:00","_rule":"Mont","format":"E%sT","_until":"1942 Feb 9 2:00s"},{"name":"America/Montreal","_offset":"-5:00","_rule":"Canada","format":"E%sT","_until":"1946"},{"name":"America/Montreal","_offset":"-5:00","_rule":"Mont","format":"E%sT","_until":"1974"},{"name":"America/Montreal","_offset":"-5:00","_rule":"Canada","format":"E%sT","_until":""}],"America/Toronto":[{"name":"America/Toronto","_offset":"-5:17:32","_rule":"-","format":"LMT","_until":"1895"},{"name":"America/Toronto","_offset":"-5:00","_rule":"Canada","format":"E%sT","_until":"1919"},{"name":"America/Toronto","_offset":"-5:00","_rule":"Toronto","format":"E%sT","_until":"1942 Feb 9 2:00s"},{"name":"America/Toronto","_offset":"-5:00","_rule":"Canada","format":"E%sT","_until":"1946"},{"name":"America/Toronto","_offset":"-5:00","_rule":"Toronto","format":"E%sT","_until":"1974"},{"name":"America/Toronto","_offset":"-5:00","_rule":"Canada","format":"E%sT","_until":""}],"America/Thunder_Bay":[{"name":"America/Thunder_Bay","_offset":"-5:57:00","_rule":"-","format":"LMT","_until":"1895"},{"name":"America/Thunder_Bay","_offset":"-6:00","_rule":"-","format":"CST","_until":"1910"},{"name":"America/Thunder_Bay","_offset":"-5:00","_rule":"-","format":"EST","_until":"1942"},{"name":"America/Thunder_Bay","_offset":"-5:00","_rule":"Canada","format":"E%sT","_until":"1970"},{"name":"America/Thunder_Bay","_offset":"-5:00","_rule":"Mont","format":"E%sT","_until":"1973"},{"name":"America/Thunder_Bay","_offset":"-5:00","_rule":"-","format":"EST","_until":"1974"},{"name":"America/Thunder_Bay","_offset":"-5:00","_rule":"Canada","format":"E%sT","_until":""}],"America/Nipigon":[{"name":"America/Nipigon","_offset":"-5:53:04","_rule":"-","format":"LMT","_until":"1895"},{"name":"America/Nipigon","_offset":"-5:00","_rule":"Canada","format":"E%sT","_until":"1940 Sep 29"},{"name":"America/Nipigon","_offset":"-5:00","_rule":"1:00","format":"EDT","_until":"1942 Feb 9 2:00s"},{"name":"America/Nipigon","_offset":"-5:00","_rule":"Canada","format":"E%sT","_until":""}],"America/Rainy_River":[{"name":"America/Rainy_River","_offset":"-6:18:16","_rule":"-","format":"LMT","_until":"1895"},{"name":"America/Rainy_River","_offset":"-6:00","_rule":"Canada","format":"C%sT","_until":"1940 Sep 29"},{"name":"America/Rainy_River","_offset":"-6:00","_rule":"1:00","format":"CDT","_until":"1942 Feb 9 2:00s"},{"name":"America/Rainy_River","_offset":"-6:00","_rule":"Canada","format":"C%sT","_until":""}],"America/Atikokan":[{"name":"America/Atikokan","_offset":"-6:06:28","_rule":"-","format":"LMT","_until":"1895"},{"name":"America/Atikokan","_offset":"-6:00","_rule":"Canada","format":"C%sT","_until":"1940 Sep 29"},{"name":"America/Atikokan","_offset":"-6:00","_rule":"1:00","format":"CDT","_until":"1942 Feb 9 2:00s"},{"name":"America/Atikokan","_offset":"-6:00","_rule":"Canada","format":"C%sT","_until":"1945 Sep 30 2:00"},{"name":"America/Atikokan","_offset":"-5:00","_rule":"-","format":"EST","_until":""}],"America/Winnipeg":[{"name":"America/Winnipeg","_offset":"-6:28:36","_rule":"-","format":"LMT","_until":"1887 Jul 16"},{"name":"America/Winnipeg","_offset":"-6:00","_rule":"Winn","format":"C%sT","_until":"2006"},{"name":"America/Winnipeg","_offset":"-6:00","_rule":"Canada","format":"C%sT","_until":""}],"America/Regina":[{"name":"America/Regina","_offset":"-6:58:36","_rule":"-","format":"LMT","_until":"1905 Sep"},{"name":"America/Regina","_offset":"-7:00","_rule":"Regina","format":"M%sT","_until":"1960 Apr lastSun 2:00"},{"name":"America/Regina","_offset":"-6:00","_rule":"-","format":"CST","_until":""}],"America/Swift_Current":[{"name":"America/Swift_Current","_offset":"-7:11:20","_rule":"-","format":"LMT","_until":"1905 Sep"},{"name":"America/Swift_Current","_offset":"-7:00","_rule":"Canada","format":"M%sT","_until":"1946 Apr lastSun 2:00"},{"name":"America/Swift_Current","_offset":"-7:00","_rule":"Regina","format":"M%sT","_until":"1950"},{"name":"America/Swift_Current","_offset":"-7:00","_rule":"Swift","format":"M%sT","_until":"1972 Apr lastSun 2:00"},{"name":"America/Swift_Current","_offset":"-6:00","_rule":"-","format":"CST","_until":""}],"America/Edmonton":[{"name":"America/Edmonton","_offset":"-7:33:52","_rule":"-","format":"LMT","_until":"1906 Sep"},{"name":"America/Edmonton","_offset":"-7:00","_rule":"Edm","format":"M%sT","_until":"1987"},{"name":"America/Edmonton","_offset":"-7:00","_rule":"Canada","format":"M%sT","_until":""}],"America/Vancouver":[{"name":"America/Vancouver","_offset":"-8:12:28","_rule":"-","format":"LMT","_until":"1884"},{"name":"America/Vancouver","_offset":"-8:00","_rule":"Vanc","format":"P%sT","_until":"1987"},{"name":"America/Vancouver","_offset":"-8:00","_rule":"Canada","format":"P%sT","_until":""}],"America/Dawson_Creek":[{"name":"America/Dawson_Creek","_offset":"-8:00:56","_rule":"-","format":"LMT","_until":"1884"},{"name":"America/Dawson_Creek","_offset":"-8:00","_rule":"Canada","format":"P%sT","_until":"1947"},{"name":"America/Dawson_Creek","_offset":"-8:00","_rule":"Vanc","format":"P%sT","_until":"1972 Aug 30 2:00"},{"name":"America/Dawson_Creek","_offset":"-7:00","_rule":"-","format":"MST","_until":""}],"America/Creston":[{"name":"America/Creston","_offset":"-7:46:04","_rule":"-","format":"LMT","_until":"1884"},{"name":"America/Creston","_offset":"-7:00","_rule":"-","format":"MST","_until":"1916 Oct 1"},{"name":"America/Creston","_offset":"-8:00","_rule":"-","format":"PST","_until":"1918 Jun 2"},{"name":"America/Creston","_offset":"-7:00","_rule":"-","format":"MST","_until":""}],"America/Pangnirtung":[{"name":"America/Pangnirtung","_offset":"0","_rule":"-","format":"zzz","_until":"1921"},{"name":"America/Pangnirtung","_offset":"-4:00","_rule":"NT_YK","format":"A%sT","_until":"1995 Apr Sun>=1 2:00"},{"name":"America/Pangnirtung","_offset":"-5:00","_rule":"Canada","format":"E%sT","_until":"1999 Oct 31 2:00"},{"name":"America/Pangnirtung","_offset":"-6:00","_rule":"Canada","format":"C%sT","_until":"2000 Oct 29 2:00"},{"name":"America/Pangnirtung","_offset":"-5:00","_rule":"Canada","format":"E%sT","_until":""}],"America/Iqaluit":[{"name":"America/Iqaluit","_offset":"0","_rule":"-","format":"zzz","_until":"1942 Aug"},{"name":"America/Iqaluit","_offset":"-5:00","_rule":"NT_YK","format":"E%sT","_until":"1999 Oct 31 2:00"},{"name":"America/Iqaluit","_offset":"-6:00","_rule":"Canada","format":"C%sT","_until":"2000 Oct 29 2:00"},{"name":"America/Iqaluit","_offset":"-5:00","_rule":"Canada","format":"E%sT","_until":""}],"America/Resolute":[{"name":"America/Resolute","_offset":"0","_rule":"-","format":"zzz","_until":"1947 Aug 31"},{"name":"America/Resolute","_offset":"-6:00","_rule":"NT_YK","format":"C%sT","_until":"2000 Oct 29 2:00"},{"name":"America/Resolute","_offset":"-5:00","_rule":"-","format":"EST","_until":"2001 Apr 1 3:00"},{"name":"America/Resolute","_offset":"-6:00","_rule":"Canada","format":"C%sT","_until":"2006 Oct 29 2:00"},{"name":"America/Resolute","_offset":"-5:00","_rule":"-","format":"EST","_until":"2007 Mar 11 3:00"},{"name":"America/Resolute","_offset":"-6:00","_rule":"Canada","format":"C%sT","_until":""}],"America/Rankin_Inlet":[{"name":"America/Rankin_Inlet","_offset":"0","_rule":"-","format":"zzz","_until":"1957"},{"name":"America/Rankin_Inlet","_offset":"-6:00","_rule":"NT_YK","format":"C%sT","_until":"2000 Oct 29 2:00"},{"name":"America/Rankin_Inlet","_offset":"-5:00","_rule":"-","format":"EST","_until":"2001 Apr 1 3:00"},{"name":"America/Rankin_Inlet","_offset":"-6:00","_rule":"Canada","format":"C%sT","_until":""}],"America/Cambridge_Bay":[{"name":"America/Cambridge_Bay","_offset":"0","_rule":"-","format":"zzz","_until":"1920"},{"name":"America/Cambridge_Bay","_offset":"-7:00","_rule":"NT_YK","format":"M%sT","_until":"1999 Oct 31 2:00"},{"name":"America/Cambridge_Bay","_offset":"-6:00","_rule":"Canada","format":"C%sT","_until":"2000 Oct 29 2:00"},{"name":"America/Cambridge_Bay","_offset":"-5:00","_rule":"-","format":"EST","_until":"2000 Nov 5 0:00"},{"name":"America/Cambridge_Bay","_offset":"-6:00","_rule":"-","format":"CST","_until":"2001 Apr 1 3:00"},{"name":"America/Cambridge_Bay","_offset":"-7:00","_rule":"Canada","format":"M%sT","_until":""}],"America/Yellowknife":[{"name":"America/Yellowknife","_offset":"0","_rule":"-","format":"zzz","_until":"1935"},{"name":"America/Yellowknife","_offset":"-7:00","_rule":"NT_YK","format":"M%sT","_until":"1980"},{"name":"America/Yellowknife","_offset":"-7:00","_rule":"Canada","format":"M%sT","_until":""}],"America/Inuvik":[{"name":"America/Inuvik","_offset":"0","_rule":"-","format":"zzz","_until":"1953"},{"name":"America/Inuvik","_offset":"-8:00","_rule":"NT_YK","format":"P%sT","_until":"1979 Apr lastSun 2:00"},{"name":"America/Inuvik","_offset":"-7:00","_rule":"NT_YK","format":"M%sT","_until":"1980"},{"name":"America/Inuvik","_offset":"-7:00","_rule":"Canada","format":"M%sT","_until":""}],"America/Whitehorse":[{"name":"America/Whitehorse","_offset":"-9:00:12","_rule":"-","format":"LMT","_until":"1900 Aug 20"},{"name":"America/Whitehorse","_offset":"-9:00","_rule":"NT_YK","format":"Y%sT","_until":"1966 Jul 1 2:00"},{"name":"America/Whitehorse","_offset":"-8:00","_rule":"NT_YK","format":"P%sT","_until":"1980"},{"name":"America/Whitehorse","_offset":"-8:00","_rule":"Canada","format":"P%sT","_until":""}],"America/Dawson":[{"name":"America/Dawson","_offset":"-9:17:40","_rule":"-","format":"LMT","_until":"1900 Aug 20"},{"name":"America/Dawson","_offset":"-9:00","_rule":"NT_YK","format":"Y%sT","_until":"1973 Oct 28 0:00"},{"name":"America/Dawson","_offset":"-8:00","_rule":"NT_YK","format":"P%sT","_until":"1980"},{"name":"America/Dawson","_offset":"-8:00","_rule":"Canada","format":"P%sT","_until":""}],"America/Cancun":[{"name":"America/Cancun","_offset":"-5:47:04","_rule":"-","format":"LMT","_until":"1922 Jan 1 0:12:56"},{"name":"America/Cancun","_offset":"-6:00","_rule":"-","format":"CST","_until":"1981 Dec 23"},{"name":"America/Cancun","_offset":"-5:00","_rule":"Mexico","format":"E%sT","_until":"1998 Aug 2 2:00"},{"name":"America/Cancun","_offset":"-6:00","_rule":"Mexico","format":"C%sT","_until":""}],"America/Merida":[{"name":"America/Merida","_offset":"-5:58:28","_rule":"-","format":"LMT","_until":"1922 Jan 1 0:01:32"},{"name":"America/Merida","_offset":"-6:00","_rule":"-","format":"CST","_until":"1981 Dec 23"},{"name":"America/Merida","_offset":"-5:00","_rule":"-","format":"EST","_until":"1982 Dec 2"},{"name":"America/Merida","_offset":"-6:00","_rule":"Mexico","format":"C%sT","_until":""}],"America/Matamoros":[{"name":"America/Matamoros","_offset":"-6:40:00","_rule":"-","format":"LMT","_until":"1921 Dec 31 23:20:00"},{"name":"America/Matamoros","_offset":"-6:00","_rule":"-","format":"CST","_until":"1988"},{"name":"America/Matamoros","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"1989"},{"name":"America/Matamoros","_offset":"-6:00","_rule":"Mexico","format":"C%sT","_until":"2010"},{"name":"America/Matamoros","_offset":"-6:00","_rule":"US","format":"C%sT","_until":""}],"America/Monterrey":[{"name":"America/Monterrey","_offset":"-6:41:16","_rule":"-","format":"LMT","_until":"1921 Dec 31 23:18:44"},{"name":"America/Monterrey","_offset":"-6:00","_rule":"-","format":"CST","_until":"1988"},{"name":"America/Monterrey","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"1989"},{"name":"America/Monterrey","_offset":"-6:00","_rule":"Mexico","format":"C%sT","_until":""}],"America/Mexico_City":[{"name":"America/Mexico_City","_offset":"-6:36:36","_rule":"-","format":"LMT","_until":"1922 Jan 1 0:23:24"},{"name":"America/Mexico_City","_offset":"-7:00","_rule":"-","format":"MST","_until":"1927 Jun 10 23:00"},{"name":"America/Mexico_City","_offset":"-6:00","_rule":"-","format":"CST","_until":"1930 Nov 15"},{"name":"America/Mexico_City","_offset":"-7:00","_rule":"-","format":"MST","_until":"1931 May 1 23:00"},{"name":"America/Mexico_City","_offset":"-6:00","_rule":"-","format":"CST","_until":"1931 Oct"},{"name":"America/Mexico_City","_offset":"-7:00","_rule":"-","format":"MST","_until":"1932 Apr 1"},{"name":"America/Mexico_City","_offset":"-6:00","_rule":"Mexico","format":"C%sT","_until":"2001 Sep 30 02:00"},{"name":"America/Mexico_City","_offset":"-6:00","_rule":"-","format":"CST","_until":"2002 Feb 20"},{"name":"America/Mexico_City","_offset":"-6:00","_rule":"Mexico","format":"C%sT","_until":""}],"America/Ojinaga":[{"name":"America/Ojinaga","_offset":"-6:57:40","_rule":"-","format":"LMT","_until":"1922 Jan 1 0:02:20"},{"name":"America/Ojinaga","_offset":"-7:00","_rule":"-","format":"MST","_until":"1927 Jun 10 23:00"},{"name":"America/Ojinaga","_offset":"-6:00","_rule":"-","format":"CST","_until":"1930 Nov 15"},{"name":"America/Ojinaga","_offset":"-7:00","_rule":"-","format":"MST","_until":"1931 May 1 23:00"},{"name":"America/Ojinaga","_offset":"-6:00","_rule":"-","format":"CST","_until":"1931 Oct"},{"name":"America/Ojinaga","_offset":"-7:00","_rule":"-","format":"MST","_until":"1932 Apr 1"},{"name":"America/Ojinaga","_offset":"-6:00","_rule":"-","format":"CST","_until":"1996"},{"name":"America/Ojinaga","_offset":"-6:00","_rule":"Mexico","format":"C%sT","_until":"1998"},{"name":"America/Ojinaga","_offset":"-6:00","_rule":"-","format":"CST","_until":"1998 Apr Sun>=1 3:00"},{"name":"America/Ojinaga","_offset":"-7:00","_rule":"Mexico","format":"M%sT","_until":"2010"},{"name":"America/Ojinaga","_offset":"-7:00","_rule":"US","format":"M%sT","_until":""}],"America/Chihuahua":[{"name":"America/Chihuahua","_offset":"-7:04:20","_rule":"-","format":"LMT","_until":"1921 Dec 31 23:55:40"},{"name":"America/Chihuahua","_offset":"-7:00","_rule":"-","format":"MST","_until":"1927 Jun 10 23:00"},{"name":"America/Chihuahua","_offset":"-6:00","_rule":"-","format":"CST","_until":"1930 Nov 15"},{"name":"America/Chihuahua","_offset":"-7:00","_rule":"-","format":"MST","_until":"1931 May 1 23:00"},{"name":"America/Chihuahua","_offset":"-6:00","_rule":"-","format":"CST","_until":"1931 Oct"},{"name":"America/Chihuahua","_offset":"-7:00","_rule":"-","format":"MST","_until":"1932 Apr 1"},{"name":"America/Chihuahua","_offset":"-6:00","_rule":"-","format":"CST","_until":"1996"},{"name":"America/Chihuahua","_offset":"-6:00","_rule":"Mexico","format":"C%sT","_until":"1998"},{"name":"America/Chihuahua","_offset":"-6:00","_rule":"-","format":"CST","_until":"1998 Apr Sun>=1 3:00"},{"name":"America/Chihuahua","_offset":"-7:00","_rule":"Mexico","format":"M%sT","_until":""}],"America/Hermosillo":[{"name":"America/Hermosillo","_offset":"-7:23:52","_rule":"-","format":"LMT","_until":"1921 Dec 31 23:36:08"},{"name":"America/Hermosillo","_offset":"-7:00","_rule":"-","format":"MST","_until":"1927 Jun 10 23:00"},{"name":"America/Hermosillo","_offset":"-6:00","_rule":"-","format":"CST","_until":"1930 Nov 15"},{"name":"America/Hermosillo","_offset":"-7:00","_rule":"-","format":"MST","_until":"1931 May 1 23:00"},{"name":"America/Hermosillo","_offset":"-6:00","_rule":"-","format":"CST","_until":"1931 Oct"},{"name":"America/Hermosillo","_offset":"-7:00","_rule":"-","format":"MST","_until":"1932 Apr 1"},{"name":"America/Hermosillo","_offset":"-6:00","_rule":"-","format":"CST","_until":"1942 Apr 24"},{"name":"America/Hermosillo","_offset":"-7:00","_rule":"-","format":"MST","_until":"1949 Jan 14"},{"name":"America/Hermosillo","_offset":"-8:00","_rule":"-","format":"PST","_until":"1970"},{"name":"America/Hermosillo","_offset":"-7:00","_rule":"Mexico","format":"M%sT","_until":"1999"},{"name":"America/Hermosillo","_offset":"-7:00","_rule":"-","format":"MST","_until":""}],"America/Mazatlan":[{"name":"America/Mazatlan","_offset":"-7:05:40","_rule":"-","format":"LMT","_until":"1921 Dec 31 23:54:20"},{"name":"America/Mazatlan","_offset":"-7:00","_rule":"-","format":"MST","_until":"1927 Jun 10 23:00"},{"name":"America/Mazatlan","_offset":"-6:00","_rule":"-","format":"CST","_until":"1930 Nov 15"},{"name":"America/Mazatlan","_offset":"-7:00","_rule":"-","format":"MST","_until":"1931 May 1 23:00"},{"name":"America/Mazatlan","_offset":"-6:00","_rule":"-","format":"CST","_until":"1931 Oct"},{"name":"America/Mazatlan","_offset":"-7:00","_rule":"-","format":"MST","_until":"1932 Apr 1"},{"name":"America/Mazatlan","_offset":"-6:00","_rule":"-","format":"CST","_until":"1942 Apr 24"},{"name":"America/Mazatlan","_offset":"-7:00","_rule":"-","format":"MST","_until":"1949 Jan 14"},{"name":"America/Mazatlan","_offset":"-8:00","_rule":"-","format":"PST","_until":"1970"},{"name":"America/Mazatlan","_offset":"-7:00","_rule":"Mexico","format":"M%sT","_until":""}],"America/Bahia_Banderas":[{"name":"America/Bahia_Banderas","_offset":"-7:01:00","_rule":"-","format":"LMT","_until":"1921 Dec 31 23:59:00"},{"name":"America/Bahia_Banderas","_offset":"-7:00","_rule":"-","format":"MST","_until":"1927 Jun 10 23:00"},{"name":"America/Bahia_Banderas","_offset":"-6:00","_rule":"-","format":"CST","_until":"1930 Nov 15"},{"name":"America/Bahia_Banderas","_offset":"-7:00","_rule":"-","format":"MST","_until":"1931 May 1 23:00"},{"name":"America/Bahia_Banderas","_offset":"-6:00","_rule":"-","format":"CST","_until":"1931 Oct"},{"name":"America/Bahia_Banderas","_offset":"-7:00","_rule":"-","format":"MST","_until":"1932 Apr 1"},{"name":"America/Bahia_Banderas","_offset":"-6:00","_rule":"-","format":"CST","_until":"1942 Apr 24"},{"name":"America/Bahia_Banderas","_offset":"-7:00","_rule":"-","format":"MST","_until":"1949 Jan 14"},{"name":"America/Bahia_Banderas","_offset":"-8:00","_rule":"-","format":"PST","_until":"1970"},{"name":"America/Bahia_Banderas","_offset":"-7:00","_rule":"Mexico","format":"M%sT","_until":"2010 Apr 4 2:00"},{"name":"America/Bahia_Banderas","_offset":"-6:00","_rule":"Mexico","format":"C%sT","_until":""}],"America/Tijuana":[{"name":"America/Tijuana","_offset":"-7:48:04","_rule":"-","format":"LMT","_until":"1922 Jan 1 0:11:56"},{"name":"America/Tijuana","_offset":"-7:00","_rule":"-","format":"MST","_until":"1924"},{"name":"America/Tijuana","_offset":"-8:00","_rule":"-","format":"PST","_until":"1927 Jun 10 23:00"},{"name":"America/Tijuana","_offset":"-7:00","_rule":"-","format":"MST","_until":"1930 Nov 15"},{"name":"America/Tijuana","_offset":"-8:00","_rule":"-","format":"PST","_until":"1931 Apr 1"},{"name":"America/Tijuana","_offset":"-8:00","_rule":"1:00","format":"PDT","_until":"1931 Sep 30"},{"name":"America/Tijuana","_offset":"-8:00","_rule":"-","format":"PST","_until":"1942 Apr 24"},{"name":"America/Tijuana","_offset":"-8:00","_rule":"1:00","format":"PWT","_until":"1945 Aug 14 23:00u"},{"name":"America/Tijuana","_offset":"-8:00","_rule":"1:00","format":"PPT","_until":"1945 Nov 12"},{"name":"America/Tijuana","_offset":"-8:00","_rule":"-","format":"PST","_until":"1948 Apr 5"},{"name":"America/Tijuana","_offset":"-8:00","_rule":"1:00","format":"PDT","_until":"1949 Jan 14"},{"name":"America/Tijuana","_offset":"-8:00","_rule":"-","format":"PST","_until":"1954"},{"name":"America/Tijuana","_offset":"-8:00","_rule":"CA","format":"P%sT","_until":"1961"},{"name":"America/Tijuana","_offset":"-8:00","_rule":"-","format":"PST","_until":"1976"},{"name":"America/Tijuana","_offset":"-8:00","_rule":"US","format":"P%sT","_until":"1996"},{"name":"America/Tijuana","_offset":"-8:00","_rule":"Mexico","format":"P%sT","_until":"2001"},{"name":"America/Tijuana","_offset":"-8:00","_rule":"US","format":"P%sT","_until":"2002 Feb 20"},{"name":"America/Tijuana","_offset":"-8:00","_rule":"Mexico","format":"P%sT","_until":"2010"},{"name":"America/Tijuana","_offset":"-8:00","_rule":"US","format":"P%sT","_until":""}],"America/Santa_Isabel":[{"name":"America/Santa_Isabel","_offset":"-7:39:28","_rule":"-","format":"LMT","_until":"1922 Jan 1 0:20:32"},{"name":"America/Santa_Isabel","_offset":"-7:00","_rule":"-","format":"MST","_until":"1924"},{"name":"America/Santa_Isabel","_offset":"-8:00","_rule":"-","format":"PST","_until":"1927 Jun 10 23:00"},{"name":"America/Santa_Isabel","_offset":"-7:00","_rule":"-","format":"MST","_until":"1930 Nov 15"},{"name":"America/Santa_Isabel","_offset":"-8:00","_rule":"-","format":"PST","_until":"1931 Apr 1"},{"name":"America/Santa_Isabel","_offset":"-8:00","_rule":"1:00","format":"PDT","_until":"1931 Sep 30"},{"name":"America/Santa_Isabel","_offset":"-8:00","_rule":"-","format":"PST","_until":"1942 Apr 24"},{"name":"America/Santa_Isabel","_offset":"-8:00","_rule":"1:00","format":"PWT","_until":"1945 Aug 14 23:00u"},{"name":"America/Santa_Isabel","_offset":"-8:00","_rule":"1:00","format":"PPT","_until":"1945 Nov 12"},{"name":"America/Santa_Isabel","_offset":"-8:00","_rule":"-","format":"PST","_until":"1948 Apr 5"},{"name":"America/Santa_Isabel","_offset":"-8:00","_rule":"1:00","format":"PDT","_until":"1949 Jan 14"},{"name":"America/Santa_Isabel","_offset":"-8:00","_rule":"-","format":"PST","_until":"1954"},{"name":"America/Santa_Isabel","_offset":"-8:00","_rule":"CA","format":"P%sT","_until":"1961"},{"name":"America/Santa_Isabel","_offset":"-8:00","_rule":"-","format":"PST","_until":"1976"},{"name":"America/Santa_Isabel","_offset":"-8:00","_rule":"US","format":"P%sT","_until":"1996"},{"name":"America/Santa_Isabel","_offset":"-8:00","_rule":"Mexico","format":"P%sT","_until":"2001"},{"name":"America/Santa_Isabel","_offset":"-8:00","_rule":"US","format":"P%sT","_until":"2002 Feb 20"},{"name":"America/Santa_Isabel","_offset":"-8:00","_rule":"Mexico","format":"P%sT","_until":""}],"America/Anguilla":[{"name":"America/Anguilla","_offset":"-4:12:16","_rule":"-","format":"LMT","_until":"1912 Mar 2"},{"name":"America/Anguilla","_offset":"-4:00","_rule":"-","format":"AST","_until":""}],"America/Antigua":[{"name":"America/Antigua","_offset":"-4:07:12","_rule":"-","format":"LMT","_until":"1912 Mar 2"},{"name":"America/Antigua","_offset":"-5:00","_rule":"-","format":"EST","_until":"1951"},{"name":"America/Antigua","_offset":"-4:00","_rule":"-","format":"AST","_until":""}],"America/Nassau":[{"name":"America/Nassau","_offset":"-5:09:30","_rule":"-","format":"LMT","_until":"1912 Mar 2"},{"name":"America/Nassau","_offset":"-5:00","_rule":"Bahamas","format":"E%sT","_until":"1976"},{"name":"America/Nassau","_offset":"-5:00","_rule":"US","format":"E%sT","_until":""}],"America/Barbados":[{"name":"America/Barbados","_offset":"-3:58:29","_rule":"-","format":"LMT","_until":"1924"},{"name":"America/Barbados","_offset":"-3:58:29","_rule":"-","format":"BMT","_until":"1932"},{"name":"America/Barbados","_offset":"-4:00","_rule":"Barb","format":"A%sT","_until":""}],"America/Belize":[{"name":"America/Belize","_offset":"-5:52:48","_rule":"-","format":"LMT","_until":"1912 Apr"},{"name":"America/Belize","_offset":"-6:00","_rule":"Belize","format":"C%sT","_until":""}],"Atlantic/Bermuda":[{"name":"Atlantic/Bermuda","_offset":"-4:19:18","_rule":"-","format":"LMT","_until":"1930 Jan 1 2:00"},{"name":"Atlantic/Bermuda","_offset":"-4:00","_rule":"-","format":"AST","_until":"1974 Apr 28 2:00"},{"name":"Atlantic/Bermuda","_offset":"-4:00","_rule":"Bahamas","format":"A%sT","_until":"1976"},{"name":"Atlantic/Bermuda","_offset":"-4:00","_rule":"US","format":"A%sT","_until":""}],"America/Cayman":[{"name":"America/Cayman","_offset":"-5:25:32","_rule":"-","format":"LMT","_until":"1890"},{"name":"America/Cayman","_offset":"-5:07:12","_rule":"-","format":"KMT","_until":"1912 Feb"},{"name":"America/Cayman","_offset":"-5:00","_rule":"-","format":"EST","_until":""}],"America/Costa_Rica":[{"name":"America/Costa_Rica","_offset":"-5:36:13","_rule":"-","format":"LMT","_until":"1890"},{"name":"America/Costa_Rica","_offset":"-5:36:13","_rule":"-","format":"SJMT","_until":"1921 Jan 15"},{"name":"America/Costa_Rica","_offset":"-6:00","_rule":"CR","format":"C%sT","_until":""}],"America/Havana":[{"name":"America/Havana","_offset":"-5:29:28","_rule":"-","format":"LMT","_until":"1890"},{"name":"America/Havana","_offset":"-5:29:36","_rule":"-","format":"HMT","_until":"1925 Jul 19 12:00"},{"name":"America/Havana","_offset":"-5:00","_rule":"Cuba","format":"C%sT","_until":""}],"America/Dominica":[{"name":"America/Dominica","_offset":"-4:05:36","_rule":"-","format":"LMT","_until":"1911 Jul 1 0:01"},{"name":"America/Dominica","_offset":"-4:00","_rule":"-","format":"AST","_until":""}],"America/Santo_Domingo":[{"name":"America/Santo_Domingo","_offset":"-4:39:36","_rule":"-","format":"LMT","_until":"1890"},{"name":"America/Santo_Domingo","_offset":"-4:40","_rule":"-","format":"SDMT","_until":"1933 Apr 1 12:00"},{"name":"America/Santo_Domingo","_offset":"-5:00","_rule":"DR","format":"E%sT","_until":"1974 Oct 27"},{"name":"America/Santo_Domingo","_offset":"-4:00","_rule":"-","format":"AST","_until":"2000 Oct 29 02:00"},{"name":"America/Santo_Domingo","_offset":"-5:00","_rule":"US","format":"E%sT","_until":"2000 Dec 3 01:00"},{"name":"America/Santo_Domingo","_offset":"-4:00","_rule":"-","format":"AST","_until":""}],"America/El_Salvador":[{"name":"America/El_Salvador","_offset":"-5:56:48","_rule":"-","format":"LMT","_until":"1921"},{"name":"America/El_Salvador","_offset":"-6:00","_rule":"Salv","format":"C%sT","_until":""}],"America/Grenada":[{"name":"America/Grenada","_offset":"-4:07:00","_rule":"-","format":"LMT","_until":"1911 Jul"},{"name":"America/Grenada","_offset":"-4:00","_rule":"-","format":"AST","_until":""}],"America/Guadeloupe":[{"name":"America/Guadeloupe","_offset":"-4:06:08","_rule":"-","format":"LMT","_until":"1911 Jun 8"},{"name":"America/Guadeloupe","_offset":"-4:00","_rule":"-","format":"AST","_until":""}],"America/Guatemala":[{"name":"America/Guatemala","_offset":"-6:02:04","_rule":"-","format":"LMT","_until":"1918 Oct 5"},{"name":"America/Guatemala","_offset":"-6:00","_rule":"Guat","format":"C%sT","_until":""}],"America/Port-au-Prince":[{"name":"America/Port-au-Prince","_offset":"-4:49:20","_rule":"-","format":"LMT","_until":"1890"},{"name":"America/Port-au-Prince","_offset":"-4:49","_rule":"-","format":"PPMT","_until":"1917 Jan 24 12:00"},{"name":"America/Port-au-Prince","_offset":"-5:00","_rule":"Haiti","format":"E%sT","_until":""}],"America/Tegucigalpa":[{"name":"America/Tegucigalpa","_offset":"-5:48:52","_rule":"-","format":"LMT","_until":"1921 Apr"},{"name":"America/Tegucigalpa","_offset":"-6:00","_rule":"Hond","format":"C%sT","_until":""}],"America/Jamaica":[{"name":"America/Jamaica","_offset":"-5:07:12","_rule":"-","format":"LMT","_until":"1890"},{"name":"America/Jamaica","_offset":"-5:07:12","_rule":"-","format":"KMT","_until":"1912 Feb"},{"name":"America/Jamaica","_offset":"-5:00","_rule":"-","format":"EST","_until":"1974 Apr 28 2:00"},{"name":"America/Jamaica","_offset":"-5:00","_rule":"US","format":"E%sT","_until":"1984"},{"name":"America/Jamaica","_offset":"-5:00","_rule":"-","format":"EST","_until":""}],"America/Martinique":[{"name":"America/Martinique","_offset":"-4:04:20","_rule":"-","format":"LMT","_until":"1890"},{"name":"America/Martinique","_offset":"-4:04:20","_rule":"-","format":"FFMT","_until":"1911 May"},{"name":"America/Martinique","_offset":"-4:00","_rule":"-","format":"AST","_until":"1980 Apr 6"},{"name":"America/Martinique","_offset":"-4:00","_rule":"1:00","format":"ADT","_until":"1980 Sep 28"},{"name":"America/Martinique","_offset":"-4:00","_rule":"-","format":"AST","_until":""}],"America/Montserrat":[{"name":"America/Montserrat","_offset":"-4:08:52","_rule":"-","format":"LMT","_until":"1911 Jul 1 0:01"},{"name":"America/Montserrat","_offset":"-4:00","_rule":"-","format":"AST","_until":""}],"America/Managua":[{"name":"America/Managua","_offset":"-5:45:08","_rule":"-","format":"LMT","_until":"1890"},{"name":"America/Managua","_offset":"-5:45:12","_rule":"-","format":"MMT","_until":"1934 Jun 23"},{"name":"America/Managua","_offset":"-6:00","_rule":"-","format":"CST","_until":"1973 May"},{"name":"America/Managua","_offset":"-5:00","_rule":"-","format":"EST","_until":"1975 Feb 16"},{"name":"America/Managua","_offset":"-6:00","_rule":"Nic","format":"C%sT","_until":"1992 Jan 1 4:00"},{"name":"America/Managua","_offset":"-5:00","_rule":"-","format":"EST","_until":"1992 Sep 24"},{"name":"America/Managua","_offset":"-6:00","_rule":"-","format":"CST","_until":"1993"},{"name":"America/Managua","_offset":"-5:00","_rule":"-","format":"EST","_until":"1997"},{"name":"America/Managua","_offset":"-6:00","_rule":"Nic","format":"C%sT","_until":""}],"America/Panama":[{"name":"America/Panama","_offset":"-5:18:08","_rule":"-","format":"LMT","_until":"1890"},{"name":"America/Panama","_offset":"-5:19:36","_rule":"-","format":"CMT","_until":"1908 Apr 22"},{"name":"America/Panama","_offset":"-5:00","_rule":"-","format":"EST","_until":""}],"America/Puerto_Rico":[{"name":"America/Puerto_Rico","_offset":"-4:24:25","_rule":"-","format":"LMT","_until":"1899 Mar 28 12:00"},{"name":"America/Puerto_Rico","_offset":"-4:00","_rule":"-","format":"AST","_until":"1942 May 3"},{"name":"America/Puerto_Rico","_offset":"-4:00","_rule":"US","format":"A%sT","_until":"1946"},{"name":"America/Puerto_Rico","_offset":"-4:00","_rule":"-","format":"AST","_until":""}],"America/St_Kitts":[{"name":"America/St_Kitts","_offset":"-4:10:52","_rule":"-","format":"LMT","_until":"1912 Mar 2"},{"name":"America/St_Kitts","_offset":"-4:00","_rule":"-","format":"AST","_until":""}],"America/St_Lucia":[{"name":"America/St_Lucia","_offset":"-4:04:00","_rule":"-","format":"LMT","_until":"1890"},{"name":"America/St_Lucia","_offset":"-4:04:00","_rule":"-","format":"CMT","_until":"1912"},{"name":"America/St_Lucia","_offset":"-4:00","_rule":"-","format":"AST","_until":""}],"America/Miquelon":[{"name":"America/Miquelon","_offset":"-3:44:40","_rule":"-","format":"LMT","_until":"1911 May 15"},{"name":"America/Miquelon","_offset":"-4:00","_rule":"-","format":"AST","_until":"1980 May"},{"name":"America/Miquelon","_offset":"-3:00","_rule":"-","format":"PMST","_until":"1987"},{"name":"America/Miquelon","_offset":"-3:00","_rule":"Canada","format":"PM%sT","_until":""}],"America/St_Vincent":[{"name":"America/St_Vincent","_offset":"-4:04:56","_rule":"-","format":"LMT","_until":"1890"},{"name":"America/St_Vincent","_offset":"-4:04:56","_rule":"-","format":"KMT","_until":"1912"},{"name":"America/St_Vincent","_offset":"-4:00","_rule":"-","format":"AST","_until":""}],"America/Grand_Turk":[{"name":"America/Grand_Turk","_offset":"-4:44:32","_rule":"-","format":"LMT","_until":"1890"},{"name":"America/Grand_Turk","_offset":"-5:07:12","_rule":"-","format":"KMT","_until":"1912 Feb"},{"name":"America/Grand_Turk","_offset":"-5:00","_rule":"TC","format":"E%sT","_until":""}],"America/Tortola":[{"name":"America/Tortola","_offset":"-4:18:28","_rule":"-","format":"LMT","_until":"1911 Jul"},{"name":"America/Tortola","_offset":"-4:00","_rule":"-","format":"AST","_until":""}],"America/St_Thomas":[{"name":"America/St_Thomas","_offset":"-4:19:44","_rule":"-","format":"LMT","_until":"1911 Jul"},{"name":"America/St_Thomas","_offset":"-4:00","_rule":"-","format":"AST","_until":""}],"Asia/Riyadh87":[{"name":"Asia/Riyadh87","_offset":"3:07:04","_rule":"-","format":"zzz","_until":"1987"},{"name":"Asia/Riyadh87","_offset":"3:07:04","_rule":"sol87","format":"zzz","_until":"1988"},{"name":"Asia/Riyadh87","_offset":"3:07:04","_rule":"-","format":"zzz","_until":""}],"Asia/Riyadh88":[{"name":"Asia/Riyadh88","_offset":"3:07:04","_rule":"-","format":"zzz","_until":"1988"},{"name":"Asia/Riyadh88","_offset":"3:07:04","_rule":"sol88","format":"zzz","_until":"1989"},{"name":"Asia/Riyadh88","_offset":"3:07:04","_rule":"-","format":"zzz","_until":""}],"Asia/Riyadh89":[{"name":"Asia/Riyadh89","_offset":"3:07:04","_rule":"-","format":"zzz","_until":"1989"},{"name":"Asia/Riyadh89","_offset":"3:07:04","_rule":"sol89","format":"zzz","_until":"1990"},{"name":"Asia/Riyadh89","_offset":"3:07:04","_rule":"-","format":"zzz","_until":""}],"America/Argentina/Buenos_Aires":[{"name":"America/Argentina/Buenos_Aires","_offset":"-3:53:48","_rule":"-","format":"LMT","_until":"1894 Oct 31"},{"name":"America/Argentina/Buenos_Aires","_offset":"-4:16:48","_rule":"-","format":"CMT","_until":"1920 May"},{"name":"America/Argentina/Buenos_Aires","_offset":"-4:00","_rule":"-","format":"ART","_until":"1930 Dec"},{"name":"America/Argentina/Buenos_Aires","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"1969 Oct 5"},{"name":"America/Argentina/Buenos_Aires","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"1999 Oct 3"},{"name":"America/Argentina/Buenos_Aires","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"2000 Mar 3"},{"name":"America/Argentina/Buenos_Aires","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":""}],"America/Argentina/Cordoba":[{"name":"America/Argentina/Cordoba","_offset":"-4:16:48","_rule":"-","format":"LMT","_until":"1894 Oct 31"},{"name":"America/Argentina/Cordoba","_offset":"-4:16:48","_rule":"-","format":"CMT","_until":"1920 May"},{"name":"America/Argentina/Cordoba","_offset":"-4:00","_rule":"-","format":"ART","_until":"1930 Dec"},{"name":"America/Argentina/Cordoba","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"1969 Oct 5"},{"name":"America/Argentina/Cordoba","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"1991 Mar 3"},{"name":"America/Argentina/Cordoba","_offset":"-4:00","_rule":"-","format":"WART","_until":"1991 Oct 20"},{"name":"America/Argentina/Cordoba","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"1999 Oct 3"},{"name":"America/Argentina/Cordoba","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"2000 Mar 3"},{"name":"America/Argentina/Cordoba","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":""}],"America/Argentina/Salta":[{"name":"America/Argentina/Salta","_offset":"-4:21:40","_rule":"-","format":"LMT","_until":"1894 Oct 31"},{"name":"America/Argentina/Salta","_offset":"-4:16:48","_rule":"-","format":"CMT","_until":"1920 May"},{"name":"America/Argentina/Salta","_offset":"-4:00","_rule":"-","format":"ART","_until":"1930 Dec"},{"name":"America/Argentina/Salta","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"1969 Oct 5"},{"name":"America/Argentina/Salta","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"1991 Mar 3"},{"name":"America/Argentina/Salta","_offset":"-4:00","_rule":"-","format":"WART","_until":"1991 Oct 20"},{"name":"America/Argentina/Salta","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"1999 Oct 3"},{"name":"America/Argentina/Salta","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"2000 Mar 3"},{"name":"America/Argentina/Salta","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"2008 Oct 18"},{"name":"America/Argentina/Salta","_offset":"-3:00","_rule":"-","format":"ART","_until":""}],"America/Argentina/Tucuman":[{"name":"America/Argentina/Tucuman","_offset":"-4:20:52","_rule":"-","format":"LMT","_until":"1894 Oct 31"},{"name":"America/Argentina/Tucuman","_offset":"-4:16:48","_rule":"-","format":"CMT","_until":"1920 May"},{"name":"America/Argentina/Tucuman","_offset":"-4:00","_rule":"-","format":"ART","_until":"1930 Dec"},{"name":"America/Argentina/Tucuman","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"1969 Oct 5"},{"name":"America/Argentina/Tucuman","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"1991 Mar 3"},{"name":"America/Argentina/Tucuman","_offset":"-4:00","_rule":"-","format":"WART","_until":"1991 Oct 20"},{"name":"America/Argentina/Tucuman","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"1999 Oct 3"},{"name":"America/Argentina/Tucuman","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"2000 Mar 3"},{"name":"America/Argentina/Tucuman","_offset":"-3:00","_rule":"-","format":"ART","_until":"2004 Jun 1"},{"name":"America/Argentina/Tucuman","_offset":"-4:00","_rule":"-","format":"WART","_until":"2004 Jun 13"},{"name":"America/Argentina/Tucuman","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":""}],"America/Argentina/La_Rioja":[{"name":"America/Argentina/La_Rioja","_offset":"-4:27:24","_rule":"-","format":"LMT","_until":"1894 Oct 31"},{"name":"America/Argentina/La_Rioja","_offset":"-4:16:48","_rule":"-","format":"CMT","_until":"1920 May"},{"name":"America/Argentina/La_Rioja","_offset":"-4:00","_rule":"-","format":"ART","_until":"1930 Dec"},{"name":"America/Argentina/La_Rioja","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"1969 Oct 5"},{"name":"America/Argentina/La_Rioja","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"1991 Mar 1"},{"name":"America/Argentina/La_Rioja","_offset":"-4:00","_rule":"-","format":"WART","_until":"1991 May 7"},{"name":"America/Argentina/La_Rioja","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"1999 Oct 3"},{"name":"America/Argentina/La_Rioja","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"2000 Mar 3"},{"name":"America/Argentina/La_Rioja","_offset":"-3:00","_rule":"-","format":"ART","_until":"2004 Jun 1"},{"name":"America/Argentina/La_Rioja","_offset":"-4:00","_rule":"-","format":"WART","_until":"2004 Jun 20"},{"name":"America/Argentina/La_Rioja","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"2008 Oct 18"},{"name":"America/Argentina/La_Rioja","_offset":"-3:00","_rule":"-","format":"ART","_until":""}],"America/Argentina/San_Juan":[{"name":"America/Argentina/San_Juan","_offset":"-4:34:04","_rule":"-","format":"LMT","_until":"1894 Oct 31"},{"name":"America/Argentina/San_Juan","_offset":"-4:16:48","_rule":"-","format":"CMT","_until":"1920 May"},{"name":"America/Argentina/San_Juan","_offset":"-4:00","_rule":"-","format":"ART","_until":"1930 Dec"},{"name":"America/Argentina/San_Juan","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"1969 Oct 5"},{"name":"America/Argentina/San_Juan","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"1991 Mar 1"},{"name":"America/Argentina/San_Juan","_offset":"-4:00","_rule":"-","format":"WART","_until":"1991 May 7"},{"name":"America/Argentina/San_Juan","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"1999 Oct 3"},{"name":"America/Argentina/San_Juan","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"2000 Mar 3"},{"name":"America/Argentina/San_Juan","_offset":"-3:00","_rule":"-","format":"ART","_until":"2004 May 31"},{"name":"America/Argentina/San_Juan","_offset":"-4:00","_rule":"-","format":"WART","_until":"2004 Jul 25"},{"name":"America/Argentina/San_Juan","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"2008 Oct 18"},{"name":"America/Argentina/San_Juan","_offset":"-3:00","_rule":"-","format":"ART","_until":""}],"America/Argentina/Jujuy":[{"name":"America/Argentina/Jujuy","_offset":"-4:21:12","_rule":"-","format":"LMT","_until":"1894 Oct 31"},{"name":"America/Argentina/Jujuy","_offset":"-4:16:48","_rule":"-","format":"CMT","_until":"1920 May"},{"name":"America/Argentina/Jujuy","_offset":"-4:00","_rule":"-","format":"ART","_until":"1930 Dec"},{"name":"America/Argentina/Jujuy","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"1969 Oct 5"},{"name":"America/Argentina/Jujuy","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"1990 Mar 4"},{"name":"America/Argentina/Jujuy","_offset":"-4:00","_rule":"-","format":"WART","_until":"1990 Oct 28"},{"name":"America/Argentina/Jujuy","_offset":"-4:00","_rule":"1:00","format":"WARST","_until":"1991 Mar 17"},{"name":"America/Argentina/Jujuy","_offset":"-4:00","_rule":"-","format":"WART","_until":"1991 Oct 6"},{"name":"America/Argentina/Jujuy","_offset":"-3:00","_rule":"1:00","format":"ARST","_until":"1992"},{"name":"America/Argentina/Jujuy","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"1999 Oct 3"},{"name":"America/Argentina/Jujuy","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"2000 Mar 3"},{"name":"America/Argentina/Jujuy","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"2008 Oct 18"},{"name":"America/Argentina/Jujuy","_offset":"-3:00","_rule":"-","format":"ART","_until":""}],"America/Argentina/Catamarca":[{"name":"America/Argentina/Catamarca","_offset":"-4:23:08","_rule":"-","format":"LMT","_until":"1894 Oct 31"},{"name":"America/Argentina/Catamarca","_offset":"-4:16:48","_rule":"-","format":"CMT","_until":"1920 May"},{"name":"America/Argentina/Catamarca","_offset":"-4:00","_rule":"-","format":"ART","_until":"1930 Dec"},{"name":"America/Argentina/Catamarca","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"1969 Oct 5"},{"name":"America/Argentina/Catamarca","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"1991 Mar 3"},{"name":"America/Argentina/Catamarca","_offset":"-4:00","_rule":"-","format":"WART","_until":"1991 Oct 20"},{"name":"America/Argentina/Catamarca","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"1999 Oct 3"},{"name":"America/Argentina/Catamarca","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"2000 Mar 3"},{"name":"America/Argentina/Catamarca","_offset":"-3:00","_rule":"-","format":"ART","_until":"2004 Jun 1"},{"name":"America/Argentina/Catamarca","_offset":"-4:00","_rule":"-","format":"WART","_until":"2004 Jun 20"},{"name":"America/Argentina/Catamarca","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"2008 Oct 18"},{"name":"America/Argentina/Catamarca","_offset":"-3:00","_rule":"-","format":"ART","_until":""}],"America/Argentina/Mendoza":[{"name":"America/Argentina/Mendoza","_offset":"-4:35:16","_rule":"-","format":"LMT","_until":"1894 Oct 31"},{"name":"America/Argentina/Mendoza","_offset":"-4:16:48","_rule":"-","format":"CMT","_until":"1920 May"},{"name":"America/Argentina/Mendoza","_offset":"-4:00","_rule":"-","format":"ART","_until":"1930 Dec"},{"name":"America/Argentina/Mendoza","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"1969 Oct 5"},{"name":"America/Argentina/Mendoza","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"1990 Mar 4"},{"name":"America/Argentina/Mendoza","_offset":"-4:00","_rule":"-","format":"WART","_until":"1990 Oct 15"},{"name":"America/Argentina/Mendoza","_offset":"-4:00","_rule":"1:00","format":"WARST","_until":"1991 Mar 1"},{"name":"America/Argentina/Mendoza","_offset":"-4:00","_rule":"-","format":"WART","_until":"1991 Oct 15"},{"name":"America/Argentina/Mendoza","_offset":"-4:00","_rule":"1:00","format":"WARST","_until":"1992 Mar 1"},{"name":"America/Argentina/Mendoza","_offset":"-4:00","_rule":"-","format":"WART","_until":"1992 Oct 18"},{"name":"America/Argentina/Mendoza","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"1999 Oct 3"},{"name":"America/Argentina/Mendoza","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"2000 Mar 3"},{"name":"America/Argentina/Mendoza","_offset":"-3:00","_rule":"-","format":"ART","_until":"2004 May 23"},{"name":"America/Argentina/Mendoza","_offset":"-4:00","_rule":"-","format":"WART","_until":"2004 Sep 26"},{"name":"America/Argentina/Mendoza","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"2008 Oct 18"},{"name":"America/Argentina/Mendoza","_offset":"-3:00","_rule":"-","format":"ART","_until":""}],"America/Argentina/San_Luis":[{"name":"America/Argentina/San_Luis","_offset":"-4:25:24","_rule":"-","format":"LMT","_until":"1894 Oct 31"},{"name":"America/Argentina/San_Luis","_offset":"-4:16:48","_rule":"-","format":"CMT","_until":"1920 May"},{"name":"America/Argentina/San_Luis","_offset":"-4:00","_rule":"-","format":"ART","_until":"1930 Dec"},{"name":"America/Argentina/San_Luis","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"1969 Oct 5"},{"name":"America/Argentina/San_Luis","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"1990"},{"name":"America/Argentina/San_Luis","_offset":"-3:00","_rule":"1:00","format":"ARST","_until":"1990 Mar 14"},{"name":"America/Argentina/San_Luis","_offset":"-4:00","_rule":"-","format":"WART","_until":"1990 Oct 15"},{"name":"America/Argentina/San_Luis","_offset":"-4:00","_rule":"1:00","format":"WARST","_until":"1991 Mar 1"},{"name":"America/Argentina/San_Luis","_offset":"-4:00","_rule":"-","format":"WART","_until":"1991 Jun 1"},{"name":"America/Argentina/San_Luis","_offset":"-3:00","_rule":"-","format":"ART","_until":"1999 Oct 3"},{"name":"America/Argentina/San_Luis","_offset":"-4:00","_rule":"1:00","format":"WARST","_until":"2000 Mar 3"},{"name":"America/Argentina/San_Luis","_offset":"-3:00","_rule":"-","format":"ART","_until":"2004 May 31"},{"name":"America/Argentina/San_Luis","_offset":"-4:00","_rule":"-","format":"WART","_until":"2004 Jul 25"},{"name":"America/Argentina/San_Luis","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"2008 Jan 21"},{"name":"America/Argentina/San_Luis","_offset":"-4:00","_rule":"SanLuis","format":"WAR%sT","_until":""}],"America/Argentina/Rio_Gallegos":[{"name":"America/Argentina/Rio_Gallegos","_offset":"-4:36:52","_rule":"-","format":"LMT","_until":"1894 Oct 31"},{"name":"America/Argentina/Rio_Gallegos","_offset":"-4:16:48","_rule":"-","format":"CMT","_until":"1920 May"},{"name":"America/Argentina/Rio_Gallegos","_offset":"-4:00","_rule":"-","format":"ART","_until":"1930 Dec"},{"name":"America/Argentina/Rio_Gallegos","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"1969 Oct 5"},{"name":"America/Argentina/Rio_Gallegos","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"1999 Oct 3"},{"name":"America/Argentina/Rio_Gallegos","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"2000 Mar 3"},{"name":"America/Argentina/Rio_Gallegos","_offset":"-3:00","_rule":"-","format":"ART","_until":"2004 Jun 1"},{"name":"America/Argentina/Rio_Gallegos","_offset":"-4:00","_rule":"-","format":"WART","_until":"2004 Jun 20"},{"name":"America/Argentina/Rio_Gallegos","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"2008 Oct 18"},{"name":"America/Argentina/Rio_Gallegos","_offset":"-3:00","_rule":"-","format":"ART","_until":""}],"America/Argentina/Ushuaia":[{"name":"America/Argentina/Ushuaia","_offset":"-4:33:12","_rule":"-","format":"LMT","_until":"1894 Oct 31"},{"name":"America/Argentina/Ushuaia","_offset":"-4:16:48","_rule":"-","format":"CMT","_until":"1920 May"},{"name":"America/Argentina/Ushuaia","_offset":"-4:00","_rule":"-","format":"ART","_until":"1930 Dec"},{"name":"America/Argentina/Ushuaia","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"1969 Oct 5"},{"name":"America/Argentina/Ushuaia","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"1999 Oct 3"},{"name":"America/Argentina/Ushuaia","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"2000 Mar 3"},{"name":"America/Argentina/Ushuaia","_offset":"-3:00","_rule":"-","format":"ART","_until":"2004 May 30"},{"name":"America/Argentina/Ushuaia","_offset":"-4:00","_rule":"-","format":"WART","_until":"2004 Jun 20"},{"name":"America/Argentina/Ushuaia","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"2008 Oct 18"},{"name":"America/Argentina/Ushuaia","_offset":"-3:00","_rule":"-","format":"ART","_until":""}],"America/Aruba":[{"name":"America/Aruba","_offset":"-4:40:24","_rule":"-","format":"LMT","_until":"1912 Feb 12"},{"name":"America/Aruba","_offset":"-4:30","_rule":"-","format":"ANT","_until":"1965"},{"name":"America/Aruba","_offset":"-4:00","_rule":"-","format":"AST","_until":""}],"America/La_Paz":[{"name":"America/La_Paz","_offset":"-4:32:36","_rule":"-","format":"LMT","_until":"1890"},{"name":"America/La_Paz","_offset":"-4:32:36","_rule":"-","format":"CMT","_until":"1931 Oct 15"},{"name":"America/La_Paz","_offset":"-4:32:36","_rule":"1:00","format":"BOST","_until":"1932 Mar 21"},{"name":"America/La_Paz","_offset":"-4:00","_rule":"-","format":"BOT","_until":""}],"America/Noronha":[{"name":"America/Noronha","_offset":"-2:09:40","_rule":"-","format":"LMT","_until":"1914"},{"name":"America/Noronha","_offset":"-2:00","_rule":"Brazil","format":"FN%sT","_until":"1990 Sep 17"},{"name":"America/Noronha","_offset":"-2:00","_rule":"-","format":"FNT","_until":"1999 Sep 30"},{"name":"America/Noronha","_offset":"-2:00","_rule":"Brazil","format":"FN%sT","_until":"2000 Oct 15"},{"name":"America/Noronha","_offset":"-2:00","_rule":"-","format":"FNT","_until":"2001 Sep 13"},{"name":"America/Noronha","_offset":"-2:00","_rule":"Brazil","format":"FN%sT","_until":"2002 Oct 1"},{"name":"America/Noronha","_offset":"-2:00","_rule":"-","format":"FNT","_until":""}],"America/Belem":[{"name":"America/Belem","_offset":"-3:13:56","_rule":"-","format":"LMT","_until":"1914"},{"name":"America/Belem","_offset":"-3:00","_rule":"Brazil","format":"BR%sT","_until":"1988 Sep 12"},{"name":"America/Belem","_offset":"-3:00","_rule":"-","format":"BRT","_until":""}],"America/Santarem":[{"name":"America/Santarem","_offset":"-3:38:48","_rule":"-","format":"LMT","_until":"1914"},{"name":"America/Santarem","_offset":"-4:00","_rule":"Brazil","format":"AM%sT","_until":"1988 Sep 12"},{"name":"America/Santarem","_offset":"-4:00","_rule":"-","format":"AMT","_until":"2008 Jun 24 00:00"},{"name":"America/Santarem","_offset":"-3:00","_rule":"-","format":"BRT","_until":""}],"America/Fortaleza":[{"name":"America/Fortaleza","_offset":"-2:34:00","_rule":"-","format":"LMT","_until":"1914"},{"name":"America/Fortaleza","_offset":"-3:00","_rule":"Brazil","format":"BR%sT","_until":"1990 Sep 17"},{"name":"America/Fortaleza","_offset":"-3:00","_rule":"-","format":"BRT","_until":"1999 Sep 30"},{"name":"America/Fortaleza","_offset":"-3:00","_rule":"Brazil","format":"BR%sT","_until":"2000 Oct 22"},{"name":"America/Fortaleza","_offset":"-3:00","_rule":"-","format":"BRT","_until":"2001 Sep 13"},{"name":"America/Fortaleza","_offset":"-3:00","_rule":"Brazil","format":"BR%sT","_until":"2002 Oct 1"},{"name":"America/Fortaleza","_offset":"-3:00","_rule":"-","format":"BRT","_until":""}],"America/Recife":[{"name":"America/Recife","_offset":"-2:19:36","_rule":"-","format":"LMT","_until":"1914"},{"name":"America/Recife","_offset":"-3:00","_rule":"Brazil","format":"BR%sT","_until":"1990 Sep 17"},{"name":"America/Recife","_offset":"-3:00","_rule":"-","format":"BRT","_until":"1999 Sep 30"},{"name":"America/Recife","_offset":"-3:00","_rule":"Brazil","format":"BR%sT","_until":"2000 Oct 15"},{"name":"America/Recife","_offset":"-3:00","_rule":"-","format":"BRT","_until":"2001 Sep 13"},{"name":"America/Recife","_offset":"-3:00","_rule":"Brazil","format":"BR%sT","_until":"2002 Oct 1"},{"name":"America/Recife","_offset":"-3:00","_rule":"-","format":"BRT","_until":""}],"America/Araguaina":[{"name":"America/Araguaina","_offset":"-3:12:48","_rule":"-","format":"LMT","_until":"1914"},{"name":"America/Araguaina","_offset":"-3:00","_rule":"Brazil","format":"BR%sT","_until":"1990 Sep 17"},{"name":"America/Araguaina","_offset":"-3:00","_rule":"-","format":"BRT","_until":"1995 Sep 14"},{"name":"America/Araguaina","_offset":"-3:00","_rule":"Brazil","format":"BR%sT","_until":"2003 Sep 24"},{"name":"America/Araguaina","_offset":"-3:00","_rule":"-","format":"BRT","_until":"2012 Oct 21"},{"name":"America/Araguaina","_offset":"-3:00","_rule":"Brazil","format":"BR%sT","_until":""}],"America/Maceio":[{"name":"America/Maceio","_offset":"-2:22:52","_rule":"-","format":"LMT","_until":"1914"},{"name":"America/Maceio","_offset":"-3:00","_rule":"Brazil","format":"BR%sT","_until":"1990 Sep 17"},{"name":"America/Maceio","_offset":"-3:00","_rule":"-","format":"BRT","_until":"1995 Oct 13"},{"name":"America/Maceio","_offset":"-3:00","_rule":"Brazil","format":"BR%sT","_until":"1996 Sep 4"},{"name":"America/Maceio","_offset":"-3:00","_rule":"-","format":"BRT","_until":"1999 Sep 30"},{"name":"America/Maceio","_offset":"-3:00","_rule":"Brazil","format":"BR%sT","_until":"2000 Oct 22"},{"name":"America/Maceio","_offset":"-3:00","_rule":"-","format":"BRT","_until":"2001 Sep 13"},{"name":"America/Maceio","_offset":"-3:00","_rule":"Brazil","format":"BR%sT","_until":"2002 Oct 1"},{"name":"America/Maceio","_offset":"-3:00","_rule":"-","format":"BRT","_until":""}],"America/Bahia":[{"name":"America/Bahia","_offset":"-2:34:04","_rule":"-","format":"LMT","_until":"1914"},{"name":"America/Bahia","_offset":"-3:00","_rule":"Brazil","format":"BR%sT","_until":"2003 Sep 24"},{"name":"America/Bahia","_offset":"-3:00","_rule":"-","format":"BRT","_until":"2011 Oct 16"},{"name":"America/Bahia","_offset":"-3:00","_rule":"Brazil","format":"BR%sT","_until":"2012 Oct 21"},{"name":"America/Bahia","_offset":"-3:00","_rule":"-","format":"BRT","_until":""}],"America/Sao_Paulo":[{"name":"America/Sao_Paulo","_offset":"-3:06:28","_rule":"-","format":"LMT","_until":"1914"},{"name":"America/Sao_Paulo","_offset":"-3:00","_rule":"Brazil","format":"BR%sT","_until":"1963 Oct 23 00:00"},{"name":"America/Sao_Paulo","_offset":"-3:00","_rule":"1:00","format":"BRST","_until":"1964"},{"name":"America/Sao_Paulo","_offset":"-3:00","_rule":"Brazil","format":"BR%sT","_until":""}],"America/Campo_Grande":[{"name":"America/Campo_Grande","_offset":"-3:38:28","_rule":"-","format":"LMT","_until":"1914"},{"name":"America/Campo_Grande","_offset":"-4:00","_rule":"Brazil","format":"AM%sT","_until":""}],"America/Cuiaba":[{"name":"America/Cuiaba","_offset":"-3:44:20","_rule":"-","format":"LMT","_until":"1914"},{"name":"America/Cuiaba","_offset":"-4:00","_rule":"Brazil","format":"AM%sT","_until":"2003 Sep 24"},{"name":"America/Cuiaba","_offset":"-4:00","_rule":"-","format":"AMT","_until":"2004 Oct 1"},{"name":"America/Cuiaba","_offset":"-4:00","_rule":"Brazil","format":"AM%sT","_until":""}],"America/Porto_Velho":[{"name":"America/Porto_Velho","_offset":"-4:15:36","_rule":"-","format":"LMT","_until":"1914"},{"name":"America/Porto_Velho","_offset":"-4:00","_rule":"Brazil","format":"AM%sT","_until":"1988 Sep 12"},{"name":"America/Porto_Velho","_offset":"-4:00","_rule":"-","format":"AMT","_until":""}],"America/Boa_Vista":[{"name":"America/Boa_Vista","_offset":"-4:02:40","_rule":"-","format":"LMT","_until":"1914"},{"name":"America/Boa_Vista","_offset":"-4:00","_rule":"Brazil","format":"AM%sT","_until":"1988 Sep 12"},{"name":"America/Boa_Vista","_offset":"-4:00","_rule":"-","format":"AMT","_until":"1999 Sep 30"},{"name":"America/Boa_Vista","_offset":"-4:00","_rule":"Brazil","format":"AM%sT","_until":"2000 Oct 15"},{"name":"America/Boa_Vista","_offset":"-4:00","_rule":"-","format":"AMT","_until":""}],"America/Manaus":[{"name":"America/Manaus","_offset":"-4:00:04","_rule":"-","format":"LMT","_until":"1914"},{"name":"America/Manaus","_offset":"-4:00","_rule":"Brazil","format":"AM%sT","_until":"1988 Sep 12"},{"name":"America/Manaus","_offset":"-4:00","_rule":"-","format":"AMT","_until":"1993 Sep 28"},{"name":"America/Manaus","_offset":"-4:00","_rule":"Brazil","format":"AM%sT","_until":"1994 Sep 22"},{"name":"America/Manaus","_offset":"-4:00","_rule":"-","format":"AMT","_until":""}],"America/Eirunepe":[{"name":"America/Eirunepe","_offset":"-4:39:28","_rule":"-","format":"LMT","_until":"1914"},{"name":"America/Eirunepe","_offset":"-5:00","_rule":"Brazil","format":"AC%sT","_until":"1988 Sep 12"},{"name":"America/Eirunepe","_offset":"-5:00","_rule":"-","format":"ACT","_until":"1993 Sep 28"},{"name":"America/Eirunepe","_offset":"-5:00","_rule":"Brazil","format":"AC%sT","_until":"1994 Sep 22"},{"name":"America/Eirunepe","_offset":"-5:00","_rule":"-","format":"ACT","_until":"2008 Jun 24 00:00"},{"name":"America/Eirunepe","_offset":"-4:00","_rule":"-","format":"AMT","_until":""}],"America/Rio_Branco":[{"name":"America/Rio_Branco","_offset":"-4:31:12","_rule":"-","format":"LMT","_until":"1914"},{"name":"America/Rio_Branco","_offset":"-5:00","_rule":"Brazil","format":"AC%sT","_until":"1988 Sep 12"},{"name":"America/Rio_Branco","_offset":"-5:00","_rule":"-","format":"ACT","_until":"2008 Jun 24 00:00"},{"name":"America/Rio_Branco","_offset":"-4:00","_rule":"-","format":"AMT","_until":""}],"America/Santiago":[{"name":"America/Santiago","_offset":"-4:42:46","_rule":"-","format":"LMT","_until":"1890"},{"name":"America/Santiago","_offset":"-4:42:46","_rule":"-","format":"SMT","_until":"1910"},{"name":"America/Santiago","_offset":"-5:00","_rule":"-","format":"CLT","_until":"1916 Jul 1"},{"name":"America/Santiago","_offset":"-4:42:46","_rule":"-","format":"SMT","_until":"1918 Sep 1"},{"name":"America/Santiago","_offset":"-4:00","_rule":"-","format":"CLT","_until":"1919 Jul 1"},{"name":"America/Santiago","_offset":"-4:42:46","_rule":"-","format":"SMT","_until":"1927 Sep 1"},{"name":"America/Santiago","_offset":"-5:00","_rule":"Chile","format":"CL%sT","_until":"1947 May 22"},{"name":"America/Santiago","_offset":"-4:00","_rule":"Chile","format":"CL%sT","_until":""}],"Pacific/Easter":[{"name":"Pacific/Easter","_offset":"-7:17:44","_rule":"-","format":"LMT","_until":"1890"},{"name":"Pacific/Easter","_offset":"-7:17:28","_rule":"-","format":"EMT","_until":"1932 Sep"},{"name":"Pacific/Easter","_offset":"-7:00","_rule":"Chile","format":"EAS%sT","_until":"1982 Mar 13 21:00"},{"name":"Pacific/Easter","_offset":"-6:00","_rule":"Chile","format":"EAS%sT","_until":""}],"America/Bogota":[{"name":"America/Bogota","_offset":"-4:56:16","_rule":"-","format":"LMT","_until":"1884 Mar 13"},{"name":"America/Bogota","_offset":"-4:56:16","_rule":"-","format":"BMT","_until":"1914 Nov 23"},{"name":"America/Bogota","_offset":"-5:00","_rule":"CO","format":"CO%sT","_until":""}],"America/Curacao":[{"name":"America/Curacao","_offset":"-4:35:47","_rule":"-","format":"LMT","_until":"1912 Feb 12"},{"name":"America/Curacao","_offset":"-4:30","_rule":"-","format":"ANT","_until":"1965"},{"name":"America/Curacao","_offset":"-4:00","_rule":"-","format":"AST","_until":""}],"America/Guayaquil":[{"name":"America/Guayaquil","_offset":"-5:19:20","_rule":"-","format":"LMT","_until":"1890"},{"name":"America/Guayaquil","_offset":"-5:14:00","_rule":"-","format":"QMT","_until":"1931"},{"name":"America/Guayaquil","_offset":"-5:00","_rule":"-","format":"ECT","_until":""}],"Pacific/Galapagos":[{"name":"Pacific/Galapagos","_offset":"-5:58:24","_rule":"-","format":"LMT","_until":"1931"},{"name":"Pacific/Galapagos","_offset":"-5:00","_rule":"-","format":"ECT","_until":"1986"},{"name":"Pacific/Galapagos","_offset":"-6:00","_rule":"-","format":"GALT","_until":""}],"Atlantic/Stanley":[{"name":"Atlantic/Stanley","_offset":"-3:51:24","_rule":"-","format":"LMT","_until":"1890"},{"name":"Atlantic/Stanley","_offset":"-3:51:24","_rule":"-","format":"SMT","_until":"1912 Mar 12"},{"name":"Atlantic/Stanley","_offset":"-4:00","_rule":"Falk","format":"FK%sT","_until":"1983 May"},{"name":"Atlantic/Stanley","_offset":"-3:00","_rule":"Falk","format":"FK%sT","_until":"1985 Sep 15"},{"name":"Atlantic/Stanley","_offset":"-4:00","_rule":"Falk","format":"FK%sT","_until":"2010 Sep 5 02:00"},{"name":"Atlantic/Stanley","_offset":"-3:00","_rule":"-","format":"FKST","_until":""}],"America/Cayenne":[{"name":"America/Cayenne","_offset":"-3:29:20","_rule":"-","format":"LMT","_until":"1911 Jul"},{"name":"America/Cayenne","_offset":"-4:00","_rule":"-","format":"GFT","_until":"1967 Oct"},{"name":"America/Cayenne","_offset":"-3:00","_rule":"-","format":"GFT","_until":""}],"America/Guyana":[{"name":"America/Guyana","_offset":"-3:52:40","_rule":"-","format":"LMT","_until":"1915 Mar"},{"name":"America/Guyana","_offset":"-3:45","_rule":"-","format":"GBGT","_until":"1966 May 26"},{"name":"America/Guyana","_offset":"-3:45","_rule":"-","format":"GYT","_until":"1975 Jul 31"},{"name":"America/Guyana","_offset":"-3:00","_rule":"-","format":"GYT","_until":"1991"},{"name":"America/Guyana","_offset":"-4:00","_rule":"-","format":"GYT","_until":""}],"America/Asuncion":[{"name":"America/Asuncion","_offset":"-3:50:40","_rule":"-","format":"LMT","_until":"1890"},{"name":"America/Asuncion","_offset":"-3:50:40","_rule":"-","format":"AMT","_until":"1931 Oct 10"},{"name":"America/Asuncion","_offset":"-4:00","_rule":"-","format":"PYT","_until":"1972 Oct"},{"name":"America/Asuncion","_offset":"-3:00","_rule":"-","format":"PYT","_until":"1974 Apr"},{"name":"America/Asuncion","_offset":"-4:00","_rule":"Para","format":"PY%sT","_until":""}],"America/Lima":[{"name":"America/Lima","_offset":"-5:08:12","_rule":"-","format":"LMT","_until":"1890"},{"name":"America/Lima","_offset":"-5:08:36","_rule":"-","format":"LMT","_until":"1908 Jul 28"},{"name":"America/Lima","_offset":"-5:00","_rule":"Peru","format":"PE%sT","_until":""}],"Atlantic/South_Georgia":[{"name":"Atlantic/South_Georgia","_offset":"-2:26:08","_rule":"-","format":"LMT","_until":"1890"},{"name":"Atlantic/South_Georgia","_offset":"-2:00","_rule":"-","format":"GST","_until":""}],"America/Paramaribo":[{"name":"America/Paramaribo","_offset":"-3:40:40","_rule":"-","format":"LMT","_until":"1911"},{"name":"America/Paramaribo","_offset":"-3:40:52","_rule":"-","format":"PMT","_until":"1935"},{"name":"America/Paramaribo","_offset":"-3:40:36","_rule":"-","format":"PMT","_until":"1945 Oct"},{"name":"America/Paramaribo","_offset":"-3:30","_rule":"-","format":"NEGT","_until":"1975 Nov 20"},{"name":"America/Paramaribo","_offset":"-3:30","_rule":"-","format":"SRT","_until":"1984 Oct"},{"name":"America/Paramaribo","_offset":"-3:00","_rule":"-","format":"SRT","_until":""}],"America/Port_of_Spain":[{"name":"America/Port_of_Spain","_offset":"-4:06:04","_rule":"-","format":"LMT","_until":"1912 Mar 2"},{"name":"America/Port_of_Spain","_offset":"-4:00","_rule":"-","format":"AST","_until":""}],"America/Montevideo":[{"name":"America/Montevideo","_offset":"-3:44:44","_rule":"-","format":"LMT","_until":"1898 Jun 28"},{"name":"America/Montevideo","_offset":"-3:44:44","_rule":"-","format":"MMT","_until":"1920 May 1"},{"name":"America/Montevideo","_offset":"-3:30","_rule":"Uruguay","format":"UY%sT","_until":"1942 Dec 14"},{"name":"America/Montevideo","_offset":"-3:00","_rule":"Uruguay","format":"UY%sT","_until":""}],"America/Caracas":[{"name":"America/Caracas","_offset":"-4:27:44","_rule":"-","format":"LMT","_until":"1890"},{"name":"America/Caracas","_offset":"-4:27:40","_rule":"-","format":"CMT","_until":"1912 Feb 12"},{"name":"America/Caracas","_offset":"-4:30","_rule":"-","format":"VET","_until":"1965"},{"name":"America/Caracas","_offset":"-4:00","_rule":"-","format":"VET","_until":"2007 Dec 9 03:00"},{"name":"America/Caracas","_offset":"-4:30","_rule":"-","format":"VET","_until":""}]}
	};

	if (true) {
	  module.exports = tzData;
	}


/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var Qajax = __webpack_require__(184);
	var plywood_1 = __webpack_require__(188);
	function getSplitsDescription(ex) {
	    var splits = [];
	    ex.forEach(function (ex) {
	        if (ex instanceof plywood_1.ChainExpression) {
	            ex.actions.forEach(function (action) {
	                if (action instanceof plywood_1.SplitAction) {
	                    splits.push(action.firstSplitExpression().toString());
	                }
	            });
	        }
	    });
	    return splits.join(';');
	}
	var reloadRequested = false;
	function reload() {
	    if (reloadRequested)
	        return;
	    reloadRequested = true;
	    window.location.reload(true);
	}
	function queryUrlExecutorFactory(name, url, version) {
	    return function (ex) {
	        return Qajax({
	            method: "POST",
	            url: url + '?by=' + getSplitsDescription(ex),
	            data: {
	                version: version,
	                dataSource: name,
	                expression: ex.toJS()
	            }
	        })
	            .then(Qajax.filterSuccess)
	            .then(Qajax.toJSON)
	            .then(function (dataJS) {
	            return plywood_1.Dataset.fromJS(dataJS);
	        }, function (xhr) {
	            if (!xhr)
	                return null; // This is only here to stop TS complaining
	            var jsonError = JSON.parse(xhr.responseText);
	            if (jsonError.action === 'reload')
	                reload();
	            throw new Error(jsonError.message);
	        });
	    };
	}
	exports.queryUrlExecutorFactory = queryUrlExecutorFactory;


/***/ },
/* 184 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(185)(__webpack_require__(186), window.XMLHttpRequest, window.FormData);


/***/ },
/* 185 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * Qajax.js - Simple Promise ajax library based on Q
	 */
	/*jslint newcap: true */
	(function (global, definition) {
	  if (true) {
	    module.exports = definition;
	  }
	  else if (typeof define === 'function' && define.amd){
	    define(['q'], function (Q) {
	      return definition(Q, global.XMLHttpRequest, global.FormData);
	    });
	  }
	  else {
	    global.Qajax = definition(global.Q, global.XMLHttpRequest, global.FormData);
	  }
	})(this, function (Q, XMLHttpRequest, FormData) {
	  "use strict";

	  var CONTENT_TYPE = "Content-Type";
	  var neverEnding = Q.defer().promise;

	  function noop (){}

	  // Serialize a map of properties (as a JavaScript object) to a query string
	  function serializeQuery(paramsObj) {
	    var k, params = [];
	    for (k in paramsObj) {
	      if (paramsObj.hasOwnProperty(k) && paramsObj[k] !== undefined) {
	        params.push(encodeURIComponent(k) + "=" + encodeURIComponent(paramsObj[k]));
	      }
	    }
	    return params.join("&");
	  }

	  function hasQuery(url) {
	    return (url.indexOf("?") === -1);
	  }

	  function cloneObject (obj) {
	    var clone = {};
	    if (obj) {
	      for (var key in obj) {
	        if (obj.hasOwnProperty(key)) {
	          clone[key] = obj[key];
	        }
	      }
	    }
	    return clone;
	  }

	  function QajaxBuilder (urlOrSettings, maybeSettings) {
	    if (arguments.length === 0) throw new Error("Qajax: settings are required");

	    var settings;
	    if (typeof urlOrSettings === "string") {
	      settings = typeof maybeSettings === 'object' && maybeSettings || {};
	      settings.url = urlOrSettings;
	    }
	    else if (typeof urlOrSettings === "object") {
	      settings = urlOrSettings;
	    }
	    else {
	      throw new Error("Qajax: settings must be an object");
	    }

	    if (!settings.url) {
	      throw new Error("Qajax: settings.url is required");
	    }
	    if ("cancellation" in settings && !Q.isPromiseAlike(settings.cancellation)) {
	      throw new Error("cancellation must be a Promise.");
	    }

	    // Instance defaults (other defaults are extended by prototype)
	    this.headers = cloneObject(this.headers);
	    this.params = {};
	    for (var key in settings)
	      this[key] = settings[key];

	    // Handle the settings to prepare some work.
	    var params = this.params;
	    var cacheParam = this.cache;
	    if (cacheParam)
	      params[cacheParam === true ? "_" : cacheParam] = (new Date()).getTime();

	    // Let's build the url based on the configuration
	    var url = this.base + this.url;
	    var queryParams = serializeQuery(params);
	    if (queryParams)
	      url = url + (hasQuery(url) ? "?" : "&") + queryParams;
	    this.url = url;

	    // if data is a Javascript object, JSON is used
	    var data = this.data;
	    var headers = this.headers;
	    if (
	      data !== null &&
	      typeof data === "object" &&
	      (!FormData || !(data instanceof FormData))) {
	      if (!(CONTENT_TYPE in headers))
	        headers[CONTENT_TYPE] = "application/json";
	      this.data = JSON.stringify(data);
	    }

	    // Protect send from any exception which will be encapsulated in a failure.
	    var _send = this._send;
	    var ctx = this;
	    this.send = function () {
	      return Q.fcall(function () { return _send.call(ctx); });
	    };
	  }

	  QajaxBuilder.prototype = {

	    // Qajax defaults are stored in the QajaxBuilder prototype*

	    log: noop, // Provide a `log` function. by default there won't be logs.
	    timeout: 60000,
	    cache: typeof window === "undefined" ? false : !!(window.ActiveXObject || "ActiveXObject" in window), // By default, only enabled on old IE (also the presence of ActiveXObject is a nice correlation with the cache bug)
	    method: "GET",
	    base: "",
	    withCredentials: false,
	    cancellation: neverEnding,


	    _send: function () {
	      var xhr = new XMLHttpRequest(),
	        xhrResult = Q.defer(),
	        log = this.log,
	        method = this.method,
	        url = this.url;

	      // Bind the XHR finished callback
	      xhr.onreadystatechange = function () {
	        if (xhr.readyState === 4) {
	          try {
	            log(method + " " + url + " => " + xhr.status);
	            if (xhr.status) {
	              xhrResult.resolve(xhr);
	            } else {
	              xhrResult.reject(xhr); // this case occured mainly when xhr.abort() has been called.
	            }
	          } catch (e) {
	            xhrResult.reject(xhr); // IE could throw an error
	          }
	        }
	      };

	      xhr.onprogress = function (progress) {
	        xhrResult.notify(progress);
	      };

	      xhr.open(method, url, true);

	      if (this.responseType)
	        xhr.responseType = this.responseType;

	      var headers = this.headers;
	      for (var h in headers)
	        if (headers.hasOwnProperty(h))
	          xhr.setRequestHeader(h, headers[h]);

	      if (this.withCredentials)
	        xhr.withCredentials = true;

	      // Send the XHR
	      var data = this.data;
	      if (data !== undefined && data !== null)
	        xhr.send(data);
	      else
	        xhr.send();

	      this.cancellation.fin(function () {
	        if (!xhrResult.promise.isFulfilled()) {
	          log("Qajax cancellation reached.");
	          xhr.abort();
	        }
	      });

	      // If no timeout, just return the promise
	      if (!this.timeout) {
	        return xhrResult.promise;
	      }
	      // Else, either the xhr promise or the timeout is reached
	      else {
	        return xhrResult.promise.timeout(this.timeout).fail(function (errorOrXHR) {
	          // If timeout has reached (Error is triggered)
	          if (errorOrXHR instanceof Error) {
	            log("Qajax request delay reach in " + method + " " + url);
	            xhr.abort(); // Abort this XHR so it can reject xhrResult
	          }
	          // Make the promise fail again.
	          throw xhr;
	        });
	      }
	    }
	  };


	  function Qajax (urlOrSettings, maybeSettings) {
	    return new QajaxBuilder(urlOrSettings, maybeSettings).send();
	  }

	  // Defaults settings of Qajax are bound to the QajaxBuilder.prototype.
	  Qajax.defaults = QajaxBuilder.prototype;

	  // The builder is exposed in case you want different instance of Qajax (with different defaults)
	  Qajax.Builder = QajaxBuilder;


	  /// Some helpers are attached to Qajax object.

	  Qajax.filterStatus = function (validStatus) {
	    var log = this.log;
	    var check, typ;
	    typ = typeof validStatus;
	    if (typ === "function") {
	      check = validStatus;
	    } else if (typ === "number") {
	      check = function (s) {
	        return s === validStatus;
	      };
	    } else {
	      throw "validStatus type " + typ + " unsupported";
	    }
	    return function (xhr) {
	      var status = 0;
	      try {
	        status = xhr.status; // IE can fail to access status
	      } catch (e) {
	        log("Qajax: failed to read xhr.status");
	      }
	      if (status === 1223) {
	        status = 204; // 204 No Content IE bug
	      }
	      return check(status) ? Q.resolve(xhr) : Q.reject(xhr);
	    };
	  };

	  Qajax.filterSuccess = Qajax.filterStatus(function (s) {
	    return s >= 200 && s < 300 || s === 304;
	  });

	  Qajax.toJSON = function (xhr) {
	    return Q.fcall(function () {
	      return JSON.parse(xhr.responseText);
	    });
	  };

	  Qajax.getJSON = function (url) {
	    return Qajax({ url: url, method: "GET" })
	      .then(Qajax.filterSuccess)
	      .then(Qajax.toJSON);
	  };

	  Qajax.serialize = serializeQuery;

	  return Qajax;

	});


/***/ },
/* 186 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process, setImmediate) {// vim:ts=4:sts=4:sw=4:
	/*!
	 *
	 * Copyright 2009-2012 Kris Kowal under the terms of the MIT
	 * license found at http://github.com/kriskowal/q/raw/master/LICENSE
	 *
	 * With parts by Tyler Close
	 * Copyright 2007-2009 Tyler Close under the terms of the MIT X license found
	 * at http://www.opensource.org/licenses/mit-license.html
	 * Forked at ref_send.js version: 2009-05-11
	 *
	 * With parts by Mark Miller
	 * Copyright (C) 2011 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 */

	(function (definition) {
	    "use strict";

	    // This file will function properly as a <script> tag, or a module
	    // using CommonJS and NodeJS or RequireJS module formats.  In
	    // Common/Node/RequireJS, the module exports the Q API and when
	    // executed as a simple <script>, it creates a Q global instead.

	    // Montage Require
	    if (typeof bootstrap === "function") {
	        bootstrap("promise", definition);

	    // CommonJS
	    } else if (true) {
	        module.exports = definition();

	    // RequireJS
	    } else if (typeof define === "function" && define.amd) {
	        define(definition);

	    // SES (Secure EcmaScript)
	    } else if (typeof ses !== "undefined") {
	        if (!ses.ok()) {
	            return;
	        } else {
	            ses.makeQ = definition;
	        }

	    // <script>
	    } else if (typeof window !== "undefined" || typeof self !== "undefined") {
	        // Prefer window over self for add-on scripts. Use self for
	        // non-windowed contexts.
	        var global = typeof window !== "undefined" ? window : self;

	        // Get the `window` object, save the previous Q global
	        // and initialize Q as a global.
	        var previousQ = global.Q;
	        global.Q = definition();

	        // Add a noConflict function so Q can be removed from the
	        // global namespace.
	        global.Q.noConflict = function () {
	            global.Q = previousQ;
	            return this;
	        };

	    } else {
	        throw new Error("This environment was not anticipated by Q. Please file a bug.");
	    }

	})(function () {
	"use strict";

	var hasStacks = false;
	try {
	    throw new Error();
	} catch (e) {
	    hasStacks = !!e.stack;
	}

	// All code after this point will be filtered from stack traces reported
	// by Q.
	var qStartingLine = captureLine();
	var qFileName;

	// shims

	// used for fallback in "allResolved"
	var noop = function () {};

	// Use the fastest possible means to execute a task in a future turn
	// of the event loop.
	var nextTick =(function () {
	    // linked list of tasks (single, with head node)
	    var head = {task: void 0, next: null};
	    var tail = head;
	    var flushing = false;
	    var requestTick = void 0;
	    var isNodeJS = false;
	    // queue for late tasks, used by unhandled rejection tracking
	    var laterQueue = [];

	    function flush() {
	        /* jshint loopfunc: true */
	        var task, domain;

	        while (head.next) {
	            head = head.next;
	            task = head.task;
	            head.task = void 0;
	            domain = head.domain;

	            if (domain) {
	                head.domain = void 0;
	                domain.enter();
	            }
	            runSingle(task, domain);

	        }
	        while (laterQueue.length) {
	            task = laterQueue.pop();
	            runSingle(task);
	        }
	        flushing = false;
	    }
	    // runs a single function in the async queue
	    function runSingle(task, domain) {
	        try {
	            task();

	        } catch (e) {
	            if (isNodeJS) {
	                // In node, uncaught exceptions are considered fatal errors.
	                // Re-throw them synchronously to interrupt flushing!

	                // Ensure continuation if the uncaught exception is suppressed
	                // listening "uncaughtException" events (as domains does).
	                // Continue in next event to avoid tick recursion.
	                if (domain) {
	                    domain.exit();
	                }
	                setTimeout(flush, 0);
	                if (domain) {
	                    domain.enter();
	                }

	                throw e;

	            } else {
	                // In browsers, uncaught exceptions are not fatal.
	                // Re-throw them asynchronously to avoid slow-downs.
	                setTimeout(function () {
	                    throw e;
	                }, 0);
	            }
	        }

	        if (domain) {
	            domain.exit();
	        }
	    }

	    nextTick = function (task) {
	        tail = tail.next = {
	            task: task,
	            domain: isNodeJS && process.domain,
	            next: null
	        };

	        if (!flushing) {
	            flushing = true;
	            requestTick();
	        }
	    };

	    if (typeof process === "object" &&
	        process.toString() === "[object process]" && process.nextTick) {
	        // Ensure Q is in a real Node environment, with a `process.nextTick`.
	        // To see through fake Node environments:
	        // * Mocha test runner - exposes a `process` global without a `nextTick`
	        // * Browserify - exposes a `process.nexTick` function that uses
	        //   `setTimeout`. In this case `setImmediate` is preferred because
	        //    it is faster. Browserify's `process.toString()` yields
	        //   "[object Object]", while in a real Node environment
	        //   `process.nextTick()` yields "[object process]".
	        isNodeJS = true;

	        requestTick = function () {
	            process.nextTick(flush);
	        };

	    } else if (typeof setImmediate === "function") {
	        // In IE10, Node.js 0.9+, or https://github.com/NobleJS/setImmediate
	        if (typeof window !== "undefined") {
	            requestTick = setImmediate.bind(window, flush);
	        } else {
	            requestTick = function () {
	                setImmediate(flush);
	            };
	        }

	    } else if (typeof MessageChannel !== "undefined") {
	        // modern browsers
	        // http://www.nonblocking.io/2011/06/windownexttick.html
	        var channel = new MessageChannel();
	        // At least Safari Version 6.0.5 (8536.30.1) intermittently cannot create
	        // working message ports the first time a page loads.
	        channel.port1.onmessage = function () {
	            requestTick = requestPortTick;
	            channel.port1.onmessage = flush;
	            flush();
	        };
	        var requestPortTick = function () {
	            // Opera requires us to provide a message payload, regardless of
	            // whether we use it.
	            channel.port2.postMessage(0);
	        };
	        requestTick = function () {
	            setTimeout(flush, 0);
	            requestPortTick();
	        };

	    } else {
	        // old browsers
	        requestTick = function () {
	            setTimeout(flush, 0);
	        };
	    }
	    // runs a task after all other tasks have been run
	    // this is useful for unhandled rejection tracking that needs to happen
	    // after all `then`d tasks have been run.
	    nextTick.runAfter = function (task) {
	        laterQueue.push(task);
	        if (!flushing) {
	            flushing = true;
	            requestTick();
	        }
	    };
	    return nextTick;
	})();

	// Attempt to make generics safe in the face of downstream
	// modifications.
	// There is no situation where this is necessary.
	// If you need a security guarantee, these primordials need to be
	// deeply frozen anyway, and if you don’t need a security guarantee,
	// this is just plain paranoid.
	// However, this **might** have the nice side-effect of reducing the size of
	// the minified code by reducing x.call() to merely x()
	// See Mark Miller’s explanation of what this does.
	// http://wiki.ecmascript.org/doku.php?id=conventions:safe_meta_programming
	var call = Function.call;
	function uncurryThis(f) {
	    return function () {
	        return call.apply(f, arguments);
	    };
	}
	// This is equivalent, but slower:
	// uncurryThis = Function_bind.bind(Function_bind.call);
	// http://jsperf.com/uncurrythis

	var array_slice = uncurryThis(Array.prototype.slice);

	var array_reduce = uncurryThis(
	    Array.prototype.reduce || function (callback, basis) {
	        var index = 0,
	            length = this.length;
	        // concerning the initial value, if one is not provided
	        if (arguments.length === 1) {
	            // seek to the first value in the array, accounting
	            // for the possibility that is is a sparse array
	            do {
	                if (index in this) {
	                    basis = this[index++];
	                    break;
	                }
	                if (++index >= length) {
	                    throw new TypeError();
	                }
	            } while (1);
	        }
	        // reduce
	        for (; index < length; index++) {
	            // account for the possibility that the array is sparse
	            if (index in this) {
	                basis = callback(basis, this[index], index);
	            }
	        }
	        return basis;
	    }
	);

	var array_indexOf = uncurryThis(
	    Array.prototype.indexOf || function (value) {
	        // not a very good shim, but good enough for our one use of it
	        for (var i = 0; i < this.length; i++) {
	            if (this[i] === value) {
	                return i;
	            }
	        }
	        return -1;
	    }
	);

	var array_map = uncurryThis(
	    Array.prototype.map || function (callback, thisp) {
	        var self = this;
	        var collect = [];
	        array_reduce(self, function (undefined, value, index) {
	            collect.push(callback.call(thisp, value, index, self));
	        }, void 0);
	        return collect;
	    }
	);

	var object_create = Object.create || function (prototype) {
	    function Type() { }
	    Type.prototype = prototype;
	    return new Type();
	};

	var object_hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);

	var object_keys = Object.keys || function (object) {
	    var keys = [];
	    for (var key in object) {
	        if (object_hasOwnProperty(object, key)) {
	            keys.push(key);
	        }
	    }
	    return keys;
	};

	var object_toString = uncurryThis(Object.prototype.toString);

	function isObject(value) {
	    return value === Object(value);
	}

	// generator related shims

	// FIXME: Remove this function once ES6 generators are in SpiderMonkey.
	function isStopIteration(exception) {
	    return (
	        object_toString(exception) === "[object StopIteration]" ||
	        exception instanceof QReturnValue
	    );
	}

	// FIXME: Remove this helper and Q.return once ES6 generators are in
	// SpiderMonkey.
	var QReturnValue;
	if (typeof ReturnValue !== "undefined") {
	    QReturnValue = ReturnValue;
	} else {
	    QReturnValue = function (value) {
	        this.value = value;
	    };
	}

	// long stack traces

	var STACK_JUMP_SEPARATOR = "From previous event:";

	function makeStackTraceLong(error, promise) {
	    // If possible, transform the error stack trace by removing Node and Q
	    // cruft, then concatenating with the stack trace of `promise`. See #57.
	    if (hasStacks &&
	        promise.stack &&
	        typeof error === "object" &&
	        error !== null &&
	        error.stack &&
	        error.stack.indexOf(STACK_JUMP_SEPARATOR) === -1
	    ) {
	        var stacks = [];
	        for (var p = promise; !!p; p = p.source) {
	            if (p.stack) {
	                stacks.unshift(p.stack);
	            }
	        }
	        stacks.unshift(error.stack);

	        var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
	        error.stack = filterStackString(concatedStacks);
	    }
	}

	function filterStackString(stackString) {
	    var lines = stackString.split("\n");
	    var desiredLines = [];
	    for (var i = 0; i < lines.length; ++i) {
	        var line = lines[i];

	        if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
	            desiredLines.push(line);
	        }
	    }
	    return desiredLines.join("\n");
	}

	function isNodeFrame(stackLine) {
	    return stackLine.indexOf("(module.js:") !== -1 ||
	           stackLine.indexOf("(node.js:") !== -1;
	}

	function getFileNameAndLineNumber(stackLine) {
	    // Named functions: "at functionName (filename:lineNumber:columnNumber)"
	    // In IE10 function name can have spaces ("Anonymous function") O_o
	    var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
	    if (attempt1) {
	        return [attempt1[1], Number(attempt1[2])];
	    }

	    // Anonymous functions: "at filename:lineNumber:columnNumber"
	    var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
	    if (attempt2) {
	        return [attempt2[1], Number(attempt2[2])];
	    }

	    // Firefox style: "function@filename:lineNumber or @filename:lineNumber"
	    var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
	    if (attempt3) {
	        return [attempt3[1], Number(attempt3[2])];
	    }
	}

	function isInternalFrame(stackLine) {
	    var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);

	    if (!fileNameAndLineNumber) {
	        return false;
	    }

	    var fileName = fileNameAndLineNumber[0];
	    var lineNumber = fileNameAndLineNumber[1];

	    return fileName === qFileName &&
	        lineNumber >= qStartingLine &&
	        lineNumber <= qEndingLine;
	}

	// discover own file name and line number range for filtering stack
	// traces
	function captureLine() {
	    if (!hasStacks) {
	        return;
	    }

	    try {
	        throw new Error();
	    } catch (e) {
	        var lines = e.stack.split("\n");
	        var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
	        var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);
	        if (!fileNameAndLineNumber) {
	            return;
	        }

	        qFileName = fileNameAndLineNumber[0];
	        return fileNameAndLineNumber[1];
	    }
	}

	function deprecate(callback, name, alternative) {
	    return function () {
	        if (typeof console !== "undefined" &&
	            typeof console.warn === "function") {
	            console.warn(name + " is deprecated, use " + alternative +
	                         " instead.", new Error("").stack);
	        }
	        return callback.apply(callback, arguments);
	    };
	}

	// end of shims
	// beginning of real work

	/**
	 * Constructs a promise for an immediate reference, passes promises through, or
	 * coerces promises from different systems.
	 * @param value immediate reference or promise
	 */
	function Q(value) {
	    // If the object is already a Promise, return it directly.  This enables
	    // the resolve function to both be used to created references from objects,
	    // but to tolerably coerce non-promises to promises.
	    if (value instanceof Promise) {
	        return value;
	    }

	    // assimilate thenables
	    if (isPromiseAlike(value)) {
	        return coerce(value);
	    } else {
	        return fulfill(value);
	    }
	}
	Q.resolve = Q;

	/**
	 * Performs a task in a future turn of the event loop.
	 * @param {Function} task
	 */
	Q.nextTick = nextTick;

	/**
	 * Controls whether or not long stack traces will be on
	 */
	Q.longStackSupport = false;

	// enable long stacks if Q_DEBUG is set
	if (typeof process === "object" && process && process.env && process.env.Q_DEBUG) {
	    Q.longStackSupport = true;
	}

	/**
	 * Constructs a {promise, resolve, reject} object.
	 *
	 * `resolve` is a callback to invoke with a more resolved value for the
	 * promise. To fulfill the promise, invoke `resolve` with any value that is
	 * not a thenable. To reject the promise, invoke `resolve` with a rejected
	 * thenable, or invoke `reject` with the reason directly. To resolve the
	 * promise to another thenable, thus putting it in the same state, invoke
	 * `resolve` with that other thenable.
	 */
	Q.defer = defer;
	function defer() {
	    // if "messages" is an "Array", that indicates that the promise has not yet
	    // been resolved.  If it is "undefined", it has been resolved.  Each
	    // element of the messages array is itself an array of complete arguments to
	    // forward to the resolved promise.  We coerce the resolution value to a
	    // promise using the `resolve` function because it handles both fully
	    // non-thenable values and other thenables gracefully.
	    var messages = [], progressListeners = [], resolvedPromise;

	    var deferred = object_create(defer.prototype);
	    var promise = object_create(Promise.prototype);

	    promise.promiseDispatch = function (resolve, op, operands) {
	        var args = array_slice(arguments);
	        if (messages) {
	            messages.push(args);
	            if (op === "when" && operands[1]) { // progress operand
	                progressListeners.push(operands[1]);
	            }
	        } else {
	            Q.nextTick(function () {
	                resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
	            });
	        }
	    };

	    // XXX deprecated
	    promise.valueOf = function () {
	        if (messages) {
	            return promise;
	        }
	        var nearerValue = nearer(resolvedPromise);
	        if (isPromise(nearerValue)) {
	            resolvedPromise = nearerValue; // shorten chain
	        }
	        return nearerValue;
	    };

	    promise.inspect = function () {
	        if (!resolvedPromise) {
	            return { state: "pending" };
	        }
	        return resolvedPromise.inspect();
	    };

	    if (Q.longStackSupport && hasStacks) {
	        try {
	            throw new Error();
	        } catch (e) {
	            // NOTE: don't try to use `Error.captureStackTrace` or transfer the
	            // accessor around; that causes memory leaks as per GH-111. Just
	            // reify the stack trace as a string ASAP.
	            //
	            // At the same time, cut off the first line; it's always just
	            // "[object Promise]\n", as per the `toString`.
	            promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
	        }
	    }

	    // NOTE: we do the checks for `resolvedPromise` in each method, instead of
	    // consolidating them into `become`, since otherwise we'd create new
	    // promises with the lines `become(whatever(value))`. See e.g. GH-252.

	    function become(newPromise) {
	        resolvedPromise = newPromise;
	        promise.source = newPromise;

	        array_reduce(messages, function (undefined, message) {
	            Q.nextTick(function () {
	                newPromise.promiseDispatch.apply(newPromise, message);
	            });
	        }, void 0);

	        messages = void 0;
	        progressListeners = void 0;
	    }

	    deferred.promise = promise;
	    deferred.resolve = function (value) {
	        if (resolvedPromise) {
	            return;
	        }

	        become(Q(value));
	    };

	    deferred.fulfill = function (value) {
	        if (resolvedPromise) {
	            return;
	        }

	        become(fulfill(value));
	    };
	    deferred.reject = function (reason) {
	        if (resolvedPromise) {
	            return;
	        }

	        become(reject(reason));
	    };
	    deferred.notify = function (progress) {
	        if (resolvedPromise) {
	            return;
	        }

	        array_reduce(progressListeners, function (undefined, progressListener) {
	            Q.nextTick(function () {
	                progressListener(progress);
	            });
	        }, void 0);
	    };

	    return deferred;
	}

	/**
	 * Creates a Node-style callback that will resolve or reject the deferred
	 * promise.
	 * @returns a nodeback
	 */
	defer.prototype.makeNodeResolver = function () {
	    var self = this;
	    return function (error, value) {
	        if (error) {
	            self.reject(error);
	        } else if (arguments.length > 2) {
	            self.resolve(array_slice(arguments, 1));
	        } else {
	            self.resolve(value);
	        }
	    };
	};

	/**
	 * @param resolver {Function} a function that returns nothing and accepts
	 * the resolve, reject, and notify functions for a deferred.
	 * @returns a promise that may be resolved with the given resolve and reject
	 * functions, or rejected by a thrown exception in resolver
	 */
	Q.Promise = promise; // ES6
	Q.promise = promise;
	function promise(resolver) {
	    if (typeof resolver !== "function") {
	        throw new TypeError("resolver must be a function.");
	    }
	    var deferred = defer();
	    try {
	        resolver(deferred.resolve, deferred.reject, deferred.notify);
	    } catch (reason) {
	        deferred.reject(reason);
	    }
	    return deferred.promise;
	}

	promise.race = race; // ES6
	promise.all = all; // ES6
	promise.reject = reject; // ES6
	promise.resolve = Q; // ES6

	// XXX experimental.  This method is a way to denote that a local value is
	// serializable and should be immediately dispatched to a remote upon request,
	// instead of passing a reference.
	Q.passByCopy = function (object) {
	    //freeze(object);
	    //passByCopies.set(object, true);
	    return object;
	};

	Promise.prototype.passByCopy = function () {
	    //freeze(object);
	    //passByCopies.set(object, true);
	    return this;
	};

	/**
	 * If two promises eventually fulfill to the same value, promises that value,
	 * but otherwise rejects.
	 * @param x {Any*}
	 * @param y {Any*}
	 * @returns {Any*} a promise for x and y if they are the same, but a rejection
	 * otherwise.
	 *
	 */
	Q.join = function (x, y) {
	    return Q(x).join(y);
	};

	Promise.prototype.join = function (that) {
	    return Q([this, that]).spread(function (x, y) {
	        if (x === y) {
	            // TODO: "===" should be Object.is or equiv
	            return x;
	        } else {
	            throw new Error("Can't join: not the same: " + x + " " + y);
	        }
	    });
	};

	/**
	 * Returns a promise for the first of an array of promises to become settled.
	 * @param answers {Array[Any*]} promises to race
	 * @returns {Any*} the first promise to be settled
	 */
	Q.race = race;
	function race(answerPs) {
	    return promise(function (resolve, reject) {
	        // Switch to this once we can assume at least ES5
	        // answerPs.forEach(function (answerP) {
	        //     Q(answerP).then(resolve, reject);
	        // });
	        // Use this in the meantime
	        for (var i = 0, len = answerPs.length; i < len; i++) {
	            Q(answerPs[i]).then(resolve, reject);
	        }
	    });
	}

	Promise.prototype.race = function () {
	    return this.then(Q.race);
	};

	/**
	 * Constructs a Promise with a promise descriptor object and optional fallback
	 * function.  The descriptor contains methods like when(rejected), get(name),
	 * set(name, value), post(name, args), and delete(name), which all
	 * return either a value, a promise for a value, or a rejection.  The fallback
	 * accepts the operation name, a resolver, and any further arguments that would
	 * have been forwarded to the appropriate method above had a method been
	 * provided with the proper name.  The API makes no guarantees about the nature
	 * of the returned object, apart from that it is usable whereever promises are
	 * bought and sold.
	 */
	Q.makePromise = Promise;
	function Promise(descriptor, fallback, inspect) {
	    if (fallback === void 0) {
	        fallback = function (op) {
	            return reject(new Error(
	                "Promise does not support operation: " + op
	            ));
	        };
	    }
	    if (inspect === void 0) {
	        inspect = function () {
	            return {state: "unknown"};
	        };
	    }

	    var promise = object_create(Promise.prototype);

	    promise.promiseDispatch = function (resolve, op, args) {
	        var result;
	        try {
	            if (descriptor[op]) {
	                result = descriptor[op].apply(promise, args);
	            } else {
	                result = fallback.call(promise, op, args);
	            }
	        } catch (exception) {
	            result = reject(exception);
	        }
	        if (resolve) {
	            resolve(result);
	        }
	    };

	    promise.inspect = inspect;

	    // XXX deprecated `valueOf` and `exception` support
	    if (inspect) {
	        var inspected = inspect();
	        if (inspected.state === "rejected") {
	            promise.exception = inspected.reason;
	        }

	        promise.valueOf = function () {
	            var inspected = inspect();
	            if (inspected.state === "pending" ||
	                inspected.state === "rejected") {
	                return promise;
	            }
	            return inspected.value;
	        };
	    }

	    return promise;
	}

	Promise.prototype.toString = function () {
	    return "[object Promise]";
	};

	Promise.prototype.then = function (fulfilled, rejected, progressed) {
	    var self = this;
	    var deferred = defer();
	    var done = false;   // ensure the untrusted promise makes at most a
	                        // single call to one of the callbacks

	    function _fulfilled(value) {
	        try {
	            return typeof fulfilled === "function" ? fulfilled(value) : value;
	        } catch (exception) {
	            return reject(exception);
	        }
	    }

	    function _rejected(exception) {
	        if (typeof rejected === "function") {
	            makeStackTraceLong(exception, self);
	            try {
	                return rejected(exception);
	            } catch (newException) {
	                return reject(newException);
	            }
	        }
	        return reject(exception);
	    }

	    function _progressed(value) {
	        return typeof progressed === "function" ? progressed(value) : value;
	    }

	    Q.nextTick(function () {
	        self.promiseDispatch(function (value) {
	            if (done) {
	                return;
	            }
	            done = true;

	            deferred.resolve(_fulfilled(value));
	        }, "when", [function (exception) {
	            if (done) {
	                return;
	            }
	            done = true;

	            deferred.resolve(_rejected(exception));
	        }]);
	    });

	    // Progress propagator need to be attached in the current tick.
	    self.promiseDispatch(void 0, "when", [void 0, function (value) {
	        var newValue;
	        var threw = false;
	        try {
	            newValue = _progressed(value);
	        } catch (e) {
	            threw = true;
	            if (Q.onerror) {
	                Q.onerror(e);
	            } else {
	                throw e;
	            }
	        }

	        if (!threw) {
	            deferred.notify(newValue);
	        }
	    }]);

	    return deferred.promise;
	};

	Q.tap = function (promise, callback) {
	    return Q(promise).tap(callback);
	};

	/**
	 * Works almost like "finally", but not called for rejections.
	 * Original resolution value is passed through callback unaffected.
	 * Callback may return a promise that will be awaited for.
	 * @param {Function} callback
	 * @returns {Q.Promise}
	 * @example
	 * doSomething()
	 *   .then(...)
	 *   .tap(console.log)
	 *   .then(...);
	 */
	Promise.prototype.tap = function (callback) {
	    callback = Q(callback);

	    return this.then(function (value) {
	        return callback.fcall(value).thenResolve(value);
	    });
	};

	/**
	 * Registers an observer on a promise.
	 *
	 * Guarantees:
	 *
	 * 1. that fulfilled and rejected will be called only once.
	 * 2. that either the fulfilled callback or the rejected callback will be
	 *    called, but not both.
	 * 3. that fulfilled and rejected will not be called in this turn.
	 *
	 * @param value      promise or immediate reference to observe
	 * @param fulfilled  function to be called with the fulfilled value
	 * @param rejected   function to be called with the rejection exception
	 * @param progressed function to be called on any progress notifications
	 * @return promise for the return value from the invoked callback
	 */
	Q.when = when;
	function when(value, fulfilled, rejected, progressed) {
	    return Q(value).then(fulfilled, rejected, progressed);
	}

	Promise.prototype.thenResolve = function (value) {
	    return this.then(function () { return value; });
	};

	Q.thenResolve = function (promise, value) {
	    return Q(promise).thenResolve(value);
	};

	Promise.prototype.thenReject = function (reason) {
	    return this.then(function () { throw reason; });
	};

	Q.thenReject = function (promise, reason) {
	    return Q(promise).thenReject(reason);
	};

	/**
	 * If an object is not a promise, it is as "near" as possible.
	 * If a promise is rejected, it is as "near" as possible too.
	 * If it’s a fulfilled promise, the fulfillment value is nearer.
	 * If it’s a deferred promise and the deferred has been resolved, the
	 * resolution is "nearer".
	 * @param object
	 * @returns most resolved (nearest) form of the object
	 */

	// XXX should we re-do this?
	Q.nearer = nearer;
	function nearer(value) {
	    if (isPromise(value)) {
	        var inspected = value.inspect();
	        if (inspected.state === "fulfilled") {
	            return inspected.value;
	        }
	    }
	    return value;
	}

	/**
	 * @returns whether the given object is a promise.
	 * Otherwise it is a fulfilled value.
	 */
	Q.isPromise = isPromise;
	function isPromise(object) {
	    return object instanceof Promise;
	}

	Q.isPromiseAlike = isPromiseAlike;
	function isPromiseAlike(object) {
	    return isObject(object) && typeof object.then === "function";
	}

	/**
	 * @returns whether the given object is a pending promise, meaning not
	 * fulfilled or rejected.
	 */
	Q.isPending = isPending;
	function isPending(object) {
	    return isPromise(object) && object.inspect().state === "pending";
	}

	Promise.prototype.isPending = function () {
	    return this.inspect().state === "pending";
	};

	/**
	 * @returns whether the given object is a value or fulfilled
	 * promise.
	 */
	Q.isFulfilled = isFulfilled;
	function isFulfilled(object) {
	    return !isPromise(object) || object.inspect().state === "fulfilled";
	}

	Promise.prototype.isFulfilled = function () {
	    return this.inspect().state === "fulfilled";
	};

	/**
	 * @returns whether the given object is a rejected promise.
	 */
	Q.isRejected = isRejected;
	function isRejected(object) {
	    return isPromise(object) && object.inspect().state === "rejected";
	}

	Promise.prototype.isRejected = function () {
	    return this.inspect().state === "rejected";
	};

	//// BEGIN UNHANDLED REJECTION TRACKING

	// This promise library consumes exceptions thrown in handlers so they can be
	// handled by a subsequent promise.  The exceptions get added to this array when
	// they are created, and removed when they are handled.  Note that in ES6 or
	// shimmed environments, this would naturally be a `Set`.
	var unhandledReasons = [];
	var unhandledRejections = [];
	var reportedUnhandledRejections = [];
	var trackUnhandledRejections = true;

	function resetUnhandledRejections() {
	    unhandledReasons.length = 0;
	    unhandledRejections.length = 0;

	    if (!trackUnhandledRejections) {
	        trackUnhandledRejections = true;
	    }
	}

	function trackRejection(promise, reason) {
	    if (!trackUnhandledRejections) {
	        return;
	    }
	    if (typeof process === "object" && typeof process.emit === "function") {
	        Q.nextTick.runAfter(function () {
	            if (array_indexOf(unhandledRejections, promise) !== -1) {
	                process.emit("unhandledRejection", reason, promise);
	                reportedUnhandledRejections.push(promise);
	            }
	        });
	    }

	    unhandledRejections.push(promise);
	    if (reason && typeof reason.stack !== "undefined") {
	        unhandledReasons.push(reason.stack);
	    } else {
	        unhandledReasons.push("(no stack) " + reason);
	    }
	}

	function untrackRejection(promise) {
	    if (!trackUnhandledRejections) {
	        return;
	    }

	    var at = array_indexOf(unhandledRejections, promise);
	    if (at !== -1) {
	        if (typeof process === "object" && typeof process.emit === "function") {
	            Q.nextTick.runAfter(function () {
	                var atReport = array_indexOf(reportedUnhandledRejections, promise);
	                if (atReport !== -1) {
	                    process.emit("rejectionHandled", unhandledReasons[at], promise);
	                    reportedUnhandledRejections.splice(atReport, 1);
	                }
	            });
	        }
	        unhandledRejections.splice(at, 1);
	        unhandledReasons.splice(at, 1);
	    }
	}

	Q.resetUnhandledRejections = resetUnhandledRejections;

	Q.getUnhandledReasons = function () {
	    // Make a copy so that consumers can't interfere with our internal state.
	    return unhandledReasons.slice();
	};

	Q.stopUnhandledRejectionTracking = function () {
	    resetUnhandledRejections();
	    trackUnhandledRejections = false;
	};

	resetUnhandledRejections();

	//// END UNHANDLED REJECTION TRACKING

	/**
	 * Constructs a rejected promise.
	 * @param reason value describing the failure
	 */
	Q.reject = reject;
	function reject(reason) {
	    var rejection = Promise({
	        "when": function (rejected) {
	            // note that the error has been handled
	            if (rejected) {
	                untrackRejection(this);
	            }
	            return rejected ? rejected(reason) : this;
	        }
	    }, function fallback() {
	        return this;
	    }, function inspect() {
	        return { state: "rejected", reason: reason };
	    });

	    // Note that the reason has not been handled.
	    trackRejection(rejection, reason);

	    return rejection;
	}

	/**
	 * Constructs a fulfilled promise for an immediate reference.
	 * @param value immediate reference
	 */
	Q.fulfill = fulfill;
	function fulfill(value) {
	    return Promise({
	        "when": function () {
	            return value;
	        },
	        "get": function (name) {
	            return value[name];
	        },
	        "set": function (name, rhs) {
	            value[name] = rhs;
	        },
	        "delete": function (name) {
	            delete value[name];
	        },
	        "post": function (name, args) {
	            // Mark Miller proposes that post with no name should apply a
	            // promised function.
	            if (name === null || name === void 0) {
	                return value.apply(void 0, args);
	            } else {
	                return value[name].apply(value, args);
	            }
	        },
	        "apply": function (thisp, args) {
	            return value.apply(thisp, args);
	        },
	        "keys": function () {
	            return object_keys(value);
	        }
	    }, void 0, function inspect() {
	        return { state: "fulfilled", value: value };
	    });
	}

	/**
	 * Converts thenables to Q promises.
	 * @param promise thenable promise
	 * @returns a Q promise
	 */
	function coerce(promise) {
	    var deferred = defer();
	    Q.nextTick(function () {
	        try {
	            promise.then(deferred.resolve, deferred.reject, deferred.notify);
	        } catch (exception) {
	            deferred.reject(exception);
	        }
	    });
	    return deferred.promise;
	}

	/**
	 * Annotates an object such that it will never be
	 * transferred away from this process over any promise
	 * communication channel.
	 * @param object
	 * @returns promise a wrapping of that object that
	 * additionally responds to the "isDef" message
	 * without a rejection.
	 */
	Q.master = master;
	function master(object) {
	    return Promise({
	        "isDef": function () {}
	    }, function fallback(op, args) {
	        return dispatch(object, op, args);
	    }, function () {
	        return Q(object).inspect();
	    });
	}

	/**
	 * Spreads the values of a promised array of arguments into the
	 * fulfillment callback.
	 * @param fulfilled callback that receives variadic arguments from the
	 * promised array
	 * @param rejected callback that receives the exception if the promise
	 * is rejected.
	 * @returns a promise for the return value or thrown exception of
	 * either callback.
	 */
	Q.spread = spread;
	function spread(value, fulfilled, rejected) {
	    return Q(value).spread(fulfilled, rejected);
	}

	Promise.prototype.spread = function (fulfilled, rejected) {
	    return this.all().then(function (array) {
	        return fulfilled.apply(void 0, array);
	    }, rejected);
	};

	/**
	 * The async function is a decorator for generator functions, turning
	 * them into asynchronous generators.  Although generators are only part
	 * of the newest ECMAScript 6 drafts, this code does not cause syntax
	 * errors in older engines.  This code should continue to work and will
	 * in fact improve over time as the language improves.
	 *
	 * ES6 generators are currently part of V8 version 3.19 with the
	 * --harmony-generators runtime flag enabled.  SpiderMonkey has had them
	 * for longer, but under an older Python-inspired form.  This function
	 * works on both kinds of generators.
	 *
	 * Decorates a generator function such that:
	 *  - it may yield promises
	 *  - execution will continue when that promise is fulfilled
	 *  - the value of the yield expression will be the fulfilled value
	 *  - it returns a promise for the return value (when the generator
	 *    stops iterating)
	 *  - the decorated function returns a promise for the return value
	 *    of the generator or the first rejected promise among those
	 *    yielded.
	 *  - if an error is thrown in the generator, it propagates through
	 *    every following yield until it is caught, or until it escapes
	 *    the generator function altogether, and is translated into a
	 *    rejection for the promise returned by the decorated generator.
	 */
	Q.async = async;
	function async(makeGenerator) {
	    return function () {
	        // when verb is "send", arg is a value
	        // when verb is "throw", arg is an exception
	        function continuer(verb, arg) {
	            var result;

	            // Until V8 3.19 / Chromium 29 is released, SpiderMonkey is the only
	            // engine that has a deployed base of browsers that support generators.
	            // However, SM's generators use the Python-inspired semantics of
	            // outdated ES6 drafts.  We would like to support ES6, but we'd also
	            // like to make it possible to use generators in deployed browsers, so
	            // we also support Python-style generators.  At some point we can remove
	            // this block.

	            if (typeof StopIteration === "undefined") {
	                // ES6 Generators
	                try {
	                    result = generator[verb](arg);
	                } catch (exception) {
	                    return reject(exception);
	                }
	                if (result.done) {
	                    return Q(result.value);
	                } else {
	                    return when(result.value, callback, errback);
	                }
	            } else {
	                // SpiderMonkey Generators
	                // FIXME: Remove this case when SM does ES6 generators.
	                try {
	                    result = generator[verb](arg);
	                } catch (exception) {
	                    if (isStopIteration(exception)) {
	                        return Q(exception.value);
	                    } else {
	                        return reject(exception);
	                    }
	                }
	                return when(result, callback, errback);
	            }
	        }
	        var generator = makeGenerator.apply(this, arguments);
	        var callback = continuer.bind(continuer, "next");
	        var errback = continuer.bind(continuer, "throw");
	        return callback();
	    };
	}

	/**
	 * The spawn function is a small wrapper around async that immediately
	 * calls the generator and also ends the promise chain, so that any
	 * unhandled errors are thrown instead of forwarded to the error
	 * handler. This is useful because it's extremely common to run
	 * generators at the top-level to work with libraries.
	 */
	Q.spawn = spawn;
	function spawn(makeGenerator) {
	    Q.done(Q.async(makeGenerator)());
	}

	// FIXME: Remove this interface once ES6 generators are in SpiderMonkey.
	/**
	 * Throws a ReturnValue exception to stop an asynchronous generator.
	 *
	 * This interface is a stop-gap measure to support generator return
	 * values in older Firefox/SpiderMonkey.  In browsers that support ES6
	 * generators like Chromium 29, just use "return" in your generator
	 * functions.
	 *
	 * @param value the return value for the surrounding generator
	 * @throws ReturnValue exception with the value.
	 * @example
	 * // ES6 style
	 * Q.async(function* () {
	 *      var foo = yield getFooPromise();
	 *      var bar = yield getBarPromise();
	 *      return foo + bar;
	 * })
	 * // Older SpiderMonkey style
	 * Q.async(function () {
	 *      var foo = yield getFooPromise();
	 *      var bar = yield getBarPromise();
	 *      Q.return(foo + bar);
	 * })
	 */
	Q["return"] = _return;
	function _return(value) {
	    throw new QReturnValue(value);
	}

	/**
	 * The promised function decorator ensures that any promise arguments
	 * are settled and passed as values (`this` is also settled and passed
	 * as a value).  It will also ensure that the result of a function is
	 * always a promise.
	 *
	 * @example
	 * var add = Q.promised(function (a, b) {
	 *     return a + b;
	 * });
	 * add(Q(a), Q(B));
	 *
	 * @param {function} callback The function to decorate
	 * @returns {function} a function that has been decorated.
	 */
	Q.promised = promised;
	function promised(callback) {
	    return function () {
	        return spread([this, all(arguments)], function (self, args) {
	            return callback.apply(self, args);
	        });
	    };
	}

	/**
	 * sends a message to a value in a future turn
	 * @param object* the recipient
	 * @param op the name of the message operation, e.g., "when",
	 * @param args further arguments to be forwarded to the operation
	 * @returns result {Promise} a promise for the result of the operation
	 */
	Q.dispatch = dispatch;
	function dispatch(object, op, args) {
	    return Q(object).dispatch(op, args);
	}

	Promise.prototype.dispatch = function (op, args) {
	    var self = this;
	    var deferred = defer();
	    Q.nextTick(function () {
	        self.promiseDispatch(deferred.resolve, op, args);
	    });
	    return deferred.promise;
	};

	/**
	 * Gets the value of a property in a future turn.
	 * @param object    promise or immediate reference for target object
	 * @param name      name of property to get
	 * @return promise for the property value
	 */
	Q.get = function (object, key) {
	    return Q(object).dispatch("get", [key]);
	};

	Promise.prototype.get = function (key) {
	    return this.dispatch("get", [key]);
	};

	/**
	 * Sets the value of a property in a future turn.
	 * @param object    promise or immediate reference for object object
	 * @param name      name of property to set
	 * @param value     new value of property
	 * @return promise for the return value
	 */
	Q.set = function (object, key, value) {
	    return Q(object).dispatch("set", [key, value]);
	};

	Promise.prototype.set = function (key, value) {
	    return this.dispatch("set", [key, value]);
	};

	/**
	 * Deletes a property in a future turn.
	 * @param object    promise or immediate reference for target object
	 * @param name      name of property to delete
	 * @return promise for the return value
	 */
	Q.del = // XXX legacy
	Q["delete"] = function (object, key) {
	    return Q(object).dispatch("delete", [key]);
	};

	Promise.prototype.del = // XXX legacy
	Promise.prototype["delete"] = function (key) {
	    return this.dispatch("delete", [key]);
	};

	/**
	 * Invokes a method in a future turn.
	 * @param object    promise or immediate reference for target object
	 * @param name      name of method to invoke
	 * @param value     a value to post, typically an array of
	 *                  invocation arguments for promises that
	 *                  are ultimately backed with `resolve` values,
	 *                  as opposed to those backed with URLs
	 *                  wherein the posted value can be any
	 *                  JSON serializable object.
	 * @return promise for the return value
	 */
	// bound locally because it is used by other methods
	Q.mapply = // XXX As proposed by "Redsandro"
	Q.post = function (object, name, args) {
	    return Q(object).dispatch("post", [name, args]);
	};

	Promise.prototype.mapply = // XXX As proposed by "Redsandro"
	Promise.prototype.post = function (name, args) {
	    return this.dispatch("post", [name, args]);
	};

	/**
	 * Invokes a method in a future turn.
	 * @param object    promise or immediate reference for target object
	 * @param name      name of method to invoke
	 * @param ...args   array of invocation arguments
	 * @return promise for the return value
	 */
	Q.send = // XXX Mark Miller's proposed parlance
	Q.mcall = // XXX As proposed by "Redsandro"
	Q.invoke = function (object, name /*...args*/) {
	    return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
	};

	Promise.prototype.send = // XXX Mark Miller's proposed parlance
	Promise.prototype.mcall = // XXX As proposed by "Redsandro"
	Promise.prototype.invoke = function (name /*...args*/) {
	    return this.dispatch("post", [name, array_slice(arguments, 1)]);
	};

	/**
	 * Applies the promised function in a future turn.
	 * @param object    promise or immediate reference for target function
	 * @param args      array of application arguments
	 */
	Q.fapply = function (object, args) {
	    return Q(object).dispatch("apply", [void 0, args]);
	};

	Promise.prototype.fapply = function (args) {
	    return this.dispatch("apply", [void 0, args]);
	};

	/**
	 * Calls the promised function in a future turn.
	 * @param object    promise or immediate reference for target function
	 * @param ...args   array of application arguments
	 */
	Q["try"] =
	Q.fcall = function (object /* ...args*/) {
	    return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
	};

	Promise.prototype.fcall = function (/*...args*/) {
	    return this.dispatch("apply", [void 0, array_slice(arguments)]);
	};

	/**
	 * Binds the promised function, transforming return values into a fulfilled
	 * promise and thrown errors into a rejected one.
	 * @param object    promise or immediate reference for target function
	 * @param ...args   array of application arguments
	 */
	Q.fbind = function (object /*...args*/) {
	    var promise = Q(object);
	    var args = array_slice(arguments, 1);
	    return function fbound() {
	        return promise.dispatch("apply", [
	            this,
	            args.concat(array_slice(arguments))
	        ]);
	    };
	};
	Promise.prototype.fbind = function (/*...args*/) {
	    var promise = this;
	    var args = array_slice(arguments);
	    return function fbound() {
	        return promise.dispatch("apply", [
	            this,
	            args.concat(array_slice(arguments))
	        ]);
	    };
	};

	/**
	 * Requests the names of the owned properties of a promised
	 * object in a future turn.
	 * @param object    promise or immediate reference for target object
	 * @return promise for the keys of the eventually settled object
	 */
	Q.keys = function (object) {
	    return Q(object).dispatch("keys", []);
	};

	Promise.prototype.keys = function () {
	    return this.dispatch("keys", []);
	};

	/**
	 * Turns an array of promises into a promise for an array.  If any of
	 * the promises gets rejected, the whole array is rejected immediately.
	 * @param {Array*} an array (or promise for an array) of values (or
	 * promises for values)
	 * @returns a promise for an array of the corresponding values
	 */
	// By Mark Miller
	// http://wiki.ecmascript.org/doku.php?id=strawman:concurrency&rev=1308776521#allfulfilled
	Q.all = all;
	function all(promises) {
	    return when(promises, function (promises) {
	        var pendingCount = 0;
	        var deferred = defer();
	        array_reduce(promises, function (undefined, promise, index) {
	            var snapshot;
	            if (
	                isPromise(promise) &&
	                (snapshot = promise.inspect()).state === "fulfilled"
	            ) {
	                promises[index] = snapshot.value;
	            } else {
	                ++pendingCount;
	                when(
	                    promise,
	                    function (value) {
	                        promises[index] = value;
	                        if (--pendingCount === 0) {
	                            deferred.resolve(promises);
	                        }
	                    },
	                    deferred.reject,
	                    function (progress) {
	                        deferred.notify({ index: index, value: progress });
	                    }
	                );
	            }
	        }, void 0);
	        if (pendingCount === 0) {
	            deferred.resolve(promises);
	        }
	        return deferred.promise;
	    });
	}

	Promise.prototype.all = function () {
	    return all(this);
	};

	/**
	 * Returns the first resolved promise of an array. Prior rejected promises are
	 * ignored.  Rejects only if all promises are rejected.
	 * @param {Array*} an array containing values or promises for values
	 * @returns a promise fulfilled with the value of the first resolved promise,
	 * or a rejected promise if all promises are rejected.
	 */
	Q.any = any;

	function any(promises) {
	    if (promises.length === 0) {
	        return Q.resolve();
	    }

	    var deferred = Q.defer();
	    var pendingCount = 0;
	    array_reduce(promises, function (prev, current, index) {
	        var promise = promises[index];

	        pendingCount++;

	        when(promise, onFulfilled, onRejected, onProgress);
	        function onFulfilled(result) {
	            deferred.resolve(result);
	        }
	        function onRejected() {
	            pendingCount--;
	            if (pendingCount === 0) {
	                deferred.reject(new Error(
	                    "Can't get fulfillment value from any promise, all " +
	                    "promises were rejected."
	                ));
	            }
	        }
	        function onProgress(progress) {
	            deferred.notify({
	                index: index,
	                value: progress
	            });
	        }
	    }, undefined);

	    return deferred.promise;
	}

	Promise.prototype.any = function () {
	    return any(this);
	};

	/**
	 * Waits for all promises to be settled, either fulfilled or
	 * rejected.  This is distinct from `all` since that would stop
	 * waiting at the first rejection.  The promise returned by
	 * `allResolved` will never be rejected.
	 * @param promises a promise for an array (or an array) of promises
	 * (or values)
	 * @return a promise for an array of promises
	 */
	Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
	function allResolved(promises) {
	    return when(promises, function (promises) {
	        promises = array_map(promises, Q);
	        return when(all(array_map(promises, function (promise) {
	            return when(promise, noop, noop);
	        })), function () {
	            return promises;
	        });
	    });
	}

	Promise.prototype.allResolved = function () {
	    return allResolved(this);
	};

	/**
	 * @see Promise#allSettled
	 */
	Q.allSettled = allSettled;
	function allSettled(promises) {
	    return Q(promises).allSettled();
	}

	/**
	 * Turns an array of promises into a promise for an array of their states (as
	 * returned by `inspect`) when they have all settled.
	 * @param {Array[Any*]} values an array (or promise for an array) of values (or
	 * promises for values)
	 * @returns {Array[State]} an array of states for the respective values.
	 */
	Promise.prototype.allSettled = function () {
	    return this.then(function (promises) {
	        return all(array_map(promises, function (promise) {
	            promise = Q(promise);
	            function regardless() {
	                return promise.inspect();
	            }
	            return promise.then(regardless, regardless);
	        }));
	    });
	};

	/**
	 * Captures the failure of a promise, giving an oportunity to recover
	 * with a callback.  If the given promise is fulfilled, the returned
	 * promise is fulfilled.
	 * @param {Any*} promise for something
	 * @param {Function} callback to fulfill the returned promise if the
	 * given promise is rejected
	 * @returns a promise for the return value of the callback
	 */
	Q.fail = // XXX legacy
	Q["catch"] = function (object, rejected) {
	    return Q(object).then(void 0, rejected);
	};

	Promise.prototype.fail = // XXX legacy
	Promise.prototype["catch"] = function (rejected) {
	    return this.then(void 0, rejected);
	};

	/**
	 * Attaches a listener that can respond to progress notifications from a
	 * promise's originating deferred. This listener receives the exact arguments
	 * passed to ``deferred.notify``.
	 * @param {Any*} promise for something
	 * @param {Function} callback to receive any progress notifications
	 * @returns the given promise, unchanged
	 */
	Q.progress = progress;
	function progress(object, progressed) {
	    return Q(object).then(void 0, void 0, progressed);
	}

	Promise.prototype.progress = function (progressed) {
	    return this.then(void 0, void 0, progressed);
	};

	/**
	 * Provides an opportunity to observe the settling of a promise,
	 * regardless of whether the promise is fulfilled or rejected.  Forwards
	 * the resolution to the returned promise when the callback is done.
	 * The callback can return a promise to defer completion.
	 * @param {Any*} promise
	 * @param {Function} callback to observe the resolution of the given
	 * promise, takes no arguments.
	 * @returns a promise for the resolution of the given promise when
	 * ``fin`` is done.
	 */
	Q.fin = // XXX legacy
	Q["finally"] = function (object, callback) {
	    return Q(object)["finally"](callback);
	};

	Promise.prototype.fin = // XXX legacy
	Promise.prototype["finally"] = function (callback) {
	    callback = Q(callback);
	    return this.then(function (value) {
	        return callback.fcall().then(function () {
	            return value;
	        });
	    }, function (reason) {
	        // TODO attempt to recycle the rejection with "this".
	        return callback.fcall().then(function () {
	            throw reason;
	        });
	    });
	};

	/**
	 * Terminates a chain of promises, forcing rejections to be
	 * thrown as exceptions.
	 * @param {Any*} promise at the end of a chain of promises
	 * @returns nothing
	 */
	Q.done = function (object, fulfilled, rejected, progress) {
	    return Q(object).done(fulfilled, rejected, progress);
	};

	Promise.prototype.done = function (fulfilled, rejected, progress) {
	    var onUnhandledError = function (error) {
	        // forward to a future turn so that ``when``
	        // does not catch it and turn it into a rejection.
	        Q.nextTick(function () {
	            makeStackTraceLong(error, promise);
	            if (Q.onerror) {
	                Q.onerror(error);
	            } else {
	                throw error;
	            }
	        });
	    };

	    // Avoid unnecessary `nextTick`ing via an unnecessary `when`.
	    var promise = fulfilled || rejected || progress ?
	        this.then(fulfilled, rejected, progress) :
	        this;

	    if (typeof process === "object" && process && process.domain) {
	        onUnhandledError = process.domain.bind(onUnhandledError);
	    }

	    promise.then(void 0, onUnhandledError);
	};

	/**
	 * Causes a promise to be rejected if it does not get fulfilled before
	 * some milliseconds time out.
	 * @param {Any*} promise
	 * @param {Number} milliseconds timeout
	 * @param {Any*} custom error message or Error object (optional)
	 * @returns a promise for the resolution of the given promise if it is
	 * fulfilled before the timeout, otherwise rejected.
	 */
	Q.timeout = function (object, ms, error) {
	    return Q(object).timeout(ms, error);
	};

	Promise.prototype.timeout = function (ms, error) {
	    var deferred = defer();
	    var timeoutId = setTimeout(function () {
	        if (!error || "string" === typeof error) {
	            error = new Error(error || "Timed out after " + ms + " ms");
	            error.code = "ETIMEDOUT";
	        }
	        deferred.reject(error);
	    }, ms);

	    this.then(function (value) {
	        clearTimeout(timeoutId);
	        deferred.resolve(value);
	    }, function (exception) {
	        clearTimeout(timeoutId);
	        deferred.reject(exception);
	    }, deferred.notify);

	    return deferred.promise;
	};

	/**
	 * Returns a promise for the given value (or promised value), some
	 * milliseconds after it resolved. Passes rejections immediately.
	 * @param {Any*} promise
	 * @param {Number} milliseconds
	 * @returns a promise for the resolution of the given promise after milliseconds
	 * time has elapsed since the resolution of the given promise.
	 * If the given promise rejects, that is passed immediately.
	 */
	Q.delay = function (object, timeout) {
	    if (timeout === void 0) {
	        timeout = object;
	        object = void 0;
	    }
	    return Q(object).delay(timeout);
	};

	Promise.prototype.delay = function (timeout) {
	    return this.then(function (value) {
	        var deferred = defer();
	        setTimeout(function () {
	            deferred.resolve(value);
	        }, timeout);
	        return deferred.promise;
	    });
	};

	/**
	 * Passes a continuation to a Node function, which is called with the given
	 * arguments provided as an array, and returns a promise.
	 *
	 *      Q.nfapply(FS.readFile, [__filename])
	 *      .then(function (content) {
	 *      })
	 *
	 */
	Q.nfapply = function (callback, args) {
	    return Q(callback).nfapply(args);
	};

	Promise.prototype.nfapply = function (args) {
	    var deferred = defer();
	    var nodeArgs = array_slice(args);
	    nodeArgs.push(deferred.makeNodeResolver());
	    this.fapply(nodeArgs).fail(deferred.reject);
	    return deferred.promise;
	};

	/**
	 * Passes a continuation to a Node function, which is called with the given
	 * arguments provided individually, and returns a promise.
	 * @example
	 * Q.nfcall(FS.readFile, __filename)
	 * .then(function (content) {
	 * })
	 *
	 */
	Q.nfcall = function (callback /*...args*/) {
	    var args = array_slice(arguments, 1);
	    return Q(callback).nfapply(args);
	};

	Promise.prototype.nfcall = function (/*...args*/) {
	    var nodeArgs = array_slice(arguments);
	    var deferred = defer();
	    nodeArgs.push(deferred.makeNodeResolver());
	    this.fapply(nodeArgs).fail(deferred.reject);
	    return deferred.promise;
	};

	/**
	 * Wraps a NodeJS continuation passing function and returns an equivalent
	 * version that returns a promise.
	 * @example
	 * Q.nfbind(FS.readFile, __filename)("utf-8")
	 * .then(console.log)
	 * .done()
	 */
	Q.nfbind =
	Q.denodeify = function (callback /*...args*/) {
	    var baseArgs = array_slice(arguments, 1);
	    return function () {
	        var nodeArgs = baseArgs.concat(array_slice(arguments));
	        var deferred = defer();
	        nodeArgs.push(deferred.makeNodeResolver());
	        Q(callback).fapply(nodeArgs).fail(deferred.reject);
	        return deferred.promise;
	    };
	};

	Promise.prototype.nfbind =
	Promise.prototype.denodeify = function (/*...args*/) {
	    var args = array_slice(arguments);
	    args.unshift(this);
	    return Q.denodeify.apply(void 0, args);
	};

	Q.nbind = function (callback, thisp /*...args*/) {
	    var baseArgs = array_slice(arguments, 2);
	    return function () {
	        var nodeArgs = baseArgs.concat(array_slice(arguments));
	        var deferred = defer();
	        nodeArgs.push(deferred.makeNodeResolver());
	        function bound() {
	            return callback.apply(thisp, arguments);
	        }
	        Q(bound).fapply(nodeArgs).fail(deferred.reject);
	        return deferred.promise;
	    };
	};

	Promise.prototype.nbind = function (/*thisp, ...args*/) {
	    var args = array_slice(arguments, 0);
	    args.unshift(this);
	    return Q.nbind.apply(void 0, args);
	};

	/**
	 * Calls a method of a Node-style object that accepts a Node-style
	 * callback with a given array of arguments, plus a provided callback.
	 * @param object an object that has the named method
	 * @param {String} name name of the method of object
	 * @param {Array} args arguments to pass to the method; the callback
	 * will be provided by Q and appended to these arguments.
	 * @returns a promise for the value or error
	 */
	Q.nmapply = // XXX As proposed by "Redsandro"
	Q.npost = function (object, name, args) {
	    return Q(object).npost(name, args);
	};

	Promise.prototype.nmapply = // XXX As proposed by "Redsandro"
	Promise.prototype.npost = function (name, args) {
	    var nodeArgs = array_slice(args || []);
	    var deferred = defer();
	    nodeArgs.push(deferred.makeNodeResolver());
	    this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
	    return deferred.promise;
	};

	/**
	 * Calls a method of a Node-style object that accepts a Node-style
	 * callback, forwarding the given variadic arguments, plus a provided
	 * callback argument.
	 * @param object an object that has the named method
	 * @param {String} name name of the method of object
	 * @param ...args arguments to pass to the method; the callback will
	 * be provided by Q and appended to these arguments.
	 * @returns a promise for the value or error
	 */
	Q.nsend = // XXX Based on Mark Miller's proposed "send"
	Q.nmcall = // XXX Based on "Redsandro's" proposal
	Q.ninvoke = function (object, name /*...args*/) {
	    var nodeArgs = array_slice(arguments, 2);
	    var deferred = defer();
	    nodeArgs.push(deferred.makeNodeResolver());
	    Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
	    return deferred.promise;
	};

	Promise.prototype.nsend = // XXX Based on Mark Miller's proposed "send"
	Promise.prototype.nmcall = // XXX Based on "Redsandro's" proposal
	Promise.prototype.ninvoke = function (name /*...args*/) {
	    var nodeArgs = array_slice(arguments, 1);
	    var deferred = defer();
	    nodeArgs.push(deferred.makeNodeResolver());
	    this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
	    return deferred.promise;
	};

	/**
	 * If a function would like to support both Node continuation-passing-style and
	 * promise-returning-style, it can end its internal promise chain with
	 * `nodeify(nodeback)`, forwarding the optional nodeback argument.  If the user
	 * elects to use a nodeback, the result will be sent there.  If they do not
	 * pass a nodeback, they will receive the result promise.
	 * @param object a result (or a promise for a result)
	 * @param {Function} nodeback a Node.js-style callback
	 * @returns either the promise or nothing
	 */
	Q.nodeify = nodeify;
	function nodeify(object, nodeback) {
	    return Q(object).nodeify(nodeback);
	}

	Promise.prototype.nodeify = function (nodeback) {
	    if (nodeback) {
	        this.then(function (value) {
	            Q.nextTick(function () {
	                nodeback(null, value);
	            });
	        }, function (error) {
	            Q.nextTick(function () {
	                nodeback(error);
	            });
	        });
	    } else {
	        return this;
	    }
	};

	Q.noConflict = function() {
	    throw new Error("Q.noConflict only works when Q is used as a global");
	};

	// All code before this point will be filtered from stack traces.
	var qEndingLine = captureLine();

	return Q;

	});

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7), __webpack_require__(187).setImmediate))

/***/ },
/* 187 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(setImmediate, clearImmediate) {var nextTick = __webpack_require__(7).nextTick;
	var apply = Function.prototype.apply;
	var slice = Array.prototype.slice;
	var immediateIds = {};
	var nextImmediateId = 0;

	// DOM APIs, for completeness

	exports.setTimeout = function() {
	  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
	};
	exports.setInterval = function() {
	  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
	};
	exports.clearTimeout =
	exports.clearInterval = function(timeout) { timeout.close(); };

	function Timeout(id, clearFn) {
	  this._id = id;
	  this._clearFn = clearFn;
	}
	Timeout.prototype.unref = Timeout.prototype.ref = function() {};
	Timeout.prototype.close = function() {
	  this._clearFn.call(window, this._id);
	};

	// Does not start the time, just sets up the members needed.
	exports.enroll = function(item, msecs) {
	  clearTimeout(item._idleTimeoutId);
	  item._idleTimeout = msecs;
	};

	exports.unenroll = function(item) {
	  clearTimeout(item._idleTimeoutId);
	  item._idleTimeout = -1;
	};

	exports._unrefActive = exports.active = function(item) {
	  clearTimeout(item._idleTimeoutId);

	  var msecs = item._idleTimeout;
	  if (msecs >= 0) {
	    item._idleTimeoutId = setTimeout(function onTimeout() {
	      if (item._onTimeout)
	        item._onTimeout();
	    }, msecs);
	  }
	};

	// That's not how node.js implements it but the exposed api is the same.
	exports.setImmediate = typeof setImmediate === "function" ? setImmediate : function(fn) {
	  var id = nextImmediateId++;
	  var args = arguments.length < 2 ? false : slice.call(arguments, 1);

	  immediateIds[id] = true;

	  nextTick(function onNextTick() {
	    if (immediateIds[id]) {
	      // fn.call() is faster so we optimize for the common use-case
	      // @see http://jsperf.com/call-apply-segu
	      if (args) {
	        fn.apply(null, args);
	      } else {
	        fn.call(null);
	      }
	      // Prevent ids from leaking
	      exports.clearImmediate(id);
	    }
	  });

	  return id;
	};

	exports.clearImmediate = typeof clearImmediate === "function" ? clearImmediate : function(id) {
	  delete immediateIds[id];
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(187).setImmediate, __webpack_require__(187).clearImmediate))

/***/ },
/* 188 */
/***/ function(module, exports, __webpack_require__) {

	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var ImmutableClass = __webpack_require__(189);
	var q = __webpack_require__(186);
	var Q = q;
	var chronoshift = __webpack_require__(179);
	var Chronoshift = chronoshift;
	var dummyObject = {};
	var objectHasOwnProperty = Object.prototype.hasOwnProperty;
	function hasOwnProperty(obj, key) {
	    return objectHasOwnProperty.call(obj, key);
	}
	function repeat(str, times) {
	    return new Array(times + 1).join(str);
	}
	function arraysEqual(a, b) {
	    if (a === b)
	        return true;
	    var length = a.length;
	    if (length !== b.length)
	        return false;
	    for (var i = 0; i < length; i++) {
	        if (a[i] !== b[i])
	            return false;
	    }
	    return true;
	}
	function dictEqual(dictA, dictB) {
	    if (dictA === dictB)
	        return true;
	    if (!dictA !== !dictB)
	        return false;
	    var keys = Object.keys(dictA);
	    if (keys.length !== Object.keys(dictB).length)
	        return false;
	    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
	        var key = keys_1[_i];
	        if (dictA[key] !== dictB[key])
	            return false;
	    }
	    return true;
	}
	var expressionParser;
	var plyqlParser;
	var Plywood;
	(function (Plywood) {
	    Plywood.version = '0.10.10';
	    Plywood.isInstanceOf = ImmutableClass.isInstanceOf;
	    Plywood.isImmutableClass = ImmutableClass.isImmutableClass;
	    Plywood.generalEqual = ImmutableClass.generalEqual;
	    Plywood.immutableEqual = ImmutableClass.immutableEqual;
	    Plywood.immutableArraysEqual = ImmutableClass.immutableArraysEqual;
	    Plywood.immutableLookupsEqual = ImmutableClass.immutableLookupsEqual;
	    Plywood.Timezone = Chronoshift.Timezone;
	    Plywood.Duration = Chronoshift.Duration;
	    Plywood.WallTime = Chronoshift.WallTime;
	    Plywood.parseISODate = Chronoshift.parseISODate;
	    Plywood.defaultParserTimezone = Plywood.Timezone.UTC;
	    function safeAdd(num, delta) {
	        var stringDelta = String(delta);
	        var dotIndex = stringDelta.indexOf(".");
	        if (dotIndex === -1 || stringDelta.length === 18) {
	            return num + delta;
	        }
	        else {
	            var scale = Math.pow(10, stringDelta.length - dotIndex - 1);
	            return (num * scale + delta * scale) / scale;
	        }
	    }
	    Plywood.safeAdd = safeAdd;
	    function continuousFloorExpression(variable, floorFn, size, offset) {
	        var expr = variable;
	        if (offset !== 0) {
	            expr = expr + " - " + offset;
	        }
	        if (offset !== 0 && size !== 1) {
	            expr = "(" + expr + ")";
	        }
	        if (size !== 1) {
	            expr = expr + " / " + size;
	        }
	        expr = floorFn + "(" + expr + ")";
	        if (size !== 1) {
	            expr = expr + " * " + size;
	        }
	        if (offset !== 0) {
	            expr = expr + " + " + offset;
	        }
	        return expr;
	    }
	    Plywood.continuousFloorExpression = continuousFloorExpression;
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var TIME_BUCKETING = {
	        "PT1S": "%Y-%m-%dT%H:%i:%SZ",
	        "PT1M": "%Y-%m-%dT%H:%iZ",
	        "PT1H": "%Y-%m-%dT%H:00Z",
	        "P1D": "%Y-%m-%dZ",
	        "P1M": "%Y-%m-01Z",
	        "P1Y": "%Y-01-01Z"
	    };
	    var SQLDialect = (function () {
	        function SQLDialect() {
	        }
	        SQLDialect.prototype.escapeName = function (name) {
	            if (name.indexOf('`') !== -1)
	                throw new Error("can not convert to SQL");
	            return '`' + name + '`';
	        };
	        SQLDialect.prototype.escapeLiteral = function (name) {
	            return JSON.stringify(name);
	        };
	        SQLDialect.prototype.booleanToSQL = function (bool) {
	            return ('' + bool).toUpperCase();
	        };
	        SQLDialect.prototype.numberToSQL = function (num) {
	            if (num === null)
	                return 'NULL';
	            return '' + num;
	        };
	        SQLDialect.prototype.timeToSQL = function (date) {
	            if (!date)
	                return 'NULL';
	            var str = date.toISOString()
	                .replace('T', ' ')
	                .replace('Z', '')
	                .replace(/\.000$/, '')
	                .replace(/ 00:00:00$/, '');
	            return "TIMESTAMP('" + str + "')";
	        };
	        SQLDialect.prototype.aggregateFilterIfNeeded = function (inputSQL, expressionSQL, zeroSQL) {
	            if (zeroSQL === void 0) { zeroSQL = '0'; }
	            var whereIndex = inputSQL.indexOf(' WHERE ');
	            if (whereIndex === -1)
	                return expressionSQL;
	            var filterSQL = inputSQL.substr(whereIndex + 7);
	            return "IF(" + filterSQL + "," + expressionSQL + "," + zeroSQL + ")";
	        };
	        SQLDialect.prototype.inExpression = function (operand, start, end, bounds) {
	            if (start === end && bounds === '[]')
	                return operand + "=" + start;
	            var startSQL = null;
	            if (start !== 'NULL') {
	                startSQL = start + (bounds[0] === '[' ? '<=' : '<') + operand;
	            }
	            var endSQL = null;
	            if (end !== 'NULL') {
	                endSQL = operand + (bounds[1] === ']' ? '<=' : '<') + end;
	            }
	            if (startSQL) {
	                return endSQL ? "(" + startSQL + " AND " + endSQL + ")" : startSQL;
	            }
	            else {
	                return endSQL ? endSQL : 'TRUE';
	            }
	        };
	        SQLDialect.prototype.timeFloorExpression = function (operand, duration, timezone) {
	            throw new Error('Dialect must implement timeFloorExpression');
	        };
	        SQLDialect.prototype.timeBucketExpression = function (operand, duration, timezone) {
	            throw new Error('Dialect must implement timeBucketExpression');
	        };
	        SQLDialect.prototype.timePartExpression = function (operand, part, timezone) {
	            throw new Error('Dialect must implement timePartExpression');
	        };
	        SQLDialect.prototype.timeShiftExpression = function (operand, duration, timezone) {
	            throw new Error('Dialect must implement timeShiftExpression');
	        };
	        return SQLDialect;
	    }());
	    Plywood.SQLDialect = SQLDialect;
	    var MySQLDialect = (function (_super) {
	        __extends(MySQLDialect, _super);
	        function MySQLDialect() {
	            _super.call(this);
	        }
	        MySQLDialect.prototype.timezoneConvert = function (operand, timezone) {
	            if (!timezone || timezone.isUTC())
	                return operand;
	            return "CONVERT_TZ(" + operand + ",'+0:00','" + timezone + "')";
	        };
	        MySQLDialect.prototype.timeFloorExpression = function (operand, duration, timezone) {
	            var bucketFormat = TIME_BUCKETING[duration.toString()];
	            if (!bucketFormat)
	                throw new Error("unsupported duration '" + duration + "'");
	            return "DATE_FORMAT(" + this.timezoneConvert(operand, timezone) + ",'" + bucketFormat + "')";
	        };
	        MySQLDialect.prototype.timeBucketExpression = function (operand, duration, timezone) {
	            return this.timeFloorExpression(operand, duration, timezone);
	        };
	        MySQLDialect.prototype.timePartExpression = function (operand, part, timezone) {
	            var timePartFunction = MySQLDialect.TIME_PART_TO_FUNCTION[part];
	            if (!timePartFunction)
	                throw new Error("unsupported part " + part + " in MySQL dialect");
	            return timePartFunction.replace(/\$\$/g, this.timezoneConvert(operand, timezone));
	        };
	        MySQLDialect.prototype.timeShiftExpression = function (operand, duration, timezone) {
	            var sqlFn = "DATE_ADD(";
	            var spans = duration.valueOf();
	            if (spans.week) {
	                return sqlFn + operand + ", INTERVAL " + String(spans.week) + ' WEEK)';
	            }
	            if (spans.year || spans.month) {
	                var expr = String(spans.year || 0) + "-" + String(spans.month || 0);
	                operand = sqlFn + operand + ", INTERVAL '" + expr + "' YEAR_MONTH)";
	            }
	            if (spans.day || spans.hour || spans.minute || spans.second) {
	                var expr = String(spans.day || 0) + " " + [spans.hour || 0, spans.minute || 0, spans.second || 0].join(':');
	                operand = sqlFn + operand + ", INTERVAL '" + expr + "' DAY_SECOND)";
	            }
	            return operand;
	        };
	        MySQLDialect.TIME_PART_TO_FUNCTION = {
	            SECOND_OF_MINUTE: 'SECOND($$)',
	            SECOND_OF_HOUR: '(MINUTE($$)*60+SECOND($$))',
	            SECOND_OF_DAY: '((HOUR($$)*60+MINUTE($$))*60+SECOND($$))',
	            SECOND_OF_WEEK: '(((WEEKDAY($$)*24)+HOUR($$)*60+MINUTE($$))*60+SECOND($$))',
	            SECOND_OF_MONTH: '((((DAYOFMONTH($$)-1)*24)+HOUR($$)*60+MINUTE($$))*60+SECOND($$))',
	            SECOND_OF_YEAR: '((((DAYOFYEAR($$)-1)*24)+HOUR($$)*60+MINUTE($$))*60+SECOND($$))',
	            MINUTE_OF_HOUR: 'MINUTE($$)',
	            MINUTE_OF_DAY: 'HOUR($$)*60+MINUTE($$)',
	            MINUTE_OF_WEEK: '(WEEKDAY($$)*24)+HOUR($$)*60+MINUTE($$)',
	            MINUTE_OF_MONTH: '((DAYOFMONTH($$)-1)*24)+HOUR($$)*60+MINUTE($$)',
	            MINUTE_OF_YEAR: '((DAYOFYEAR($$)-1)*24)+HOUR($$)*60+MINUTE($$)',
	            HOUR_OF_DAY: 'HOUR($$)',
	            HOUR_OF_WEEK: '(WEEKDAY($$)*24+HOUR($$))',
	            HOUR_OF_MONTH: '((DAYOFMONTH($$)-1)*24+HOUR($$))',
	            HOUR_OF_YEAR: '((DAYOFYEAR($$)-1)*24+HOUR($$))',
	            DAY_OF_WEEK: '(WEEKDAY($$)+1)',
	            DAY_OF_MONTH: 'DAYOFMONTH($$)',
	            DAY_OF_YEAR: 'DAYOFYEAR($$)',
	            WEEK_OF_MONTH: null,
	            WEEK_OF_YEAR: 'WEEK($$)',
	            MONTH_OF_YEAR: 'MONTH($$)',
	            YEAR: 'YEAR($$)'
	        };
	        return MySQLDialect;
	    }(SQLDialect));
	    Plywood.MySQLDialect = MySQLDialect;
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    function isDate(dt) {
	        return Boolean(dt && dt.toISOString);
	    }
	    Plywood.isDate = isDate;
	    function getValueType(value) {
	        var typeofValue = typeof value;
	        if (typeofValue === 'object') {
	            if (value === null) {
	                return 'NULL';
	            }
	            else if (isDate(value)) {
	                return 'TIME';
	            }
	            else if (hasOwnProperty(value, 'start') && hasOwnProperty(value, 'end')) {
	                if (isDate(value.start) || isDate(value.end))
	                    return 'TIME_RANGE';
	                if (typeof value.start === 'number' || typeof value.end === 'number')
	                    return 'NUMBER_RANGE';
	                throw new Error("unrecognizable range");
	            }
	            else {
	                var ctrType = value.constructor.type;
	                if (!ctrType) {
	                    if (Plywood.Expression.isExpression(value)) {
	                        throw new Error("expression used as datum value " + value);
	                    }
	                    else {
	                        throw new Error("can not have an object without a type: " + JSON.stringify(value));
	                    }
	                }
	                if (ctrType === 'SET')
	                    ctrType += '/' + value.setType;
	                return ctrType;
	            }
	        }
	        else {
	            if (typeofValue !== 'boolean' && typeofValue !== 'number' && typeofValue !== 'string') {
	                throw new TypeError('unsupported JS type ' + typeofValue);
	            }
	            return typeofValue.toUpperCase();
	        }
	    }
	    Plywood.getValueType = getValueType;
	    function getFullType(value) {
	        var myType = getValueType(value);
	        return myType === 'DATASET' ? value.getFullType() : { type: myType };
	    }
	    Plywood.getFullType = getFullType;
	    function valueFromJS(v, typeOverride) {
	        if (typeOverride === void 0) { typeOverride = null; }
	        if (v == null) {
	            return null;
	        }
	        else if (Array.isArray(v)) {
	            if (v.length && typeof v[0] !== 'object') {
	                return Plywood.Set.fromJS(v);
	            }
	            else {
	                return Plywood.Dataset.fromJS(v);
	            }
	        }
	        else if (typeof v === 'object') {
	            switch (typeOverride || v.type) {
	                case 'NUMBER':
	                    var n = Number(v.value);
	                    if (isNaN(n))
	                        throw new Error("bad number value '" + v.value + "'");
	                    return n;
	                case 'NUMBER_RANGE':
	                    return Plywood.NumberRange.fromJS(v);
	                case 'TIME':
	                    return typeOverride ? v : new Date(v.value);
	                case 'TIME_RANGE':
	                    return Plywood.TimeRange.fromJS(v);
	                case 'SET':
	                    return Plywood.Set.fromJS(v);
	                default:
	                    if (v.toISOString) {
	                        return v;
	                    }
	                    else {
	                        throw new Error('can not have an object without a `type` as a datum value');
	                    }
	            }
	        }
	        else if (typeof v === 'string' && typeOverride === 'TIME') {
	            return new Date(v);
	        }
	        return v;
	    }
	    Plywood.valueFromJS = valueFromJS;
	    function valueToJS(v) {
	        if (v == null) {
	            return null;
	        }
	        else {
	            var typeofV = typeof v;
	            if (typeofV === 'object') {
	                if (v.toISOString) {
	                    return v;
	                }
	                else {
	                    return v.toJS();
	                }
	            }
	            else if (typeofV === 'number' && !isFinite(v)) {
	                return String(v);
	            }
	        }
	        return v;
	    }
	    Plywood.valueToJS = valueToJS;
	    function valueToJSInlineType(v) {
	        if (v == null) {
	            return null;
	        }
	        else {
	            var typeofV = typeof v;
	            if (typeofV === 'object') {
	                if (v.toISOString) {
	                    return { type: 'TIME', value: v };
	                }
	                else {
	                    var js = v.toJS();
	                    if (!Array.isArray(js)) {
	                        js.type = v.constructor.type;
	                    }
	                    return js;
	                }
	            }
	            else if (typeofV === 'number' && !isFinite(v)) {
	                return { type: 'NUMBER', value: String(v) };
	            }
	        }
	        return v;
	    }
	    Plywood.valueToJSInlineType = valueToJSInlineType;
	    function datumHasExternal(datum) {
	        for (var name in datum) {
	            var value = datum[name];
	            if (value instanceof Plywood.External)
	                return true;
	            if (value instanceof Plywood.Dataset && value.hasExternal())
	                return true;
	        }
	        return false;
	    }
	    Plywood.datumHasExternal = datumHasExternal;
	    function introspectDatum(datum) {
	        var promises = [];
	        var newDatum = Object.create(null);
	        Object.keys(datum)
	            .forEach(function (name) {
	            var v = datum[name];
	            if (v instanceof Plywood.External && v.needsIntrospect()) {
	                promises.push(v.introspect().then(function (introspectedExternal) {
	                    newDatum[name] = introspectedExternal;
	                }));
	            }
	            else {
	                newDatum[name] = v;
	            }
	        });
	        return Q.all(promises).then(function () { return newDatum; });
	    }
	    Plywood.introspectDatum = introspectDatum;
	    function isSetType(type) {
	        return type && type.indexOf('SET/') === 0;
	    }
	    Plywood.isSetType = isSetType;
	    function wrapSetType(type) {
	        return isSetType(type) ? type : ('SET/' + type);
	    }
	    Plywood.wrapSetType = wrapSetType;
	    function unwrapSetType(type) {
	        if (!type)
	            return null;
	        return isSetType(type) ? type.substr(4) : type;
	    }
	    Plywood.unwrapSetType = unwrapSetType;
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    function isInteger(n) {
	        return !isNaN(n) && n % 1 === 0;
	    }
	    function isPositiveInteger(n) {
	        return isInteger(n) && 0 < n;
	    }
	    var check;
	    var AttributeInfo = (function () {
	        function AttributeInfo(parameters) {
	            if (parameters.special)
	                this.special = parameters.special;
	            if (typeof parameters.name !== "string") {
	                throw new Error("name must be a string");
	            }
	            this.name = parameters.name;
	            if (hasOwnProperty(parameters, 'type') && !Plywood.RefExpression.validType(parameters.type)) {
	                throw new Error("invalid type: " + parameters.type);
	            }
	            this.type = parameters.type;
	            this.datasetType = parameters.datasetType;
	            this.unsplitable = Boolean(parameters.unsplitable);
	            this.makerAction = parameters.makerAction;
	        }
	        AttributeInfo.isAttributeInfo = function (candidate) {
	            return Plywood.isInstanceOf(candidate, AttributeInfo);
	        };
	        AttributeInfo.jsToValue = function (parameters) {
	            var value = {
	                special: parameters.special,
	                name: parameters.name
	            };
	            if (parameters.type)
	                value.type = parameters.type;
	            if (parameters.datasetType)
	                value.datasetType = parameters.datasetType;
	            if (parameters.unsplitable)
	                value.unsplitable = true;
	            if (parameters.makerAction)
	                value.makerAction = Plywood.Action.fromJS(parameters.makerAction);
	            return value;
	        };
	        AttributeInfo.register = function (ex) {
	            var op = ex.name.replace('AttributeInfo', '').replace(/^\w/, function (s) { return s.toLowerCase(); });
	            AttributeInfo.classMap[op] = ex;
	        };
	        AttributeInfo.fromJS = function (parameters) {
	            if (typeof parameters !== "object") {
	                throw new Error("unrecognizable attributeMeta");
	            }
	            if (!hasOwnProperty(parameters, 'special')) {
	                return new AttributeInfo(AttributeInfo.jsToValue(parameters));
	            }
	            var Class = AttributeInfo.classMap[parameters.special];
	            if (!Class) {
	                throw new Error("unsupported special attributeInfo '" + parameters.special + "'");
	            }
	            return Class.fromJS(parameters);
	        };
	        AttributeInfo.fromJSs = function (attributeJSs) {
	            if (!Array.isArray(attributeJSs)) {
	                if (attributeJSs && typeof attributeJSs === 'object') {
	                    var newAttributeJSs = [];
	                    for (var attributeName in attributeJSs) {
	                        if (!hasOwnProperty(attributeJSs, attributeName))
	                            continue;
	                        var attributeJS = attributeJSs[attributeName];
	                        attributeJS['name'] = attributeName;
	                        newAttributeJSs.push(attributeJS);
	                    }
	                    console.warn('attributes now needs to be passed as an array like so: ' + JSON.stringify(newAttributeJSs, null, 2));
	                    attributeJSs = newAttributeJSs;
	                }
	                else {
	                    throw new TypeError("invalid attributeJSs");
	                }
	            }
	            return attributeJSs.map(function (attributeJS) { return AttributeInfo.fromJS(attributeJS); });
	        };
	        AttributeInfo.toJSs = function (attributes) {
	            return attributes.map(function (attribute) { return attribute.toJS(); });
	        };
	        AttributeInfo.override = function (attributes, attributeOverrides) {
	            return Plywood.helper.overridesByName(attributes, attributeOverrides);
	        };
	        AttributeInfo.prototype._ensureSpecial = function (special) {
	            if (!this.special) {
	                this.special = special;
	                return;
	            }
	            if (this.special !== special) {
	                throw new TypeError("incorrect attributeInfo special '" + this.special + "' (needs to be: '" + special + "')");
	            }
	        };
	        AttributeInfo.prototype._ensureType = function (myType) {
	            if (!this.type) {
	                this.type = myType;
	                return;
	            }
	            if (this.type !== myType) {
	                throw new TypeError("incorrect attributeInfo type '" + this.type + "' (needs to be: '" + myType + "')");
	            }
	        };
	        AttributeInfo.prototype.toString = function () {
	            var special = this.special ? "[" + this.special + "]" : '';
	            return this.name + "::" + this.type + special;
	        };
	        AttributeInfo.prototype.valueOf = function () {
	            var value = {
	                name: this.name,
	                type: this.type,
	                unsplitable: this.unsplitable
	            };
	            if (this.special)
	                value.special = this.special;
	            if (this.datasetType)
	                value.datasetType = this.datasetType;
	            if (this.makerAction)
	                value.makerAction = this.makerAction;
	            return value;
	        };
	        AttributeInfo.prototype.toJS = function () {
	            var js = {
	                name: this.name,
	                type: this.type
	            };
	            if (this.unsplitable)
	                js.unsplitable = true;
	            if (this.special)
	                js.special = this.special;
	            if (this.datasetType)
	                js.datasetType = this.datasetType;
	            if (this.makerAction)
	                js.makerAction = this.makerAction.toJS();
	            return js;
	        };
	        AttributeInfo.prototype.toJSON = function () {
	            return this.toJS();
	        };
	        AttributeInfo.prototype.equals = function (other) {
	            return AttributeInfo.isAttributeInfo(other) &&
	                this.special === other.special &&
	                this.name === other.name &&
	                this.type === other.type &&
	                Boolean(this.makerAction) === Boolean(other.makerAction) &&
	                (!this.makerAction || this.makerAction.equals(other.makerAction));
	        };
	        AttributeInfo.prototype.serialize = function (value) {
	            return value;
	        };
	        AttributeInfo.classMap = {};
	        return AttributeInfo;
	    }());
	    Plywood.AttributeInfo = AttributeInfo;
	    check = AttributeInfo;
	    var RangeAttributeInfo = (function (_super) {
	        __extends(RangeAttributeInfo, _super);
	        function RangeAttributeInfo(parameters) {
	            _super.call(this, parameters);
	            this.separator = parameters.separator || ';';
	            this.rangeSize = parameters.rangeSize;
	            this.digitsBeforeDecimal = parameters.digitsBeforeDecimal;
	            this.digitsAfterDecimal = parameters.digitsAfterDecimal;
	            this._ensureSpecial("range");
	            this._ensureType('NUMBER_RANGE');
	            if (!(typeof this.separator === "string" && this.separator.length)) {
	                throw new TypeError("`separator` must be a non-empty string");
	            }
	            if (typeof this.rangeSize !== "number") {
	                throw new TypeError("`rangeSize` must be a number");
	            }
	            if (this.rangeSize > 1) {
	                if (!isInteger(this.rangeSize)) {
	                    throw new Error("`rangeSize` greater than 1 must be an integer");
	                }
	            }
	            else {
	                if (!isInteger(1 / this.rangeSize)) {
	                    throw new Error("`rangeSize` less than 1 must divide 1");
	                }
	            }
	            if (this.digitsBeforeDecimal != null) {
	                if (!isPositiveInteger(this.digitsBeforeDecimal)) {
	                    throw new Error("`digitsBeforeDecimal` must be a positive integer");
	                }
	            }
	            else {
	                this.digitsBeforeDecimal = null;
	            }
	            if (this.digitsAfterDecimal != null) {
	                if (!isPositiveInteger(this.digitsAfterDecimal)) {
	                    throw new Error("`digitsAfterDecimal` must be a positive integer");
	                }
	                var digitsInSize = (String(this.rangeSize).split(".")[1] || "").length;
	                if (this.digitsAfterDecimal < digitsInSize) {
	                    throw new Error("`digitsAfterDecimal` must be at least " + digitsInSize + " to accommodate for a `rangeSize` of " + this.rangeSize);
	                }
	            }
	            else {
	                this.digitsAfterDecimal = null;
	            }
	        }
	        RangeAttributeInfo.fromJS = function (parameters) {
	            var value = AttributeInfo.jsToValue(parameters);
	            value.separator = parameters.separator;
	            value.rangeSize = parameters.rangeSize;
	            value.digitsBeforeDecimal = parameters.digitsBeforeDecimal;
	            value.digitsAfterDecimal = parameters.digitsAfterDecimal;
	            return new RangeAttributeInfo(value);
	        };
	        RangeAttributeInfo.prototype.valueOf = function () {
	            var value = _super.prototype.valueOf.call(this);
	            value.separator = this.separator;
	            value.rangeSize = this.rangeSize;
	            if (this.digitsBeforeDecimal !== null)
	                value.digitsBeforeDecimal = this.digitsBeforeDecimal;
	            if (this.digitsAfterDecimal !== null)
	                value.digitsAfterDecimal = this.digitsAfterDecimal;
	            return value;
	        };
	        RangeAttributeInfo.prototype.toJS = function () {
	            var js = _super.prototype.toJS.call(this);
	            js.separator = this.separator;
	            js.rangeSize = this.rangeSize;
	            if (this.digitsBeforeDecimal !== null)
	                js.digitsBeforeDecimal = this.digitsBeforeDecimal;
	            if (this.digitsAfterDecimal !== null)
	                js.digitsAfterDecimal = this.digitsAfterDecimal;
	            return js;
	        };
	        RangeAttributeInfo.prototype.equals = function (other) {
	            return _super.prototype.equals.call(this, other) &&
	                this.separator === other.separator &&
	                this.rangeSize === other.rangeSize &&
	                this.digitsBeforeDecimal === other.digitsBeforeDecimal &&
	                this.digitsAfterDecimal === other.digitsAfterDecimal;
	        };
	        RangeAttributeInfo.prototype._serializeNumber = function (value) {
	            if (value === null)
	                return "";
	            var valueStr = String(value);
	            if (this.digitsBeforeDecimal === null && this.digitsAfterDecimal === null) {
	                return valueStr;
	            }
	            var valueStrSplit = valueStr.split(".");
	            var before = valueStrSplit[0];
	            var after = valueStrSplit[1];
	            if (this.digitsBeforeDecimal) {
	                before = repeat("0", this.digitsBeforeDecimal - before.length) + before;
	            }
	            if (this.digitsAfterDecimal) {
	                after || (after = "");
	                after += repeat("0", this.digitsAfterDecimal - after.length);
	            }
	            valueStr = before;
	            if (after)
	                valueStr += "." + after;
	            return valueStr;
	        };
	        RangeAttributeInfo.prototype.serialize = function (range) {
	            if (!(Array.isArray(range) && range.length === 2))
	                return null;
	            return this._serializeNumber(range[0]) + this.separator + this._serializeNumber(range[1]);
	        };
	        RangeAttributeInfo.prototype.getMatchingRegExpString = function () {
	            var separatorRegExp = this.separator.replace(/[.$^{[(|)*+?\\]/g, function (c) { return "\\" + c; });
	            var beforeRegExp = this.digitsBeforeDecimal ? "-?\\d{" + this.digitsBeforeDecimal + "}" : "(?:-?[1-9]\\d*|0)";
	            var afterRegExp = this.digitsAfterDecimal ? "\\.\\d{" + this.digitsAfterDecimal + "}" : "(?:\\.\\d*[1-9])?";
	            var numberRegExp = beforeRegExp + afterRegExp;
	            return "/^(" + numberRegExp + ")" + separatorRegExp + "(" + numberRegExp + ")$/";
	        };
	        return RangeAttributeInfo;
	    }(AttributeInfo));
	    Plywood.RangeAttributeInfo = RangeAttributeInfo;
	    AttributeInfo.register(RangeAttributeInfo);
	    var UniqueAttributeInfo = (function (_super) {
	        __extends(UniqueAttributeInfo, _super);
	        function UniqueAttributeInfo(parameters) {
	            _super.call(this, parameters);
	            this._ensureSpecial("unique");
	            this._ensureType('STRING');
	        }
	        UniqueAttributeInfo.fromJS = function (parameters) {
	            return new UniqueAttributeInfo(AttributeInfo.jsToValue(parameters));
	        };
	        UniqueAttributeInfo.prototype.serialize = function (value) {
	            throw new Error("can not serialize an approximate unique value");
	        };
	        return UniqueAttributeInfo;
	    }(AttributeInfo));
	    Plywood.UniqueAttributeInfo = UniqueAttributeInfo;
	    AttributeInfo.register(UniqueAttributeInfo);
	    var HistogramAttributeInfo = (function (_super) {
	        __extends(HistogramAttributeInfo, _super);
	        function HistogramAttributeInfo(parameters) {
	            _super.call(this, parameters);
	            this._ensureSpecial("histogram");
	            this._ensureType('NUMBER');
	        }
	        HistogramAttributeInfo.fromJS = function (parameters) {
	            return new HistogramAttributeInfo(AttributeInfo.jsToValue(parameters));
	        };
	        HistogramAttributeInfo.prototype.serialize = function (value) {
	            throw new Error("can not serialize a histogram value");
	        };
	        return HistogramAttributeInfo;
	    }(AttributeInfo));
	    Plywood.HistogramAttributeInfo = HistogramAttributeInfo;
	    AttributeInfo.register(HistogramAttributeInfo);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var BOUNDS_REG_EXP = /^[\[(][\])]$/;
	    var Range = (function () {
	        function Range(start, end, bounds) {
	            if (bounds) {
	                if (!BOUNDS_REG_EXP.test(bounds)) {
	                    throw new Error("invalid bounds " + bounds);
	                }
	            }
	            else {
	                bounds = Range.DEFAULT_BOUNDS;
	            }
	            if (start !== null && end !== null && this._endpointEqual(start, end)) {
	                if (bounds !== '[]') {
	                    start = end = this._zeroEndpoint();
	                }
	                if (bounds === '(]' || bounds === '()')
	                    this.bounds = '[)';
	            }
	            else {
	                if (start !== null && end !== null && end < start) {
	                    throw new Error('must have start <= end');
	                }
	                if (start === null && bounds[0] === '[') {
	                    bounds = '(' + bounds[1];
	                }
	                if (end === null && bounds[1] === ']') {
	                    bounds = bounds[0] + ')';
	                }
	            }
	            this.start = start;
	            this.end = end;
	            this.bounds = bounds;
	        }
	        Range.fromJS = function (parameters) {
	            if (typeof parameters.start === 'number' || typeof parameters.end === 'number') {
	                return Plywood.NumberRange.fromJS(parameters);
	            }
	            else {
	                return Plywood.TimeRange.fromJS(parameters);
	            }
	        };
	        Range.prototype._zeroEndpoint = function () {
	            return 0;
	        };
	        Range.prototype._endpointEqual = function (a, b) {
	            return a === b;
	        };
	        Range.prototype._endpointToString = function (a) {
	            return String(a);
	        };
	        Range.prototype._equalsHelper = function (other) {
	            return Boolean(other) &&
	                this.bounds === other.bounds &&
	                this._endpointEqual(this.start, other.start) &&
	                this._endpointEqual(this.end, other.end);
	        };
	        Range.prototype.toString = function () {
	            var bounds = this.bounds;
	            return bounds[0] + this._endpointToString(this.start) + ',' + this._endpointToString(this.end) + bounds[1];
	        };
	        Range.prototype.openStart = function () {
	            return this.bounds[0] === '(';
	        };
	        Range.prototype.openEnd = function () {
	            return this.bounds[1] === ')';
	        };
	        Range.prototype.empty = function () {
	            return this._endpointEqual(this.start, this.end) && this.bounds === '[)';
	        };
	        Range.prototype.degenerate = function () {
	            return this._endpointEqual(this.start, this.end) && this.bounds === '[]';
	        };
	        Range.prototype.contains = function (val) {
	            if (val === null)
	                return false;
	            var start = this.start;
	            var end = this.end;
	            var bounds = this.bounds;
	            if (bounds[0] === '[') {
	                if (val < start)
	                    return false;
	            }
	            else {
	                if (start !== null && val <= start)
	                    return false;
	            }
	            if (bounds[1] === ']') {
	                if (end < val)
	                    return false;
	            }
	            else {
	                if (end !== null && end <= val)
	                    return false;
	            }
	            return true;
	        };
	        Range.prototype.intersects = function (other) {
	            return this.contains(other.start) || this.contains(other.end)
	                || other.contains(this.start) || other.contains(this.end)
	                || this._equalsHelper(other);
	        };
	        Range.prototype.adjacent = function (other) {
	            return (this._endpointEqual(this.end, other.start) && this.openEnd() !== other.openStart())
	                || (this._endpointEqual(this.start, other.end) && this.openStart() !== other.openEnd());
	        };
	        Range.prototype.mergeable = function (other) {
	            return this.intersects(other) || this.adjacent(other);
	        };
	        Range.prototype.union = function (other) {
	            if (!this.mergeable(other))
	                return null;
	            return this.extend(other);
	        };
	        Range.prototype.extend = function (other) {
	            var thisStart = this.start;
	            var thisEnd = this.end;
	            var otherStart = other.start;
	            var otherEnd = other.end;
	            var start;
	            var startBound;
	            if (thisStart === null || otherStart === null) {
	                start = null;
	                startBound = '(';
	            }
	            else if (thisStart < otherStart) {
	                start = thisStart;
	                startBound = this.bounds[0];
	            }
	            else {
	                start = otherStart;
	                startBound = other.bounds[0];
	            }
	            var end;
	            var endBound;
	            if (thisEnd === null || otherEnd === null) {
	                end = null;
	                endBound = ')';
	            }
	            else if (thisEnd < otherEnd) {
	                end = otherEnd;
	                endBound = other.bounds[1];
	            }
	            else {
	                end = thisEnd;
	                endBound = this.bounds[1];
	            }
	            return new this.constructor({ start: start, end: end, bounds: startBound + endBound });
	        };
	        Range.prototype.intersect = function (other) {
	            if (!this.mergeable(other))
	                return null;
	            var thisStart = this.start;
	            var thisEnd = this.end;
	            var otherStart = other.start;
	            var otherEnd = other.end;
	            var start;
	            var startBound;
	            if (thisStart === null || otherStart === null) {
	                if (otherStart === null) {
	                    start = thisStart;
	                    startBound = this.bounds[0];
	                }
	                else {
	                    start = otherStart;
	                    startBound = other.bounds[0];
	                }
	            }
	            else if (otherStart < thisStart) {
	                start = thisStart;
	                startBound = this.bounds[0];
	            }
	            else {
	                start = otherStart;
	                startBound = other.bounds[0];
	            }
	            var end;
	            var endBound;
	            if (thisEnd === null || otherEnd === null) {
	                if (thisEnd == null) {
	                    end = otherEnd;
	                    endBound = other.bounds[1];
	                }
	                else {
	                    end = thisEnd;
	                    endBound = this.bounds[1];
	                }
	            }
	            else if (otherEnd < thisEnd) {
	                end = otherEnd;
	                endBound = other.bounds[1];
	            }
	            else {
	                end = thisEnd;
	                endBound = this.bounds[1];
	            }
	            return new this.constructor({ start: start, end: end, bounds: startBound + endBound });
	        };
	        Range.DEFAULT_BOUNDS = '[)';
	        return Range;
	    }());
	    Plywood.Range = Range;
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    function finiteOrNull(n) {
	        return (isNaN(n) || isFinite(n)) ? n : null;
	    }
	    var check;
	    var NumberRange = (function (_super) {
	        __extends(NumberRange, _super);
	        function NumberRange(parameters) {
	            if (isNaN(parameters.start))
	                throw new TypeError('`start` must be a number');
	            if (isNaN(parameters.end))
	                throw new TypeError('`end` must be a number');
	            _super.call(this, parameters.start, parameters.end, parameters.bounds);
	        }
	        NumberRange.isNumberRange = function (candidate) {
	            return Plywood.isInstanceOf(candidate, NumberRange);
	        };
	        NumberRange.numberBucket = function (num, size, offset) {
	            var start = Math.floor((num - offset) / size) * size + offset;
	            return new NumberRange({
	                start: start,
	                end: start + size,
	                bounds: Plywood.Range.DEFAULT_BOUNDS
	            });
	        };
	        NumberRange.fromNumber = function (n) {
	            return new NumberRange({ start: n, end: n, bounds: '[]' });
	        };
	        NumberRange.fromJS = function (parameters) {
	            if (typeof parameters !== "object") {
	                throw new Error("unrecognizable numberRange");
	            }
	            var start = parameters.start;
	            var end = parameters.end;
	            return new NumberRange({
	                start: start === null ? null : finiteOrNull(Number(start)),
	                end: end === null ? null : finiteOrNull(Number(end)),
	                bounds: parameters.bounds
	            });
	        };
	        NumberRange.prototype.valueOf = function () {
	            return {
	                start: this.start,
	                end: this.end,
	                bounds: this.bounds
	            };
	        };
	        NumberRange.prototype.toJS = function () {
	            var js = {
	                start: this.start,
	                end: this.end
	            };
	            if (this.bounds !== Plywood.Range.DEFAULT_BOUNDS)
	                js.bounds = this.bounds;
	            return js;
	        };
	        NumberRange.prototype.toJSON = function () {
	            return this.toJS();
	        };
	        NumberRange.prototype.equals = function (other) {
	            return NumberRange.isNumberRange(other) && this._equalsHelper(other);
	        };
	        NumberRange.prototype.midpoint = function () {
	            return (this.start + this.end) / 2;
	        };
	        NumberRange.type = 'NUMBER_RANGE';
	        return NumberRange;
	    }(Plywood.Range));
	    Plywood.NumberRange = NumberRange;
	    check = NumberRange;
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    function dateString(date) {
	        return date.toISOString();
	    }
	    function arrayFromJS(xs, setType) {
	        return xs.map(function (x) { return Plywood.valueFromJS(x, setType); });
	    }
	    function unifyElements(elements) {
	        var newElements = Object.create(null);
	        for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {
	            var accumulator = elements_1[_i];
	            var newElementsKeys = Object.keys(newElements);
	            for (var _a = 0, newElementsKeys_1 = newElementsKeys; _a < newElementsKeys_1.length; _a++) {
	                var newElementsKey = newElementsKeys_1[_a];
	                var newElement = newElements[newElementsKey];
	                var unionElement = accumulator.union(newElement);
	                if (unionElement) {
	                    accumulator = unionElement;
	                    delete newElements[newElementsKey];
	                }
	            }
	            newElements[accumulator.toString()] = accumulator;
	        }
	        return Object.keys(newElements).map(function (k) { return newElements[k]; });
	    }
	    function intersectElements(elements1, elements2) {
	        var newElements = [];
	        for (var _i = 0, elements1_1 = elements1; _i < elements1_1.length; _i++) {
	            var element1 = elements1_1[_i];
	            for (var _a = 0, elements2_1 = elements2; _a < elements2_1.length; _a++) {
	                var element2 = elements2_1[_a];
	                var intersect = element1.intersect(element2);
	                if (intersect)
	                    newElements.push(intersect);
	            }
	        }
	        return newElements;
	    }
	    var typeUpgrades = {
	        'NUMBER': 'NUMBER_RANGE',
	        'TIME': 'TIME_RANGE'
	    };
	    var check;
	    var Set = (function () {
	        function Set(parameters) {
	            var setType = parameters.setType;
	            this.setType = setType;
	            var keyFn = setType === 'TIME' ? dateString : String;
	            this.keyFn = keyFn;
	            var elements = parameters.elements;
	            var newElements = null;
	            var hash = Object.create(null);
	            for (var i = 0; i < elements.length; i++) {
	                var element = elements[i];
	                var key = keyFn(element);
	                if (hash[key]) {
	                    if (!newElements)
	                        newElements = elements.slice(0, i);
	                }
	                else {
	                    hash[key] = element;
	                    if (newElements)
	                        newElements.push(element);
	                }
	            }
	            if (newElements) {
	                elements = newElements;
	            }
	            if (setType === 'NUMBER_RANGE' || setType === 'TIME_RANGE') {
	                elements = unifyElements(elements);
	            }
	            this.elements = elements;
	            this.hash = hash;
	        }
	        Set.isSet = function (candidate) {
	            return Plywood.isInstanceOf(candidate, Set);
	        };
	        Set.convertToSet = function (thing) {
	            var thingType = Plywood.getValueType(thing);
	            if (Plywood.isSetType(thingType))
	                return thing;
	            return Set.fromJS({ setType: thingType, elements: [thing] });
	        };
	        Set.generalUnion = function (a, b) {
	            var aSet = Set.convertToSet(a);
	            var bSet = Set.convertToSet(b);
	            var aSetType = aSet.setType;
	            var bSetType = bSet.setType;
	            if (typeUpgrades[aSetType] === bSetType) {
	                aSet = aSet.upgradeType();
	            }
	            else if (typeUpgrades[bSetType] === aSetType) {
	                bSet = bSet.upgradeType();
	            }
	            else if (aSetType !== bSetType) {
	                return null;
	            }
	            return aSet.union(bSet).simplify();
	        };
	        Set.generalIntersect = function (a, b) {
	            var aSet = Set.convertToSet(a);
	            var bSet = Set.convertToSet(b);
	            var aSetType = aSet.setType;
	            var bSetType = bSet.setType;
	            if (typeUpgrades[aSetType] === bSetType) {
	                aSet = aSet.upgradeType();
	            }
	            else if (typeUpgrades[bSetType] === aSetType) {
	                bSet = bSet.upgradeType();
	            }
	            else if (aSetType !== bSetType) {
	                return null;
	            }
	            return aSet.intersect(bSet).simplify();
	        };
	        Set.fromJS = function (parameters) {
	            if (Array.isArray(parameters)) {
	                parameters = { elements: parameters };
	            }
	            if (typeof parameters !== "object") {
	                throw new Error("unrecognizable set");
	            }
	            var setType = parameters.setType;
	            var elements = parameters.elements;
	            if (!setType) {
	                setType = Plywood.getValueType(elements.length ? elements[0] : null);
	            }
	            return new Set({
	                setType: setType,
	                elements: arrayFromJS(elements, setType)
	            });
	        };
	        Set.prototype.valueOf = function () {
	            return {
	                setType: this.setType,
	                elements: this.elements
	            };
	        };
	        Set.prototype.toJS = function () {
	            return {
	                setType: this.setType,
	                elements: this.elements.map(Plywood.valueToJS)
	            };
	        };
	        Set.prototype.toJSON = function () {
	            return this.toJS();
	        };
	        Set.prototype.toString = function () {
	            if (this.setType === "NULL")
	                return "null";
	            return "" + this.elements.map(String).join(", ");
	        };
	        Set.prototype.equals = function (other) {
	            return Set.isSet(other) &&
	                this.setType === other.setType &&
	                this.elements.length === other.elements.length &&
	                this.elements.slice().sort().join('') === other.elements.slice().sort().join('');
	        };
	        Set.prototype.size = function () {
	            return this.elements.length;
	        };
	        Set.prototype.empty = function () {
	            return this.elements.length === 0;
	        };
	        Set.prototype.simplify = function () {
	            var simpleSet = this.downgradeType();
	            var simpleSetElements = simpleSet.elements;
	            return simpleSetElements.length === 1 ? simpleSetElements[0] : simpleSet;
	        };
	        Set.prototype.getType = function () {
	            return 'SET/' + this.setType;
	        };
	        Set.prototype.upgradeType = function () {
	            if (this.setType === 'NUMBER') {
	                return Set.fromJS({
	                    setType: 'NUMBER_RANGE',
	                    elements: this.elements.map(Plywood.NumberRange.fromNumber)
	                });
	            }
	            else if (this.setType === 'TIME') {
	                return Set.fromJS({
	                    setType: 'TIME_RANGE',
	                    elements: this.elements.map(Plywood.TimeRange.fromTime)
	                });
	            }
	            else {
	                return this;
	            }
	        };
	        Set.prototype.downgradeType = function () {
	            if (this.setType === 'NUMBER_RANGE' || this.setType === 'TIME_RANGE') {
	                var elements = this.elements;
	                var simpleElements = [];
	                for (var _i = 0, elements_2 = elements; _i < elements_2.length; _i++) {
	                    var element = elements_2[_i];
	                    if (element.degenerate()) {
	                        simpleElements.push(element.start);
	                    }
	                    else {
	                        return this;
	                    }
	                }
	                return Set.fromJS(simpleElements);
	            }
	            else {
	                return this;
	            }
	        };
	        Set.prototype.extent = function () {
	            var setType = this.setType;
	            if (hasOwnProperty(typeUpgrades, setType)) {
	                return this.upgradeType().extent();
	            }
	            if (setType !== 'NUMBER_RANGE' && setType !== 'TIME_RANGE')
	                return null;
	            var elements = this.elements;
	            var extent = elements[0] || null;
	            for (var i = 1; i < elements.length; i++) {
	                extent = extent.extend(elements[i]);
	            }
	            return extent;
	        };
	        Set.prototype.union = function (other) {
	            if (this.empty())
	                return other;
	            if (other.empty())
	                return this;
	            if (this.setType !== other.setType) {
	                throw new TypeError("can not union sets of different types");
	            }
	            var newElements = this.elements.slice();
	            var otherElements = other.elements;
	            for (var _i = 0, otherElements_1 = otherElements; _i < otherElements_1.length; _i++) {
	                var el = otherElements_1[_i];
	                if (this.contains(el))
	                    continue;
	                newElements.push(el);
	            }
	            return new Set({
	                setType: this.setType,
	                elements: newElements
	            });
	        };
	        Set.prototype.intersect = function (other) {
	            if (this.empty() || other.empty())
	                return Set.EMPTY;
	            var setType = this.setType;
	            if (this.setType !== other.setType) {
	                throw new TypeError("can not intersect sets of different types");
	            }
	            var thisElements = this.elements;
	            var newElements;
	            if (setType === 'NUMBER_RANGE' || setType === 'TIME_RANGE') {
	                var otherElements = other.elements;
	                newElements = intersectElements(thisElements, otherElements);
	            }
	            else {
	                newElements = [];
	                for (var _i = 0, thisElements_1 = thisElements; _i < thisElements_1.length; _i++) {
	                    var el = thisElements_1[_i];
	                    if (!other.contains(el))
	                        continue;
	                    newElements.push(el);
	                }
	            }
	            return new Set({
	                setType: this.setType,
	                elements: newElements
	            });
	        };
	        Set.prototype.overlap = function (other) {
	            if (this.empty() || other.empty())
	                return false;
	            if (this.setType !== other.setType) {
	                throw new TypeError("can determine overlap sets of different types");
	            }
	            var thisElements = this.elements;
	            for (var _i = 0, thisElements_2 = thisElements; _i < thisElements_2.length; _i++) {
	                var el = thisElements_2[_i];
	                if (!other.contains(el))
	                    continue;
	                return true;
	            }
	            return false;
	        };
	        Set.prototype.contains = function (value) {
	            var setType = this.setType;
	            if ((setType === 'NUMBER_RANGE' && typeof value === 'number')
	                || (setType === 'TIME_RANGE' && Plywood.isDate(value))) {
	                return this.containsWithin(value);
	            }
	            return hasOwnProperty(this.hash, this.keyFn(value));
	        };
	        Set.prototype.containsWithin = function (value) {
	            var elements = this.elements;
	            for (var k in elements) {
	                if (!hasOwnProperty(elements, k))
	                    continue;
	                if (elements[k].contains(value))
	                    return true;
	            }
	            return false;
	        };
	        Set.prototype.add = function (value) {
	            var setType = this.setType;
	            var valueType = Plywood.getValueType(value);
	            if (setType === 'NULL')
	                setType = valueType;
	            if (valueType !== 'NULL' && setType !== valueType)
	                throw new Error('value type must match');
	            if (this.contains(value))
	                return this;
	            return new Set({
	                setType: setType,
	                elements: this.elements.concat([value])
	            });
	        };
	        Set.prototype.remove = function (value) {
	            if (!this.contains(value))
	                return this;
	            var keyFn = this.keyFn;
	            var key = keyFn(value);
	            return new Set({
	                setType: this.setType,
	                elements: this.elements.filter(function (element) { return keyFn(element) !== key; })
	            });
	        };
	        Set.prototype.toggle = function (value) {
	            return this.contains(value) ? this.remove(value) : this.add(value);
	        };
	        Set.type = 'SET';
	        return Set;
	    }());
	    Plywood.Set = Set;
	    check = Set;
	    Set.EMPTY = Set.fromJS([]);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    function toDate(date, name) {
	        if (date === null)
	            return null;
	        if (typeof date === "undefined")
	            throw new TypeError("timeRange must have a " + name);
	        if (typeof date === 'string' || typeof date === 'number')
	            date = Plywood.parseISODate(date, Plywood.defaultParserTimezone);
	        if (!date.getDay)
	            throw new TypeError("timeRange must have a " + name + " that is a Date");
	        return date;
	    }
	    var START_OF_TIME = "1000-01-01";
	    var END_OF_TIME = "3000-01-01";
	    function dateToIntervalPart(date) {
	        return date.toISOString()
	            .replace('Z', '')
	            .replace('.000', '')
	            .replace(/:00$/, '')
	            .replace(/:00$/, '')
	            .replace(/T00$/, '');
	    }
	    var check;
	    var TimeRange = (function (_super) {
	        __extends(TimeRange, _super);
	        function TimeRange(parameters) {
	            _super.call(this, parameters.start, parameters.end, parameters.bounds);
	        }
	        TimeRange.isTimeRange = function (candidate) {
	            return Plywood.isInstanceOf(candidate, TimeRange);
	        };
	        TimeRange.intervalFromDate = function (date) {
	            return dateToIntervalPart(date) + '/' + dateToIntervalPart(new Date(date.valueOf() + 1));
	        };
	        TimeRange.timeBucket = function (date, duration, timezone) {
	            if (!date)
	                return null;
	            var start = duration.floor(date, timezone);
	            return new TimeRange({
	                start: start,
	                end: duration.shift(start, timezone, 1),
	                bounds: Plywood.Range.DEFAULT_BOUNDS
	            });
	        };
	        TimeRange.fromTime = function (t) {
	            return new TimeRange({ start: t, end: t, bounds: '[]' });
	        };
	        TimeRange.fromJS = function (parameters) {
	            if (typeof parameters !== "object") {
	                throw new Error("unrecognizable timeRange");
	            }
	            return new TimeRange({
	                start: toDate(parameters.start, 'start'),
	                end: toDate(parameters.end, 'end'),
	                bounds: parameters.bounds
	            });
	        };
	        TimeRange.prototype._zeroEndpoint = function () {
	            return new Date(0);
	        };
	        TimeRange.prototype._endpointEqual = function (a, b) {
	            if (a === null) {
	                return b === null;
	            }
	            else {
	                return b !== null && a.valueOf() === b.valueOf();
	            }
	        };
	        TimeRange.prototype._endpointToString = function (a) {
	            if (!a)
	                return 'null';
	            return a.toISOString();
	        };
	        TimeRange.prototype.valueOf = function () {
	            return {
	                start: this.start,
	                end: this.end,
	                bounds: this.bounds
	            };
	        };
	        TimeRange.prototype.toJS = function () {
	            var js = {
	                start: this.start,
	                end: this.end
	            };
	            if (this.bounds !== Plywood.Range.DEFAULT_BOUNDS)
	                js.bounds = this.bounds;
	            return js;
	        };
	        TimeRange.prototype.toJSON = function () {
	            return this.toJS();
	        };
	        TimeRange.prototype.equals = function (other) {
	            return TimeRange.isTimeRange(other) && this._equalsHelper(other);
	        };
	        TimeRange.prototype.toInterval = function () {
	            var _a = this, start = _a.start, end = _a.end, bounds = _a.bounds;
	            var interval = [START_OF_TIME, END_OF_TIME];
	            if (start) {
	                if (bounds[0] === '(')
	                    start = new Date(start.valueOf() + 1);
	                interval[0] = dateToIntervalPart(start);
	            }
	            if (end) {
	                if (bounds[1] === ']')
	                    end = new Date(end.valueOf() + 1);
	                interval[1] = dateToIntervalPart(end);
	            }
	            return interval.join("/");
	        };
	        TimeRange.prototype.midpoint = function () {
	            return new Date((this.start.valueOf() + this.end.valueOf()) / 2);
	        };
	        TimeRange.type = 'TIME_RANGE';
	        return TimeRange;
	    }(Plywood.Range));
	    Plywood.TimeRange = TimeRange;
	    check = TimeRange;
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    function foldContext(d, c) {
	        var newContext = Object.create(c);
	        for (var k in d) {
	            newContext[k] = d[k];
	        }
	        return newContext;
	    }
	    Plywood.foldContext = foldContext;
	    var directionFns = {
	        ascending: function (a, b) {
	            if (a == null) {
	                return b == null ? 0 : -1;
	            }
	            else {
	                if (a.compare)
	                    return a.compare(b);
	                if (b == null)
	                    return 1;
	            }
	            return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
	        },
	        descending: function (a, b) {
	            if (b == null) {
	                return a == null ? 0 : -1;
	            }
	            else {
	                if (b.compare)
	                    return b.compare(a);
	                if (a == null)
	                    return 1;
	            }
	            return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
	        }
	    };
	    function typePreference(type) {
	        switch (type) {
	            case 'TIME': return 0;
	            case 'STRING': return 1;
	            case 'DATASET': return 5;
	            default: return 2;
	        }
	    }
	    function sortColumns(columns) {
	        return columns.sort(function (c1, c2) {
	            var typeDiff = typePreference(c1.type) - typePreference(c2.type);
	            if (typeDiff)
	                return typeDiff;
	            return c1.name.localeCompare(c2.name);
	        });
	    }
	    function uniqueColumns(columns) {
	        var seen = {};
	        var uniqueColumns = [];
	        for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {
	            var column = columns_1[_i];
	            if (!seen[column.name]) {
	                uniqueColumns.push(column);
	                seen[column.name] = true;
	            }
	        }
	        return uniqueColumns;
	    }
	    function flattenColumns(nestedColumns, prefixColumns) {
	        var flatColumns = [];
	        var i = 0;
	        var prefixString = '';
	        while (i < nestedColumns.length) {
	            var nestedColumn = nestedColumns[i];
	            if (nestedColumn.type === 'DATASET') {
	                nestedColumns = nestedColumn.columns;
	                if (prefixColumns)
	                    prefixString += nestedColumn.name + '.';
	                i = 0;
	            }
	            else {
	                flatColumns.push({
	                    name: prefixString + nestedColumn.name,
	                    type: nestedColumn.type
	                });
	                i++;
	            }
	        }
	        return sortColumns(uniqueColumns(flatColumns));
	    }
	    function removeLineBreaks(v) {
	        return v.replace(/(?:\r\n|\r|\n)/g, ' ');
	    }
	    var escapeFnCSV = function (v) {
	        v = removeLineBreaks(v);
	        if (v.indexOf('"') === -1 && v.indexOf(",") === -1)
	            return v;
	        return "\"" + v.replace(/"/g, '""') + "\"";
	    };
	    var escapeFnTSV = function (v) {
	        return removeLineBreaks(v).replace(/\t/g, "").replace(/"/g, '""');
	    };
	    var typeOrder = {
	        'NULL': 0,
	        'TIME': 1,
	        'TIME_RANGE': 2,
	        'SET/TIME': 3,
	        'SET/TIME_RANGE': 4,
	        'STRING': 5,
	        'SET/STRING': 6,
	        'BOOLEAN': 7,
	        'NUMBER': 8,
	        'NUMBER_RANGE': 9,
	        'SET/NUMBER': 10,
	        'SET/NUMBER_RANGE': 11,
	        'DATASET': 12
	    };
	    var defaultFormatter = {
	        'NULL': function (v) { return 'NULL'; },
	        'TIME': function (v) { return v.toISOString(); },
	        'TIME_RANGE': function (v) { return '' + v; },
	        'SET/TIME': function (v) { return '' + v; },
	        'SET/TIME_RANGE': function (v) { return '' + v; },
	        'STRING': function (v) { return '' + v; },
	        'SET/STRING': function (v) { return '' + v; },
	        'BOOLEAN': function (v) { return '' + v; },
	        'NUMBER': function (v) { return '' + v; },
	        'NUMBER_RANGE': function (v) { return '' + v; },
	        'SET/NUMBER': function (v) { return '' + v; },
	        'SET/NUMBER_RANGE': function (v) { return '' + v; },
	        'DATASET': function (v) { return 'DATASET'; }
	    };
	    function isBoolean(b) {
	        return b === true || b === false;
	    }
	    function isNumber(n) {
	        return n !== null && !isNaN(Number(n));
	    }
	    function isString(str) {
	        return typeof str === "string";
	    }
	    function getAttributeInfo(name, attributeValue) {
	        if (attributeValue == null)
	            return null;
	        if (Plywood.isDate(attributeValue)) {
	            return new Plywood.AttributeInfo({ name: name, type: 'TIME' });
	        }
	        else if (isBoolean(attributeValue)) {
	            return new Plywood.AttributeInfo({ name: name, type: 'BOOLEAN' });
	        }
	        else if (isNumber(attributeValue)) {
	            return new Plywood.AttributeInfo({ name: name, type: 'NUMBER' });
	        }
	        else if (isString(attributeValue)) {
	            return new Plywood.AttributeInfo({ name: name, type: 'STRING' });
	        }
	        else if (Plywood.NumberRange.isNumberRange(attributeValue)) {
	            return new Plywood.AttributeInfo({ name: name, type: 'NUMBER_RANGE' });
	        }
	        else if (Plywood.TimeRange.isTimeRange(attributeValue)) {
	            return new Plywood.AttributeInfo({ name: name, type: 'TIME_RANGE' });
	        }
	        else if (Plywood.Set.isSet(attributeValue)) {
	            return new Plywood.AttributeInfo({ name: name, type: attributeValue.getType() });
	        }
	        else if (Dataset.isDataset(attributeValue)) {
	            return new Plywood.AttributeInfo({ name: name, type: 'DATASET', datasetType: attributeValue.getFullType().datasetType });
	        }
	        else {
	            throw new Error("Could not introspect");
	        }
	    }
	    function datumFromJS(js) {
	        if (typeof js !== 'object')
	            throw new TypeError("datum must be an object");
	        var datum = Object.create(null);
	        for (var k in js) {
	            if (!hasOwnProperty(js, k))
	                continue;
	            datum[k] = Plywood.valueFromJS(js[k]);
	        }
	        return datum;
	    }
	    function datumToJS(datum) {
	        var js = {};
	        for (var k in datum) {
	            var v = datum[k];
	            if (v && v.suppress)
	                continue;
	            js[k] = Plywood.valueToJSInlineType(v);
	        }
	        return js;
	    }
	    function joinDatums(datumA, datumB) {
	        var newDatum = Object.create(null);
	        for (var k in datumA) {
	            newDatum[k] = datumA[k];
	        }
	        for (var k in datumB) {
	            newDatum[k] = datumB[k];
	        }
	        return newDatum;
	    }
	    function copy(obj) {
	        var newObj = {};
	        var k;
	        for (k in obj) {
	            if (hasOwnProperty(obj, k))
	                newObj[k] = obj[k];
	        }
	        return newObj;
	    }
	    var check;
	    var Dataset = (function () {
	        function Dataset(parameters) {
	            this.attributes = null;
	            this.keys = null;
	            if (parameters.suppress === true)
	                this.suppress = true;
	            if (parameters.keys) {
	                this.keys = parameters.keys;
	            }
	            var data = parameters.data;
	            if (!Array.isArray(data)) {
	                throw new TypeError("must have a `data` array");
	            }
	            this.data = data;
	            var attributes = parameters.attributes;
	            if (!attributes)
	                attributes = Dataset.getAttributesFromData(data);
	            var attributeOverrides = parameters.attributeOverrides;
	            if (attributeOverrides) {
	                attributes = Plywood.AttributeInfo.override(attributes, attributeOverrides);
	            }
	            this.attributes = attributes;
	        }
	        Dataset.isDataset = function (candidate) {
	            return Plywood.isInstanceOf(candidate, Dataset);
	        };
	        Dataset.getAttributesFromData = function (data) {
	            if (!data.length)
	                return [];
	            var attributeNamesToIntrospect = Object.keys(data[0]);
	            var attributes = [];
	            for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {
	                var datum = data_1[_i];
	                var attributeNamesStillToIntrospect = [];
	                for (var _a = 0, attributeNamesToIntrospect_1 = attributeNamesToIntrospect; _a < attributeNamesToIntrospect_1.length; _a++) {
	                    var attributeNameToIntrospect = attributeNamesToIntrospect_1[_a];
	                    var attributeInfo = getAttributeInfo(attributeNameToIntrospect, datum[attributeNameToIntrospect]);
	                    if (attributeInfo) {
	                        attributes.push(attributeInfo);
	                    }
	                    else {
	                        attributeNamesStillToIntrospect.push(attributeNameToIntrospect);
	                    }
	                }
	                attributeNamesToIntrospect = attributeNamesStillToIntrospect;
	                if (!attributeNamesToIntrospect.length)
	                    break;
	            }
	            for (var _b = 0, attributeNamesToIntrospect_2 = attributeNamesToIntrospect; _b < attributeNamesToIntrospect_2.length; _b++) {
	                var attributeName = attributeNamesToIntrospect_2[_b];
	                attributes.push(new Plywood.AttributeInfo({ name: attributeName, type: 'STRING' }));
	            }
	            attributes.sort(function (a, b) {
	                var typeDiff = typeOrder[a.type] - typeOrder[b.type];
	                if (typeDiff)
	                    return typeDiff;
	                return a.name.localeCompare(b.name);
	            });
	            return attributes;
	        };
	        Dataset.fromJS = function (parameters) {
	            if (Array.isArray(parameters)) {
	                parameters = { data: parameters };
	            }
	            if (!Array.isArray(parameters.data)) {
	                throw new Error('must have data');
	            }
	            var value = {};
	            if (hasOwnProperty(parameters, 'attributes')) {
	                value.attributes = Plywood.AttributeInfo.fromJSs(parameters.attributes);
	            }
	            else if (hasOwnProperty(parameters, 'attributeOverrides')) {
	                value.attributeOverrides = Plywood.AttributeInfo.fromJSs(parameters.attributeOverrides);
	            }
	            value.keys = parameters.keys;
	            value.data = parameters.data.map(datumFromJS);
	            return new Dataset(value);
	        };
	        Dataset.prototype.valueOf = function () {
	            var value = {};
	            if (this.suppress)
	                value.suppress = true;
	            if (this.attributes)
	                value.attributes = this.attributes;
	            if (this.keys)
	                value.keys = this.keys;
	            value.data = this.data;
	            return value;
	        };
	        Dataset.prototype.toJS = function () {
	            return this.data.map(datumToJS);
	        };
	        Dataset.prototype.toString = function () {
	            return "Dataset(" + this.data.length + ")";
	        };
	        Dataset.prototype.toJSON = function () {
	            return this.toJS();
	        };
	        Dataset.prototype.equals = function (other) {
	            return Dataset.isDataset(other) &&
	                this.data.length === other.data.length;
	        };
	        Dataset.prototype.hide = function () {
	            var value = this.valueOf();
	            value.suppress = true;
	            return new Dataset(value);
	        };
	        Dataset.prototype.basis = function () {
	            var data = this.data;
	            return data.length === 1 && Object.keys(data[0]).length === 0;
	        };
	        Dataset.prototype.hasExternal = function () {
	            if (!this.data.length)
	                return false;
	            return Plywood.datumHasExternal(this.data[0]);
	        };
	        Dataset.prototype.getFullType = function () {
	            var attributes = this.attributes;
	            if (!attributes)
	                throw new Error("dataset has not been introspected");
	            var myDatasetType = {};
	            for (var _i = 0, attributes_1 = attributes; _i < attributes_1.length; _i++) {
	                var attribute = attributes_1[_i];
	                var attrName = attribute.name;
	                if (attribute.type === 'DATASET') {
	                    myDatasetType[attrName] = {
	                        type: 'DATASET',
	                        datasetType: attribute.datasetType
	                    };
	                }
	                else {
	                    myDatasetType[attrName] = {
	                        type: attribute.type
	                    };
	                }
	            }
	            return {
	                type: 'DATASET',
	                datasetType: myDatasetType
	            };
	        };
	        Dataset.prototype.select = function (attrs) {
	            var attributes = this.attributes;
	            var newAttributes = [];
	            var attrLookup = Object.create(null);
	            for (var _i = 0, attrs_1 = attrs; _i < attrs_1.length; _i++) {
	                var attr = attrs_1[_i];
	                attrLookup[attr] = true;
	                var existingAttribute = Plywood.helper.findByName(attributes, attr);
	                if (existingAttribute)
	                    newAttributes.push(existingAttribute);
	            }
	            var data = this.data;
	            var n = data.length;
	            var newData = new Array(n);
	            for (var i = 0; i < n; i++) {
	                var datum = data[i];
	                var newDatum = Object.create(null);
	                for (var key in datum) {
	                    if (attrLookup[key]) {
	                        newDatum[key] = datum[key];
	                    }
	                }
	                newData[i] = newDatum;
	            }
	            var value = this.valueOf();
	            value.attributes = newAttributes;
	            value.data = newData;
	            return new Dataset(value);
	        };
	        Dataset.prototype.apply = function (name, exFn, type, context) {
	            var data = this.data;
	            var n = data.length;
	            var newData = new Array(n);
	            for (var i = 0; i < n; i++) {
	                var datum = data[i];
	                var newDatum = Object.create(null);
	                for (var key in datum)
	                    newDatum[key] = datum[key];
	                newDatum[name] = exFn(datum, context, i);
	                newData[i] = newDatum;
	            }
	            var datasetType = null;
	            if (type === 'DATASET' && newData[0] && newData[0][name]) {
	                datasetType = newData[0][name].getFullType().datasetType;
	            }
	            var value = this.valueOf();
	            value.attributes = Plywood.helper.overrideByName(value.attributes, new Plywood.AttributeInfo({ name: name, type: type, datasetType: datasetType }));
	            value.data = newData;
	            return new Dataset(value);
	        };
	        Dataset.prototype.applyPromise = function (name, exFn, type, context) {
	            var _this = this;
	            var value = this.valueOf();
	            var promises = value.data.map(function (datum) { return exFn(datum, context); });
	            return Q.all(promises).then(function (values) {
	                return _this.apply(name, (function (d, c, i) { return values[i]; }), type, context);
	            });
	        };
	        Dataset.prototype.filter = function (exFn, context) {
	            var value = this.valueOf();
	            value.data = value.data.filter(function (datum) { return exFn(datum, context); });
	            return new Dataset(value);
	        };
	        Dataset.prototype.sort = function (exFn, direction, context) {
	            var value = this.valueOf();
	            var directionFn = directionFns[direction];
	            value.data = this.data.sort(function (a, b) {
	                return directionFn(exFn(a, context), exFn(b, context));
	            });
	            return new Dataset(value);
	        };
	        Dataset.prototype.limit = function (limit) {
	            var data = this.data;
	            if (data.length <= limit)
	                return this;
	            var value = this.valueOf();
	            value.data = data.slice(0, limit);
	            return new Dataset(value);
	        };
	        Dataset.prototype.count = function () {
	            return this.data.length;
	        };
	        Dataset.prototype.sum = function (exFn, context) {
	            var data = this.data;
	            var sum = 0;
	            for (var _i = 0, data_2 = data; _i < data_2.length; _i++) {
	                var datum = data_2[_i];
	                sum += exFn(datum, context);
	            }
	            return sum;
	        };
	        Dataset.prototype.average = function (exFn, context) {
	            var count = this.count();
	            return count ? (this.sum(exFn, context) / count) : null;
	        };
	        Dataset.prototype.min = function (exFn, context) {
	            var data = this.data;
	            var min = Infinity;
	            for (var _i = 0, data_3 = data; _i < data_3.length; _i++) {
	                var datum = data_3[_i];
	                var v = exFn(datum, context);
	                if (v < min)
	                    min = v;
	            }
	            return min;
	        };
	        Dataset.prototype.max = function (exFn, context) {
	            var data = this.data;
	            var max = -Infinity;
	            for (var _i = 0, data_4 = data; _i < data_4.length; _i++) {
	                var datum = data_4[_i];
	                var v = exFn(datum, context);
	                if (max < v)
	                    max = v;
	            }
	            return max;
	        };
	        Dataset.prototype.countDistinct = function (exFn, context) {
	            var data = this.data;
	            var seen = Object.create(null);
	            var count = 0;
	            for (var _i = 0, data_5 = data; _i < data_5.length; _i++) {
	                var datum = data_5[_i];
	                var v = exFn(datum, context);
	                if (!seen[v]) {
	                    seen[v] = 1;
	                    ++count;
	                }
	            }
	            return count;
	        };
	        Dataset.prototype.quantile = function (exFn, quantile, context) {
	            return quantile;
	        };
	        Dataset.prototype.split = function (splitFns, datasetName, context) {
	            var data = this.data;
	            var keys = Object.keys(splitFns);
	            var numberOfKeys = keys.length;
	            var splitFnList = keys.map(function (k) { return splitFns[k]; });
	            var splits = {};
	            var datumGroups = {};
	            var finalData = [];
	            var finalDataset = [];
	            function addDatum(datum, valueList) {
	                var key = valueList.join(';_PLYw00d_;');
	                if (hasOwnProperty(datumGroups, key)) {
	                    datumGroups[key].push(datum);
	                }
	                else {
	                    var newDatum = Object.create(null);
	                    for (var i = 0; i < numberOfKeys; i++) {
	                        newDatum[keys[i]] = valueList[i];
	                    }
	                    finalDataset.push(datumGroups[key] = [datum]);
	                    splits[key] = newDatum;
	                    finalData.push(newDatum);
	                }
	            }
	            for (var _i = 0, data_6 = data; _i < data_6.length; _i++) {
	                var datum = data_6[_i];
	                var valueList = splitFnList.map(function (splitFn) { return splitFn(datum, context); });
	                if (Plywood.Set.isSet(valueList[0])) {
	                    if (valueList.length > 1)
	                        throw new Error('multi-dimensional set split is not implemented');
	                    var elements = valueList[0].elements;
	                    for (var _a = 0, elements_3 = elements; _a < elements_3.length; _a++) {
	                        var element = elements_3[_a];
	                        addDatum(datum, [element]);
	                    }
	                }
	                else {
	                    addDatum(datum, valueList);
	                }
	            }
	            for (var i = 0; i < finalData.length; i++) {
	                finalData[i][datasetName] = new Dataset({ suppress: true, data: finalDataset[i] });
	            }
	            return new Dataset({
	                keys: keys,
	                data: finalData
	            });
	        };
	        Dataset.prototype.introspect = function () {
	            console.error('introspection is always done, `.introspect()` method never needs to be called');
	        };
	        Dataset.prototype.getExternals = function () {
	            if (this.data.length === 0)
	                return [];
	            var datum = this.data[0];
	            var externals = [];
	            Object.keys(datum).forEach(function (applyName) {
	                var applyValue = datum[applyName];
	                if (applyValue instanceof Dataset) {
	                    externals.push.apply(externals, applyValue.getExternals());
	                }
	            });
	            return Plywood.External.deduplicateExternals(externals);
	        };
	        Dataset.prototype.join = function (other) {
	            if (!other)
	                return this;
	            var thisKey = this.keys[0];
	            if (!thisKey)
	                throw new Error('join lhs must have a key (be a product of a split)');
	            var otherKey = other.keys[0];
	            if (!otherKey)
	                throw new Error('join rhs must have a key (be a product of a split)');
	            var thisData = this.data;
	            var otherData = other.data;
	            var k;
	            var mapping = Object.create(null);
	            for (var i = 0; i < thisData.length; i++) {
	                var datum = thisData[i];
	                k = String(thisKey ? datum[thisKey] : i);
	                mapping[k] = [datum];
	            }
	            for (var i = 0; i < otherData.length; i++) {
	                var datum = otherData[i];
	                k = String(otherKey ? datum[otherKey] : i);
	                if (!mapping[k])
	                    mapping[k] = [];
	                mapping[k].push(datum);
	            }
	            var newData = [];
	            for (var j in mapping) {
	                var datums = mapping[j];
	                if (datums.length === 1) {
	                    newData.push(datums[0]);
	                }
	                else {
	                    newData.push(joinDatums(datums[0], datums[1]));
	                }
	            }
	            return new Dataset({ data: newData });
	        };
	        Dataset.prototype.findDatumByAttribute = function (attribute, value) {
	            return Plywood.helper.find(this.data, function (d) { return Plywood.generalEqual(d[attribute], value); });
	        };
	        Dataset.prototype.getNestedColumns = function () {
	            var nestedColumns = [];
	            var attributes = this.attributes;
	            var subDatasetAdded = false;
	            for (var _i = 0, attributes_2 = attributes; _i < attributes_2.length; _i++) {
	                var attribute = attributes_2[_i];
	                var column = {
	                    name: attribute.name,
	                    type: attribute.type
	                };
	                if (attribute.type === 'DATASET') {
	                    var subDataset = this.data[0][attribute.name];
	                    if (!subDatasetAdded && Dataset.isDataset(subDataset)) {
	                        subDatasetAdded = true;
	                        column.columns = subDataset.getNestedColumns();
	                        nestedColumns.push(column);
	                    }
	                }
	                else {
	                    nestedColumns.push(column);
	                }
	            }
	            return nestedColumns.sort(function (a, b) {
	                var typeDiff = typeOrder[a.type] - typeOrder[b.type];
	                if (typeDiff)
	                    return typeDiff;
	                return a.name.localeCompare(b.name);
	            });
	        };
	        Dataset.prototype.getColumns = function (options) {
	            if (options === void 0) { options = {}; }
	            var prefixColumns = options.prefixColumns;
	            return flattenColumns(this.getNestedColumns(), prefixColumns);
	        };
	        Dataset.prototype._flattenHelper = function (nestedColumns, prefix, order, nestingName, parentName, nesting, context, flat) {
	            var nestedColumnsLength = nestedColumns.length;
	            if (!nestedColumnsLength)
	                return;
	            var data = this.data;
	            var leaf = nestedColumns[nestedColumnsLength - 1].type !== 'DATASET';
	            for (var _i = 0, data_7 = data; _i < data_7.length; _i++) {
	                var datum = data_7[_i];
	                var flatDatum = context ? copy(context) : {};
	                if (nestingName)
	                    flatDatum[nestingName] = nesting;
	                if (parentName)
	                    flatDatum[parentName] = context;
	                for (var _a = 0, nestedColumns_1 = nestedColumns; _a < nestedColumns_1.length; _a++) {
	                    var flattenedColumn = nestedColumns_1[_a];
	                    if (flattenedColumn.type === 'DATASET') {
	                        var nextPrefix = null;
	                        if (prefix !== null)
	                            nextPrefix = prefix + flattenedColumn.name + '.';
	                        if (order === 'preorder')
	                            flat.push(flatDatum);
	                        datum[flattenedColumn.name]._flattenHelper(flattenedColumn.columns, nextPrefix, order, nestingName, parentName, nesting + 1, flatDatum, flat);
	                        if (order === 'postorder')
	                            flat.push(flatDatum);
	                    }
	                    else {
	                        var flatName = (prefix !== null ? prefix : '') + flattenedColumn.name;
	                        flatDatum[flatName] = datum[flattenedColumn.name];
	                    }
	                }
	                if (leaf)
	                    flat.push(flatDatum);
	            }
	        };
	        Dataset.prototype.flatten = function (options) {
	            if (options === void 0) { options = {}; }
	            var prefixColumns = options.prefixColumns;
	            var order = options.order;
	            var nestingName = options.nestingName;
	            var parentName = options.parentName;
	            var nestedColumns = this.getNestedColumns();
	            var flatData = [];
	            if (nestedColumns.length) {
	                this._flattenHelper(nestedColumns, (prefixColumns ? '' : null), order, nestingName, parentName, 0, null, flatData);
	            }
	            return flatData;
	        };
	        Dataset.prototype.toTabular = function (tabulatorOptions) {
	            var formatter = tabulatorOptions.formatter || {};
	            var finalizer = tabulatorOptions.finalizer;
	            var data = this.flatten(tabulatorOptions);
	            var columns = this.getColumns(tabulatorOptions);
	            var lines = [];
	            lines.push(columns.map(function (c) { return c.name; }).join(tabulatorOptions.separator || ','));
	            for (var i = 0; i < data.length; i++) {
	                var datum = data[i];
	                lines.push(columns.map(function (c) {
	                    var value = datum[c.name];
	                    var formatted = String((formatter[c.type] || defaultFormatter[c.type])(value));
	                    var finalized = formatted && finalizer ? finalizer(formatted) : formatted;
	                    return finalized;
	                }).join(tabulatorOptions.separator || ','));
	            }
	            var lineBreak = tabulatorOptions.lineBreak || '\n';
	            return lines.join(lineBreak) + (tabulatorOptions.finalLineBreak === 'include' && lines.length > 0 ? lineBreak : '');
	        };
	        Dataset.prototype.toCSV = function (tabulatorOptions) {
	            if (tabulatorOptions === void 0) { tabulatorOptions = {}; }
	            tabulatorOptions.finalizer = escapeFnCSV;
	            tabulatorOptions.separator = tabulatorOptions.separator || ',';
	            tabulatorOptions.lineBreak = tabulatorOptions.lineBreak || '\r\n';
	            tabulatorOptions.finalLineBreak = tabulatorOptions.finalLineBreak || 'suppress';
	            return this.toTabular(tabulatorOptions);
	        };
	        Dataset.prototype.toTSV = function (tabulatorOptions) {
	            if (tabulatorOptions === void 0) { tabulatorOptions = {}; }
	            tabulatorOptions.finalizer = escapeFnTSV;
	            tabulatorOptions.separator = tabulatorOptions.separator || '\t';
	            tabulatorOptions.lineBreak = tabulatorOptions.lineBreak || '\r\n';
	            tabulatorOptions.finalLineBreak = tabulatorOptions.finalLineBreak || 'suppress';
	            return this.toTabular(tabulatorOptions);
	        };
	        Dataset.type = 'DATASET';
	        return Dataset;
	    }());
	    Plywood.Dataset = Dataset;
	    check = Dataset;
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    function filterToAnds(filter) {
	        if (filter.equals(Plywood.Expression.TRUE))
	            return [];
	        return filter.getExpressionPattern('and') || [filter];
	    }
	    function filterDiff(strongerFilter, weakerFilter) {
	        var strongerFilterAnds = filterToAnds(strongerFilter);
	        var weakerFilterAnds = filterToAnds(weakerFilter);
	        if (weakerFilterAnds.length > strongerFilterAnds.length)
	            return null;
	        for (var i = 0; i < weakerFilterAnds.length; i++) {
	            if (!(weakerFilterAnds[i].equals(strongerFilterAnds[i])))
	                return null;
	        }
	        return Plywood.Expression.and(strongerFilterAnds.slice(weakerFilterAnds.length));
	    }
	    function getCommonFilter(filter1, filter2) {
	        var filter1Ands = filterToAnds(filter1);
	        var filter2Ands = filterToAnds(filter2);
	        var minLength = Math.min(filter1Ands.length, filter2Ands.length);
	        var commonExpressions = [];
	        for (var i = 0; i < minLength; i++) {
	            if (!filter1Ands[i].equals(filter2Ands[i]))
	                break;
	            commonExpressions.push(filter1Ands[i]);
	        }
	        return Plywood.Expression.and(commonExpressions);
	    }
	    function mergeDerivedAttributes(derivedAttributes1, derivedAttributes2) {
	        var derivedAttributes = Object.create(null);
	        for (var k in derivedAttributes1) {
	            derivedAttributes[k] = derivedAttributes1[k];
	        }
	        for (var k in derivedAttributes2) {
	            if (hasOwnProperty(derivedAttributes, k) && !derivedAttributes[k].equals(derivedAttributes2[k])) {
	                throw new Error("can not currently redefine conflicting " + k);
	            }
	            derivedAttributes[k] = derivedAttributes2[k];
	        }
	        return derivedAttributes;
	    }
	    function getSampleValue(valueType, ex) {
	        switch (valueType) {
	            case 'BOOLEAN':
	                return true;
	            case 'NUMBER':
	                return 4;
	            case 'NUMBER_RANGE':
	                var numberBucketAction;
	                if (ex instanceof Plywood.ChainExpression && (numberBucketAction = ex.getSingleAction('numberBucket'))) {
	                    return new Plywood.NumberRange({
	                        start: numberBucketAction.offset,
	                        end: numberBucketAction.offset + numberBucketAction.size
	                    });
	                }
	                else {
	                    return new Plywood.NumberRange({ start: 0, end: 1 });
	                }
	            case 'TIME':
	                return new Date('2015-03-14T00:00:00');
	            case 'TIME_RANGE':
	                var timeBucketAction;
	                if (ex instanceof Plywood.ChainExpression && (timeBucketAction = ex.getSingleAction('timeBucket'))) {
	                    var timezone = timeBucketAction.timezone || Plywood.Timezone.UTC;
	                    var start = timeBucketAction.duration.floor(new Date('2015-03-14T00:00:00'), timezone);
	                    return new Plywood.TimeRange({
	                        start: start,
	                        end: timeBucketAction.duration.shift(start, timezone, 1)
	                    });
	                }
	                else {
	                    return new Plywood.TimeRange({ start: new Date('2015-03-14T00:00:00'), end: new Date('2015-03-15T00:00:00') });
	                }
	            case 'STRING':
	                if (ex instanceof Plywood.RefExpression) {
	                    return 'some_' + ex.name;
	                }
	                else {
	                    return 'something';
	                }
	            case 'SET/STRING':
	                if (ex instanceof Plywood.RefExpression) {
	                    return Plywood.Set.fromJS([ex.name + '1']);
	                }
	                else {
	                    return Plywood.Set.fromJS(['something']);
	                }
	            default:
	                throw new Error("unsupported simulation on: " + valueType);
	        }
	    }
	    function immutableAdd(obj, key, value) {
	        var newObj = Object.create(null);
	        for (var k in obj)
	            newObj[k] = obj[k];
	        newObj[key] = value;
	        return newObj;
	    }
	    function findApplyByExpression(applies, expression) {
	        for (var _i = 0, applies_1 = applies; _i < applies_1.length; _i++) {
	            var apply = applies_1[_i];
	            if (apply.expression.equals(expression))
	                return apply;
	        }
	        return null;
	    }
	    var External = (function () {
	        function External(parameters, dummy) {
	            if (dummy === void 0) { dummy = null; }
	            this.attributes = null;
	            this.attributeOverrides = null;
	            this.rawAttributes = null;
	            if (dummy !== dummyObject) {
	                throw new TypeError("can not call `new External` directly use External.fromJS instead");
	            }
	            this.engine = parameters.engine;
	            var version = null;
	            if (parameters.version) {
	                version = External.getVersion(parameters.version);
	                if (!version)
	                    throw new Error("invalid version " + parameters.version);
	            }
	            this.version = version;
	            this.suppress = Boolean(parameters.suppress);
	            this.rollup = Boolean(parameters.rollup);
	            if (parameters.attributes) {
	                this.attributes = parameters.attributes;
	            }
	            if (parameters.attributeOverrides) {
	                this.attributeOverrides = parameters.attributeOverrides;
	            }
	            this.derivedAttributes = parameters.derivedAttributes || {};
	            this.rawAttributes = parameters.rawAttributes;
	            this.requester = parameters.requester;
	            this.mode = parameters.mode || 'raw';
	            this.filter = parameters.filter || Plywood.Expression.TRUE;
	            switch (this.mode) {
	                case 'raw':
	                    this.select = parameters.select;
	                    this.sort = parameters.sort;
	                    this.limit = parameters.limit;
	                    break;
	                case 'value':
	                    this.valueExpression = parameters.valueExpression;
	                    break;
	                case 'total':
	                    this.applies = parameters.applies || [];
	                    break;
	                case 'split':
	                    this.dataName = parameters.dataName;
	                    this.split = parameters.split;
	                    if (!this.split)
	                        throw new Error('must have split action in split mode');
	                    this.applies = parameters.applies || [];
	                    this.sort = parameters.sort;
	                    this.limit = parameters.limit;
	                    this.havingFilter = parameters.havingFilter || Plywood.Expression.TRUE;
	                    break;
	            }
	        }
	        External.isExternal = function (candidate) {
	            return Plywood.isInstanceOf(candidate, External);
	        };
	        External.getVersion = function (v) {
	            if (!v)
	                return null;
	            var m = v.match(/^\d+\.\d+\.\d+(?:-\w+)?/);
	            return m ? m[0] : null;
	        };
	        External.versionLessThan = function (va, vb) {
	            var pa = va.split('-')[0].split('.');
	            var pb = vb.split('-')[0].split('.');
	            if (pa[0] !== pb[0])
	                return pa[0] < pb[0];
	            if (pa[1] !== pb[1])
	                return pa[1] < pb[1];
	            return pa[2] < pb[2];
	        };
	        External.deduplicateExternals = function (externals) {
	            if (externals.length < 2)
	                return externals;
	            var uniqueExternals = [externals[0]];
	            function addToUniqueExternals(external) {
	                for (var _i = 0, uniqueExternals_1 = uniqueExternals; _i < uniqueExternals_1.length; _i++) {
	                    var uniqueExternal = uniqueExternals_1[_i];
	                    if (uniqueExternal.equalBase(external))
	                        return;
	                }
	                uniqueExternals.push(external);
	            }
	            for (var i = 1; i < externals.length; i++)
	                addToUniqueExternals(externals[i]);
	            return uniqueExternals;
	        };
	        External.makeZeroDatum = function (applies) {
	            var newDatum = Object.create(null);
	            for (var _i = 0, applies_2 = applies; _i < applies_2.length; _i++) {
	                var apply = applies_2[_i];
	                var applyName = apply.name;
	                if (applyName[0] === '_')
	                    continue;
	                newDatum[applyName] = 0;
	            }
	            return newDatum;
	        };
	        External.normalizeAndAddApply = function (attributesAndApplies, apply) {
	            var attributes = attributesAndApplies.attributes, applies = attributesAndApplies.applies;
	            var expressions = Object.create(null);
	            for (var _i = 0, applies_3 = applies; _i < applies_3.length; _i++) {
	                var existingApply = applies_3[_i];
	                expressions[existingApply.name] = existingApply.expression;
	            }
	            apply = apply.changeExpression(apply.expression.resolveWithExpressions(expressions, 'leave').simplify());
	            return {
	                attributes: Plywood.helper.overrideByName(attributes, new Plywood.AttributeInfo({ name: apply.name, type: apply.expression.type })),
	                applies: Plywood.helper.overrideByName(applies, apply)
	            };
	        };
	        External.segregationAggregateApplies = function (applies) {
	            var aggregateApplies = [];
	            var postAggregateApplies = [];
	            var nameIndex = 0;
	            var appliesToSegregate = [];
	            for (var _i = 0, applies_4 = applies; _i < applies_4.length; _i++) {
	                var apply = applies_4[_i];
	                var applyExpression = apply.expression;
	                if (applyExpression instanceof Plywood.ChainExpression) {
	                    var actions = applyExpression.actions;
	                    if (actions[actions.length - 1].isAggregate()) {
	                        aggregateApplies.push(apply);
	                        continue;
	                    }
	                }
	                appliesToSegregate.push(apply);
	            }
	            for (var _a = 0, appliesToSegregate_1 = appliesToSegregate; _a < appliesToSegregate_1.length; _a++) {
	                var apply = appliesToSegregate_1[_a];
	                var newExpression = apply.expression.substituteAction(function (action) {
	                    return action.isAggregate();
	                }, function (preEx, action) {
	                    var aggregateChain = preEx.performAction(action);
	                    var existingApply = findApplyByExpression(aggregateApplies, aggregateChain);
	                    if (existingApply) {
	                        return Plywood.$(existingApply.name, existingApply.expression.type);
	                    }
	                    else {
	                        var name = '!T_' + (nameIndex++);
	                        aggregateApplies.push(new Plywood.ApplyAction({
	                            action: 'apply',
	                            name: name,
	                            expression: aggregateChain
	                        }));
	                        return Plywood.$(name, aggregateChain.type);
	                    }
	                });
	                postAggregateApplies.push(apply.changeExpression(newExpression));
	            }
	            return {
	                aggregateApplies: aggregateApplies,
	                postAggregateApplies: postAggregateApplies
	            };
	        };
	        External.getCommonFilterFromExternals = function (externals) {
	            if (!externals.length)
	                throw new Error('must have externals');
	            var commonFilter = externals[0].filter;
	            for (var i = 1; i < externals.length; i++) {
	                commonFilter = getCommonFilter(commonFilter, externals[i].filter);
	            }
	            return commonFilter;
	        };
	        External.getMergedDerivedAttributesFromExternals = function (externals) {
	            if (!externals.length)
	                throw new Error('must have externals');
	            var derivedAttributes = externals[0].derivedAttributes;
	            for (var i = 1; i < externals.length; i++) {
	                derivedAttributes = mergeDerivedAttributes(derivedAttributes, externals[i].derivedAttributes);
	            }
	            return derivedAttributes;
	        };
	        External.getSimpleInflater = function (splitExpression, label) {
	            switch (splitExpression.type) {
	                case 'BOOLEAN': return External.booleanInflaterFactory(label);
	                case 'NUMBER': return External.numberInflaterFactory(label);
	                case 'TIME': return External.timeInflaterFactory(label);
	                default: return null;
	            }
	        };
	        External.booleanInflaterFactory = function (label) {
	            return function (d) {
	                var v = '' + d[label];
	                switch (v) {
	                    case 'null':
	                        d[label] = null;
	                        break;
	                    case '0':
	                    case 'false':
	                        d[label] = false;
	                        break;
	                    case '1':
	                    case 'true':
	                        d[label] = true;
	                        break;
	                    default:
	                        throw new Error("got strange result from boolean: " + v);
	                }
	            };
	        };
	        External.timeRangeInflaterFactory = function (label, duration, timezone) {
	            return function (d) {
	                var v = d[label];
	                if ('' + v === "null") {
	                    d[label] = null;
	                    return;
	                }
	                var start = new Date(v);
	                d[label] = new Plywood.TimeRange({ start: start, end: duration.shift(start, timezone) });
	            };
	        };
	        External.consecutiveTimeRangeInflaterFactory = function (label, duration, timezone) {
	            var canonicalDurationLengthAndThenSome = duration.getCanonicalLength() * 1.5;
	            return function (d, i, data) {
	                var v = d[label];
	                if ('' + v === "null") {
	                    d[label] = null;
	                    return;
	                }
	                var start = new Date(v);
	                var next = data[i + 1];
	                var nextTimestamp;
	                if (next) {
	                    nextTimestamp = new Date(next[label]);
	                }
	                var end = (nextTimestamp &&
	                    start.valueOf() < nextTimestamp.valueOf() &&
	                    nextTimestamp.valueOf() - start.valueOf() < canonicalDurationLengthAndThenSome) ? nextTimestamp
	                    : duration.shift(start, timezone, 1);
	                d[label] = new Plywood.TimeRange({ start: start, end: end });
	            };
	        };
	        External.numberRangeInflaterFactory = function (label, rangeSize) {
	            return function (d) {
	                var v = d[label];
	                if ('' + v === "null") {
	                    d[label] = null;
	                    return;
	                }
	                var start = Number(v);
	                d[label] = new Plywood.NumberRange({
	                    start: start,
	                    end: Plywood.safeAdd(start, rangeSize)
	                });
	            };
	        };
	        External.numberInflaterFactory = function (label) {
	            return function (d) {
	                var v = d[label];
	                if ('' + v === "null") {
	                    d[label] = null;
	                    return;
	                }
	                d[label] = Number(v);
	            };
	        };
	        External.timeInflaterFactory = function (label) {
	            return function (d) {
	                var v = d[label];
	                if ('' + v === "null") {
	                    d[label] = null;
	                    return;
	                }
	                d[label] = new Date(v);
	            };
	        };
	        External.setStringInflaterFactory = function (label) {
	            return function (d) {
	                var v = d[label];
	                if ('' + v === "null") {
	                    d[label] = null;
	                    return;
	                }
	                if (typeof v === 'string')
	                    v = [v];
	                d[label] = Plywood.Set.fromJS({
	                    setType: 'STRING',
	                    elements: v
	                });
	            };
	        };
	        External.jsToValue = function (parameters, requester) {
	            var value = {
	                engine: parameters.engine,
	                version: parameters.version,
	                suppress: true,
	                rollup: parameters.rollup,
	                requester: requester
	            };
	            if (parameters.attributes) {
	                value.attributes = Plywood.AttributeInfo.fromJSs(parameters.attributes);
	            }
	            if (parameters.attributeOverrides) {
	                value.attributeOverrides = Plywood.AttributeInfo.fromJSs(parameters.attributeOverrides);
	            }
	            if (parameters.derivedAttributes) {
	                value.derivedAttributes = Plywood.helper.expressionLookupFromJS(parameters.derivedAttributes);
	            }
	            value.filter = parameters.filter ? Plywood.Expression.fromJS(parameters.filter) : Plywood.Expression.TRUE;
	            return value;
	        };
	        External.register = function (ex, id) {
	            if (id === void 0) { id = null; }
	            if (!id)
	                id = ex.name.replace('External', '').replace(/^\w/, function (s) { return s.toLowerCase(); });
	            External.classMap[id] = ex;
	        };
	        External.fromJS = function (parameters, requester) {
	            if (requester === void 0) { requester = null; }
	            if (!hasOwnProperty(parameters, "engine")) {
	                throw new Error("external `engine` must be defined");
	            }
	            var engine = parameters.engine;
	            if (typeof engine !== "string") {
	                throw new Error("dataset must be a string");
	            }
	            var ClassFn = External.classMap[engine];
	            if (!ClassFn) {
	                throw new Error("unsupported engine '" + engine + "'");
	            }
	            if (!requester && hasOwnProperty(parameters, 'requester')) {
	                console.warn("'requester' parameter should be passed as context (2nd argument)");
	                requester = parameters.requester;
	            }
	            return ClassFn.fromJS(parameters, requester);
	        };
	        External.fromValue = function (parameters) {
	            var engine = parameters.engine;
	            var ClassFn = External.classMap[engine];
	            if (!ClassFn)
	                throw new Error("unsupported engine '" + engine + "'");
	            return (new ClassFn(parameters));
	        };
	        External.prototype._ensureEngine = function (engine) {
	            if (!this.engine) {
	                this.engine = engine;
	                return;
	            }
	            if (this.engine !== engine) {
	                throw new TypeError("incorrect engine '" + this.engine + "' (needs to be: '" + engine + "')");
	            }
	        };
	        External.prototype._ensureMinVersion = function (minVersion) {
	            if (this.version && External.versionLessThan(this.version, minVersion)) {
	                throw new Error("only " + this.engine + " versions >= " + minVersion + " are supported");
	            }
	        };
	        External.prototype.valueOf = function () {
	            var value = {
	                engine: this.engine,
	                version: this.version,
	                rollup: this.rollup,
	                mode: this.mode
	            };
	            if (this.suppress)
	                value.suppress = this.suppress;
	            if (this.attributes)
	                value.attributes = this.attributes;
	            if (this.attributeOverrides)
	                value.attributeOverrides = this.attributeOverrides;
	            if (Plywood.helper.nonEmptyLookup(this.derivedAttributes))
	                value.derivedAttributes = this.derivedAttributes;
	            if (this.rawAttributes) {
	                value.rawAttributes = this.rawAttributes;
	            }
	            if (this.requester) {
	                value.requester = this.requester;
	            }
	            if (this.dataName) {
	                value.dataName = this.dataName;
	            }
	            value.filter = this.filter;
	            if (this.valueExpression) {
	                value.valueExpression = this.valueExpression;
	            }
	            if (this.select) {
	                value.select = this.select;
	            }
	            if (this.split) {
	                value.split = this.split;
	            }
	            if (this.applies) {
	                value.applies = this.applies;
	            }
	            if (this.sort) {
	                value.sort = this.sort;
	            }
	            if (this.limit) {
	                value.limit = this.limit;
	            }
	            if (this.havingFilter) {
	                value.havingFilter = this.havingFilter;
	            }
	            return value;
	        };
	        External.prototype.toJS = function () {
	            var js = {
	                engine: this.engine
	            };
	            if (this.version)
	                js.version = this.version;
	            if (this.rollup)
	                js.rollup = true;
	            if (this.attributes)
	                js.attributes = Plywood.AttributeInfo.toJSs(this.attributes);
	            if (this.attributeOverrides)
	                js.attributeOverrides = Plywood.AttributeInfo.toJSs(this.attributeOverrides);
	            if (Plywood.helper.nonEmptyLookup(this.derivedAttributes))
	                js.derivedAttributes = Plywood.helper.expressionLookupToJS(this.derivedAttributes);
	            if (this.rawAttributes)
	                js.rawAttributes = Plywood.AttributeInfo.toJSs(this.rawAttributes);
	            if (!this.filter.equals(Plywood.Expression.TRUE)) {
	                js.filter = this.filter.toJS();
	            }
	            return js;
	        };
	        External.prototype.toJSON = function () {
	            return this.toJS();
	        };
	        External.prototype.toString = function () {
	            switch (this.mode) {
	                case 'raw':
	                    return "ExternalRaw(" + this.filter + ")";
	                case 'value':
	                    return "ExternalValue(" + this.valueExpression + ")";
	                case 'total':
	                    return "ExternalTotal(" + this.applies.length + ")";
	                case 'split':
	                    return "ExternalSplit(" + this.split + ", " + this.applies.length + ")";
	                default:
	                    throw new Error("unknown mode: " + this.mode);
	            }
	        };
	        External.prototype.equals = function (other) {
	            return this.equalBase(other) &&
	                Plywood.immutableLookupsEqual(this.derivedAttributes, other.derivedAttributes);
	        };
	        External.prototype.equalBase = function (other) {
	            return External.isExternal(other) &&
	                this.engine === other.engine &&
	                this.version === other.version &&
	                this.rollup === other.rollup &&
	                this.mode === other.mode &&
	                this.filter.equals(other.filter);
	        };
	        External.prototype.versionBefore = function (neededVersion) {
	            var version = this.version;
	            return version && External.versionLessThan(version, neededVersion);
	        };
	        External.prototype.getAttributesInfo = function (attributeName) {
	            var attributes = this.rawAttributes || this.attributes;
	            return Plywood.helper.findByName(attributes, attributeName);
	        };
	        External.prototype.updateAttribute = function (newAttribute) {
	            if (!this.attributes)
	                return this;
	            var value = this.valueOf();
	            value.attributes = Plywood.AttributeInfo.override(value.attributes, [newAttribute]);
	            return External.fromValue(value);
	        };
	        External.prototype.show = function () {
	            var value = this.valueOf();
	            value.suppress = false;
	            return External.fromValue(value);
	        };
	        External.prototype.canHandleFilter = function (ex) {
	            throw new Error("must implement canHandleFilter");
	        };
	        External.prototype.canHandleTotal = function () {
	            throw new Error("must implement canHandleTotal");
	        };
	        External.prototype.canHandleSplit = function (ex) {
	            throw new Error("must implement canHandleSplit");
	        };
	        External.prototype.canHandleApply = function (ex) {
	            throw new Error("must implement canHandleApply");
	        };
	        External.prototype.canHandleSort = function (sortAction) {
	            throw new Error("must implement canHandleSort");
	        };
	        External.prototype.canHandleLimit = function (limitAction) {
	            throw new Error("must implement canHandleLimit");
	        };
	        External.prototype.canHandleHavingFilter = function (ex) {
	            throw new Error("must implement canHandleHavingFilter");
	        };
	        External.prototype.getBase = function () {
	            var value = this.valueOf();
	            value.suppress = true;
	            value.mode = 'raw';
	            value.dataName = null;
	            if (this.mode !== 'raw')
	                value.attributes = value.rawAttributes;
	            value.rawAttributes = null;
	            value.filter = null;
	            value.applies = [];
	            value.split = null;
	            value.sort = null;
	            value.limit = null;
	            return External.fromValue(value);
	        };
	        External.prototype.getRaw = function () {
	            if (this.mode === 'raw')
	                return this;
	            var value = this.valueOf();
	            value.suppress = true;
	            value.mode = 'raw';
	            value.dataName = null;
	            if (this.mode !== 'raw')
	                value.attributes = value.rawAttributes;
	            value.rawAttributes = null;
	            value.applies = [];
	            value.split = null;
	            value.sort = null;
	            value.limit = null;
	            return External.fromValue(value);
	        };
	        External.prototype.makeTotal = function (applies) {
	            if (this.mode !== 'raw')
	                return null;
	            if (!this.canHandleTotal())
	                return null;
	            if (!applies.length)
	                throw new Error('must have applies');
	            var externals = [];
	            for (var _i = 0, applies_5 = applies; _i < applies_5.length; _i++) {
	                var apply = applies_5[_i];
	                var applyExpression = apply.expression;
	                if (applyExpression instanceof Plywood.ExternalExpression) {
	                    externals.push(applyExpression.external);
	                }
	            }
	            var commonFilter = External.getCommonFilterFromExternals(externals);
	            var attributesAndApplies = { attributes: [], applies: [] };
	            for (var _a = 0, applies_6 = applies; _a < applies_6.length; _a++) {
	                var apply = applies_6[_a];
	                var applyExpression = apply.expression;
	                if (applyExpression instanceof Plywood.ExternalExpression) {
	                    attributesAndApplies = External.normalizeAndAddApply(attributesAndApplies, apply.changeExpression(applyExpression.external.valueExpressionWithinFilter(commonFilter)));
	                }
	                else {
	                    attributesAndApplies = External.normalizeAndAddApply(attributesAndApplies, apply);
	                }
	            }
	            var value = this.valueOf();
	            value.mode = 'total';
	            value.suppress = false;
	            value.rawAttributes = value.attributes;
	            value.derivedAttributes = External.getMergedDerivedAttributesFromExternals(externals);
	            value.filter = commonFilter;
	            value.attributes = attributesAndApplies.attributes;
	            value.applies = attributesAndApplies.applies;
	            return External.fromValue(value);
	        };
	        External.prototype.addAction = function (action) {
	            if (action instanceof Plywood.FilterAction) {
	                return this._addFilterAction(action);
	            }
	            if (action instanceof Plywood.SelectAction) {
	                return this._addSelectAction(action);
	            }
	            if (action instanceof Plywood.SplitAction) {
	                return this._addSplitAction(action);
	            }
	            if (action instanceof Plywood.ApplyAction) {
	                return this._addApplyAction(action);
	            }
	            if (action instanceof Plywood.SortAction) {
	                return this._addSortAction(action);
	            }
	            if (action instanceof Plywood.LimitAction) {
	                return this._addLimitAction(action);
	            }
	            if (action.isAggregate()) {
	                return this._addAggregateAction(action);
	            }
	            return this._addPostAggregateAction(action);
	        };
	        External.prototype._addFilterAction = function (action) {
	            return this.addFilter(action.expression);
	        };
	        External.prototype.addFilter = function (expression) {
	            if (!expression.resolved())
	                return null;
	            var value = this.valueOf();
	            switch (this.mode) {
	                case 'raw':
	                    if (!this.canHandleFilter(expression))
	                        return null;
	                    if (value.filter.equals(Plywood.Expression.TRUE)) {
	                        value.filter = expression;
	                    }
	                    else {
	                        value.filter = value.filter.and(expression);
	                    }
	                    break;
	                case 'split':
	                    if (!this.canHandleHavingFilter(expression))
	                        return null;
	                    value.havingFilter = value.havingFilter.and(expression).simplify();
	                    break;
	                default:
	                    return null;
	            }
	            return External.fromValue(value);
	        };
	        External.prototype._addSelectAction = function (selectAction) {
	            if (this.mode !== 'raw')
	                return null;
	            var value = this.valueOf();
	            value.suppress = false;
	            value.select = selectAction;
	            return External.fromValue(value);
	        };
	        External.prototype._addSplitAction = function (splitAction) {
	            if (this.mode !== 'raw')
	                return null;
	            var value = this.valueOf();
	            value.suppress = false;
	            value.mode = 'split';
	            value.dataName = splitAction.dataName;
	            value.split = splitAction;
	            value.rawAttributes = value.attributes;
	            value.attributes = splitAction.mapSplits(function (name, expression) { return new Plywood.AttributeInfo({ name: name, type: expression.type }); });
	            return External.fromValue(value);
	        };
	        External.prototype._addApplyAction = function (action) {
	            var expression = action.expression;
	            if (expression.type === 'DATASET')
	                return null;
	            if (!expression.contained())
	                return null;
	            if (!this.canHandleApply(action.expression))
	                return null;
	            if (this.mode === 'raw') {
	                var value = this.valueOf();
	                value.derivedAttributes = immutableAdd(value.derivedAttributes, action.name, action.expression);
	            }
	            else {
	                if (this.split && this.split.hasKey(action.name))
	                    return null;
	                var actionExpression = action.expression;
	                if (actionExpression instanceof Plywood.ExternalExpression) {
	                    action = action.changeExpression(actionExpression.external.valueExpressionWithinFilter(this.filter));
	                }
	                var value = this.valueOf();
	                var added = External.normalizeAndAddApply(value, action);
	                value.applies = added.applies;
	                value.attributes = added.attributes;
	            }
	            return External.fromValue(value);
	        };
	        External.prototype._addSortAction = function (action) {
	            if (this.limit)
	                return null;
	            if (!this.canHandleSort(action))
	                return null;
	            var value = this.valueOf();
	            value.sort = action;
	            return External.fromValue(value);
	        };
	        External.prototype._addLimitAction = function (action) {
	            if (!this.canHandleLimit(action))
	                return null;
	            var value = this.valueOf();
	            value.suppress = false;
	            if (!value.limit || action.limit < value.limit.limit) {
	                value.limit = action;
	            }
	            return External.fromValue(value);
	        };
	        External.prototype._addAggregateAction = function (action) {
	            if (this.mode !== 'raw' || this.limit)
	                return null;
	            var value = this.valueOf();
	            value.mode = 'value';
	            value.suppress = false;
	            value.valueExpression = Plywood.$(External.SEGMENT_NAME, 'DATASET').performAction(action);
	            value.rawAttributes = value.attributes;
	            value.attributes = null;
	            return External.fromValue(value);
	        };
	        External.prototype._addPostAggregateAction = function (action) {
	            if (this.mode !== 'value')
	                throw new Error('must be in value mode to call addPostAggregateAction');
	            var actionExpression = action.expression;
	            var commonFilter = this.filter;
	            var newValueExpression;
	            if (actionExpression instanceof Plywood.ExternalExpression) {
	                var otherExternal = actionExpression.external;
	                if (!this.getBase().equals(otherExternal.getBase()))
	                    return null;
	                var commonFilter = getCommonFilter(commonFilter, otherExternal.filter);
	                var newAction = action.changeExpression(otherExternal.valueExpressionWithinFilter(commonFilter));
	                newValueExpression = this.valueExpressionWithinFilter(commonFilter).performAction(newAction);
	            }
	            else if (!actionExpression || !actionExpression.hasExternal()) {
	                newValueExpression = this.valueExpression.performAction(action);
	            }
	            else {
	                return null;
	            }
	            var value = this.valueOf();
	            value.valueExpression = newValueExpression;
	            value.filter = commonFilter;
	            return External.fromValue(value);
	        };
	        External.prototype.prePack = function (prefix, myAction) {
	            if (this.mode !== 'value')
	                throw new Error('must be in value mode to call prePack');
	            var value = this.valueOf();
	            value.valueExpression = prefix.performAction(myAction.changeExpression(value.valueExpression));
	            return External.fromValue(value);
	        };
	        External.prototype.valueExpressionWithinFilter = function (withinFilter) {
	            if (this.mode !== 'value')
	                return null;
	            var extraFilter = filterDiff(this.filter, withinFilter);
	            if (!extraFilter)
	                throw new Error('not within the segment');
	            var ex = this.valueExpression;
	            if (!extraFilter.equals(Plywood.Expression.TRUE)) {
	                ex = ex.substitute(function (ex) {
	                    if (ex instanceof Plywood.RefExpression && ex.type === 'DATASET' && ex.name === External.SEGMENT_NAME) {
	                        return ex.filter(extraFilter);
	                    }
	                    return null;
	                });
	            }
	            return ex;
	        };
	        External.prototype.toValueApply = function () {
	            if (this.mode !== 'value')
	                return null;
	            return new Plywood.ApplyAction({
	                name: External.VALUE_NAME,
	                expression: this.valueExpression
	            });
	        };
	        External.prototype.isKnownName = function (name) {
	            var attributes = this.attributes;
	            for (var _i = 0, attributes_3 = attributes; _i < attributes_3.length; _i++) {
	                var attribute = attributes_3[_i];
	                if (attribute.name === name)
	                    return true;
	            }
	            return false;
	        };
	        External.prototype.sortOnLabel = function () {
	            var sort = this.sort;
	            if (!sort)
	                return false;
	            var sortOn = sort.expression.name;
	            if (!this.split || !this.split.hasKey(sortOn))
	                return false;
	            var applies = this.applies;
	            for (var _i = 0, applies_7 = applies; _i < applies_7.length; _i++) {
	                var apply = applies_7[_i];
	                if (apply.name === sortOn)
	                    return false;
	            }
	            return true;
	        };
	        External.prototype.inlineDerivedAttributes = function (expression) {
	            var derivedAttributes = this.derivedAttributes;
	            return expression.substitute(function (refEx) {
	                if (refEx instanceof Plywood.RefExpression) {
	                    var refName = refEx.name;
	                    return hasOwnProperty(derivedAttributes, refName) ? derivedAttributes[refName] : null;
	                }
	                else {
	                    return null;
	                }
	            });
	        };
	        External.prototype.inlineDerivedAttributesInAggregate = function (expression) {
	            var _this = this;
	            var derivedAttributes = this.derivedAttributes;
	            return expression.substituteAction(function (action) {
	                if (!action.isAggregate())
	                    return false;
	                return action.getFreeReferences().some(function (ref) { return hasOwnProperty(derivedAttributes, ref); });
	            }, function (preEx, action) {
	                return preEx.performAction(action.changeExpression(_this.inlineDerivedAttributes(action.expression)));
	            });
	        };
	        External.prototype.switchToRollupCount = function (expression) {
	            var _this = this;
	            if (!this.rollup)
	                return expression;
	            var countRef = null;
	            return expression.substituteAction(function (action) {
	                return action.action === 'count';
	            }, function (preEx) {
	                if (!countRef)
	                    countRef = Plywood.$(_this.getRollupCountName(), 'NUMBER');
	                return preEx.sum(countRef);
	            });
	        };
	        External.prototype.getRollupCountName = function () {
	            var rawAttributes = this.rawAttributes;
	            for (var _i = 0, rawAttributes_1 = rawAttributes; _i < rawAttributes_1.length; _i++) {
	                var attribute = rawAttributes_1[_i];
	                var makerAction = attribute.makerAction;
	                if (makerAction && makerAction.action === 'count')
	                    return attribute.name;
	            }
	            throw new Error("could not find rollup count");
	        };
	        External.prototype.getQuerySplit = function () {
	            var _this = this;
	            return this.split.transformExpressions(function (ex) {
	                return _this.inlineDerivedAttributes(ex);
	            });
	        };
	        External.prototype.getQueryFilter = function () {
	            return this.inlineDerivedAttributes(this.filter).simplify();
	        };
	        External.prototype.getSelectedAttributes = function () {
	            var _a = this, select = _a.select, attributes = _a.attributes, derivedAttributes = _a.derivedAttributes;
	            attributes = attributes.slice();
	            for (var k in derivedAttributes) {
	                attributes.push(new Plywood.AttributeInfo({ name: k, type: derivedAttributes[k].type }));
	            }
	            if (!select)
	                return attributes;
	            var selectAttributes = select.attributes;
	            return attributes.filter(function (a) { return selectAttributes.indexOf(a.name) !== -1; });
	        };
	        External.prototype.addNextExternal = function (dataset) {
	            var _this = this;
	            var _a = this, mode = _a.mode, dataName = _a.dataName, split = _a.split;
	            if (mode !== 'split')
	                throw new Error('must be in split mode to addNextExternal');
	            return dataset.apply(dataName, function (d) {
	                return _this.getRaw().addFilter(split.filterFromDatum(d));
	            }, 'DATASET', null);
	        };
	        External.prototype.simulateValue = function (lastNode) {
	            var mode = this.mode;
	            if (mode === 'value') {
	                var valueExpression = this.valueExpression;
	                return getSampleValue(valueExpression.type, valueExpression);
	            }
	            var datum = {};
	            if (mode === 'raw') {
	                var attributes = this.attributes;
	                for (var _i = 0, attributes_4 = attributes; _i < attributes_4.length; _i++) {
	                    var attribute = attributes_4[_i];
	                    datum[attribute.name] = getSampleValue(attribute.type, null);
	                }
	            }
	            else {
	                if (mode === 'split') {
	                    this.split.mapSplits(function (name, expression) {
	                        datum[name] = getSampleValue(Plywood.unwrapSetType(expression.type), expression);
	                    });
	                }
	                var applies = this.applies;
	                for (var _a = 0, applies_8 = applies; _a < applies_8.length; _a++) {
	                    var apply = applies_8[_a];
	                    datum[apply.name] = getSampleValue(apply.expression.type, apply.expression);
	                }
	            }
	            var dataset = new Plywood.Dataset({ data: [datum] });
	            if (!lastNode && mode === 'split')
	                dataset = this.addNextExternal(dataset);
	            return dataset;
	        };
	        External.prototype.getQueryAndPostProcess = function () {
	            throw new Error("can not call getQueryAndPostProcess directly");
	        };
	        External.prototype.queryValue = function (lastNode) {
	            if (!this.requester) {
	                return Q.reject(new Error('must have a requester to make queries'));
	            }
	            try {
	                var queryAndPostProcess = this.getQueryAndPostProcess();
	            }
	            catch (e) {
	                return Q.reject(e);
	            }
	            if (!hasOwnProperty(queryAndPostProcess, 'query') || typeof queryAndPostProcess.postProcess !== 'function') {
	                return Q.reject(new Error('no error query or postProcess'));
	            }
	            var result = this.requester({ query: queryAndPostProcess.query })
	                .then(queryAndPostProcess.postProcess);
	            if (!lastNode && this.mode === 'split') {
	                result = result.then(this.addNextExternal.bind(this));
	            }
	            return result;
	        };
	        External.prototype.needsIntrospect = function () {
	            return !this.attributes;
	        };
	        External.prototype.getIntrospectAttributes = function () {
	            throw new Error("can not call getIntrospectAttributes directly");
	        };
	        External.prototype.introspect = function () {
	            var _this = this;
	            if (!this.requester) {
	                return Q.reject(new Error('must have a requester to introspect'));
	            }
	            return this.getIntrospectAttributes()
	                .then(function (_a) {
	                var version = _a.version, attributes = _a.attributes;
	                var value = _this.valueOf();
	                if (value.attributeOverrides) {
	                    attributes = Plywood.AttributeInfo.override(attributes, value.attributeOverrides);
	                }
	                if (value.attributes) {
	                    attributes = Plywood.AttributeInfo.override(value.attributes, attributes);
	                }
	                if (version)
	                    value.version = version;
	                value.attributes = attributes;
	                return External.fromValue(value);
	            });
	        };
	        External.prototype.getFullType = function () {
	            var _a = this, attributes = _a.attributes, derivedAttributes = _a.derivedAttributes;
	            if (!attributes)
	                throw new Error("dataset has not been introspected");
	            var myDatasetType = {};
	            for (var _i = 0, attributes_5 = attributes; _i < attributes_5.length; _i++) {
	                var attribute = attributes_5[_i];
	                var attrName = attribute.name;
	                myDatasetType[attrName] = {
	                    type: attribute.type
	                };
	            }
	            for (var name in derivedAttributes) {
	                myDatasetType[name] = {
	                    type: derivedAttributes[name].type
	                };
	            }
	            return {
	                type: 'DATASET',
	                datasetType: myDatasetType,
	                remote: true
	            };
	        };
	        External.type = 'EXTERNAL';
	        External.SEGMENT_NAME = '__SEGMENT__';
	        External.VALUE_NAME = '__VALUE__';
	        External.classMap = {};
	        return External;
	    }());
	    Plywood.External = External;
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var DUMMY_NAME = '!DUMMY';
	    var DEFAULT_TIME_ATTRIBUTE = '__time';
	    var AGGREGATE_TO_DRUID = {
	        count: "count",
	        sum: "doubleSum",
	        min: "doubleMin",
	        max: "doubleMax"
	    };
	    var AGGREGATE_TO_FUNCTION = {
	        sum: function (a, b) { return (a + "+" + b); },
	        min: function (a, b) { return ("Math.min(" + a + "," + b + ")"); },
	        max: function (a, b) { return ("Math.max(" + a + "," + b + ")"); }
	    };
	    var AGGREGATE_TO_ZERO = {
	        sum: "0",
	        min: "Infinity",
	        max: "-Infinity"
	    };
	    var TIME_PART_TO_FORMAT = {
	        SECOND_OF_MINUTE: "s",
	        SECOND_OF_HOUR: "m'*60+'s",
	        SECOND_OF_DAY: "H'*60+'m'*60+'s",
	        SECOND_OF_WEEK: "e'~*24+H'*60+'m'*60+'s",
	        SECOND_OF_MONTH: "d'~*24+H'*60+'m'*60+'s",
	        SECOND_OF_YEAR: "D'*24+H'*60+'m'*60+'s",
	        MINUTE_OF_HOUR: "m",
	        MINUTE_OF_DAY: "H'*60+'m",
	        MINUTE_OF_WEEK: "e'~*24+H'*60+'m",
	        MINUTE_OF_MONTH: "d'~*24+H'*60+'m",
	        MINUTE_OF_YEAR: "D'*24+H'*60+'m",
	        HOUR_OF_DAY: "H",
	        HOUR_OF_WEEK: "e'~*24+H",
	        HOUR_OF_MONTH: "d'~*24+H",
	        HOUR_OF_YEAR: "D'*24+H",
	        DAY_OF_WEEK: "e",
	        DAY_OF_MONTH: "d",
	        DAY_OF_YEAR: "D",
	        WEEK_OF_MONTH: null,
	        WEEK_OF_YEAR: "w",
	        MONTH_OF_YEAR: "M",
	        YEAR: "Y"
	    };
	    var TIME_BUCKET_FORMAT = {
	        "PT1S": "yyyy-MM-dd'T'HH:mm:ss'Z",
	        "PT1M": "yyyy-MM-dd'T'HH:mm'Z",
	        "PT1H": "yyyy-MM-dd'T'HH':00Z",
	        "P1D": "yyyy-MM-dd'Z",
	        "P1M": "yyyy-MM'-01Z",
	        "P1Y": "yyyy'-01-01Z"
	    };
	    function expressionNeedsAlphaNumericSort(ex) {
	        var type = ex.type;
	        return (type === 'NUMBER' || type === 'NUMBER_RANGE');
	    }
	    function simpleMath(exprStr) {
	        if (String(exprStr) === 'null')
	            return null;
	        var parts = exprStr.split(/(?=[*+~])/);
	        var acc = parseInt(parts.shift(), 10);
	        for (var _i = 0, parts_1 = parts; _i < parts_1.length; _i++) {
	            var part = parts_1[_i];
	            var v = parseInt(part.substring(1), 10);
	            switch (part[0]) {
	                case '+':
	                    acc += v;
	                    break;
	                case '*':
	                    acc *= v;
	                    break;
	                case '~':
	                    acc--;
	                    break;
	            }
	        }
	        return acc;
	    }
	    function customAggregationsEqual(customA, customB) {
	        return JSON.stringify(customA) === JSON.stringify(customB);
	    }
	    function cleanDatumInPlace(datum) {
	        for (var k in datum) {
	            if (k[0] === '!')
	                delete datum[k];
	        }
	    }
	    function correctTimeBoundaryResult(result) {
	        return Array.isArray(result) && result.length === 1 && typeof result[0].result === 'object';
	    }
	    function correctTimeseriesResult(result) {
	        return Array.isArray(result) && (result.length === 0 || typeof result[0].result === 'object');
	    }
	    function correctTopNResult(result) {
	        return Array.isArray(result) && (result.length === 0 || Array.isArray(result[0].result));
	    }
	    function correctGroupByResult(result) {
	        return Array.isArray(result) && (result.length === 0 || typeof result[0].event === 'object');
	    }
	    function correctSelectResult(result) {
	        return Array.isArray(result) && (result.length === 0 || typeof result[0].result === 'object');
	    }
	    function timeBoundaryPostProcessFactory(applies) {
	        return function (res) {
	            if (!correctTimeBoundaryResult(res)) {
	                var err = new Error("unexpected result from Druid (timeBoundary)");
	                err.result = res;
	                throw err;
	            }
	            var result = res[0].result;
	            var datum = {};
	            for (var _i = 0, applies_9 = applies; _i < applies_9.length; _i++) {
	                var apply = applies_9[_i];
	                var name_1 = apply.name;
	                var aggregate = apply.expression.actions[0].action;
	                if (typeof result === 'string') {
	                    datum[name_1] = new Date(result);
	                }
	                else {
	                    if (aggregate === 'max') {
	                        datum[name_1] = new Date((result['maxIngestedEventTime'] || result['maxTime']));
	                    }
	                    else {
	                        datum[name_1] = new Date((result['minTime']));
	                    }
	                }
	            }
	            return new Plywood.Dataset({ data: [datum] });
	        };
	    }
	    function valuePostProcess(res) {
	        if (!correctTimeseriesResult(res)) {
	            var err = new Error("unexpected result from Druid (all / value)");
	            err.result = res;
	            throw err;
	        }
	        if (!res.length) {
	            return 0;
	        }
	        return res[0].result[Plywood.External.VALUE_NAME];
	    }
	    function totalPostProcessFactory(applies) {
	        return function (res) {
	            if (!correctTimeseriesResult(res)) {
	                var err = new Error("unexpected result from Druid (all)");
	                err.result = res;
	                throw err;
	            }
	            if (!res.length) {
	                return new Plywood.Dataset({ data: [Plywood.External.makeZeroDatum(applies)] });
	            }
	            var datum = res[0].result;
	            cleanDatumInPlace(datum);
	            return new Plywood.Dataset({ data: [datum] });
	        };
	    }
	    function timeseriesNormalizerFactory(timestampLabel) {
	        if (timestampLabel === void 0) { timestampLabel = null; }
	        return function (res) {
	            if (!correctTimeseriesResult(res)) {
	                var err = new Error("unexpected result from Druid (timeseries)");
	                err.result = res;
	                throw err;
	            }
	            return res.map(function (r) {
	                var datum = r.result;
	                cleanDatumInPlace(datum);
	                if (timestampLabel)
	                    datum[timestampLabel] = r.timestamp;
	                return datum;
	            });
	        };
	    }
	    function topNNormalizer(res) {
	        if (!correctTopNResult(res)) {
	            var err = new Error("unexpected result from Druid (topN)");
	            err.result = res;
	            throw err;
	        }
	        var data = res.length ? res[0].result : [];
	        for (var _i = 0, data_8 = data; _i < data_8.length; _i++) {
	            var d = data_8[_i];
	            cleanDatumInPlace(d);
	        }
	        return data;
	    }
	    function groupByNormalizerFactory(timestampLabel) {
	        if (timestampLabel === void 0) { timestampLabel = null; }
	        return function (res) {
	            if (!correctGroupByResult(res)) {
	                var err = new Error("unexpected result from Druid (groupBy)");
	                err.result = res;
	                throw err;
	            }
	            return res.map(function (r) {
	                var datum = r.event;
	                cleanDatumInPlace(datum);
	                if (timestampLabel)
	                    datum[timestampLabel] = r.timestamp;
	                return datum;
	            });
	        };
	    }
	    function selectNormalizerFactory(timestampLabel) {
	        return function (res) {
	            if (!correctSelectResult(res)) {
	                var err = new Error("unexpected result from Druid (select)");
	                err.result = res;
	                throw err;
	            }
	            if (res.length === 0)
	                return [];
	            return res[0].result.events.map(function (event) {
	                var datum = event.event;
	                if (timestampLabel != null) {
	                    datum[timestampLabel] = datum['timestamp'];
	                }
	                delete datum['timestamp'];
	                cleanDatumInPlace(datum);
	                return datum;
	            });
	        };
	    }
	    function postProcessFactory(normalizer, inflaters, attributes) {
	        return function (res) {
	            var data = normalizer(res);
	            var n = data.length;
	            for (var _i = 0, inflaters_1 = inflaters; _i < inflaters_1.length; _i++) {
	                var inflater = inflaters_1[_i];
	                for (var i = 0; i < n; i++) {
	                    inflater(data[i], i, data);
	                }
	            }
	            return new Plywood.Dataset({ data: data, attributes: attributes });
	        };
	    }
	    function simpleMathInflaterFactory(label) {
	        return function (d) {
	            var v = d[label];
	            if ('' + v === "null") {
	                d[label] = null;
	                return;
	            }
	            d[label] = simpleMath(v);
	        };
	    }
	    function generateMakerAction(aggregation) {
	        if (!aggregation)
	            return null;
	        var type = aggregation.type, fieldName = aggregation.fieldName;
	        if (type === 'longSum' && fieldName === 'count') {
	            return new Plywood.CountAction({});
	        }
	        if (!fieldName) {
	            var fieldNames = aggregation.fieldNames;
	            if (!Array.isArray(fieldNames) || fieldNames.length !== 1)
	                return null;
	            fieldName = fieldNames[0];
	        }
	        var expression = Plywood.$(fieldName);
	        switch (type) {
	            case "count":
	                return new Plywood.CountAction({});
	            case "doubleSum":
	            case "longSum":
	                return new Plywood.SumAction({ expression: expression });
	            case "javascript":
	                var fnAggregate = aggregation.fnAggregate, fnCombine = aggregation.fnCombine;
	                if (fnAggregate !== fnCombine || fnCombine.indexOf('+') === -1)
	                    return null;
	                return new Plywood.SumAction({ expression: expression });
	            case "doubleMin":
	            case "longMin":
	                return new Plywood.MinAction({ expression: expression });
	            case "doubleMax":
	            case "longMax":
	                return new Plywood.MaxAction({ expression: expression });
	            default:
	                return null;
	        }
	    }
	    function segmentMetadataPostProcessFactory(timeAttribute) {
	        return function (res) {
	            var res0 = res[0];
	            if (!res0 || !res0.columns)
	                throw new Error('malformed segmentMetadata response');
	            var columns = res0.columns;
	            var aggregators = res0.aggregators || {};
	            var foundTime = false;
	            var attributes = [];
	            for (var name in columns) {
	                if (!hasOwnProperty(columns, name))
	                    continue;
	                var columnData = columns[name];
	                if (columnData.errorMessage || columnData.size < 0)
	                    continue;
	                if (name === '__time') {
	                    attributes.push(new Plywood.AttributeInfo({ name: timeAttribute, type: 'TIME' }));
	                    foundTime = true;
	                }
	                else {
	                    if (name === timeAttribute)
	                        continue;
	                    switch (columnData.type) {
	                        case 'FLOAT':
	                        case 'LONG':
	                            attributes.push(new Plywood.AttributeInfo({
	                                name: name,
	                                type: 'NUMBER',
	                                unsplitable: true,
	                                makerAction: generateMakerAction(aggregators[name])
	                            }));
	                            break;
	                        case 'STRING':
	                            attributes.push(new Plywood.AttributeInfo({
	                                name: name,
	                                type: columnData.hasMultipleValues ? 'SET/STRING' : 'STRING'
	                            }));
	                            break;
	                        case 'hyperUnique':
	                            attributes.push(new Plywood.UniqueAttributeInfo({ name: name }));
	                            break;
	                        case 'approximateHistogram':
	                            attributes.push(new Plywood.HistogramAttributeInfo({ name: name }));
	                            break;
	                    }
	                }
	            }
	            if (!foundTime)
	                throw new Error('no valid __time in segmentMetadata response');
	            return attributes;
	        };
	    }
	    function introspectPostProcessFactory(timeAttribute) {
	        return function (res) {
	            if (!Array.isArray(res.dimensions) || !Array.isArray(res.metrics)) {
	                throw new Error('malformed GET introspect response');
	            }
	            var attributes = [
	                new Plywood.AttributeInfo({ name: timeAttribute, type: 'TIME' })
	            ];
	            res.dimensions.forEach(function (dimension) {
	                if (dimension === timeAttribute)
	                    return;
	                attributes.push(new Plywood.AttributeInfo({ name: dimension, type: 'STRING' }));
	            });
	            res.metrics.forEach(function (metric) {
	                if (metric === timeAttribute)
	                    return;
	                attributes.push(new Plywood.AttributeInfo({ name: metric, type: 'NUMBER', unsplitable: true }));
	            });
	            return attributes;
	        };
	    }
	    var DruidExternal = (function (_super) {
	        __extends(DruidExternal, _super);
	        function DruidExternal(parameters) {
	            _super.call(this, parameters, dummyObject);
	            this._ensureEngine("druid");
	            this._ensureMinVersion("0.8.0");
	            this.dataSource = parameters.dataSource;
	            this.timeAttribute = parameters.timeAttribute || DEFAULT_TIME_ATTRIBUTE;
	            this.customAggregations = parameters.customAggregations;
	            this.allowEternity = parameters.allowEternity;
	            this.allowSelectQueries = parameters.allowSelectQueries;
	            var introspectionStrategy = parameters.introspectionStrategy || DruidExternal.DEFAULT_INTROSPECTION_STRATEGY;
	            if (DruidExternal.VALID_INTROSPECTION_STRATEGIES.indexOf(introspectionStrategy) === -1) {
	                throw new Error("invalid introspectionStrategy '" + introspectionStrategy + "'");
	            }
	            this.introspectionStrategy = introspectionStrategy;
	            this.exactResultsOnly = parameters.exactResultsOnly;
	            this.context = parameters.context;
	        }
	        DruidExternal.fromJS = function (parameters, requester) {
	            if (typeof parameters.druidVersion === 'string') {
	                parameters.version = parameters.druidVersion;
	                console.warn("'druidVersion' parameter is deprecated, use 'version: " + parameters.version + "' instead");
	            }
	            var value = Plywood.External.jsToValue(parameters, requester);
	            value.dataSource = parameters.dataSource;
	            value.timeAttribute = parameters.timeAttribute;
	            value.customAggregations = parameters.customAggregations || {};
	            value.allowEternity = Boolean(parameters.allowEternity);
	            value.allowSelectQueries = Boolean(parameters.allowSelectQueries);
	            value.introspectionStrategy = parameters.introspectionStrategy;
	            value.exactResultsOnly = Boolean(parameters.exactResultsOnly);
	            value.context = parameters.context;
	            return new DruidExternal(value);
	        };
	        DruidExternal.getSourceList = function (requester) {
	            return requester({ query: { queryType: 'sourceList' } })
	                .then(function (sources) {
	                if (!Array.isArray(sources))
	                    throw new Error('invalid sources response');
	                return sources;
	            });
	        };
	        DruidExternal.prototype.valueOf = function () {
	            var value = _super.prototype.valueOf.call(this);
	            value.dataSource = this.dataSource;
	            value.timeAttribute = this.timeAttribute;
	            value.customAggregations = this.customAggregations;
	            value.allowEternity = this.allowEternity;
	            value.allowSelectQueries = this.allowSelectQueries;
	            value.introspectionStrategy = this.introspectionStrategy;
	            value.exactResultsOnly = this.exactResultsOnly;
	            value.context = this.context;
	            return value;
	        };
	        DruidExternal.prototype.toJS = function () {
	            var js = _super.prototype.toJS.call(this);
	            js.dataSource = this.dataSource;
	            if (this.timeAttribute !== DEFAULT_TIME_ATTRIBUTE)
	                js.timeAttribute = this.timeAttribute;
	            if (Plywood.helper.nonEmptyLookup(this.customAggregations))
	                js.customAggregations = this.customAggregations;
	            if (this.allowEternity)
	                js.allowEternity = true;
	            if (this.allowSelectQueries)
	                js.allowSelectQueries = true;
	            if (this.introspectionStrategy !== DruidExternal.DEFAULT_INTROSPECTION_STRATEGY)
	                js.introspectionStrategy = this.introspectionStrategy;
	            if (this.exactResultsOnly)
	                js.exactResultsOnly = true;
	            if (this.context)
	                js.context = this.context;
	            return js;
	        };
	        DruidExternal.prototype.equals = function (other) {
	            return _super.prototype.equals.call(this, other) &&
	                String(this.dataSource) === String(other.dataSource) &&
	                this.timeAttribute === other.timeAttribute &&
	                customAggregationsEqual(this.customAggregations, other.customAggregations) &&
	                this.allowEternity === other.allowEternity &&
	                this.allowSelectQueries === other.allowSelectQueries &&
	                this.introspectionStrategy === other.introspectionStrategy &&
	                this.exactResultsOnly === other.exactResultsOnly &&
	                dictEqual(this.context, other.context);
	        };
	        DruidExternal.prototype.canHandleFilter = function (ex) {
	            return true;
	        };
	        DruidExternal.prototype.canHandleTotal = function () {
	            return true;
	        };
	        DruidExternal.prototype.canHandleSplit = function (ex) {
	            return true;
	        };
	        DruidExternal.prototype.canHandleApply = function (ex) {
	            return true;
	        };
	        DruidExternal.prototype.canHandleSort = function (sortAction) {
	            if (this.isTimeseries()) {
	                if (sortAction.direction !== 'ascending')
	                    return false;
	                return sortAction.refName() === this.split.firstSplitName();
	            }
	            else if (this.mode === 'raw') {
	                if (sortAction.refName() !== this.timeAttribute)
	                    return false;
	                if (this.versionBefore('0.9.0'))
	                    return sortAction.direction === 'ascending';
	                return true;
	            }
	            else {
	                return true;
	            }
	        };
	        DruidExternal.prototype.canHandleLimit = function (limitAction) {
	            return !this.isTimeseries();
	        };
	        DruidExternal.prototype.canHandleHavingFilter = function (ex) {
	            return !this.limit;
	        };
	        DruidExternal.prototype.isTimeseries = function () {
	            var split = this.split;
	            if (!split || split.isMultiSplit())
	                return false;
	            var splitExpression = split.firstSplitExpression();
	            if (this.isTimeRef(splitExpression))
	                return true;
	            if (splitExpression instanceof Plywood.ChainExpression) {
	                var actions = splitExpression.actions;
	                if (actions.length !== 1)
	                    return false;
	                var action = actions[0].action;
	                return action === 'timeBucket' || action === 'timeFloor';
	            }
	            return false;
	        };
	        DruidExternal.prototype.getDruidDataSource = function () {
	            var dataSource = this.dataSource;
	            if (Array.isArray(dataSource)) {
	                return {
	                    type: "union",
	                    dataSources: dataSource
	                };
	            }
	            else {
	                return dataSource;
	            }
	        };
	        DruidExternal.prototype.javaScriptDruidFilter = function (referenceName, filter) {
	            return {
	                type: "javascript",
	                dimension: referenceName,
	                "function": filter.getJSFn('d')
	            };
	        };
	        DruidExternal.prototype.sanitizeNull = function (v) {
	            if (this.versionBefore('0.9.0') && v === null)
	                return '';
	            return v;
	        };
	        DruidExternal.prototype.makeSelectorFilter = function (ex, value) {
	            var freeReferences = ex.getFreeReferences();
	            if (freeReferences.length !== 1)
	                throw new Error("can not convert multi reference expression " + ex + " to Druid selector filter");
	            var referenceName = freeReferences[0];
	            var attributeInfo = this.getAttributesInfo(referenceName);
	            if (attributeInfo.unsplitable) {
	                throw new Error("can not convert " + ex + " = " + value + " to filter because it references an un-filterable metric '" + referenceName + "' which is most likely rolled up.");
	            }
	            var extractionFn = this.expressionToExtractionFn(ex);
	            var dimensionName = referenceName === this.timeAttribute ? '__time' : referenceName;
	            var druidFilter = {
	                type: "selector",
	                dimension: dimensionName,
	                value: attributeInfo.serialize(value)
	            };
	            if (extractionFn) {
	                druidFilter.type = "extraction";
	                druidFilter.extractionFn = extractionFn;
	                druidFilter.value = this.sanitizeNull(druidFilter.value);
	            }
	            return druidFilter;
	        };
	        DruidExternal.prototype.timelessFilterToDruid = function (filter, aggregatorFilter) {
	            var _this = this;
	            if (filter.type !== 'BOOLEAN')
	                throw new Error("must be a BOOLEAN filter");
	            if (filter instanceof Plywood.RefExpression) {
	                filter = filter.is(true);
	            }
	            if (filter instanceof Plywood.LiteralExpression) {
	                if (filter.value === true) {
	                    return null;
	                }
	                else {
	                    throw new Error("should never get here");
	                }
	            }
	            else if (filter instanceof Plywood.ChainExpression) {
	                var pattern;
	                if (pattern = filter.getExpressionPattern('and')) {
	                    return {
	                        type: 'and',
	                        fields: pattern.map(function (p) { return _this.timelessFilterToDruid(p, aggregatorFilter); })
	                    };
	                }
	                if (pattern = filter.getExpressionPattern('or')) {
	                    return {
	                        type: 'or',
	                        fields: pattern.map(function (p) { return _this.timelessFilterToDruid(p, aggregatorFilter); })
	                    };
	                }
	                var filterAction = filter.lastAction();
	                var rhs = filterAction.expression;
	                var lhs = filter.popAction();
	                if (filterAction instanceof Plywood.NotAction) {
	                    return {
	                        type: 'not',
	                        field: this.timelessFilterToDruid(lhs, aggregatorFilter)
	                    };
	                }
	                if (lhs instanceof Plywood.LiteralExpression) {
	                    if (filterAction.action !== 'in')
	                        throw new Error("can not convert " + filter + " to Druid filter");
	                    return this.makeSelectorFilter(rhs, lhs.value);
	                }
	                if (filterAction instanceof Plywood.IsAction) {
	                    if (rhs instanceof Plywood.LiteralExpression) {
	                        return this.makeSelectorFilter(lhs, rhs.value);
	                    }
	                    else {
	                        throw new Error("can not convert " + filter + " to Druid filter");
	                    }
	                }
	                var freeReferences = filter.getFreeReferences();
	                if (freeReferences.length !== 1)
	                    throw new Error("can not convert multi reference filter " + filter + " to Druid filter");
	                var referenceName = freeReferences[0];
	                var attributeInfo = this.getAttributesInfo(referenceName);
	                if (attributeInfo.unsplitable) {
	                    throw new Error("can not convert " + filter + " to filter because it references an un-filterable metric '" + referenceName + "' which is most likely rolled up.");
	                }
	                var extractionFn = this.expressionToExtractionFn(lhs);
	                var dimensionName = referenceName === this.timeAttribute ? '__time' : referenceName;
	                if (filterAction instanceof Plywood.InAction || filterAction instanceof Plywood.OverlapAction) {
	                    if (rhs instanceof Plywood.LiteralExpression) {
	                        var rhsType = rhs.type;
	                        if (rhsType === 'SET/STRING' || rhsType === 'SET/NUMBER' || rhsType === 'SET/NULL') {
	                            var elements = rhs.value.elements;
	                            if (extractionFn || elements.length < 2 || this.versionBefore('0.9.0')) {
	                                var fields = elements.map(function (value) {
	                                    return _this.makeSelectorFilter(lhs, value);
	                                });
	                                return fields.length === 1 ? fields[0] : { type: "or", fields: fields };
	                            }
	                            else {
	                                return {
	                                    type: 'in',
	                                    dimension: dimensionName,
	                                    values: elements.map(function (value) { return attributeInfo.serialize(value); })
	                                };
	                            }
	                        }
	                        else if (rhsType === 'NUMBER_RANGE') {
	                            var range = rhs.value;
	                            var r0 = range.start;
	                            var r1 = range.end;
	                            var bounds = range.bounds;
	                            if (this.versionBefore('0.9.0')) {
	                                var cmpStrings = [];
	                                if (r0 != null) {
	                                    cmpStrings.push(r0 + " " + (bounds[0] === '(' ? '<' : '<=') + " a");
	                                }
	                                if (r1 != null) {
	                                    cmpStrings.push("a " + (bounds[1] === ')' ? '<' : '<=') + " " + r1);
	                                }
	                                return {
	                                    type: "javascript",
	                                    dimension: dimensionName,
	                                    "function": "function(a) { a = Number(a); return " + cmpStrings.join(' && ') + "; }"
	                                };
	                            }
	                            var boundFilter = {
	                                type: "bound",
	                                dimension: dimensionName,
	                                alphaNumeric: true
	                            };
	                            if (r0 != null) {
	                                boundFilter.lower = r0;
	                                if (bounds[0] === '(')
	                                    boundFilter.lowerStrict = true;
	                            }
	                            if (r1 != null) {
	                                boundFilter.upper = r1;
	                                if (bounds[1] === ')')
	                                    boundFilter.upperStrict = true;
	                            }
	                            return boundFilter;
	                        }
	                        else if (rhsType === 'TIME_RANGE') {
	                            throw new Error("can not time filter on non-primary time dimension");
	                        }
	                        else {
	                            throw new Error("not supported IN rhs type " + rhsType);
	                        }
	                    }
	                    else {
	                        throw new Error("can not convert " + filter + " to Druid filter");
	                    }
	                }
	                if (aggregatorFilter) {
	                    if (this.versionBefore('0.8.2'))
	                        throw new Error("can not express aggregate filter " + filter + " in druid < 0.8.2");
	                    return this.makeExtractionFilter(filter);
	                }
	                if (filterAction instanceof Plywood.MatchAction) {
	                    if (lhs instanceof Plywood.RefExpression) {
	                        return {
	                            type: "regex",
	                            dimension: dimensionName,
	                            pattern: filterAction.regexp
	                        };
	                    }
	                    else {
	                        return this.makeExtractionFilter(filter);
	                    }
	                }
	                if (filterAction instanceof Plywood.ContainsAction) {
	                    if (lhs instanceof Plywood.RefExpression && rhs instanceof Plywood.LiteralExpression) {
	                        if (filterAction.compare === Plywood.ContainsAction.IGNORE_CASE) {
	                            return {
	                                type: "search",
	                                dimension: dimensionName,
	                                query: {
	                                    type: "fragment",
	                                    values: [rhs.value]
	                                }
	                            };
	                        }
	                        else {
	                            return this.javaScriptDruidFilter(referenceName, filter);
	                        }
	                    }
	                    else {
	                        return this.makeExtractionFilter(filter);
	                    }
	                }
	            }
	            throw new Error("could not convert filter " + filter + " to Druid filter");
	        };
	        DruidExternal.prototype.makeExtractionFilter = function (filter) {
	            return {
	                type: "extraction",
	                dimension: filter.getFreeReferences()[0],
	                extractionFn: this.expressionToExtractionFn(filter),
	                value: "true"
	            };
	        };
	        DruidExternal.prototype.timeFilterToIntervals = function (filter) {
	            if (filter.type !== 'BOOLEAN')
	                throw new Error("must be a BOOLEAN filter");
	            if (filter instanceof Plywood.LiteralExpression) {
	                if (!filter.value)
	                    return DruidExternal.FALSE_INTERVAL;
	                if (!this.allowEternity)
	                    throw new Error('must filter on time unless the allowEternity flag is set');
	                return DruidExternal.TRUE_INTERVAL;
	            }
	            else if (filter instanceof Plywood.ChainExpression) {
	                var lhs = filter.expression;
	                var actions = filter.actions;
	                if (actions.length !== 1)
	                    throw new Error("can not convert " + filter + " to Druid interval");
	                var filterAction = actions[0];
	                var rhs = filterAction.expression;
	                if (filterAction instanceof Plywood.IsAction) {
	                    if (lhs instanceof Plywood.RefExpression && rhs instanceof Plywood.LiteralExpression) {
	                        return Plywood.TimeRange.intervalFromDate(rhs.value);
	                    }
	                    else {
	                        throw new Error("can not convert " + filter + " to Druid interval");
	                    }
	                }
	                else if (filterAction instanceof Plywood.InAction) {
	                    if (lhs instanceof Plywood.RefExpression && rhs instanceof Plywood.LiteralExpression) {
	                        var timeRanges;
	                        var rhsType = rhs.type;
	                        if (rhsType === 'SET/TIME_RANGE') {
	                            timeRanges = rhs.value.elements;
	                        }
	                        else if (rhsType === 'TIME_RANGE') {
	                            timeRanges = [rhs.value];
	                        }
	                        else {
	                            throw new Error("not supported " + rhsType + " for time filtering");
	                        }
	                        var intervals = timeRanges.map(function (timeRange) { return timeRange.toInterval(); });
	                        return intervals.length === 1 ? intervals[0] : intervals;
	                    }
	                    else {
	                        throw new Error("can not convert " + filter + " to Druid interval");
	                    }
	                }
	                else {
	                    throw new Error("can not convert " + filter + " to Druid interval");
	                }
	            }
	            else {
	                throw new Error("can not convert " + filter + " to Druid interval");
	            }
	        };
	        DruidExternal.prototype.filterToDruid = function (filter) {
	            if (filter.type !== 'BOOLEAN')
	                throw new Error("must be a BOOLEAN filter");
	            if (filter.equals(Plywood.Expression.FALSE)) {
	                return {
	                    intervals: DruidExternal.FALSE_INTERVAL,
	                    filter: null
	                };
	            }
	            else {
	                var timeAttribute_1 = this.timeAttribute;
	                var _a = filter.extractFromAnd(function (ex) {
	                    if (ex instanceof Plywood.ChainExpression) {
	                        var op = ex.expression;
	                        var actions = ex.actions;
	                        if (op instanceof Plywood.RefExpression) {
	                            if (!(op.name === timeAttribute_1 && actions.length === 1))
	                                return false;
	                            var action = actions[0].action;
	                            return action === 'is' || action === 'in';
	                        }
	                    }
	                    return false;
	                }), extract = _a.extract, rest = _a.rest;
	                return {
	                    intervals: this.timeFilterToIntervals(extract),
	                    filter: this.timelessFilterToDruid(rest, false)
	                };
	            }
	        };
	        DruidExternal.prototype.isTimeRef = function (ex) {
	            return ex instanceof Plywood.RefExpression && ex.name === this.timeAttribute;
	        };
	        DruidExternal.prototype.splitExpressionToGranularityInflater = function (splitExpression, label) {
	            if (this.isTimeRef(splitExpression)) {
	                return {
	                    granularity: 'none',
	                    inflater: Plywood.External.timeInflaterFactory(label)
	                };
	            }
	            else if (splitExpression instanceof Plywood.ChainExpression) {
	                var splitActions = splitExpression.actions;
	                if (this.isTimeRef(splitExpression.expression) && splitActions.length === 1) {
	                    var action = splitActions[0];
	                    if (action instanceof Plywood.TimeBucketAction || action instanceof Plywood.TimeFloorAction) {
	                        var duration = action.duration;
	                        var timezone = action.getTimezone();
	                        return {
	                            granularity: {
	                                type: "period",
	                                period: duration.toString(),
	                                timeZone: timezone.toString()
	                            },
	                            inflater: action.action === 'timeBucket' ?
	                                Plywood.External.timeRangeInflaterFactory(label, duration, timezone) :
	                                Plywood.External.timeInflaterFactory(label)
	                        };
	                    }
	                }
	            }
	            return null;
	        };
	        DruidExternal.prototype.expressionToExtractionFn = function (expression) {
	            var extractionFns = [];
	            this._expressionToExtractionFns(expression, extractionFns);
	            switch (extractionFns.length) {
	                case 0: return null;
	                case 1: return extractionFns[0];
	                default:
	                    if (this.versionBefore('0.9.0'))
	                        throw new Error("can not convert " + expression + " to filter in Druid < 0.9.0");
	                    return { type: 'cascade', extractionFns: extractionFns };
	            }
	        };
	        DruidExternal.prototype._expressionToExtractionFns = function (expression, extractionFns) {
	            var freeReferences = expression.getFreeReferences();
	            if (freeReferences.length !== 1) {
	                throw new Error("must have 1 reference (has " + freeReferences.length + "): " + expression);
	            }
	            if (expression instanceof Plywood.RefExpression) {
	                this._processRefExtractionFn(expression, extractionFns);
	                return;
	            }
	            if (expression instanceof Plywood.ChainExpression) {
	                var lead = expression.expression;
	                var actions = expression.actions;
	                var i = 0;
	                var curAction = actions[0];
	                var concatPrefix = [];
	                if (curAction.action === 'concat') {
	                    concatPrefix.push(lead);
	                    while (curAction && curAction.action === 'concat') {
	                        concatPrefix.push(curAction.expression);
	                        curAction = actions[++i];
	                    }
	                    this._processConcatExtractionFn(concatPrefix, extractionFns);
	                }
	                else if (!lead.isOp('ref')) {
	                    throw new Error("can not convert complex: " + lead);
	                }
	                while (curAction) {
	                    var nextAction = actions[i + 1];
	                    var extractionFn;
	                    if (nextAction instanceof Plywood.FallbackAction) {
	                        extractionFn = this.actionToExtractionFn(curAction, nextAction);
	                        i++;
	                    }
	                    else {
	                        extractionFn = this.actionToExtractionFn(curAction, null);
	                    }
	                    extractionFns.push(extractionFn);
	                    curAction = actions[++i];
	                }
	            }
	        };
	        DruidExternal.prototype._processRefExtractionFn = function (ref, extractionFns) {
	            var attributeInfo = this.getAttributesInfo(ref.name);
	            if (attributeInfo instanceof Plywood.RangeAttributeInfo) {
	                extractionFns.push(this.getRangeBucketingExtractionFn(attributeInfo, null));
	                return;
	            }
	            if (ref.type === 'BOOLEAN') {
	                extractionFns.push({
	                    type: "lookup",
	                    lookup: {
	                        type: "map",
	                        map: {
	                            "0": "false",
	                            "1": "true",
	                            "false": "false",
	                            "true": "true"
	                        }
	                    }
	                });
	                return;
	            }
	        };
	        DruidExternal.prototype.actionToExtractionFn = function (action, fallbackAction) {
	            if (action.action === 'extract' || action.action === 'lookup') {
	                var retainMissingValue = false;
	                var replaceMissingValueWith = null;
	                if (fallbackAction) {
	                    var fallbackExpression = fallbackAction.expression;
	                    if (fallbackExpression.isOp("ref")) {
	                        retainMissingValue = true;
	                    }
	                    else if (fallbackExpression.isOp("literal")) {
	                        replaceMissingValueWith = fallbackExpression.getLiteralValue();
	                    }
	                    else {
	                        throw new Error("unsupported fallback expression: " + fallbackExpression);
	                    }
	                }
	                if (action instanceof Plywood.ExtractAction) {
	                    if (this.versionBefore('0.9.0') && (retainMissingValue === false || replaceMissingValueWith !== null)) {
	                        return this.getJavaScriptExtractionFn(action);
	                    }
	                    var regexExtractionFn = {
	                        type: "regex",
	                        expr: action.regexp
	                    };
	                    if (!retainMissingValue) {
	                        regexExtractionFn.replaceMissingValue = true;
	                    }
	                    if (replaceMissingValueWith !== null) {
	                        regexExtractionFn.replaceMissingValueWith = replaceMissingValueWith;
	                    }
	                    return regexExtractionFn;
	                }
	                if (action instanceof Plywood.LookupAction) {
	                    var lookupExtractionFn = {
	                        type: "lookup",
	                        lookup: {
	                            type: "namespace",
	                            "namespace": action.lookup
	                        }
	                    };
	                    if (retainMissingValue) {
	                        lookupExtractionFn.retainMissingValue = true;
	                    }
	                    if (replaceMissingValueWith !== null) {
	                        lookupExtractionFn.replaceMissingValueWith = replaceMissingValueWith;
	                    }
	                    return lookupExtractionFn;
	                }
	            }
	            if (fallbackAction) {
	                throw new Error("unsupported fallback after " + action.action + " action");
	            }
	            if (action.getOutputType(null) === 'BOOLEAN') {
	                return this.getJavaScriptExtractionFn(action);
	            }
	            if (action instanceof Plywood.SubstrAction) {
	                if (this.versionBefore('0.9.0'))
	                    return this.getJavaScriptExtractionFn(action);
	                return {
	                    type: "substring",
	                    index: action.position,
	                    length: action.length
	                };
	            }
	            if (action instanceof Plywood.TimeBucketAction || action instanceof Plywood.TimeFloorAction) {
	                var format = TIME_BUCKET_FORMAT[action.duration.toString()];
	                if (!format)
	                    throw new Error("unsupported duration in timeBucket expression " + action.duration);
	                return {
	                    type: "timeFormat",
	                    format: format,
	                    timeZone: action.getTimezone().toString(),
	                    locale: "en-US"
	                };
	            }
	            if (action instanceof Plywood.TimePartAction) {
	                var format = TIME_PART_TO_FORMAT[action.part];
	                if (!format)
	                    throw new Error("unsupported part in timePart expression " + action.part);
	                return {
	                    type: "timeFormat",
	                    format: format,
	                    timeZone: action.getTimezone().toString(),
	                    locale: "en-US"
	                };
	            }
	            if (action instanceof Plywood.NumberBucketAction) {
	                var floorExpression = Plywood.continuousFloorExpression("d", "Math.floor", action.size, action.offset);
	                return {
	                    type: "javascript",
	                    'function': "function(d){d=Number(d); if(isNaN(d)) return 'null'; return " + floorExpression + ";}"
	                };
	            }
	            if (action instanceof Plywood.AbsoluteAction || action instanceof Plywood.PowerAction) {
	                return this.getJavaScriptExtractionFn(action);
	            }
	            throw new Error("can not covert " + action + " to extractionFn");
	        };
	        DruidExternal.prototype._processConcatExtractionFn = function (pattern, extractionFns) {
	            var _this = this;
	            if (this.versionBefore('0.9.2')) {
	                extractionFns.push({
	                    type: "javascript",
	                    'function': Plywood.Expression.concat(pattern).getJSFn('d'),
	                    injective: true
	                });
	                return;
	            }
	            var format = pattern.map(function (ex) {
	                if (ex instanceof Plywood.LiteralExpression) {
	                    return ex.value.replace(/%/g, '\\%');
	                }
	                if (!ex.isOp('ref')) {
	                    _this._expressionToExtractionFns(ex, extractionFns);
	                }
	                return '%s';
	            }).join('');
	            extractionFns.push({
	                type: 'stringFormat',
	                format: format
	            });
	        };
	        DruidExternal.prototype.getJavaScriptExtractionFn = function (action) {
	            return {
	                type: "javascript",
	                'function': Plywood.$('x').performAction(action).getJSFn('d')
	            };
	        };
	        DruidExternal.prototype.getRangeBucketingExtractionFn = function (attributeInfo, numberBucket) {
	            var regExp = attributeInfo.getMatchingRegExpString();
	            if (numberBucket && numberBucket.offset === 0 && numberBucket.size === attributeInfo.rangeSize)
	                numberBucket = null;
	            var bucketing = '';
	            if (numberBucket) {
	                bucketing = 's=' + Plywood.continuousFloorExpression('s', 'Math.floor', numberBucket.size, numberBucket.offset) + ';';
	            }
	            return {
	                type: "javascript",
	                'function': "function(d) {\nvar m = d.match(" + regExp + ");\nif(!m) return 'null';\nvar s = +m[1];\nif(!(Math.abs(+m[2] - s - " + attributeInfo.rangeSize + ") < 1e-6)) return 'null'; " + bucketing + "\nvar parts = String(Math.abs(s)).split('.');\nparts[0] = ('000000000' + parts[0]).substr(-10);\nreturn (start < 0 ?'-':'') + parts.join('.');\n}"
	            };
	        };
	        DruidExternal.prototype.expressionToDimensionInflater = function (expression, label) {
	            var freeReferences = expression.getFreeReferences();
	            if (freeReferences.length !== 1) {
	                throw new Error("must have 1 reference (has " + freeReferences.length + "): " + expression);
	            }
	            var referenceName = freeReferences[0];
	            var attributeInfo = this.getAttributesInfo(referenceName);
	            if (attributeInfo.unsplitable) {
	                throw new Error("can not convert " + expression + " to split because it references an un-splitable metric '" + referenceName + "' which is most likely rolled up.");
	            }
	            var extractionFn = this.expressionToExtractionFn(expression);
	            var simpleInflater = Plywood.External.getSimpleInflater(expression, label);
	            var dimension = {
	                type: "default",
	                dimension: referenceName === this.timeAttribute ? '__time' : referenceName,
	                outputName: label
	            };
	            if (extractionFn) {
	                dimension.type = "extraction";
	                dimension.extractionFn = extractionFn;
	            }
	            if (expression instanceof Plywood.RefExpression) {
	                if (attributeInfo instanceof Plywood.RangeAttributeInfo) {
	                    return {
	                        dimension: dimension,
	                        inflater: Plywood.External.numberRangeInflaterFactory(label, attributeInfo.rangeSize)
	                    };
	                }
	                return {
	                    dimension: dimension,
	                    inflater: simpleInflater
	                };
	            }
	            if (expression instanceof Plywood.ChainExpression) {
	                var splitAction = expression.lastAction();
	                if (splitAction instanceof Plywood.TimeBucketAction) {
	                    return {
	                        dimension: dimension,
	                        inflater: Plywood.External.timeRangeInflaterFactory(label, splitAction.duration, splitAction.getTimezone())
	                    };
	                }
	                if (splitAction instanceof Plywood.TimePartAction) {
	                    return {
	                        dimension: dimension,
	                        inflater: simpleMathInflaterFactory(label)
	                    };
	                }
	                if (splitAction instanceof Plywood.NumberBucketAction) {
	                    if (attributeInfo.type === 'NUMBER') {
	                        return {
	                            dimension: dimension,
	                            inflater: Plywood.External.numberRangeInflaterFactory(label, splitAction.size)
	                        };
	                    }
	                    if (attributeInfo instanceof Plywood.RangeAttributeInfo) {
	                        return {
	                            dimension: dimension,
	                            inflater: Plywood.External.numberRangeInflaterFactory(label, splitAction.size)
	                        };
	                    }
	                }
	            }
	            var effectiveType = Plywood.unwrapSetType(expression.type);
	            if (simpleInflater || effectiveType === 'STRING') {
	                return {
	                    dimension: dimension,
	                    inflater: simpleInflater
	                };
	            }
	            throw new Error("could not convert " + expression + " to a Druid dimension");
	        };
	        DruidExternal.prototype.splitToDruid = function (split) {
	            var _this = this;
	            if (split.isMultiSplit()) {
	                var timestampLabel = null;
	                var granularity = null;
	                var dimensions = [];
	                var inflaters = [];
	                split.mapSplits(function (name, expression) {
	                    if (!granularity && !_this.limit && !_this.sort) {
	                        var granularityInflater = _this.splitExpressionToGranularityInflater(expression, name);
	                        if (granularityInflater) {
	                            timestampLabel = name;
	                            granularity = granularityInflater.granularity;
	                            inflaters.push(granularityInflater.inflater);
	                            return;
	                        }
	                    }
	                    var _a = _this.expressionToDimensionInflater(expression, name), dimension = _a.dimension, inflater = _a.inflater;
	                    dimensions.push(dimension);
	                    if (inflater) {
	                        inflaters.push(inflater);
	                    }
	                });
	                return {
	                    queryType: 'groupBy',
	                    dimensions: dimensions,
	                    timestampLabel: timestampLabel,
	                    granularity: granularity || 'all',
	                    postProcess: postProcessFactory(groupByNormalizerFactory(timestampLabel), inflaters, null)
	                };
	            }
	            var splitExpression = split.firstSplitExpression();
	            var label = split.firstSplitName();
	            var granularityInflater = this.splitExpressionToGranularityInflater(splitExpression, label);
	            if (granularityInflater) {
	                return {
	                    queryType: 'timeseries',
	                    granularity: granularityInflater.granularity,
	                    postProcess: postProcessFactory(timeseriesNormalizerFactory(label), [granularityInflater.inflater], null)
	                };
	            }
	            var dimensionInflater = this.expressionToDimensionInflater(splitExpression, label);
	            var inflaters = [dimensionInflater.inflater].filter(Boolean);
	            if (this.havingFilter.equals(Plywood.Expression.TRUE) &&
	                (this.limit || split.maxBucketNumber() < 1000) &&
	                !this.exactResultsOnly) {
	                return {
	                    queryType: 'topN',
	                    dimension: dimensionInflater.dimension,
	                    granularity: 'all',
	                    postProcess: postProcessFactory(topNNormalizer, inflaters, null)
	                };
	            }
	            return {
	                queryType: 'groupBy',
	                dimensions: [dimensionInflater.dimension],
	                granularity: 'all',
	                postProcess: postProcessFactory(groupByNormalizerFactory(), inflaters, null)
	            };
	        };
	        DruidExternal.prototype.getAccessTypeForAggregation = function (aggregationType) {
	            if (aggregationType === 'hyperUnique' || aggregationType === 'cardinality')
	                return 'hyperUniqueCardinality';
	            var customAggregations = this.customAggregations;
	            for (var customName in customAggregations) {
	                if (!hasOwnProperty(customAggregations, customName))
	                    continue;
	                var customAggregation = customAggregations[customName];
	                if (customAggregation.aggregation.type === aggregationType) {
	                    return customAggregation.accessType || 'fieldAccess';
	                }
	            }
	            return 'fieldAccess';
	        };
	        DruidExternal.prototype.getAccessType = function (aggregations, aggregationName) {
	            for (var _i = 0, aggregations_1 = aggregations; _i < aggregations_1.length; _i++) {
	                var aggregation = aggregations_1[_i];
	                if (aggregation.name === aggregationName) {
	                    var aggregationType = aggregation.type;
	                    if (aggregationType === 'filtered')
	                        aggregationType = aggregation.aggregator.type;
	                    return this.getAccessTypeForAggregation(aggregationType);
	                }
	            }
	            return 'fieldAccess';
	        };
	        DruidExternal.prototype.expressionToPostAggregation = function (ex, aggregations, postAggregations) {
	            var _this = this;
	            if (ex instanceof Plywood.RefExpression) {
	                var refName = ex.name;
	                return {
	                    type: this.getAccessType(aggregations, refName),
	                    fieldName: refName
	                };
	            }
	            else if (ex instanceof Plywood.LiteralExpression) {
	                if (ex.type !== 'NUMBER')
	                    throw new Error("must be a NUMBER type");
	                return {
	                    type: 'constant',
	                    value: ex.value
	                };
	            }
	            else if (ex instanceof Plywood.ChainExpression) {
	                var lastAction = ex.lastAction();
	                if (lastAction instanceof Plywood.AbsoluteAction || lastAction instanceof Plywood.PowerAction || lastAction instanceof Plywood.FallbackAction) {
	                    var fieldNameRefs = ex.getFreeReferences();
	                    var fieldNames = fieldNameRefs.map(function (fieldNameRef) {
	                        var accessType = _this.getAccessType(aggregations, fieldNameRef);
	                        if (accessType === 'fieldAccess')
	                            return fieldNameRef;
	                        var fieldNameRefTemp = '!F_' + fieldNameRef;
	                        postAggregations.push({
	                            name: fieldNameRefTemp,
	                            type: accessType,
	                            fieldName: fieldNameRef
	                        });
	                        return fieldNameRefTemp;
	                    });
	                    return {
	                        type: 'javascript',
	                        fieldNames: fieldNames,
	                        'function': "function(" + fieldNameRefs.map(Plywood.RefExpression.toSimpleName) + ") { return " + ex.getJS(null) + "; }"
	                    };
	                }
	                var pattern;
	                if (pattern = ex.getExpressionPattern('add')) {
	                    return {
	                        type: 'arithmetic',
	                        fn: '+',
	                        fields: pattern.map(function (e) { return _this.expressionToPostAggregation(e, aggregations, postAggregations); })
	                    };
	                }
	                if (pattern = ex.getExpressionPattern('subtract')) {
	                    return {
	                        type: 'arithmetic',
	                        fn: '-',
	                        fields: pattern.map(function (e) { return _this.expressionToPostAggregation(e, aggregations, postAggregations); })
	                    };
	                }
	                if (pattern = ex.getExpressionPattern('multiply')) {
	                    return {
	                        type: 'arithmetic',
	                        fn: '*',
	                        fields: pattern.map(function (e) { return _this.expressionToPostAggregation(e, aggregations, postAggregations); })
	                    };
	                }
	                if (pattern = ex.getExpressionPattern('divide')) {
	                    return {
	                        type: 'arithmetic',
	                        fn: '/',
	                        fields: pattern.map(function (e) { return _this.expressionToPostAggregation(e, aggregations, postAggregations); })
	                    };
	                }
	                throw new Error("can not convert chain to post agg: " + ex);
	            }
	            else {
	                throw new Error("can not convert expression to post agg: " + ex);
	            }
	        };
	        DruidExternal.prototype.applyToPostAggregation = function (action, aggregations, postAggregations) {
	            var postAgg = this.expressionToPostAggregation(action.expression, aggregations, postAggregations);
	            postAgg.name = action.name;
	            postAggregations.push(postAgg);
	        };
	        DruidExternal.prototype.makeNativeAggregateFilter = function (filterExpression, aggregator) {
	            return {
	                type: "filtered",
	                name: aggregator.name,
	                filter: this.timelessFilterToDruid(filterExpression, true),
	                aggregator: aggregator
	            };
	        };
	        DruidExternal.prototype.makeStandardAggregation = function (name, aggregateAction) {
	            var fn = aggregateAction.action;
	            var aggregateExpression = aggregateAction.expression;
	            var aggregation = {
	                name: name,
	                type: AGGREGATE_TO_DRUID[fn]
	            };
	            if (fn !== 'count') {
	                if (aggregateExpression instanceof Plywood.RefExpression) {
	                    aggregation.fieldName = aggregateExpression.name;
	                }
	                else {
	                    return this.makeJavaScriptAggregation(name, aggregateAction);
	                }
	            }
	            return aggregation;
	        };
	        DruidExternal.prototype.makeCountDistinctAggregation = function (name, action) {
	            if (this.exactResultsOnly) {
	                throw new Error("approximate query not allowed");
	            }
	            var attribute = action.expression;
	            if (attribute instanceof Plywood.RefExpression) {
	                var attributeName = attribute.name;
	            }
	            else {
	                throw new Error("can not compute countDistinct on derived attribute: " + attribute);
	            }
	            var attributeInfo = this.getAttributesInfo(attributeName);
	            if (attributeInfo instanceof Plywood.UniqueAttributeInfo) {
	                return {
	                    name: name,
	                    type: "hyperUnique",
	                    fieldName: attributeName
	                };
	            }
	            else {
	                return {
	                    name: name,
	                    type: "cardinality",
	                    fieldNames: [attributeName],
	                    byRow: true
	                };
	            }
	        };
	        DruidExternal.prototype.makeCustomAggregation = function (name, action) {
	            var customAggregationName = action.custom;
	            var customAggregation = this.customAggregations[customAggregationName];
	            if (!customAggregation)
	                throw new Error("could not find '" + customAggregationName + "'");
	            var aggregationObj = customAggregation.aggregation;
	            if (typeof aggregationObj.type !== 'string')
	                throw new Error("must have type in custom aggregation '" + customAggregationName + "'");
	            try {
	                aggregationObj = JSON.parse(JSON.stringify(aggregationObj));
	            }
	            catch (e) {
	                throw new Error("must have JSON custom aggregation '" + customAggregationName + "'");
	            }
	            aggregationObj.name = name;
	            return aggregationObj;
	        };
	        DruidExternal.prototype.makeQuantileAggregation = function (name, action, postAggregations) {
	            if (this.exactResultsOnly) {
	                throw new Error("approximate query not allowed");
	            }
	            var attribute = action.expression;
	            if (attribute instanceof Plywood.RefExpression) {
	                var attributeName = attribute.name;
	            }
	            else {
	                throw new Error("can not compute countDistinct on derived attribute: " + attribute);
	            }
	            var histogramAggregationName = "!H_" + name;
	            var aggregation = {
	                name: histogramAggregationName,
	                type: "approxHistogramFold",
	                fieldName: attributeName
	            };
	            postAggregations.push({
	                name: name,
	                type: "quantile",
	                fieldName: histogramAggregationName,
	                probability: action.quantile
	            });
	            return aggregation;
	        };
	        DruidExternal.prototype.makeJavaScriptAggregation = function (name, aggregateAction) {
	            var aggregateActionType = aggregateAction.action;
	            var aggregateExpression = aggregateAction.expression;
	            var aggregateFunction = AGGREGATE_TO_FUNCTION[aggregateActionType];
	            if (!aggregateFunction)
	                throw new Error("Can not convert " + aggregateActionType + " to JS");
	            var zero = AGGREGATE_TO_ZERO[aggregateActionType];
	            var fieldNames = aggregateExpression.getFreeReferences();
	            return {
	                name: name,
	                type: "javascript",
	                fieldNames: fieldNames,
	                fnAggregate: "function(_c," + fieldNames + ") { return " + aggregateFunction('_c', aggregateExpression.getJS(null)) + "; }",
	                fnCombine: "function(a,b) { return " + aggregateFunction('a', 'b') + "; }",
	                fnReset: "function() { return " + zero + "; }"
	            };
	        };
	        DruidExternal.prototype.applyToAggregation = function (action, aggregations, postAggregations) {
	            var applyExpression = action.expression;
	            if (applyExpression.op !== 'chain')
	                throw new Error("can not convert apply: " + applyExpression);
	            var actions = applyExpression.actions;
	            var filterExpression = null;
	            var aggregateAction = null;
	            if (actions.length === 1) {
	                aggregateAction = actions[0];
	            }
	            else if (actions.length === 2) {
	                var filterAction = actions[0];
	                if (filterAction instanceof Plywood.FilterAction) {
	                    filterExpression = filterAction.expression;
	                }
	                else {
	                    throw new Error("first action not a filter in: " + applyExpression);
	                }
	                aggregateAction = actions[1];
	            }
	            else {
	                throw new Error("can not convert strange apply: " + applyExpression);
	            }
	            var aggregation;
	            switch (aggregateAction.action) {
	                case "count":
	                case "sum":
	                case "min":
	                case "max":
	                    aggregation = this.makeStandardAggregation(action.name, aggregateAction);
	                    break;
	                case "countDistinct":
	                    aggregation = this.makeCountDistinctAggregation(action.name, aggregateAction);
	                    break;
	                case "quantile":
	                    aggregation = this.makeQuantileAggregation(action.name, aggregateAction, postAggregations);
	                    break;
	                case "custom":
	                    aggregation = this.makeCustomAggregation(action.name, aggregateAction);
	                    break;
	                default:
	                    throw new Error("unsupported aggregate action " + aggregateAction.action);
	            }
	            if (filterExpression) {
	                aggregation = this.makeNativeAggregateFilter(filterExpression, aggregation);
	            }
	            aggregations.push(aggregation);
	        };
	        DruidExternal.prototype.getAggregationsAndPostAggregations = function (applies) {
	            var _this = this;
	            var _a = Plywood.External.segregationAggregateApplies(applies.map(function (apply) {
	                var expression = apply.expression;
	                expression = _this.switchToRollupCount(_this.inlineDerivedAttributesInAggregate(expression).decomposeAverage()).distribute();
	                return apply.changeExpression(expression);
	            })), aggregateApplies = _a.aggregateApplies, postAggregateApplies = _a.postAggregateApplies;
	            var aggregations = [];
	            var postAggregations = [];
	            for (var _i = 0, aggregateApplies_1 = aggregateApplies; _i < aggregateApplies_1.length; _i++) {
	                var aggregateApply = aggregateApplies_1[_i];
	                this.applyToAggregation(aggregateApply, aggregations, postAggregations);
	            }
	            for (var _b = 0, postAggregateApplies_1 = postAggregateApplies; _b < postAggregateApplies_1.length; _b++) {
	                var postAggregateApply = postAggregateApplies_1[_b];
	                this.applyToPostAggregation(postAggregateApply, aggregations, postAggregations);
	            }
	            return {
	                aggregations: aggregations,
	                postAggregations: postAggregations
	            };
	        };
	        DruidExternal.prototype.makeHavingComparison = function (agg, op, value) {
	            switch (op) {
	                case '<':
	                    return { type: "lessThan", aggregation: agg, value: value };
	                case '>':
	                    return { type: "greaterThan", aggregation: agg, value: value };
	                case '<=':
	                    return { type: 'not', havingSpec: { type: "greaterThan", aggregation: agg, value: value } };
	                case '>=':
	                    return { type: 'not', havingSpec: { type: "lessThan", aggregation: agg, value: value } };
	                default:
	                    throw new Error("unknown op: " + op);
	            }
	        };
	        DruidExternal.prototype.inToHavingFilter = function (agg, range) {
	            var havingSpecs = [];
	            if (range.start !== null) {
	                havingSpecs.push(this.makeHavingComparison(agg, (range.bounds[0] === '[' ? '>=' : '>'), range.start));
	            }
	            if (range.end !== null) {
	                havingSpecs.push(this.makeHavingComparison(agg, (range.bounds[1] === ']' ? '<=' : '<'), range.end));
	            }
	            return havingSpecs.length === 1 ? havingSpecs[0] : { type: 'and', havingSpecs: havingSpecs };
	        };
	        DruidExternal.prototype.havingFilterToDruid = function (filter) {
	            var _this = this;
	            if (filter instanceof Plywood.LiteralExpression) {
	                if (filter.value === true) {
	                    return null;
	                }
	                else {
	                    throw new Error("should never get here");
	                }
	            }
	            else if (filter instanceof Plywood.ChainExpression) {
	                var pattern;
	                if (pattern = filter.getExpressionPattern('and')) {
	                    return {
	                        type: 'and',
	                        havingSpecs: pattern.map(this.havingFilterToDruid, this)
	                    };
	                }
	                if (pattern = filter.getExpressionPattern('or')) {
	                    return {
	                        type: 'or',
	                        havingSpecs: pattern.map(this.havingFilterToDruid, this)
	                    };
	                }
	                if (filter.lastAction() instanceof Plywood.NotAction) {
	                    return this.havingFilterToDruid(filter.popAction());
	                }
	                var lhs = filter.expression;
	                var actions = filter.actions;
	                if (actions.length !== 1)
	                    throw new Error("can not convert " + filter + " to Druid interval");
	                var filterAction = actions[0];
	                var rhs = filterAction.expression;
	                if (filterAction instanceof Plywood.IsAction) {
	                    if (lhs instanceof Plywood.RefExpression && rhs instanceof Plywood.LiteralExpression) {
	                        return {
	                            type: "equalTo",
	                            aggregation: lhs.name,
	                            value: rhs.value
	                        };
	                    }
	                    else {
	                        throw new Error("can not convert " + filter + " to Druid filter");
	                    }
	                }
	                else if (filterAction instanceof Plywood.InAction) {
	                    if (lhs instanceof Plywood.RefExpression && rhs instanceof Plywood.LiteralExpression) {
	                        var rhsType = rhs.type;
	                        if (rhsType === 'SET/STRING') {
	                            return {
	                                type: "or",
	                                havingSpecs: rhs.value.elements.map(function (value) {
	                                    return {
	                                        type: "equalTo",
	                                        aggregation: lhs.name,
	                                        value: value
	                                    };
	                                })
	                            };
	                        }
	                        else if (rhsType === 'SET/NUMBER_RANGE') {
	                            return {
	                                type: "or",
	                                havingSpecs: rhs.value.elements.map(function (value) {
	                                    return _this.inToHavingFilter(lhs.name, value);
	                                }, this)
	                            };
	                        }
	                        else if (rhsType === 'NUMBER_RANGE') {
	                            return this.inToHavingFilter(lhs.name, rhs.value);
	                        }
	                        else if (rhsType === 'TIME_RANGE') {
	                            throw new Error("can not time filter on non-primary time dimension");
	                        }
	                        else {
	                            throw new Error("not supported " + rhsType);
	                        }
	                    }
	                    else {
	                        throw new Error("can not convert " + filter + " to Druid having filter");
	                    }
	                }
	            }
	            throw new Error("could not convert filter " + filter + " to Druid filter");
	        };
	        DruidExternal.prototype.isMinMaxTimeApply = function (apply) {
	            var applyExpression = apply.expression;
	            if (applyExpression instanceof Plywood.ChainExpression) {
	                var actions = applyExpression.actions;
	                if (actions.length !== 1)
	                    return false;
	                var minMaxAction = actions[0];
	                return (minMaxAction.action === "min" || minMaxAction.action === "max") &&
	                    this.isTimeRef(minMaxAction.expression);
	            }
	            else {
	                return false;
	            }
	        };
	        DruidExternal.prototype.getTimeBoundaryQueryAndPostProcess = function () {
	            var _a = this, applies = _a.applies, context = _a.context;
	            var druidQuery = {
	                queryType: "timeBoundary",
	                dataSource: this.getDruidDataSource()
	            };
	            if (context) {
	                druidQuery.context = context;
	            }
	            if (applies.length === 1) {
	                var loneApplyExpression = applies[0].expression;
	                druidQuery.bound = loneApplyExpression.actions[0].action + "Time";
	            }
	            return {
	                query: druidQuery,
	                postProcess: timeBoundaryPostProcessFactory(applies)
	            };
	        };
	        DruidExternal.prototype.getQueryAndPostProcess = function () {
	            var _this = this;
	            var _a = this, mode = _a.mode, applies = _a.applies, sort = _a.sort, limit = _a.limit, context = _a.context;
	            if (applies && applies.length && applies.every(this.isMinMaxTimeApply, this)) {
	                return this.getTimeBoundaryQueryAndPostProcess();
	            }
	            var druidQuery = {
	                queryType: 'timeseries',
	                dataSource: this.getDruidDataSource(),
	                intervals: null,
	                granularity: 'all'
	            };
	            if (context) {
	                druidQuery.context = Plywood.helper.shallowCopy(context);
	            }
	            var filterAndIntervals = this.filterToDruid(this.getQueryFilter());
	            druidQuery.intervals = filterAndIntervals.intervals;
	            if (filterAndIntervals.filter) {
	                druidQuery.filter = filterAndIntervals.filter;
	            }
	            switch (mode) {
	                case 'raw':
	                    if (!this.allowSelectQueries) {
	                        throw new Error("to issues 'select' queries allowSelectQueries flag must be set");
	                    }
	                    var selectDimensions = [];
	                    var selectMetrics = [];
	                    var inflaters = [];
	                    var timeAttribute = this.timeAttribute;
	                    var derivedAttributes = this.derivedAttributes;
	                    var selectedTimeAttribute = null;
	                    var selectedAttributes = this.getSelectedAttributes();
	                    selectedAttributes.forEach(function (attribute) {
	                        var name = attribute.name, type = attribute.type, unsplitable = attribute.unsplitable;
	                        if (name === timeAttribute) {
	                            selectedTimeAttribute = name;
	                        }
	                        else {
	                            if (unsplitable) {
	                                selectMetrics.push(name);
	                            }
	                            else {
	                                var derivedAttribute = derivedAttributes[name];
	                                if (derivedAttribute) {
	                                    if (_this.versionBefore('0.9.1') && !/^0\.9\.0-iap/.test(_this.version)) {
	                                        throw new Error("can not have derived attributes in Druid select in " + _this.version + ", upgrade to 0.9.1 or 0.9.0-iap");
	                                    }
	                                    var dimensionInflater = _this.expressionToDimensionInflater(derivedAttribute, name);
	                                    selectDimensions.push(dimensionInflater.dimension);
	                                    if (dimensionInflater.inflater)
	                                        inflaters.push(dimensionInflater.inflater);
	                                    return;
	                                }
	                                else {
	                                    selectDimensions.push(name);
	                                }
	                            }
	                        }
	                        switch (type) {
	                            case 'BOOLEAN':
	                                inflaters.push(Plywood.External.booleanInflaterFactory(name));
	                                break;
	                            case 'NUMBER':
	                                inflaters.push(Plywood.External.numberInflaterFactory(name));
	                                break;
	                            case 'TIME':
	                                inflaters.push(Plywood.External.timeInflaterFactory(name));
	                                break;
	                            case 'SET/STRING':
	                                inflaters.push(Plywood.External.setStringInflaterFactory(name));
	                                break;
	                        }
	                    });
	                    if (!selectDimensions.length)
	                        selectDimensions.push(DUMMY_NAME);
	                    if (!selectMetrics.length)
	                        selectMetrics.push(DUMMY_NAME);
	                    druidQuery.queryType = 'select';
	                    druidQuery.dimensions = selectDimensions;
	                    druidQuery.metrics = selectMetrics;
	                    druidQuery.pagingSpec = {
	                        "pagingIdentifiers": {},
	                        "threshold": limit ? limit.limit : 10000
	                    };
	                    if (sort && sort.direction === 'descending') {
	                        druidQuery.descending = true;
	                    }
	                    return {
	                        query: druidQuery,
	                        postProcess: postProcessFactory(selectNormalizerFactory(selectedTimeAttribute), inflaters, selectedAttributes)
	                    };
	                case 'value':
	                    var aggregationsAndPostAggregations = this.getAggregationsAndPostAggregations([this.toValueApply()]);
	                    if (aggregationsAndPostAggregations.aggregations.length) {
	                        druidQuery.aggregations = aggregationsAndPostAggregations.aggregations;
	                    }
	                    if (aggregationsAndPostAggregations.postAggregations.length) {
	                        druidQuery.postAggregations = aggregationsAndPostAggregations.postAggregations;
	                    }
	                    return {
	                        query: druidQuery,
	                        postProcess: valuePostProcess
	                    };
	                case 'total':
	                    var aggregationsAndPostAggregations = this.getAggregationsAndPostAggregations(this.applies);
	                    if (aggregationsAndPostAggregations.aggregations.length) {
	                        druidQuery.aggregations = aggregationsAndPostAggregations.aggregations;
	                    }
	                    if (aggregationsAndPostAggregations.postAggregations.length) {
	                        druidQuery.postAggregations = aggregationsAndPostAggregations.postAggregations;
	                    }
	                    return {
	                        query: druidQuery,
	                        postProcess: totalPostProcessFactory(applies)
	                    };
	                case 'split':
	                    var split = this.getQuerySplit();
	                    var splitSpec = this.splitToDruid(split);
	                    druidQuery.queryType = splitSpec.queryType;
	                    druidQuery.granularity = splitSpec.granularity;
	                    if (splitSpec.dimension)
	                        druidQuery.dimension = splitSpec.dimension;
	                    if (splitSpec.dimensions)
	                        druidQuery.dimensions = splitSpec.dimensions;
	                    var postProcess = splitSpec.postProcess;
	                    var aggregationsAndPostAggregations = this.getAggregationsAndPostAggregations(applies);
	                    if (aggregationsAndPostAggregations.aggregations.length) {
	                        druidQuery.aggregations = aggregationsAndPostAggregations.aggregations;
	                    }
	                    else {
	                        druidQuery.aggregations = [{ name: DUMMY_NAME, type: "count" }];
	                    }
	                    if (aggregationsAndPostAggregations.postAggregations.length) {
	                        druidQuery.postAggregations = aggregationsAndPostAggregations.postAggregations;
	                    }
	                    switch (druidQuery.queryType) {
	                        case 'timeseries':
	                            if (sort && (sort.direction !== 'ascending' || !split.hasKey(sort.refName()))) {
	                                throw new Error('can not sort within timeseries query');
	                            }
	                            if (limit) {
	                                throw new Error('can not limit within timeseries query');
	                            }
	                            if (!druidQuery.context || !hasOwnProperty(druidQuery.context, 'skipEmptyBuckets')) {
	                                druidQuery.context = druidQuery.context || {};
	                                druidQuery.context.skipEmptyBuckets = "true";
	                            }
	                            break;
	                        case 'topN':
	                            var metric;
	                            if (sort) {
	                                var inverted;
	                                if (this.sortOnLabel()) {
	                                    if (expressionNeedsAlphaNumericSort(split.firstSplitExpression())) {
	                                        metric = { type: 'alphaNumeric' };
	                                    }
	                                    else {
	                                        metric = { type: 'lexicographic' };
	                                    }
	                                    inverted = sort.direction === 'descending';
	                                }
	                                else {
	                                    metric = sort.refName();
	                                    inverted = sort.direction === 'ascending';
	                                }
	                                if (inverted) {
	                                    metric = { type: "inverted", metric: metric };
	                                }
	                            }
	                            else {
	                                metric = { type: 'lexicographic' };
	                            }
	                            druidQuery.metric = metric;
	                            druidQuery.threshold = limit ? limit.limit : 1000;
	                            break;
	                        case 'groupBy':
	                            var orderByColumn = null;
	                            if (sort) {
	                                var col = sort.refName();
	                                orderByColumn = {
	                                    dimension: col,
	                                    direction: sort.direction
	                                };
	                                if (this.sortOnLabel()) {
	                                    if (expressionNeedsAlphaNumericSort(split.splits[col])) {
	                                        orderByColumn.dimensionOrder = 'alphaNumeric';
	                                    }
	                                }
	                            }
	                            else {
	                                var timestampLabel = splitSpec.timestampLabel;
	                                var splitKeys = split.keys.filter(function (k) { return k !== timestampLabel; });
	                                if (!splitKeys.length)
	                                    throw new Error('could not find order by column for group by');
	                                var splitKey = splitKeys[0];
	                                var keyExpression = split.splits[splitKey];
	                                orderByColumn = {
	                                    dimension: splitKey
	                                };
	                                if (expressionNeedsAlphaNumericSort(keyExpression)) {
	                                    orderByColumn.dimensionOrder = 'alphaNumeric';
	                                }
	                            }
	                            druidQuery.limitSpec = {
	                                type: "default",
	                                limit: 500000,
	                                columns: [orderByColumn || split.firstSplitName()]
	                            };
	                            if (limit) {
	                                druidQuery.limitSpec.limit = limit.limit;
	                            }
	                            if (!this.havingFilter.equals(Plywood.Expression.TRUE)) {
	                                druidQuery.having = this.havingFilterToDruid(this.havingFilter);
	                            }
	                            break;
	                    }
	                    return {
	                        query: druidQuery,
	                        postProcess: postProcess
	                    };
	                default:
	                    throw new Error("can not get query for: " + this.mode);
	            }
	        };
	        DruidExternal.prototype.getIntrospectVersion = function () {
	            var requester = this.requester;
	            return requester({
	                query: {
	                    queryType: 'status'
	                }
	            })
	                .then((function (res) { return Plywood.External.getVersion(res.version); }), function () { return null; });
	        };
	        DruidExternal.prototype.getIntrospectAttributesWithSegmentMetadata = function (withAggregators) {
	            var _this = this;
	            var _a = this, requester = _a.requester, timeAttribute = _a.timeAttribute;
	            var query = {
	                queryType: 'segmentMetadata',
	                dataSource: this.getDruidDataSource(),
	                merge: true,
	                analysisTypes: []
	            };
	            if (withAggregators) {
	                query.analysisTypes.push("aggregators");
	                query.lenientAggregatorMerge = true;
	            }
	            var resultPromise = requester({ query: query }).then(segmentMetadataPostProcessFactory(timeAttribute));
	            if (withAggregators) {
	                resultPromise = resultPromise.catch(function (err) {
	                    if (err.message.indexOf('Can not construct instance of io.druid.query.metadata.metadata.SegmentMetadataQuery$AnalysisType') === -1) {
	                        throw err;
	                    }
	                    return _this.getIntrospectAttributesWithSegmentMetadata(false);
	                });
	            }
	            return resultPromise;
	        };
	        DruidExternal.prototype.getIntrospectAttributesWithGet = function () {
	            var _a = this, requester = _a.requester, timeAttribute = _a.timeAttribute;
	            return requester({
	                query: {
	                    queryType: 'introspect',
	                    dataSource: this.getDruidDataSource()
	                }
	            })
	                .then(introspectPostProcessFactory(timeAttribute));
	        };
	        DruidExternal.prototype.getIntrospectAttributes = function () {
	            var _this = this;
	            var versionPromise = this.version ? Q(this.version) : this.getIntrospectVersion();
	            return versionPromise.then(function (version) {
	                var withAggregators = version && !Plywood.External.versionLessThan(version, '0.9.0');
	                var attributePromise;
	                switch (_this.introspectionStrategy) {
	                    case 'segment-metadata-fallback':
	                        attributePromise = _this.getIntrospectAttributesWithSegmentMetadata(withAggregators)
	                            .catch(function (err) {
	                            if (err.message.indexOf("querySegmentSpec can't be null") === -1)
	                                throw err;
	                            return _this.getIntrospectAttributesWithGet();
	                        });
	                        break;
	                    case 'segment-metadata-only':
	                        attributePromise = _this.getIntrospectAttributesWithSegmentMetadata(withAggregators);
	                        break;
	                    case 'datasource-get':
	                        attributePromise = _this.getIntrospectAttributesWithGet();
	                        break;
	                    default:
	                        throw new Error('invalid introspectionStrategy');
	                }
	                return attributePromise.then(function (attributes) {
	                    return {
	                        version: version,
	                        attributes: attributes
	                    };
	                });
	            });
	        };
	        DruidExternal.type = 'DATASET';
	        DruidExternal.TRUE_INTERVAL = "1000-01-01/3000-01-01";
	        DruidExternal.FALSE_INTERVAL = "1000-01-01/1000-01-02";
	        DruidExternal.VALID_INTROSPECTION_STRATEGIES = ['segment-metadata-fallback', 'segment-metadata-only', 'datasource-get'];
	        DruidExternal.DEFAULT_INTROSPECTION_STRATEGY = 'segment-metadata-fallback';
	        return DruidExternal;
	    }(Plywood.External));
	    Plywood.DruidExternal = DruidExternal;
	    Plywood.External.register(DruidExternal);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var mySQLDialect = new Plywood.MySQLDialect();
	    function correctResult(result) {
	        return Array.isArray(result) && (result.length === 0 || typeof result[0] === 'object');
	    }
	    function getSplitInflaters(split) {
	        return split.mapSplits(function (label, splitExpression) {
	            var simpleInflater = Plywood.External.getSimpleInflater(splitExpression, label);
	            if (simpleInflater)
	                return simpleInflater;
	            if (splitExpression instanceof Plywood.ChainExpression) {
	                var lastAction = splitExpression.lastAction();
	                if (lastAction instanceof Plywood.TimeBucketAction) {
	                    return Plywood.External.timeRangeInflaterFactory(label, lastAction.duration, lastAction.getTimezone());
	                }
	                if (lastAction instanceof Plywood.NumberBucketAction) {
	                    return Plywood.External.numberRangeInflaterFactory(label, lastAction.size);
	                }
	            }
	            return;
	        });
	    }
	    function valuePostProcess(data) {
	        if (!correctResult(data)) {
	            var err = new Error("unexpected result from MySQL (value)");
	            err.result = data;
	            throw err;
	        }
	        return data.length ? data[0][Plywood.External.VALUE_NAME] : 0;
	    }
	    function postProcessFactory(inflaters, zeroTotalApplies) {
	        return function (data) {
	            if (!correctResult(data)) {
	                var err = new Error("unexpected result from MySQL");
	                err.result = data;
	                throw err;
	            }
	            var n = data.length;
	            for (var _i = 0, inflaters_2 = inflaters; _i < inflaters_2.length; _i++) {
	                var inflater = inflaters_2[_i];
	                for (var i = 0; i < n; i++) {
	                    inflater(data[i], i, data);
	                }
	            }
	            if (n === 0 && zeroTotalApplies) {
	                data = [Plywood.External.makeZeroDatum(zeroTotalApplies)];
	            }
	            return new Plywood.Dataset({ data: data });
	        };
	    }
	    function postProcessIntrospect(columns) {
	        var attributes = columns.map(function (column) {
	            var name = column.Field;
	            var sqlType = column.Type.toLowerCase();
	            if (sqlType === "datetime") {
	                return new Plywood.AttributeInfo({ name: name, type: 'TIME' });
	            }
	            else if (sqlType.indexOf("varchar(") === 0 || sqlType.indexOf("blob") === 0) {
	                return new Plywood.AttributeInfo({ name: name, type: 'STRING' });
	            }
	            else if (sqlType.indexOf("int(") === 0 || sqlType.indexOf("bigint(") === 0) {
	                return new Plywood.AttributeInfo({ name: name, type: 'NUMBER' });
	            }
	            else if (sqlType.indexOf("decimal(") === 0 || sqlType.indexOf("float") === 0 || sqlType.indexOf("double") === 0) {
	                return new Plywood.AttributeInfo({ name: name, type: 'NUMBER' });
	            }
	            else if (sqlType.indexOf("tinyint(1)") === 0) {
	                return new Plywood.AttributeInfo({ name: name, type: 'BOOLEAN' });
	            }
	            return null;
	        }).filter(Boolean);
	        return {
	            version: null,
	            attributes: attributes
	        };
	    }
	    var MySQLExternal = (function (_super) {
	        __extends(MySQLExternal, _super);
	        function MySQLExternal(parameters) {
	            _super.call(this, parameters, dummyObject);
	            this._ensureEngine("mysql");
	            this.table = parameters.table;
	        }
	        MySQLExternal.fromJS = function (parameters, requester) {
	            var value = Plywood.External.jsToValue(parameters, requester);
	            value.table = parameters.table;
	            return new MySQLExternal(value);
	        };
	        MySQLExternal.getSourceList = function (requester) {
	            return requester({ query: "SHOW TABLES" })
	                .then(function (sources) {
	                if (!Array.isArray(sources))
	                    throw new Error('invalid sources response');
	                if (!sources.length)
	                    return sources;
	                var key = Object.keys(sources[0])[0];
	                if (!key)
	                    throw new Error('invalid sources response (no key)');
	                return sources.map(function (s) { return s[key]; });
	            });
	        };
	        MySQLExternal.prototype.valueOf = function () {
	            var value = _super.prototype.valueOf.call(this);
	            value.table = this.table;
	            return value;
	        };
	        MySQLExternal.prototype.toJS = function () {
	            var js = _super.prototype.toJS.call(this);
	            js.table = this.table;
	            return js;
	        };
	        MySQLExternal.prototype.equals = function (other) {
	            return _super.prototype.equals.call(this, other) &&
	                this.table === other.table;
	        };
	        MySQLExternal.prototype.canHandleFilter = function (ex) {
	            return true;
	        };
	        MySQLExternal.prototype.canHandleTotal = function () {
	            return true;
	        };
	        MySQLExternal.prototype.canHandleSplit = function (ex) {
	            return true;
	        };
	        MySQLExternal.prototype.canHandleApply = function (ex) {
	            return true;
	        };
	        MySQLExternal.prototype.canHandleSort = function (sortAction) {
	            return true;
	        };
	        MySQLExternal.prototype.canHandleLimit = function (limitAction) {
	            return true;
	        };
	        MySQLExternal.prototype.canHandleHavingFilter = function (ex) {
	            return true;
	        };
	        MySQLExternal.prototype.getQueryAndPostProcess = function () {
	            var _a = this, table = _a.table, mode = _a.mode, applies = _a.applies, sort = _a.sort, limit = _a.limit, derivedAttributes = _a.derivedAttributes;
	            var query = ['SELECT'];
	            var postProcess = null;
	            var inflaters = [];
	            var zeroTotalApplies = null;
	            var from = "FROM `" + table + "`";
	            var filter = this.getQueryFilter();
	            if (!filter.equals(Plywood.Expression.TRUE)) {
	                from += '\nWHERE ' + filter.getSQL(mySQLDialect);
	            }
	            switch (mode) {
	                case 'raw':
	                    var selectedAttributes = this.getSelectedAttributes();
	                    selectedAttributes.forEach(function (attribute) {
	                        if (attribute.type === 'BOOLEAN') {
	                            inflaters.push(Plywood.External.booleanInflaterFactory(attribute.name));
	                        }
	                    });
	                    query.push(selectedAttributes.map(function (a) {
	                        var name = a.name;
	                        if (derivedAttributes[name]) {
	                            return new Plywood.ApplyAction({ name: name, expression: derivedAttributes[name] }).getSQL('', mySQLDialect);
	                        }
	                        else {
	                            return mySQLDialect.escapeName(name);
	                        }
	                    }).join(', '), from);
	                    if (sort) {
	                        query.push(sort.getSQL('', mySQLDialect));
	                    }
	                    if (limit) {
	                        query.push(limit.getSQL('', mySQLDialect));
	                    }
	                    break;
	                case 'value':
	                    query.push(this.toValueApply().getSQL('', mySQLDialect), from, "GROUP BY ''");
	                    postProcess = valuePostProcess;
	                    break;
	                case 'total':
	                    zeroTotalApplies = applies;
	                    query.push(applies.map(function (apply) { return apply.getSQL('', mySQLDialect); }).join(',\n'), from, "GROUP BY ''");
	                    break;
	                case 'split':
	                    var split = this.getQuerySplit();
	                    query.push(split.getSelectSQL(mySQLDialect)
	                        .concat(applies.map(function (apply) { return apply.getSQL('', mySQLDialect); }))
	                        .join(',\n'), from, split.getShortGroupBySQL());
	                    if (!(this.havingFilter.equals(Plywood.Expression.TRUE))) {
	                        query.push('HAVING ' + this.havingFilter.getSQL(mySQLDialect));
	                    }
	                    if (sort) {
	                        query.push(sort.getSQL('', mySQLDialect));
	                    }
	                    if (limit) {
	                        query.push(limit.getSQL('', mySQLDialect));
	                    }
	                    inflaters = getSplitInflaters(split);
	                    break;
	                default:
	                    throw new Error("can not get query for mode: " + mode);
	            }
	            return {
	                query: query.join('\n'),
	                postProcess: postProcess || postProcessFactory(inflaters, zeroTotalApplies)
	            };
	        };
	        MySQLExternal.prototype.getIntrospectAttributes = function () {
	            return this.requester({ query: "DESCRIBE `" + this.table + "`" }).then(postProcessIntrospect);
	        };
	        MySQLExternal.type = 'DATASET';
	        return MySQLExternal;
	    }(Plywood.External));
	    Plywood.MySQLExternal = MySQLExternal;
	    Plywood.External.register(MySQLExternal, 'mysql');
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    function getDataName(ex) {
	        if (ex instanceof Plywood.RefExpression) {
	            return ex.name;
	        }
	        else if (ex instanceof Plywood.ChainExpression) {
	            return getDataName(ex.expression);
	        }
	        else {
	            return null;
	        }
	    }
	    function getValue(param) {
	        if (param instanceof Plywood.LiteralExpression)
	            return param.value;
	        return param;
	    }
	    function getString(param) {
	        if (typeof param === 'string')
	            return param;
	        if (param instanceof Plywood.LiteralExpression && param.type === 'STRING') {
	            return param.value;
	        }
	        if (param instanceof Plywood.RefExpression && param.nest === 0) {
	            return param.name;
	        }
	        throw new Error('could not extract a string out of ' + String(param));
	    }
	    function getNumber(param) {
	        if (typeof param === 'number')
	            return param;
	        if (param instanceof Plywood.LiteralExpression && param.type === 'NUMBER') {
	            return param.value;
	        }
	        throw new Error('could not extract a number out of ' + String(param));
	    }
	    function ply(dataset) {
	        if (!dataset)
	            dataset = new Plywood.Dataset({ data: [{}] });
	        return r(dataset);
	    }
	    Plywood.ply = ply;
	    function $(name, nest, type) {
	        if (typeof name !== 'string')
	            throw new TypeError('$() argument must be a string');
	        if (typeof nest === 'string') {
	            type = nest;
	            nest = 0;
	        }
	        return new Plywood.RefExpression({
	            name: name,
	            nest: nest != null ? nest : 0,
	            type: type
	        });
	    }
	    Plywood.$ = $;
	    function r(value) {
	        if (Plywood.External.isExternal(value))
	            throw new TypeError('r can not accept externals');
	        if (Array.isArray(value))
	            value = Plywood.Set.fromJS(value);
	        return Plywood.LiteralExpression.fromJS({ op: 'literal', value: value });
	    }
	    Plywood.r = r;
	    function toJS(thing) {
	        return (thing && typeof thing.toJS === 'function') ? thing.toJS() : thing;
	    }
	    Plywood.toJS = toJS;
	    function chainVia(op, expressions, zero) {
	        var n = expressions.length;
	        if (!n)
	            return zero;
	        var acc = expressions[0];
	        if (!Expression.isExpression(acc))
	            acc = Expression.fromJSLoose(acc);
	        for (var i = 1; i < n; i++)
	            acc = acc[op](expressions[i]);
	        return acc;
	    }
	    var check;
	    var Expression = (function () {
	        function Expression(parameters, dummy) {
	            if (dummy === void 0) { dummy = null; }
	            this.op = parameters.op;
	            if (dummy !== dummyObject) {
	                throw new TypeError("can not call `new Expression` directly use Expression.fromJS instead");
	            }
	            if (parameters.simple)
	                this.simple = true;
	        }
	        Expression.isExpression = function (candidate) {
	            return Plywood.isInstanceOf(candidate, Expression);
	        };
	        Expression.parse = function (str, timezone) {
	            var original = Plywood.defaultParserTimezone;
	            if (timezone)
	                Plywood.defaultParserTimezone = timezone;
	            try {
	                return expressionParser.parse(str);
	            }
	            catch (e) {
	                throw new Error("Expression parse error: " + e.message + " on '" + str + "'");
	            }
	            finally {
	                Plywood.defaultParserTimezone = original;
	            }
	        };
	        Expression.parseSQL = function (str, timezone) {
	            var original = Plywood.defaultParserTimezone;
	            if (timezone)
	                Plywood.defaultParserTimezone = timezone;
	            try {
	                return plyqlParser.parse(str);
	            }
	            catch (e) {
	                throw new Error("SQL parse error: " + e.message + " on '" + str + "'");
	            }
	            finally {
	                Plywood.defaultParserTimezone = original;
	            }
	        };
	        Expression.fromJSLoose = function (param) {
	            var expressionJS;
	            switch (typeof param) {
	                case 'object':
	                    if (param === null) {
	                        return Expression.NULL;
	                    }
	                    else if (Expression.isExpression(param)) {
	                        return param;
	                    }
	                    else if (Plywood.isImmutableClass(param)) {
	                        if (param.constructor.type) {
	                            expressionJS = { op: 'literal', value: param };
	                        }
	                        else {
	                            throw new Error("unknown object");
	                        }
	                    }
	                    else if (param.op) {
	                        expressionJS = param;
	                    }
	                    else if (param.toISOString) {
	                        expressionJS = { op: 'literal', value: new Date(param) };
	                    }
	                    else if (Array.isArray(param)) {
	                        expressionJS = { op: 'literal', value: Plywood.Set.fromJS(param) };
	                    }
	                    else if (hasOwnProperty(param, 'start') && hasOwnProperty(param, 'end')) {
	                        expressionJS = { op: 'literal', value: Plywood.Range.fromJS(param) };
	                    }
	                    else {
	                        throw new Error('unknown parameter');
	                    }
	                    break;
	                case 'number':
	                case 'boolean':
	                    expressionJS = { op: 'literal', value: param };
	                    break;
	                case 'string':
	                    return Expression.parse(param);
	                default:
	                    throw new Error("unrecognizable expression");
	            }
	            return Expression.fromJS(expressionJS);
	        };
	        Expression.inOrIs = function (lhs, value) {
	            var literal = new Plywood.LiteralExpression({
	                op: 'literal',
	                value: value
	            });
	            var literalType = literal.type;
	            var returnExpression = null;
	            if (literalType === 'NUMBER_RANGE' || literalType === 'TIME_RANGE' || Plywood.isSetType(literalType)) {
	                returnExpression = lhs.in(literal);
	            }
	            else {
	                returnExpression = lhs.is(literal);
	            }
	            return returnExpression.simplify();
	        };
	        Expression.and = function (expressions) {
	            return chainVia('and', expressions, Expression.TRUE);
	        };
	        Expression.or = function (expressions) {
	            return chainVia('or', expressions, Expression.FALSE);
	        };
	        Expression.add = function (expressions) {
	            return chainVia('add', expressions, Expression.ZERO);
	        };
	        Expression.subtract = function (expressions) {
	            return chainVia('subtract', expressions, Expression.ZERO);
	        };
	        Expression.multiply = function (expressions) {
	            return chainVia('multiply', expressions, Expression.ONE);
	        };
	        Expression.power = function (expressions) {
	            return chainVia('power', expressions, Expression.ZERO);
	        };
	        Expression.concat = function (expressions) {
	            return chainVia('concat', expressions, Expression.EMPTY_STRING);
	        };
	        Expression.register = function (ex) {
	            var op = ex.name.replace('Expression', '').replace(/^\w/, function (s) { return s.toLowerCase(); });
	            Expression.classMap[op] = ex;
	        };
	        Expression.fromJS = function (expressionJS) {
	            if (!hasOwnProperty(expressionJS, "op")) {
	                throw new Error("op must be defined");
	            }
	            var op = expressionJS.op;
	            if (typeof op !== "string") {
	                throw new Error("op must be a string");
	            }
	            var ClassFn = Expression.classMap[op];
	            if (!ClassFn) {
	                throw new Error("unsupported expression op '" + op + "'");
	            }
	            return ClassFn.fromJS(expressionJS);
	        };
	        Expression.prototype._ensureOp = function (op) {
	            if (!this.op) {
	                this.op = op;
	                return;
	            }
	            if (this.op !== op) {
	                throw new TypeError("incorrect expression op '" + this.op + "' (needs to be: '" + op + "')");
	            }
	        };
	        Expression.prototype.valueOf = function () {
	            var value = { op: this.op };
	            if (this.simple)
	                value.simple = true;
	            return value;
	        };
	        Expression.prototype.toJS = function () {
	            return {
	                op: this.op
	            };
	        };
	        Expression.prototype.toJSON = function () {
	            return this.toJS();
	        };
	        Expression.prototype.toString = function (indent) {
	            return 'BaseExpression';
	        };
	        Expression.prototype.equals = function (other) {
	            return Expression.isExpression(other) &&
	                this.op === other.op &&
	                this.type === other.type;
	        };
	        Expression.prototype.canHaveType = function (wantedType) {
	            var type = this.type;
	            if (!type)
	                return true;
	            if (wantedType === 'SET') {
	                return Plywood.isSetType(type);
	            }
	            else {
	                return type === wantedType;
	            }
	        };
	        Expression.prototype.expressionCount = function () {
	            return 1;
	        };
	        Expression.prototype.isOp = function (op) {
	            return this.op === op;
	        };
	        Expression.prototype.containsOp = function (op) {
	            return this.some(function (ex) { return ex.isOp(op) || null; });
	        };
	        Expression.prototype.hasExternal = function () {
	            return this.some(function (ex) {
	                if (ex instanceof Plywood.ExternalExpression)
	                    return true;
	                if (ex instanceof Plywood.RefExpression)
	                    return ex.isRemote();
	                return null;
	            });
	        };
	        Expression.prototype.getBaseExternals = function () {
	            var externals = [];
	            this.forEach(function (ex) {
	                if (ex instanceof Plywood.ExternalExpression)
	                    externals.push(ex.external.getBase());
	            });
	            return Plywood.External.deduplicateExternals(externals);
	        };
	        Expression.prototype.getRawExternals = function () {
	            var externals = [];
	            this.forEach(function (ex) {
	                if (ex instanceof Plywood.ExternalExpression)
	                    externals.push(ex.external.getRaw());
	            });
	            return Plywood.External.deduplicateExternals(externals);
	        };
	        Expression.prototype.getFreeReferences = function () {
	            var freeReferences = [];
	            this.forEach(function (ex, index, depth, nestDiff) {
	                if (ex instanceof Plywood.RefExpression && nestDiff <= ex.nest) {
	                    freeReferences.push(repeat('^', ex.nest - nestDiff) + ex.name);
	                }
	            });
	            return Plywood.helper.deduplicateSort(freeReferences);
	        };
	        Expression.prototype.getFreeReferenceIndexes = function () {
	            var freeReferenceIndexes = [];
	            this.forEach(function (ex, index, depth, nestDiff) {
	                if (ex instanceof Plywood.RefExpression && nestDiff <= ex.nest) {
	                    freeReferenceIndexes.push(index);
	                }
	            });
	            return freeReferenceIndexes;
	        };
	        Expression.prototype.incrementNesting = function (by) {
	            if (by === void 0) { by = 1; }
	            var freeReferenceIndexes = this.getFreeReferenceIndexes();
	            if (freeReferenceIndexes.length === 0)
	                return this;
	            return this.substitute(function (ex, index) {
	                if (ex instanceof Plywood.RefExpression && freeReferenceIndexes.indexOf(index) !== -1) {
	                    return ex.incrementNesting(by);
	                }
	                return null;
	            });
	        };
	        Expression.prototype.simplify = function () {
	            return this;
	        };
	        Expression.prototype.every = function (iter, thisArg) {
	            return this._everyHelper(iter, thisArg, { index: 0 }, 0, 0);
	        };
	        Expression.prototype._everyHelper = function (iter, thisArg, indexer, depth, nestDiff) {
	            var pass = iter.call(thisArg, this, indexer.index, depth, nestDiff);
	            if (pass != null) {
	                return pass;
	            }
	            else {
	                indexer.index++;
	            }
	            return true;
	        };
	        Expression.prototype.some = function (iter, thisArg) {
	            var _this = this;
	            return !this.every(function (ex, index, depth, nestDiff) {
	                var v = iter.call(_this, ex, index, depth, nestDiff);
	                return (v == null) ? null : !v;
	            }, thisArg);
	        };
	        Expression.prototype.forEach = function (iter, thisArg) {
	            var _this = this;
	            this.every(function (ex, index, depth, nestDiff) {
	                iter.call(_this, ex, index, depth, nestDiff);
	                return null;
	            }, thisArg);
	        };
	        Expression.prototype.substitute = function (substitutionFn, thisArg) {
	            return this._substituteHelper(substitutionFn, thisArg, { index: 0 }, 0, 0);
	        };
	        Expression.prototype._substituteHelper = function (substitutionFn, thisArg, indexer, depth, nestDiff) {
	            var sub = substitutionFn.call(thisArg, this, indexer.index, depth, nestDiff);
	            if (sub) {
	                indexer.index += this.expressionCount();
	                return sub;
	            }
	            else {
	                indexer.index++;
	            }
	            return this;
	        };
	        Expression.prototype.substituteAction = function (actionMatchFn, actionSubstitutionFn, options, thisArg) {
	            var _this = this;
	            if (options === void 0) { options = {}; }
	            return this.substitute(function (ex) {
	                if (ex instanceof Plywood.ChainExpression) {
	                    var actions = ex.actions;
	                    for (var i = 0; i < actions.length; i++) {
	                        var action = actions[i];
	                        if (actionMatchFn.call(_this, action)) {
	                            var newEx = actionSubstitutionFn.call(_this, ex.headActions(i), action);
	                            for (var j = i + 1; j < actions.length; j++)
	                                newEx = newEx.performAction(actions[j]);
	                            if (options.onceInChain)
	                                return newEx;
	                            return newEx.substituteAction(actionMatchFn, actionSubstitutionFn, options, _this);
	                        }
	                    }
	                }
	                return null;
	            }, thisArg);
	        };
	        Expression.prototype.getFn = function () {
	            throw new Error('should never be called directly');
	        };
	        Expression.prototype.getJS = function (datumVar) {
	            throw new Error('should never be called directly');
	        };
	        Expression.prototype.getJSFn = function (datumVar) {
	            if (datumVar === void 0) { datumVar = 'd[]'; }
	            return "function(" + datumVar.replace('[]', '') + "){return " + this.getJS(datumVar) + ";}";
	        };
	        Expression.prototype.getSQL = function (dialect) {
	            throw new Error('should never be called directly');
	        };
	        Expression.prototype.extractFromAnd = function (matchFn) {
	            if (this.type !== 'BOOLEAN')
	                return null;
	            if (matchFn(this)) {
	                return {
	                    extract: this,
	                    rest: Expression.TRUE
	                };
	            }
	            else {
	                return {
	                    extract: Expression.TRUE,
	                    rest: this
	                };
	            }
	        };
	        Expression.prototype.breakdownByDataset = function (tempNamePrefix) {
	            var nameIndex = 0;
	            var singleDatasetActions = [];
	            var externals = this.getBaseExternals();
	            if (externals.length < 2) {
	                throw new Error('not a multiple dataset expression');
	            }
	            var combine = this.substitute(function (ex) {
	                var externals = ex.getBaseExternals();
	                if (externals.length !== 1)
	                    return null;
	                var existingApply = Plywood.helper.find(singleDatasetActions, function (apply) { return apply.expression.equals(ex); });
	                var tempName;
	                if (existingApply) {
	                    tempName = existingApply.name;
	                }
	                else {
	                    tempName = tempNamePrefix + (nameIndex++);
	                    singleDatasetActions.push(new Plywood.ApplyAction({
	                        action: 'apply',
	                        name: tempName,
	                        expression: ex
	                    }));
	                }
	                return new Plywood.RefExpression({
	                    op: 'ref',
	                    name: tempName,
	                    nest: 0
	                });
	            });
	            return {
	                combineExpression: combine,
	                singleDatasetActions: singleDatasetActions
	            };
	        };
	        Expression.prototype.actionize = function (containingAction) {
	            return null;
	        };
	        Expression.prototype.getExpressionPattern = function (actionType) {
	            var actions = this.actionize(actionType);
	            return actions ? actions.map(function (action) { return action.expression; }) : null;
	        };
	        Expression.prototype.firstAction = function () {
	            return null;
	        };
	        Expression.prototype.lastAction = function () {
	            return null;
	        };
	        Expression.prototype.headActions = function (n) {
	            return this;
	        };
	        Expression.prototype.popAction = function () {
	            return null;
	        };
	        Expression.prototype.getLiteralValue = function () {
	            return null;
	        };
	        Expression.prototype.bumpStringLiteralToTime = function () {
	            return this;
	        };
	        Expression.prototype.bumpStringLiteralToSetString = function () {
	            return this;
	        };
	        Expression.prototype.performAction = function (action, markSimple) {
	            if (!action)
	                throw new Error('must have action');
	            return new Plywood.ChainExpression({
	                expression: this,
	                actions: [action],
	                simple: Boolean(markSimple)
	            });
	        };
	        Expression.prototype.performActions = function (actions) {
	            if (!actions.length)
	                return this;
	            return new Plywood.ChainExpression({
	                expression: this,
	                actions: actions
	            });
	        };
	        Expression.prototype._performMultiAction = function (action, exs) {
	            if (!exs.length)
	                throw new Error(action + " action must have at least one argument");
	            var ret = this;
	            for (var _i = 0, exs_1 = exs; _i < exs_1.length; _i++) {
	                var ex = exs_1[_i];
	                if (!Expression.isExpression(ex))
	                    ex = Expression.fromJSLoose(ex);
	                ret = ret.performAction(new Plywood.Action.classMap[action]({ expression: ex }));
	            }
	            return ret;
	        };
	        Expression.prototype.add = function () {
	            var exs = [];
	            for (var _i = 0; _i < arguments.length; _i++) {
	                exs[_i - 0] = arguments[_i];
	            }
	            return this._performMultiAction('add', exs);
	        };
	        Expression.prototype.subtract = function () {
	            var exs = [];
	            for (var _i = 0; _i < arguments.length; _i++) {
	                exs[_i - 0] = arguments[_i];
	            }
	            return this._performMultiAction('subtract', exs);
	        };
	        Expression.prototype.negate = function () {
	            return Expression.ZERO.subtract(this);
	        };
	        Expression.prototype.multiply = function () {
	            var exs = [];
	            for (var _i = 0; _i < arguments.length; _i++) {
	                exs[_i - 0] = arguments[_i];
	            }
	            return this._performMultiAction('multiply', exs);
	        };
	        Expression.prototype.divide = function () {
	            var exs = [];
	            for (var _i = 0; _i < arguments.length; _i++) {
	                exs[_i - 0] = arguments[_i];
	            }
	            return this._performMultiAction('divide', exs);
	        };
	        Expression.prototype.reciprocate = function () {
	            return Expression.ONE.divide(this);
	        };
	        Expression.prototype.sqrt = function () {
	            return this.power(0.5);
	        };
	        Expression.prototype.power = function () {
	            var exs = [];
	            for (var _i = 0; _i < arguments.length; _i++) {
	                exs[_i - 0] = arguments[_i];
	            }
	            return this._performMultiAction('power', exs);
	        };
	        Expression.prototype.fallback = function (ex) {
	            if (!Expression.isExpression(ex))
	                ex = Expression.fromJSLoose(ex);
	            return this.performAction(new Plywood.FallbackAction({ expression: ex }));
	        };
	        Expression.prototype.is = function (ex) {
	            if (!Expression.isExpression(ex))
	                ex = Expression.fromJSLoose(ex);
	            return this.performAction(new Plywood.IsAction({ expression: ex }));
	        };
	        Expression.prototype.isnt = function (ex) {
	            return this.is(ex).not();
	        };
	        Expression.prototype.lessThan = function (ex) {
	            if (!Expression.isExpression(ex))
	                ex = Expression.fromJSLoose(ex);
	            return this.bumpStringLiteralToTime().performAction(new Plywood.LessThanAction({ expression: ex.bumpStringLiteralToTime() }));
	        };
	        Expression.prototype.lessThanOrEqual = function (ex) {
	            if (!Expression.isExpression(ex))
	                ex = Expression.fromJSLoose(ex);
	            return this.bumpStringLiteralToTime().performAction(new Plywood.LessThanOrEqualAction({ expression: ex.bumpStringLiteralToTime() }));
	        };
	        Expression.prototype.greaterThan = function (ex) {
	            if (!Expression.isExpression(ex))
	                ex = Expression.fromJSLoose(ex);
	            return this.bumpStringLiteralToTime().performAction(new Plywood.GreaterThanAction({ expression: ex.bumpStringLiteralToTime() }));
	        };
	        Expression.prototype.greaterThanOrEqual = function (ex) {
	            if (!Expression.isExpression(ex))
	                ex = Expression.fromJSLoose(ex);
	            return this.bumpStringLiteralToTime().performAction(new Plywood.GreaterThanOrEqualAction({ expression: ex.bumpStringLiteralToTime() }));
	        };
	        Expression.prototype.contains = function (ex, compare) {
	            if (!Expression.isExpression(ex))
	                ex = Expression.fromJSLoose(ex);
	            if (compare)
	                compare = getString(compare);
	            return this.performAction(new Plywood.ContainsAction({ expression: ex, compare: compare }));
	        };
	        Expression.prototype.match = function (re) {
	            return this.performAction(new Plywood.MatchAction({ regexp: getString(re) }));
	        };
	        Expression.prototype.in = function (ex, snd) {
	            if (arguments.length === 2) {
	                ex = getValue(ex);
	                snd = getValue(snd);
	                if (typeof ex === 'string') {
	                    ex = Plywood.parseISODate(ex, Plywood.defaultParserTimezone);
	                    if (!ex)
	                        throw new Error('can not convert start to date');
	                }
	                if (typeof snd === 'string') {
	                    snd = Plywood.parseISODate(snd, Plywood.defaultParserTimezone);
	                    if (!snd)
	                        throw new Error('can not convert end to date');
	                }
	                if (typeof ex === 'number' && typeof snd === 'number') {
	                    ex = new Plywood.NumberRange({ start: ex, end: snd });
	                }
	                else if (ex.toISOString && snd.toISOString) {
	                    ex = new Plywood.TimeRange({ start: ex, end: snd });
	                }
	                else {
	                    throw new Error('uninterpretable IN parameters');
	                }
	            }
	            if (!Expression.isExpression(ex))
	                ex = Expression.fromJSLoose(ex);
	            return this.performAction(new Plywood.InAction({ expression: ex }));
	        };
	        Expression.prototype.overlap = function (ex) {
	            if (!Expression.isExpression(ex))
	                ex = Expression.fromJSLoose(ex);
	            return this.bumpStringLiteralToSetString().performAction(new Plywood.OverlapAction({ expression: ex.bumpStringLiteralToSetString() }));
	        };
	        Expression.prototype.not = function () {
	            return this.performAction(new Plywood.NotAction({}));
	        };
	        Expression.prototype.and = function () {
	            var exs = [];
	            for (var _i = 0; _i < arguments.length; _i++) {
	                exs[_i - 0] = arguments[_i];
	            }
	            return this._performMultiAction('and', exs);
	        };
	        Expression.prototype.or = function () {
	            var exs = [];
	            for (var _i = 0; _i < arguments.length; _i++) {
	                exs[_i - 0] = arguments[_i];
	            }
	            return this._performMultiAction('or', exs);
	        };
	        Expression.prototype.substr = function (position, length) {
	            return this.performAction(new Plywood.SubstrAction({ position: getNumber(position), length: getNumber(length) }));
	        };
	        Expression.prototype.extract = function (re) {
	            return this.performAction(new Plywood.ExtractAction({ regexp: getString(re) }));
	        };
	        Expression.prototype.concat = function () {
	            var exs = [];
	            for (var _i = 0; _i < arguments.length; _i++) {
	                exs[_i - 0] = arguments[_i];
	            }
	            return this._performMultiAction('concat', exs);
	        };
	        Expression.prototype.lookup = function (lookup) {
	            return this.performAction(new Plywood.LookupAction({ lookup: getString(lookup) }));
	        };
	        Expression.prototype.numberBucket = function (size, offset) {
	            if (offset === void 0) { offset = 0; }
	            return this.performAction(new Plywood.NumberBucketAction({ size: getNumber(size), offset: getNumber(offset) }));
	        };
	        Expression.prototype.absolute = function () {
	            return this.performAction(new Plywood.AbsoluteAction({}));
	        };
	        Expression.prototype.timeBucket = function (duration, timezone) {
	            if (!Plywood.Duration.isDuration(duration))
	                duration = Plywood.Duration.fromJS(getString(duration));
	            if (timezone && !Plywood.Timezone.isTimezone(timezone))
	                timezone = Plywood.Timezone.fromJS(getString(timezone));
	            return this.bumpStringLiteralToTime().performAction(new Plywood.TimeBucketAction({ duration: duration, timezone: timezone }));
	        };
	        Expression.prototype.timeFloor = function (duration, timezone) {
	            if (!Plywood.Duration.isDuration(duration))
	                duration = Plywood.Duration.fromJS(getString(duration));
	            if (timezone && !Plywood.Timezone.isTimezone(timezone))
	                timezone = Plywood.Timezone.fromJS(getString(timezone));
	            return this.bumpStringLiteralToTime().performAction(new Plywood.TimeFloorAction({ duration: duration, timezone: timezone }));
	        };
	        Expression.prototype.timeShift = function (duration, step, timezone) {
	            if (!Plywood.Duration.isDuration(duration))
	                duration = Plywood.Duration.fromJS(getString(duration));
	            if (timezone && !Plywood.Timezone.isTimezone(timezone))
	                timezone = Plywood.Timezone.fromJS(getString(timezone));
	            return this.bumpStringLiteralToTime().performAction(new Plywood.TimeShiftAction({ duration: duration, step: getNumber(step), timezone: timezone }));
	        };
	        Expression.prototype.timeRange = function (duration, step, timezone) {
	            if (!Plywood.Duration.isDuration(duration))
	                duration = Plywood.Duration.fromJS(getString(duration));
	            if (timezone && !Plywood.Timezone.isTimezone(timezone))
	                timezone = Plywood.Timezone.fromJS(getString(timezone));
	            return this.bumpStringLiteralToTime().performAction(new Plywood.TimeRangeAction({ duration: duration, step: getNumber(step), timezone: timezone }));
	        };
	        Expression.prototype.timePart = function (part, timezone) {
	            if (timezone && !Plywood.Timezone.isTimezone(timezone))
	                timezone = Plywood.Timezone.fromJS(getString(timezone));
	            return this.bumpStringLiteralToTime().performAction(new Plywood.TimePartAction({ part: getString(part), timezone: timezone }));
	        };
	        Expression.prototype.filter = function (ex) {
	            if (!Expression.isExpression(ex))
	                ex = Expression.fromJSLoose(ex);
	            return this.performAction(new Plywood.FilterAction({ expression: ex }));
	        };
	        Expression.prototype.split = function (splits, name, dataName) {
	            if (arguments.length === 3 ||
	                (arguments.length === 2 && splits && (typeof splits === 'string' || typeof splits.op === 'string'))) {
	                name = getString(name);
	                var realSplits = Object.create(null);
	                realSplits[name] = splits;
	                splits = realSplits;
	            }
	            else {
	                dataName = name;
	            }
	            var parsedSplits = Object.create(null);
	            for (var k in splits) {
	                if (!hasOwnProperty(splits, k))
	                    continue;
	                var ex = splits[k];
	                parsedSplits[k] = Expression.isExpression(ex) ? ex : Expression.fromJSLoose(ex);
	            }
	            dataName = dataName ? getString(dataName) : getDataName(this);
	            if (!dataName)
	                throw new Error("could not guess data name in `split`, please provide one explicitly");
	            return this.performAction(new Plywood.SplitAction({ splits: parsedSplits, dataName: dataName }));
	        };
	        Expression.prototype.apply = function (name, ex) {
	            if (arguments.length < 2)
	                throw new Error('invalid arguments to .apply, did you forget to specify a name?');
	            if (!Expression.isExpression(ex))
	                ex = Expression.fromJSLoose(ex);
	            return this.performAction(new Plywood.ApplyAction({ name: getString(name), expression: ex }));
	        };
	        Expression.prototype.sort = function (ex, direction) {
	            if (direction === void 0) { direction = 'ascending'; }
	            if (!Expression.isExpression(ex))
	                ex = Expression.fromJSLoose(ex);
	            return this.performAction(new Plywood.SortAction({ expression: ex, direction: getString(direction) }));
	        };
	        Expression.prototype.limit = function (limit) {
	            return this.performAction(new Plywood.LimitAction({ limit: getNumber(limit) }));
	        };
	        Expression.prototype.select = function () {
	            var attributes = [];
	            for (var _i = 0; _i < arguments.length; _i++) {
	                attributes[_i - 0] = arguments[_i];
	            }
	            attributes = attributes.map(getString);
	            return this.performAction(new Plywood.SelectAction({ attributes: attributes }));
	        };
	        Expression.prototype.count = function () {
	            if (arguments.length)
	                throw new Error('.count() should not have arguments, did you want to .filter().count()?');
	            return this.performAction(new Plywood.CountAction({}));
	        };
	        Expression.prototype.sum = function (ex) {
	            if (!Expression.isExpression(ex))
	                ex = Expression.fromJSLoose(ex);
	            return this.performAction(new Plywood.SumAction({ expression: ex }));
	        };
	        Expression.prototype.min = function (ex) {
	            if (!Expression.isExpression(ex))
	                ex = Expression.fromJSLoose(ex);
	            return this.performAction(new Plywood.MinAction({ expression: ex }));
	        };
	        Expression.prototype.max = function (ex) {
	            if (!Expression.isExpression(ex))
	                ex = Expression.fromJSLoose(ex);
	            return this.performAction(new Plywood.MaxAction({ expression: ex }));
	        };
	        Expression.prototype.average = function (ex) {
	            if (!Expression.isExpression(ex))
	                ex = Expression.fromJSLoose(ex);
	            return this.performAction(new Plywood.AverageAction({ expression: ex }));
	        };
	        Expression.prototype.countDistinct = function (ex) {
	            if (!Expression.isExpression(ex))
	                ex = Expression.fromJSLoose(ex);
	            return this.performAction(new Plywood.CountDistinctAction({ expression: ex }));
	        };
	        Expression.prototype.quantile = function (ex, quantile) {
	            if (!Expression.isExpression(ex))
	                ex = Expression.fromJSLoose(ex);
	            return this.performAction(new Plywood.QuantileAction({ expression: ex, quantile: getNumber(quantile) }));
	        };
	        Expression.prototype.custom = function (custom) {
	            return this.performAction(new Plywood.CustomAction({ custom: getString(custom) }));
	        };
	        Expression.prototype.join = function (ex) {
	            if (!Expression.isExpression(ex))
	                ex = Expression.fromJSLoose(ex);
	            return this.performAction(new Plywood.JoinAction({ expression: ex }));
	        };
	        Expression.prototype.defineEnvironment = function (environment) {
	            if (!environment.timezone)
	                return this;
	            if (typeof environment.timezone === 'string')
	                environment = { timezone: Plywood.Timezone.fromJS(environment.timezone) };
	            return this.substituteAction(function (action) { return action.needsEnvironment(); }, function (preEx, action) { return preEx.performAction(action.defineEnvironment(environment)); });
	        };
	        Expression.prototype.referenceCheck = function (context) {
	            var datasetType = {};
	            for (var k in context) {
	                if (!hasOwnProperty(context, k))
	                    continue;
	                datasetType[k] = Plywood.getFullType(context[k]);
	            }
	            return this.referenceCheckInTypeContext({
	                type: 'DATASET',
	                datasetType: datasetType
	            });
	        };
	        Expression.prototype.referenceCheckInTypeContext = function (typeContext) {
	            var alterations = {};
	            this._fillRefSubstitutions(typeContext, { index: 0 }, alterations);
	            if (Plywood.helper.emptyLookup(alterations))
	                return this;
	            return this.substitute(function (ex, index) { return alterations[index] || null; });
	        };
	        Expression.prototype._fillRefSubstitutions = function (typeContext, indexer, alterations) {
	            indexer.index++;
	            return typeContext;
	        };
	        Expression.prototype.resolve = function (context, ifNotFound) {
	            if (ifNotFound === void 0) { ifNotFound = 'throw'; }
	            var expressions = Object.create(null);
	            for (var k in context) {
	                if (!hasOwnProperty(context, k))
	                    continue;
	                var value = context[k];
	                expressions[k] = Plywood.External.isExternal(value) ?
	                    new Plywood.ExternalExpression({ external: value }) :
	                    new Plywood.LiteralExpression({ value: value });
	            }
	            return this.resolveWithExpressions(expressions, ifNotFound);
	        };
	        Expression.prototype.resolveWithExpressions = function (expressions, ifNotFound) {
	            if (ifNotFound === void 0) { ifNotFound = 'throw'; }
	            return this.substitute(function (ex, index, depth, nestDiff) {
	                if (ex instanceof Plywood.RefExpression) {
	                    var nest = ex.nest;
	                    if (nestDiff === nest) {
	                        var foundExpression = null;
	                        var valueFound = false;
	                        if (hasOwnProperty(expressions, ex.name)) {
	                            foundExpression = expressions[ex.name];
	                            valueFound = true;
	                        }
	                        else {
	                            valueFound = false;
	                        }
	                        if (valueFound) {
	                            return foundExpression;
	                        }
	                        else if (ifNotFound === 'throw') {
	                            throw new Error("could not resolve " + ex + " because is was not in the context");
	                        }
	                        else if (ifNotFound === 'null') {
	                            return Expression.NULL;
	                        }
	                        else if (ifNotFound === 'leave') {
	                            return ex;
	                        }
	                    }
	                    else if (nestDiff < nest) {
	                        throw new Error("went too deep during resolve on: " + ex);
	                    }
	                }
	                return null;
	            });
	        };
	        Expression.prototype.resolved = function () {
	            return this.every(function (ex) {
	                return (ex instanceof Plywood.RefExpression) ? ex.nest === 0 : null;
	            });
	        };
	        Expression.prototype.contained = function () {
	            return this.every(function (ex, index, depth, nestDiff) {
	                if (ex instanceof Plywood.RefExpression) {
	                    var nest = ex.nest;
	                    return nestDiff >= nest;
	                }
	                return null;
	            });
	        };
	        Expression.prototype.decomposeAverage = function (countEx) {
	            return this.substituteAction(function (action) {
	                return action.action === 'average';
	            }, function (preEx, action) {
	                var expression = action.expression;
	                return preEx.sum(expression).divide(countEx ? preEx.sum(countEx) : preEx.count());
	            });
	        };
	        Expression.prototype.distribute = function () {
	            return this.substituteAction(function (action) {
	                return action.canDistribute();
	            }, function (preEx, action) {
	                var distributed = action.distribute(preEx);
	                if (!distributed)
	                    throw new Error('distribute returned null');
	                return distributed;
	            });
	        };
	        Expression.prototype.maxPossibleSplitValues = function () {
	            throw new Error('must be implemented by sub class');
	        };
	        Expression.prototype._initialPrepare = function (context, environment) {
	            return this.defineEnvironment(environment)
	                .referenceCheck(context)
	                .resolve(context)
	                .simplify();
	        };
	        Expression.prototype.simulate = function (context, environment) {
	            if (context === void 0) { context = {}; }
	            if (environment === void 0) { environment = {}; }
	            var readyExpression = this._initialPrepare(context, environment);
	            if (readyExpression instanceof Plywood.ExternalExpression) {
	                readyExpression = readyExpression.unsuppress();
	            }
	            return readyExpression._computeResolvedSimulate(true, []);
	        };
	        Expression.prototype.simulateQueryPlan = function (context, environment) {
	            if (context === void 0) { context = {}; }
	            if (environment === void 0) { environment = {}; }
	            if (!Plywood.datumHasExternal(context) && !this.hasExternal())
	                return [];
	            var readyExpression = this._initialPrepare(context, environment);
	            if (readyExpression instanceof Plywood.ExternalExpression) {
	                readyExpression = readyExpression.unsuppress();
	            }
	            var simulatedQueries = [];
	            readyExpression._computeResolvedSimulate(true, simulatedQueries);
	            return simulatedQueries;
	        };
	        Expression.prototype._computeResolvedSimulate = function (lastNode, simulatedQueries) {
	            throw new Error("can not call this directly");
	        };
	        Expression.prototype.compute = function (context, environment) {
	            var _this = this;
	            if (context === void 0) { context = {}; }
	            if (environment === void 0) { environment = {}; }
	            if (!Plywood.datumHasExternal(context) && !this.hasExternal()) {
	                return Q.fcall(function () {
	                    var referenceChecked = _this.defineEnvironment(environment).referenceCheck(context);
	                    return referenceChecked.getFn()(context, null);
	                });
	            }
	            return Plywood.introspectDatum(context)
	                .then(function (introspectedContext) {
	                var readyExpression = _this._initialPrepare(introspectedContext, environment);
	                if (readyExpression instanceof Plywood.ExternalExpression) {
	                    readyExpression = readyExpression.unsuppress();
	                }
	                return readyExpression._computeResolved(true);
	            });
	        };
	        Expression.prototype._computeResolved = function (lastNode) {
	            throw new Error("can not call this directly");
	        };
	        Expression.classMap = {};
	        return Expression;
	    }());
	    Plywood.Expression = Expression;
	    check = Expression;
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var LiteralExpression = (function (_super) {
	        __extends(LiteralExpression, _super);
	        function LiteralExpression(parameters) {
	            _super.call(this, parameters, dummyObject);
	            var value = parameters.value;
	            this.value = value;
	            this._ensureOp("literal");
	            if (typeof this.value === 'undefined') {
	                throw new TypeError("must have a `value`");
	            }
	            this.type = Plywood.getValueType(value);
	            this.simple = true;
	        }
	        LiteralExpression.fromJS = function (parameters) {
	            var value = {
	                op: parameters.op,
	                type: parameters.type
	            };
	            var v = parameters.value;
	            if (Plywood.isImmutableClass(v)) {
	                value.value = v;
	            }
	            else {
	                value.value = Plywood.valueFromJS(v, parameters.type);
	            }
	            return new LiteralExpression(value);
	        };
	        LiteralExpression.prototype.valueOf = function () {
	            var value = _super.prototype.valueOf.call(this);
	            value.value = this.value;
	            if (this.type)
	                value.type = this.type;
	            return value;
	        };
	        LiteralExpression.prototype.toJS = function () {
	            var js = _super.prototype.toJS.call(this);
	            if (this.value && this.value.toJS) {
	                js.value = this.value.toJS();
	                js.type = Plywood.isSetType(this.type) ? 'SET' : this.type;
	            }
	            else {
	                js.value = this.value;
	                if (this.type === 'TIME')
	                    js.type = 'TIME';
	            }
	            return js;
	        };
	        LiteralExpression.prototype.toString = function () {
	            var value = this.value;
	            if (value instanceof Plywood.Dataset && value.basis()) {
	                return 'ply()';
	            }
	            else if (this.type === 'STRING') {
	                return JSON.stringify(value);
	            }
	            else {
	                return String(value);
	            }
	        };
	        LiteralExpression.prototype.getFn = function () {
	            var value = this.value;
	            return function () { return value; };
	        };
	        LiteralExpression.prototype.getJS = function (datumVar) {
	            return JSON.stringify(this.value);
	        };
	        LiteralExpression.prototype.getSQL = function (dialect) {
	            var value = this.value;
	            if (value === null)
	                return 'NULL';
	            switch (this.type) {
	                case 'STRING':
	                    return dialect.escapeLiteral(value);
	                case 'BOOLEAN':
	                    return dialect.booleanToSQL(value);
	                case 'NUMBER':
	                    return dialect.numberToSQL(value);
	                case 'NUMBER_RANGE':
	                    return dialect.numberToSQL(value.start) + "/" + dialect.numberToSQL(value.end);
	                case 'TIME':
	                    return dialect.timeToSQL(value);
	                case 'TIME_RANGE':
	                    return dialect.timeToSQL(value.start) + "/" + dialect.timeToSQL(value.end);
	                case 'SET/STRING':
	                case 'SET/NUMBER':
	                    return '(' + value.elements.map(function (v) { return dialect.escapeLiteral(v); }).join(',') + ')';
	                case 'SET/NUMBER_RANGE':
	                    return 'FALSE';
	                default:
	                    throw new Error("currently unsupported type: " + this.type);
	            }
	        };
	        LiteralExpression.prototype.equals = function (other) {
	            if (!_super.prototype.equals.call(this, other) || this.type !== other.type)
	                return false;
	            if (this.value) {
	                if (this.value.equals) {
	                    return this.value.equals(other.value);
	                }
	                else if (this.value.toISOString && other.value.toISOString) {
	                    return this.value.valueOf() === other.value.valueOf();
	                }
	                else {
	                    return this.value === other.value;
	                }
	            }
	            else {
	                return this.value === other.value;
	            }
	        };
	        LiteralExpression.prototype._fillRefSubstitutions = function (typeContext, indexer, alterations) {
	            indexer.index++;
	            if (this.type == 'DATASET') {
	                var newTypeContext = this.value.getFullType();
	                newTypeContext.parent = typeContext;
	                return newTypeContext;
	            }
	            else {
	                return { type: this.type };
	            }
	        };
	        LiteralExpression.prototype.getLiteralValue = function () {
	            return this.value;
	        };
	        LiteralExpression.prototype._computeResolvedSimulate = function () {
	            return this.value;
	        };
	        LiteralExpression.prototype._computeResolved = function () {
	            return Q(this.value);
	        };
	        LiteralExpression.prototype.maxPossibleSplitValues = function () {
	            var value = this.value;
	            return Plywood.Set.isSet(value) ? value.size() : 1;
	        };
	        LiteralExpression.prototype.bumpStringLiteralToTime = function () {
	            if (this.type !== 'STRING')
	                return this;
	            var parse = Plywood.parseISODate(this.value, Plywood.defaultParserTimezone);
	            if (!parse)
	                throw new Error("could not parse '" + this.value + "' as time");
	            return Plywood.r(parse);
	        };
	        LiteralExpression.prototype.bumpStringLiteralToSetString = function () {
	            if (this.type !== 'STRING')
	                return this;
	            return Plywood.r(Plywood.Set.fromJS([this.value]));
	        };
	        return LiteralExpression;
	    }(Plywood.Expression));
	    Plywood.LiteralExpression = LiteralExpression;
	    Plywood.Expression.NULL = new LiteralExpression({ value: null });
	    Plywood.Expression.ZERO = new LiteralExpression({ value: 0 });
	    Plywood.Expression.ONE = new LiteralExpression({ value: 1 });
	    Plywood.Expression.FALSE = new LiteralExpression({ value: false });
	    Plywood.Expression.TRUE = new LiteralExpression({ value: true });
	    Plywood.Expression.EMPTY_STRING = new LiteralExpression({ value: '' });
	    Plywood.Expression.EMPTY_SET = new LiteralExpression({ value: Plywood.Set.fromJS([]) });
	    Plywood.Expression.register(LiteralExpression);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    Plywood.POSSIBLE_TYPES = {
	        'NULL': 1,
	        'BOOLEAN': 1,
	        'NUMBER': 1,
	        'TIME': 1,
	        'STRING': 1,
	        'NUMBER_RANGE': 1,
	        'TIME_RANGE': 1,
	        'SET': 1,
	        'SET/NULL': 1,
	        'SET/BOOLEAN': 1,
	        'SET/NUMBER': 1,
	        'SET/TIME': 1,
	        'SET/STRING': 1,
	        'SET/NUMBER_RANGE': 1,
	        'SET/TIME_RANGE': 1,
	        'DATASET': 1
	    };
	    var GENERATIONS_REGEXP = /^\^+/;
	    var TYPE_REGEXP = /:([A-Z\/_]+)$/;
	    var RefExpression = (function (_super) {
	        __extends(RefExpression, _super);
	        function RefExpression(parameters) {
	            _super.call(this, parameters, dummyObject);
	            this._ensureOp("ref");
	            var name = parameters.name;
	            if (typeof name !== 'string' || name.length === 0) {
	                throw new TypeError("must have a nonempty `name`");
	            }
	            this.name = name;
	            var nest = parameters.nest;
	            if (typeof nest !== 'number') {
	                throw new TypeError("must have nest");
	            }
	            if (nest < 0) {
	                throw new Error("nest must be non-negative");
	            }
	            this.nest = nest;
	            var myType = parameters.type;
	            if (myType) {
	                if (!RefExpression.validType(myType)) {
	                    throw new TypeError("unsupported type '" + myType + "'");
	                }
	                this.type = myType;
	            }
	            this.remote = Boolean(parameters.remote);
	            this.simple = true;
	        }
	        RefExpression.fromJS = function (parameters) {
	            var value;
	            if (hasOwnProperty(parameters, 'nest')) {
	                value = parameters;
	            }
	            else {
	                value = {
	                    op: 'ref',
	                    nest: 0,
	                    name: parameters.name,
	                    type: parameters.type
	                };
	            }
	            return new RefExpression(value);
	        };
	        RefExpression.parse = function (str) {
	            var refValue = { op: 'ref' };
	            var match;
	            match = str.match(GENERATIONS_REGEXP);
	            if (match) {
	                var nest = match[0].length;
	                refValue.nest = nest;
	                str = str.substr(nest);
	            }
	            else {
	                refValue.nest = 0;
	            }
	            match = str.match(TYPE_REGEXP);
	            if (match) {
	                refValue.type = match[1];
	                str = str.substr(0, str.length - match[0].length);
	            }
	            if (str[0] === '{' && str[str.length - 1] === '}') {
	                str = str.substr(1, str.length - 2);
	            }
	            refValue.name = str;
	            return new RefExpression(refValue);
	        };
	        RefExpression.validType = function (typeName) {
	            return hasOwnProperty(Plywood.POSSIBLE_TYPES, typeName);
	        };
	        RefExpression.toSimpleName = function (variableName) {
	            if (!RefExpression.SIMPLE_NAME_REGEXP.test(variableName)) {
	                variableName = variableName.replace(/\W/g, '');
	            }
	            return variableName;
	        };
	        RefExpression.prototype.valueOf = function () {
	            var value = _super.prototype.valueOf.call(this);
	            value.name = this.name;
	            value.nest = this.nest;
	            if (this.type)
	                value.type = this.type;
	            if (this.remote)
	                value.remote = true;
	            return value;
	        };
	        RefExpression.prototype.toJS = function () {
	            var js = _super.prototype.toJS.call(this);
	            js.name = this.name;
	            if (this.nest)
	                js.nest = this.nest;
	            if (this.type)
	                js.type = this.type;
	            return js;
	        };
	        RefExpression.prototype.toString = function () {
	            var str = this.name;
	            if (!RefExpression.SIMPLE_NAME_REGEXP.test(str)) {
	                str = '{' + str + '}';
	            }
	            if (this.nest) {
	                str = repeat('^', this.nest) + str;
	            }
	            if (this.type) {
	                str += ':' + this.type;
	            }
	            return '$' + str;
	        };
	        RefExpression.prototype.getFn = function () {
	            var name = this.name;
	            var nest = this.nest;
	            return function (d, c) {
	                if (nest) {
	                    return c[name];
	                }
	                else {
	                    if (hasOwnProperty(d, name)) {
	                        return d[name];
	                    }
	                    else {
	                        return null;
	                    }
	                }
	            };
	        };
	        RefExpression.prototype.getJS = function (datumVar) {
	            if (this.nest)
	                throw new Error("can not call getJS on unresolved expression");
	            var name = this.name;
	            if (datumVar) {
	                return datumVar.replace('[]', "[" + JSON.stringify(name) + "]");
	            }
	            else {
	                return RefExpression.toSimpleName(name);
	            }
	        };
	        RefExpression.prototype.getSQL = function (dialect, minimal) {
	            if (minimal === void 0) { minimal = false; }
	            if (this.nest)
	                throw new Error("can not call getSQL on unresolved expression: " + this);
	            return dialect.escapeName(this.name);
	        };
	        RefExpression.prototype.equals = function (other) {
	            return _super.prototype.equals.call(this, other) &&
	                this.name === other.name &&
	                this.nest === other.nest &&
	                this.remote === other.remote;
	        };
	        RefExpression.prototype.isRemote = function () {
	            return this.remote;
	        };
	        RefExpression.prototype._fillRefSubstitutions = function (typeContext, indexer, alterations) {
	            var myIndex = indexer.index;
	            indexer.index++;
	            var nest = this.nest;
	            var myTypeContext = typeContext;
	            while (nest--) {
	                myTypeContext = myTypeContext.parent;
	                if (!myTypeContext)
	                    throw new Error('went too deep on ' + this.toString());
	            }
	            var nestDiff = 0;
	            while (myTypeContext && !myTypeContext.datasetType[this.name]) {
	                myTypeContext = myTypeContext.parent;
	                nestDiff++;
	            }
	            if (!myTypeContext) {
	                throw new Error('could not resolve ' + this.toString());
	            }
	            var myFullType = myTypeContext.datasetType[this.name];
	            var myType = myFullType.type;
	            var myRemote = Boolean(myFullType.remote);
	            if (this.type && this.type !== myType) {
	                throw new TypeError("type mismatch in " + this + " (has: " + this.type + " needs: " + myType + ")");
	            }
	            if (!this.type || nestDiff > 0 || this.remote !== myRemote) {
	                alterations[myIndex] = new RefExpression({
	                    name: this.name,
	                    nest: this.nest + nestDiff,
	                    type: myType,
	                    remote: myRemote
	                });
	            }
	            if (myType === 'DATASET') {
	                return {
	                    parent: typeContext,
	                    type: 'DATASET',
	                    datasetType: myFullType.datasetType,
	                    remote: myFullType.remote
	                };
	            }
	            return myFullType;
	        };
	        RefExpression.prototype.incrementNesting = function (by) {
	            if (by === void 0) { by = 1; }
	            var value = this.valueOf();
	            value.nest = by + value.nest;
	            return new RefExpression(value);
	        };
	        RefExpression.prototype.maxPossibleSplitValues = function () {
	            return this.type === 'BOOLEAN' ? 3 : Infinity;
	        };
	        RefExpression.SIMPLE_NAME_REGEXP = /^([a-z_]\w*)$/i;
	        return RefExpression;
	    }(Plywood.Expression));
	    Plywood.RefExpression = RefExpression;
	    Plywood.Expression.register(RefExpression);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var ExternalExpression = (function (_super) {
	        __extends(ExternalExpression, _super);
	        function ExternalExpression(parameters) {
	            _super.call(this, parameters, dummyObject);
	            var external = parameters.external;
	            if (!external)
	                throw new Error('must have an external');
	            this.external = external;
	            this._ensureOp('external');
	            this.type = external.mode === 'value' ? 'NUMBER' : 'DATASET';
	            this.simple = true;
	        }
	        ExternalExpression.fromJS = function (parameters) {
	            var value = {
	                op: parameters.op
	            };
	            value.external = Plywood.External.fromJS(parameters.external);
	            return new ExternalExpression(value);
	        };
	        ExternalExpression.prototype.valueOf = function () {
	            var value = _super.prototype.valueOf.call(this);
	            value.external = this.external;
	            return value;
	        };
	        ExternalExpression.prototype.toJS = function () {
	            var js = _super.prototype.toJS.call(this);
	            js.external = this.external.toJS();
	            return js;
	        };
	        ExternalExpression.prototype.toString = function () {
	            return "E:" + this.external;
	        };
	        ExternalExpression.prototype.getFn = function () {
	            throw new Error('should not call getFn on External');
	        };
	        ExternalExpression.prototype.equals = function (other) {
	            return _super.prototype.equals.call(this, other) &&
	                this.external.equals(other.external);
	        };
	        ExternalExpression.prototype._fillRefSubstitutions = function (typeContext, indexer, alterations) {
	            indexer.index++;
	            var external = this.external;
	            if (external.mode === 'value') {
	                return { type: 'NUMBER' };
	            }
	            else {
	                var newTypeContext = this.external.getFullType();
	                newTypeContext.parent = typeContext;
	                return newTypeContext;
	            }
	        };
	        ExternalExpression.prototype._computeResolvedSimulate = function (lastNode, simulatedQueries) {
	            var external = this.external;
	            if (external.suppress)
	                return external;
	            simulatedQueries.push(external.getQueryAndPostProcess().query);
	            return external.simulateValue(lastNode);
	        };
	        ExternalExpression.prototype._computeResolved = function (lastNode) {
	            var external = this.external;
	            if (external.suppress)
	                return Q(external);
	            return external.queryValue(lastNode);
	        };
	        ExternalExpression.prototype.unsuppress = function () {
	            var value = this.valueOf();
	            value.external = this.external.show();
	            return new ExternalExpression(value);
	        };
	        ExternalExpression.prototype.addAction = function (action) {
	            var newExternal = this.external.addAction(action);
	            if (!newExternal)
	                return null;
	            return new ExternalExpression({ external: newExternal });
	        };
	        ExternalExpression.prototype.maxPossibleSplitValues = function () {
	            return Infinity;
	        };
	        return ExternalExpression;
	    }(Plywood.Expression));
	    Plywood.ExternalExpression = ExternalExpression;
	    Plywood.Expression.register(ExternalExpression);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var ChainExpression = (function (_super) {
	        __extends(ChainExpression, _super);
	        function ChainExpression(parameters) {
	            _super.call(this, parameters, dummyObject);
	            var expression = parameters.expression;
	            this.expression = expression;
	            var actions = parameters.actions;
	            if (!actions.length)
	                throw new Error('can not have empty actions');
	            this.actions = actions;
	            this._ensureOp('chain');
	            var type = expression.type;
	            for (var _i = 0, actions_1 = actions; _i < actions_1.length; _i++) {
	                var action = actions_1[_i];
	                type = action.getOutputType(type);
	            }
	            this.type = type;
	        }
	        ChainExpression.fromJS = function (parameters) {
	            var value = {
	                op: parameters.op
	            };
	            value.expression = Plywood.Expression.fromJS(parameters.expression);
	            if (hasOwnProperty(parameters, 'action')) {
	                value.actions = [Plywood.Action.fromJS(parameters.action)];
	            }
	            else {
	                if (!Array.isArray(parameters.actions))
	                    throw new Error('chain `actions` must be an array');
	                value.actions = parameters.actions.map(Plywood.Action.fromJS);
	            }
	            return new ChainExpression(value);
	        };
	        ChainExpression.prototype.valueOf = function () {
	            var value = _super.prototype.valueOf.call(this);
	            value.expression = this.expression;
	            value.actions = this.actions;
	            return value;
	        };
	        ChainExpression.prototype.toJS = function () {
	            var js = _super.prototype.toJS.call(this);
	            js.expression = this.expression.toJS();
	            var actions = this.actions;
	            if (actions.length === 1) {
	                js.action = actions[0].toJS();
	            }
	            else {
	                js.actions = actions.map(function (action) { return action.toJS(); });
	            }
	            return js;
	        };
	        ChainExpression.prototype.toString = function (indent) {
	            var expression = this.expression;
	            var actions = this.actions;
	            var joinStr = '.';
	            var nextIndent = null;
	            if (indent != null && (actions.length > 1 || expression.type === 'DATASET')) {
	                joinStr = '\n' + repeat(' ', indent) + joinStr;
	                nextIndent = indent + 2;
	            }
	            return [expression.toString()]
	                .concat(actions.map(function (action) { return action.toString(nextIndent); }))
	                .join(joinStr);
	        };
	        ChainExpression.prototype.equals = function (other) {
	            return _super.prototype.equals.call(this, other) &&
	                this.expression.equals(other.expression) &&
	                Plywood.immutableArraysEqual(this.actions, other.actions);
	        };
	        ChainExpression.prototype.expressionCount = function () {
	            var expressionCount = 1 + this.expression.expressionCount();
	            var actions = this.actions;
	            for (var _i = 0, actions_2 = actions; _i < actions_2.length; _i++) {
	                var action = actions_2[_i];
	                expressionCount += action.expressionCount();
	            }
	            return expressionCount;
	        };
	        ChainExpression.prototype.getFn = function () {
	            var fn = this.expression.getFn();
	            var actions = this.actions;
	            for (var _i = 0, actions_3 = actions; _i < actions_3.length; _i++) {
	                var action = actions_3[_i];
	                fn = action.getFn(fn);
	            }
	            return fn;
	        };
	        ChainExpression.prototype.getJS = function (datumVar) {
	            var expression = this.expression;
	            var actions = this.actions;
	            var js = expression.getJS(datumVar);
	            for (var _i = 0, actions_4 = actions; _i < actions_4.length; _i++) {
	                var action = actions_4[_i];
	                js = action.getJS(js, datumVar);
	            }
	            return js;
	        };
	        ChainExpression.prototype.getSQL = function (dialect) {
	            var expression = this.expression;
	            var actions = this.actions;
	            var sql = expression.getSQL(dialect);
	            for (var _i = 0, actions_5 = actions; _i < actions_5.length; _i++) {
	                var action = actions_5[_i];
	                sql = action.getSQL(sql, dialect);
	            }
	            return sql;
	        };
	        ChainExpression.prototype.getSingleAction = function (neededAction) {
	            var actions = this.actions;
	            if (actions.length !== 1)
	                return null;
	            var singleAction = actions[0];
	            if (neededAction && singleAction.action !== neededAction)
	                return null;
	            return singleAction;
	        };
	        ChainExpression.prototype.foldIntoExternal = function () {
	            var _a = this, expression = _a.expression, actions = _a.actions;
	            var baseExternals = this.getBaseExternals();
	            if (baseExternals.length === 0)
	                return this;
	            if (expression instanceof Plywood.ExternalExpression) {
	                var myExternal = expression;
	                var undigestedActions = [];
	                for (var _i = 0, actions_6 = actions; _i < actions_6.length; _i++) {
	                    var action = actions_6[_i];
	                    var newExternal = myExternal.addAction(action);
	                    if (newExternal) {
	                        myExternal = newExternal;
	                    }
	                    else {
	                        undigestedActions.push(action);
	                    }
	                }
	                if (undigestedActions.length) {
	                    return new ChainExpression({
	                        expression: myExternal,
	                        actions: undigestedActions,
	                        simple: true
	                    });
	                }
	                else {
	                    return myExternal;
	                }
	            }
	            var dataset = expression.getLiteralValue();
	            if (Plywood.Dataset.isDataset(dataset) && dataset.basis()) {
	                if (baseExternals.length > 1) {
	                    throw new Error('multiple externals not supported for now');
	                }
	                var dataDefinitions = Object.create(null);
	                var hasExternalValueApply = false;
	                var applies = [];
	                var undigestedActions = [];
	                function addExternalApply(action) {
	                    var externalMode = action.expression.external.mode;
	                    if (externalMode === 'raw') {
	                        dataDefinitions[action.name] = action.expression;
	                    }
	                    else if (externalMode === 'value') {
	                        applies.push(action);
	                        hasExternalValueApply = true;
	                    }
	                    else {
	                        undigestedActions.push(action);
	                    }
	                }
	                for (var _b = 0, actions_7 = actions; _b < actions_7.length; _b++) {
	                    var action_1 = actions_7[_b];
	                    if (action_1 instanceof Plywood.ApplyAction) {
	                        var substitutedAction = action_1.substitute(function (ex, index, depth, nestDiff) {
	                            if (ex instanceof Plywood.RefExpression && ex.type === 'DATASET' && nestDiff === 1) {
	                                return dataDefinitions[ex.name] || null;
	                            }
	                            return null;
	                        }).simplify();
	                        if (substitutedAction.expression instanceof Plywood.ExternalExpression) {
	                            addExternalApply(substitutedAction);
	                        }
	                        else if (substitutedAction.expression.type !== 'DATASET') {
	                            applies.push(substitutedAction);
	                        }
	                        else {
	                            undigestedActions.push(substitutedAction);
	                        }
	                    }
	                    else {
	                        undigestedActions.push(action_1);
	                    }
	                }
	                var newExpression;
	                if (hasExternalValueApply) {
	                    var combinedExternal = baseExternals[0].makeTotal(applies);
	                    if (!combinedExternal)
	                        throw new Error('something went wrong');
	                    newExpression = new Plywood.ExternalExpression({ external: combinedExternal });
	                }
	                else {
	                    newExpression = Plywood.ply().performActions(applies);
	                }
	                if (undigestedActions.length) {
	                    return new ChainExpression({
	                        expression: newExpression,
	                        actions: undigestedActions,
	                        simple: true
	                    });
	                }
	                else {
	                    return newExpression;
	                }
	            }
	            return this.substituteAction(function (action) {
	                var expression = action.expression;
	                return (expression instanceof Plywood.ExternalExpression) && expression.external.mode === 'value';
	            }, function (preEx, action) {
	                var external = action.expression.external;
	                return new Plywood.ExternalExpression({
	                    external: external.prePack(preEx, action)
	                });
	            }, {
	                onceInChain: true
	            }).simplify();
	        };
	        ChainExpression.prototype.simplify = function () {
	            if (this.simple)
	                return this;
	            var simpleExpression = this.expression.simplify();
	            var actions = this.actions;
	            if (simpleExpression instanceof ChainExpression) {
	                return new ChainExpression({
	                    expression: simpleExpression.expression,
	                    actions: simpleExpression.actions.concat(actions)
	                }).simplify();
	            }
	            for (var _i = 0, actions_8 = actions; _i < actions_8.length; _i++) {
	                var action = actions_8[_i];
	                simpleExpression = action.performOnSimple(simpleExpression);
	            }
	            if (!simpleExpression.isOp('chain'))
	                return simpleExpression;
	            return simpleExpression.foldIntoExternal();
	        };
	        ChainExpression.prototype._everyHelper = function (iter, thisArg, indexer, depth, nestDiff) {
	            var pass = iter.call(thisArg, this, indexer.index, depth, nestDiff);
	            if (pass != null) {
	                return pass;
	            }
	            else {
	                indexer.index++;
	            }
	            depth++;
	            var expression = this.expression;
	            if (!expression._everyHelper(iter, thisArg, indexer, depth, nestDiff))
	                return false;
	            var actions = this.actions;
	            var every = true;
	            for (var _i = 0, actions_9 = actions; _i < actions_9.length; _i++) {
	                var action = actions_9[_i];
	                if (every) {
	                    every = action._everyHelper(iter, thisArg, indexer, depth, nestDiff);
	                }
	                else {
	                    indexer.index += action.expressionCount();
	                }
	            }
	            return every;
	        };
	        ChainExpression.prototype._substituteHelper = function (substitutionFn, thisArg, indexer, depth, nestDiff) {
	            var sub = substitutionFn.call(thisArg, this, indexer.index, depth, nestDiff);
	            if (sub) {
	                indexer.index += this.expressionCount();
	                return sub;
	            }
	            else {
	                indexer.index++;
	            }
	            depth++;
	            var expression = this.expression;
	            var subExpression = expression._substituteHelper(substitutionFn, thisArg, indexer, depth, nestDiff);
	            var actions = this.actions;
	            var subActions = actions.map(function (action) { return action._substituteHelper(substitutionFn, thisArg, indexer, depth, nestDiff); });
	            if (expression === subExpression && arraysEqual(actions, subActions))
	                return this;
	            var value = this.valueOf();
	            value.expression = subExpression;
	            value.actions = subActions;
	            delete value.simple;
	            return new ChainExpression(value);
	        };
	        ChainExpression.prototype.performAction = function (action, markSimple) {
	            if (!action)
	                throw new Error('must have action');
	            return new ChainExpression({
	                expression: this.expression,
	                actions: this.actions.concat(action),
	                simple: Boolean(markSimple)
	            });
	        };
	        ChainExpression.prototype._fillRefSubstitutions = function (typeContext, indexer, alterations) {
	            indexer.index++;
	            var currentContext = typeContext;
	            var outputContext = this.expression._fillRefSubstitutions(currentContext, indexer, alterations);
	            currentContext = outputContext.type === 'DATASET' ? outputContext : typeContext;
	            var actions = this.actions;
	            for (var _i = 0, actions_10 = actions; _i < actions_10.length; _i++) {
	                var action = actions_10[_i];
	                outputContext = action._fillRefSubstitutions(currentContext, outputContext, indexer, alterations);
	                currentContext = outputContext.type === 'DATASET' ? outputContext : typeContext;
	            }
	            return outputContext;
	        };
	        ChainExpression.prototype.actionize = function (containingAction) {
	            var actions = this.actions;
	            var k = actions.length - 1;
	            for (; k >= 0; k--) {
	                if (actions[k].action !== containingAction)
	                    break;
	            }
	            k++;
	            if (k === actions.length)
	                return null;
	            var newExpression;
	            if (k === 0) {
	                newExpression = this.expression;
	            }
	            else {
	                var value = this.valueOf();
	                value.actions = actions.slice(0, k);
	                newExpression = new ChainExpression(value);
	            }
	            return [
	                new Plywood.Action.classMap[containingAction]({
	                    expression: newExpression
	                })
	            ].concat(actions.slice(k));
	        };
	        ChainExpression.prototype.firstAction = function () {
	            return this.actions[0] || null;
	        };
	        ChainExpression.prototype.lastAction = function () {
	            var actions = this.actions;
	            return actions[actions.length - 1] || null;
	        };
	        ChainExpression.prototype.headActions = function (n) {
	            var actions = this.actions;
	            if (actions.length <= n)
	                return this;
	            if (n <= 0)
	                return this.expression;
	            var value = this.valueOf();
	            value.actions = actions.slice(0, n);
	            return new ChainExpression(value);
	        };
	        ChainExpression.prototype.popAction = function () {
	            var actions = this.actions;
	            if (!actions.length)
	                return null;
	            actions = actions.slice(0, -1);
	            if (!actions.length)
	                return this.expression;
	            var value = this.valueOf();
	            value.actions = actions;
	            return new ChainExpression(value);
	        };
	        ChainExpression.prototype._computeResolvedSimulate = function (lastNode, simulatedQueries) {
	            var actions = this.actions;
	            function execAction(i, dataset) {
	                var action = actions[i];
	                var actionExpression = action.expression;
	                if (action instanceof Plywood.FilterAction) {
	                    return dataset.filter(actionExpression.getFn(), null);
	                }
	                else if (action instanceof Plywood.ApplyAction) {
	                    if (actionExpression.hasExternal()) {
	                        return dataset.apply(action.name, function (d) {
	                            var simpleExpression = actionExpression.resolve(d).simplify();
	                            return simpleExpression._computeResolvedSimulate(simpleExpression.isOp('external'), simulatedQueries);
	                        }, actionExpression.type, null);
	                    }
	                    else {
	                        return dataset.apply(action.name, actionExpression.getFn(), actionExpression.type, null);
	                    }
	                }
	                else if (action instanceof Plywood.SortAction) {
	                    return dataset.sort(actionExpression.getFn(), action.direction, null);
	                }
	                else if (action instanceof Plywood.LimitAction) {
	                    return dataset.limit(action.limit);
	                }
	                else if (action instanceof Plywood.SelectAction) {
	                    return dataset.select(action.attributes);
	                }
	                throw new Error("could not execute action " + action);
	            }
	            var value = this.expression._computeResolvedSimulate(false, simulatedQueries);
	            for (var i = 0; i < actions.length; i++) {
	                value = execAction(i, value);
	            }
	            return value;
	        };
	        ChainExpression.prototype._computeResolved = function () {
	            var actions = this.actions;
	            function execAction(i) {
	                return function (dataset) {
	                    var action = actions[i];
	                    var actionExpression = action.expression;
	                    if (action instanceof Plywood.FilterAction) {
	                        return dataset.filter(actionExpression.getFn(), null);
	                    }
	                    else if (action instanceof Plywood.ApplyAction) {
	                        if (actionExpression.hasExternal()) {
	                            return dataset.applyPromise(action.name, function (d) {
	                                var simpleExpression = actionExpression.resolve(d).simplify();
	                                return simpleExpression._computeResolved(simpleExpression.isOp('external'));
	                            }, actionExpression.type, null);
	                        }
	                        else {
	                            return dataset.apply(action.name, actionExpression.getFn(), actionExpression.type, null);
	                        }
	                    }
	                    else if (action instanceof Plywood.SortAction) {
	                        return dataset.sort(actionExpression.getFn(), action.direction, null);
	                    }
	                    else if (action instanceof Plywood.LimitAction) {
	                        return dataset.limit(action.limit);
	                    }
	                    else if (action instanceof Plywood.SelectAction) {
	                        return dataset.select(action.attributes);
	                    }
	                    throw new Error("could not execute action " + action);
	                };
	            }
	            var promise = this.expression._computeResolved(false);
	            for (var i = 0; i < actions.length; i++) {
	                promise = promise.then(execAction(i));
	            }
	            return promise;
	        };
	        ChainExpression.prototype.extractFromAnd = function (matchFn) {
	            if (!this.simple)
	                return this.simplify().extractFromAnd(matchFn);
	            var andExpressions = this.getExpressionPattern('and');
	            if (!andExpressions)
	                return _super.prototype.extractFromAnd.call(this, matchFn);
	            var includedExpressions = [];
	            var excludedExpressions = [];
	            for (var _i = 0, andExpressions_1 = andExpressions; _i < andExpressions_1.length; _i++) {
	                var ex = andExpressions_1[_i];
	                if (matchFn(ex)) {
	                    includedExpressions.push(ex);
	                }
	                else {
	                    excludedExpressions.push(ex);
	                }
	            }
	            return {
	                extract: Plywood.Expression.and(includedExpressions).simplify(),
	                rest: Plywood.Expression.and(excludedExpressions).simplify()
	            };
	        };
	        ChainExpression.prototype.maxPossibleSplitValues = function () {
	            return this.type === 'BOOLEAN' ? 3 : this.lastAction().maxPossibleSplitValues();
	        };
	        return ChainExpression;
	    }(Plywood.Expression));
	    Plywood.ChainExpression = ChainExpression;
	    Plywood.Expression.register(ChainExpression);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var checkAction;
	    var Action = (function () {
	        function Action(parameters, dummy) {
	            if (dummy === void 0) { dummy = null; }
	            if (dummy !== dummyObject) {
	                throw new TypeError("can not call `new Action` directly use Action.fromJS instead");
	            }
	            this.action = parameters.action;
	            this.expression = parameters.expression;
	            this.simple = parameters.simple;
	        }
	        Action.jsToValue = function (parameters) {
	            var value = {
	                action: parameters.action
	            };
	            if (parameters.expression) {
	                value.expression = Plywood.Expression.fromJS(parameters.expression);
	            }
	            return value;
	        };
	        Action.actionsDependOn = function (actions, name) {
	            for (var _i = 0, actions_11 = actions; _i < actions_11.length; _i++) {
	                var action = actions_11[_i];
	                var freeReferences = action.getFreeReferences();
	                if (freeReferences.indexOf(name) !== -1)
	                    return true;
	                if (action.name === name)
	                    return false;
	            }
	            return false;
	        };
	        Action.isAction = function (candidate) {
	            return Plywood.isInstanceOf(candidate, Action);
	        };
	        Action.register = function (act) {
	            var action = act.name.replace('Action', '').replace(/^\w/, function (s) { return s.toLowerCase(); });
	            Action.classMap[action] = act;
	        };
	        Action.fromJS = function (actionJS) {
	            if (!hasOwnProperty(actionJS, "action")) {
	                throw new Error("action must be defined");
	            }
	            var action = actionJS.action;
	            if (typeof action !== "string") {
	                throw new Error("action must be a string");
	            }
	            var ClassFn = Action.classMap[action];
	            if (!ClassFn) {
	                throw new Error("unsupported action '" + action + "'");
	            }
	            return ClassFn.fromJS(actionJS);
	        };
	        Action.prototype._ensureAction = function (action) {
	            if (!this.action) {
	                this.action = action;
	                return;
	            }
	            if (this.action !== action) {
	                throw new TypeError("incorrect action '" + this.action + "' (needs to be: '" + action + "')");
	            }
	        };
	        Action.prototype._toStringParameters = function (expressionString) {
	            return expressionString ? [expressionString] : [];
	        };
	        Action.prototype.toString = function (indent) {
	            var expression = this.expression;
	            var spacer = '';
	            var joinStr = indent != null ? ', ' : ',';
	            var nextIndent = null;
	            if (indent != null && expression && expression.type === 'DATASET') {
	                var space = repeat(' ', indent);
	                spacer = '\n' + space;
	                joinStr = ',\n' + space;
	                nextIndent = indent + 2;
	            }
	            return [
	                this.action,
	                '(',
	                spacer,
	                this._toStringParameters(expression ? expression.toString(nextIndent) : null).join(joinStr),
	                spacer,
	                ')'
	            ].join('');
	        };
	        Action.prototype.valueOf = function () {
	            var value = {
	                action: this.action
	            };
	            if (this.expression)
	                value.expression = this.expression;
	            if (this.simple)
	                value.simple = true;
	            return value;
	        };
	        Action.prototype.toJS = function () {
	            var js = {
	                action: this.action
	            };
	            if (this.expression) {
	                js.expression = this.expression.toJS();
	            }
	            return js;
	        };
	        Action.prototype.toJSON = function () {
	            return this.toJS();
	        };
	        Action.prototype.equals = function (other) {
	            return Action.isAction(other) &&
	                this.action === other.action &&
	                Boolean(this.expression) === Boolean(other.expression) &&
	                (!this.expression || this.expression.equals(other.expression));
	        };
	        Action.prototype.isAggregate = function () {
	            return false;
	        };
	        Action.prototype._checkInputTypes = function (inputType) {
	            var neededTypes = [];
	            for (var _i = 1; _i < arguments.length; _i++) {
	                neededTypes[_i - 1] = arguments[_i];
	            }
	            if (inputType && inputType !== 'NULL' && neededTypes.indexOf(inputType) === -1) {
	                if (neededTypes.length === 1) {
	                    throw new Error(this.action + " must have input of type " + neededTypes[0] + " (is " + inputType + ")");
	                }
	                else {
	                    throw new Error(this.action + " must have input of type " + neededTypes.join(' or ') + " (is " + inputType + ")");
	                }
	            }
	        };
	        Action.prototype._checkNoExpression = function () {
	            if (this.expression) {
	                throw new Error(this.action + " must no have an expression (is " + this.expression + ")");
	            }
	        };
	        Action.prototype._checkExpressionTypes = function () {
	            var neededTypes = [];
	            for (var _i = 0; _i < arguments.length; _i++) {
	                neededTypes[_i - 0] = arguments[_i];
	            }
	            var expressionType = this.expression.type;
	            if (expressionType && expressionType !== 'NULL' && neededTypes.indexOf(expressionType) === -1) {
	                if (neededTypes.length === 1) {
	                    throw new Error(this.action + " must have expression of type " + neededTypes[0] + " (is " + expressionType + ")");
	                }
	                else {
	                    throw new Error(this.action + " must have expression of type " + neededTypes.join(' or ') + " (is " + expressionType + ")");
	                }
	            }
	        };
	        Action.prototype.getOutputType = function (inputType) {
	            throw new Error("must implement getOutputType in " + this.action);
	        };
	        Action.prototype._stringTransformOutputType = function (inputType) {
	            this._checkInputTypes(inputType, 'STRING', 'SET/STRING');
	            return inputType;
	        };
	        Action.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	            throw new Error("must implement _fillRefSubstitutions in " + this.action);
	        };
	        Action.prototype._getFnHelper = function (inputFn, expressionFn) {
	            var action = this.action;
	            return function (d, c) {
	                var inV = inputFn(d, c);
	                return inV ? inV[action](expressionFn, Plywood.foldContext(d, c)) : null;
	            };
	        };
	        Action.prototype.getFn = function (inputFn) {
	            var expression = this.expression;
	            var expressionFn = expression ? expression.getFn() : null;
	            return this._getFnHelper(inputFn, expressionFn);
	        };
	        Action.prototype._getJSHelper = function (inputJS, expressionJS) {
	            throw new Error('can not call this directly');
	        };
	        Action.prototype.getJS = function (inputJS, datumVar) {
	            var expression = this.expression;
	            var expressionJS = expression ? expression.getJS(datumVar) : null;
	            return this._getJSHelper(inputJS, expressionJS);
	        };
	        Action.prototype._getSQLHelper = function (dialect, inputSQL, expressionSQL) {
	            throw new Error('can not call this directly');
	        };
	        Action.prototype.getSQL = function (inputSQL, dialect) {
	            var expression = this.expression;
	            var expressionSQL = expression ? expression.getSQL(dialect) : null;
	            return this._getSQLHelper(dialect, inputSQL, expressionSQL);
	        };
	        Action.prototype.expressionCount = function () {
	            return this.expression ? this.expression.expressionCount() : 0;
	        };
	        Action.prototype.fullyDefined = function () {
	            var expression = this.expression;
	            return !expression || expression.isOp('literal');
	        };
	        Action.prototype._specialSimplify = function (simpleExpression) {
	            return null;
	        };
	        Action.prototype.simplify = function () {
	            if (this.simple)
	                return this;
	            var expression = this.expression;
	            var simpleExpression = expression ? expression.simplify() : null;
	            var special = this._specialSimplify(simpleExpression);
	            if (special)
	                return special;
	            var value = this.valueOf();
	            if (simpleExpression) {
	                value.expression = simpleExpression;
	            }
	            value.simple = true;
	            return new Action.classMap[this.action](value);
	        };
	        Action.prototype._removeAction = function () {
	            return false;
	        };
	        Action.prototype._nukeExpression = function () {
	            return null;
	        };
	        Action.prototype._distributeAction = function () {
	            return null;
	        };
	        Action.prototype._performOnLiteral = function (literalExpression) {
	            return null;
	        };
	        Action.prototype._performOnRef = function (refExpression) {
	            return null;
	        };
	        Action.prototype._foldWithPrevAction = function (prevAction) {
	            return null;
	        };
	        Action.prototype._putBeforeLastAction = function (lastAction) {
	            return null;
	        };
	        Action.prototype._performOnSimpleChain = function (chainExpression) {
	            return null;
	        };
	        Action.prototype.performOnSimple = function (simpleExpression) {
	            if (!this.simple)
	                return this.simplify().performOnSimple(simpleExpression);
	            if (!simpleExpression.simple)
	                throw new Error('must get a simple expression');
	            if (this._removeAction())
	                return simpleExpression;
	            var nukedExpression = this._nukeExpression();
	            if (nukedExpression)
	                return nukedExpression;
	            var distributedActions = this._distributeAction();
	            if (distributedActions) {
	                for (var _i = 0, distributedActions_1 = distributedActions; _i < distributedActions_1.length; _i++) {
	                    var distributedAction = distributedActions_1[_i];
	                    simpleExpression = distributedAction.performOnSimple(simpleExpression);
	                }
	                return simpleExpression;
	            }
	            if (simpleExpression instanceof Plywood.LiteralExpression) {
	                if (this.fullyDefined()) {
	                    return new Plywood.LiteralExpression({
	                        value: this.getFn(simpleExpression.getFn())(null, null)
	                    });
	                }
	                var special = this._performOnLiteral(simpleExpression);
	                if (special)
	                    return special;
	            }
	            else if (simpleExpression instanceof Plywood.RefExpression) {
	                var special = this._performOnRef(simpleExpression);
	                if (special)
	                    return special;
	            }
	            else if (simpleExpression instanceof Plywood.ChainExpression) {
	                var actions = simpleExpression.actions;
	                var lastAction = actions[actions.length - 1];
	                var foldedAction = this._foldWithPrevAction(lastAction);
	                if (foldedAction) {
	                    return foldedAction.performOnSimple(simpleExpression.popAction());
	                }
	                var beforeAction = this._putBeforeLastAction(lastAction);
	                if (beforeAction) {
	                    return lastAction.performOnSimple(beforeAction.performOnSimple(simpleExpression.popAction()));
	                }
	                var special = this._performOnSimpleChain(simpleExpression);
	                if (special)
	                    return special;
	            }
	            return simpleExpression.performAction(this, true);
	        };
	        Action.prototype.getExpressions = function () {
	            return this.expression ? [this.expression] : [];
	        };
	        Action.prototype.getFreeReferences = function () {
	            var freeReferences = [];
	            this.getExpressions().forEach(function (ex) {
	                freeReferences = freeReferences.concat(ex.getFreeReferences());
	            });
	            return Plywood.helper.deduplicateSort(freeReferences);
	        };
	        Action.prototype._everyHelper = function (iter, thisArg, indexer, depth, nestDiff) {
	            var nestDiffNext = nestDiff + Number(this.isNester());
	            return this.getExpressions().every(function (ex) { return ex._everyHelper(iter, thisArg, indexer, depth, nestDiffNext); });
	        };
	        Action.prototype.substitute = function (substitutionFn, thisArg) {
	            return this._substituteHelper(substitutionFn, thisArg, { index: 0 }, 0, 0);
	        };
	        Action.prototype._substituteHelper = function (substitutionFn, thisArg, indexer, depth, nestDiff) {
	            var expression = this.expression;
	            if (!expression)
	                return this;
	            var subExpression = expression._substituteHelper(substitutionFn, thisArg, indexer, depth, nestDiff + Number(this.isNester()));
	            if (expression === subExpression)
	                return this;
	            var value = this.valueOf();
	            value.simple = false;
	            value.expression = subExpression;
	            return new (Action.classMap[this.action])(value);
	        };
	        Action.prototype.canDistribute = function () {
	            return false;
	        };
	        Action.prototype.distribute = function (preEx) {
	            return null;
	        };
	        Action.prototype.changeExpression = function (newExpression) {
	            var expression = this.expression;
	            if (!expression || expression === newExpression)
	                return this;
	            var value = this.valueOf();
	            value.expression = newExpression;
	            return new (Action.classMap[this.action])(value);
	        };
	        Action.prototype.isNester = function () {
	            return false;
	        };
	        Action.prototype.getLiteralValue = function () {
	            var expression = this.expression;
	            if (expression instanceof Plywood.LiteralExpression) {
	                return expression.value;
	            }
	            return null;
	        };
	        Action.prototype.maxPossibleSplitValues = function () {
	            return Infinity;
	        };
	        Action.prototype.needsEnvironment = function () {
	            return false;
	        };
	        Action.prototype.defineEnvironment = function (environment) {
	            return this;
	        };
	        Action.prototype.getTimezone = function () {
	            return Plywood.Timezone.UTC;
	        };
	        Action.classMap = {};
	        return Action;
	    }());
	    Plywood.Action = Action;
	    checkAction = Action;
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var AbsoluteAction = (function (_super) {
	        __extends(AbsoluteAction, _super);
	        function AbsoluteAction(parameters) {
	            _super.call(this, parameters, dummyObject);
	            this._ensureAction("absolute");
	            this._checkNoExpression();
	        }
	        AbsoluteAction.fromJS = function (parameters) {
	            return new AbsoluteAction(Plywood.Action.jsToValue(parameters));
	        };
	        AbsoluteAction.prototype.getOutputType = function (inputType) {
	            this._checkInputTypes(inputType, 'NUMBER');
	            return 'NUMBER';
	        };
	        AbsoluteAction.prototype._fillRefSubstitutions = function (typeContext, inputType) {
	            return inputType;
	        };
	        AbsoluteAction.prototype._getFnHelper = function (inputFn) {
	            return function (d, c) {
	                var inV = inputFn(d, c);
	                if (inV === null)
	                    return null;
	                return Math.abs(inV);
	            };
	        };
	        AbsoluteAction.prototype._foldWithPrevAction = function (prevAction) {
	            if (prevAction.equals(this)) {
	                return this;
	            }
	            return null;
	        };
	        AbsoluteAction.prototype._getJSHelper = function (inputJS) {
	            return "Math.abs(" + inputJS + ")";
	        };
	        AbsoluteAction.prototype._getSQLHelper = function (dialect, inputSQL, expressionSQL) {
	            return "ABS(" + inputSQL + ")";
	        };
	        return AbsoluteAction;
	    }(Plywood.Action));
	    Plywood.AbsoluteAction = AbsoluteAction;
	    Plywood.Action.register(AbsoluteAction);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var AddAction = (function (_super) {
	        __extends(AddAction, _super);
	        function AddAction(parameters) {
	            _super.call(this, parameters, dummyObject);
	            this._ensureAction("add");
	            this._checkExpressionTypes('NUMBER');
	        }
	        AddAction.fromJS = function (parameters) {
	            return new AddAction(Plywood.Action.jsToValue(parameters));
	        };
	        AddAction.prototype.getOutputType = function (inputType) {
	            this._checkInputTypes(inputType, 'NUMBER');
	            return 'NUMBER';
	        };
	        AddAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	            this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	            return inputType;
	        };
	        AddAction.prototype._getFnHelper = function (inputFn, expressionFn) {
	            return function (d, c) {
	                return (inputFn(d, c) || 0) + (expressionFn(d, c) || 0);
	            };
	        };
	        AddAction.prototype._getJSHelper = function (inputJS, expressionJS) {
	            return "(" + inputJS + "+" + expressionJS + ")";
	        };
	        AddAction.prototype._getSQLHelper = function (dialect, inputSQL, expressionSQL) {
	            return "(" + inputSQL + "+" + expressionSQL + ")";
	        };
	        AddAction.prototype._removeAction = function () {
	            return this.expression.equals(Plywood.Expression.ZERO);
	        };
	        AddAction.prototype._distributeAction = function () {
	            return this.expression.actionize(this.action);
	        };
	        AddAction.prototype._performOnLiteral = function (literalExpression) {
	            if (literalExpression.equals(Plywood.Expression.ZERO)) {
	                return this.expression;
	            }
	            return null;
	        };
	        AddAction.prototype._foldWithPrevAction = function (prevAction) {
	            if (prevAction instanceof AddAction) {
	                var prevValue = prevAction.expression.getLiteralValue();
	                var myValue = this.expression.getLiteralValue();
	                if (typeof prevValue === 'number' && typeof myValue === 'number') {
	                    return new AddAction({
	                        expression: Plywood.r(prevValue + myValue)
	                    });
	                }
	            }
	            return null;
	        };
	        return AddAction;
	    }(Plywood.Action));
	    Plywood.AddAction = AddAction;
	    Plywood.Action.register(AddAction);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var IS_OR_IN_ACTION = {
	        'is': true,
	        'in': true
	    };
	    function mergeAnd(ex1, ex2) {
	        if (!ex1.isOp('chain') ||
	            !ex2.isOp('chain') ||
	            !ex1.expression.isOp('ref') ||
	            !ex2.expression.isOp('ref') ||
	            !arraysEqual(ex1.getFreeReferences(), ex2.getFreeReferences()))
	            return null;
	        var ex1Actions = ex1.actions;
	        var ex2Actions = ex2.actions;
	        if (ex1Actions.length !== 1 || ex2Actions.length !== 1)
	            return null;
	        var ex1Action = ex1Actions[0];
	        var ex2Action = ex2Actions[0];
	        if (!IS_OR_IN_ACTION[ex1Action.action] || !IS_OR_IN_ACTION[ex2Action.action])
	            return null;
	        var firstActionExpression1 = ex1Action.expression;
	        var firstActionExpression2 = ex2Action.expression;
	        if (!firstActionExpression1 || !firstActionExpression2 || !firstActionExpression1.isOp('literal') || !firstActionExpression2.isOp('literal'))
	            return null;
	        var intersect = Plywood.Set.generalIntersect(firstActionExpression1.getLiteralValue(), firstActionExpression2.getLiteralValue());
	        if (intersect === null)
	            return null;
	        return Plywood.Expression.inOrIs(ex1.expression, intersect);
	    }
	    var AndAction = (function (_super) {
	        __extends(AndAction, _super);
	        function AndAction(parameters) {
	            _super.call(this, parameters, dummyObject);
	            this._ensureAction("and");
	        }
	        AndAction.fromJS = function (parameters) {
	            return new AndAction(Plywood.Action.jsToValue(parameters));
	        };
	        AndAction.prototype.getOutputType = function (inputType) {
	            this._checkInputTypes(inputType, 'BOOLEAN');
	            return 'BOOLEAN';
	        };
	        AndAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	            this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	            return inputType;
	        };
	        AndAction.prototype._getFnHelper = function (inputFn, expressionFn) {
	            return function (d, c) { return inputFn(d, c) && expressionFn(d, c); };
	        };
	        AndAction.prototype._getJSHelper = function (inputJS, expressionJS) {
	            return "(" + inputJS + "&&" + expressionJS + ")";
	        };
	        AndAction.prototype._getSQLHelper = function (dialect, inputSQL, expressionSQL) {
	            return "(" + inputSQL + " AND " + expressionSQL + ")";
	        };
	        AndAction.prototype._removeAction = function () {
	            return this.expression.equals(Plywood.Expression.TRUE);
	        };
	        AndAction.prototype._nukeExpression = function () {
	            if (this.expression.equals(Plywood.Expression.FALSE))
	                return Plywood.Expression.FALSE;
	            return null;
	        };
	        AndAction.prototype._distributeAction = function () {
	            return this.expression.actionize(this.action);
	        };
	        AndAction.prototype._performOnLiteral = function (literalExpression) {
	            if (literalExpression.equals(Plywood.Expression.TRUE)) {
	                return this.expression;
	            }
	            if (literalExpression.equals(Plywood.Expression.FALSE)) {
	                return Plywood.Expression.FALSE;
	            }
	            return null;
	        };
	        AndAction.prototype._performOnSimpleChain = function (chainExpression) {
	            var expression = this.expression;
	            var andExpressions = chainExpression.getExpressionPattern('and');
	            if (andExpressions) {
	                for (var i = 0; i < andExpressions.length; i++) {
	                    var andExpression = andExpressions[i];
	                    var mergedExpression = mergeAnd(andExpression, expression);
	                    if (mergedExpression) {
	                        andExpressions[i] = mergedExpression;
	                        return Plywood.Expression.and(andExpressions).simplify();
	                    }
	                }
	            }
	            return mergeAnd(chainExpression, expression);
	        };
	        return AndAction;
	    }(Plywood.Action));
	    Plywood.AndAction = AndAction;
	    Plywood.Action.register(AndAction);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var ApplyAction = (function (_super) {
	        __extends(ApplyAction, _super);
	        function ApplyAction(parameters) {
	            if (parameters === void 0) { parameters = {}; }
	            _super.call(this, parameters, dummyObject);
	            this.name = parameters.name;
	            this._ensureAction("apply");
	        }
	        ApplyAction.fromJS = function (parameters) {
	            var value = Plywood.Action.jsToValue(parameters);
	            value.name = parameters.name;
	            return new ApplyAction(value);
	        };
	        ApplyAction.prototype.valueOf = function () {
	            var value = _super.prototype.valueOf.call(this);
	            value.name = this.name;
	            return value;
	        };
	        ApplyAction.prototype.toJS = function () {
	            var js = _super.prototype.toJS.call(this);
	            js.name = this.name;
	            return js;
	        };
	        ApplyAction.prototype.getOutputType = function (inputType) {
	            this._checkInputTypes(inputType, 'DATASET');
	            return 'DATASET';
	        };
	        ApplyAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	            typeContext.datasetType[this.name] = this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	            return typeContext;
	        };
	        ApplyAction.prototype._toStringParameters = function (expressionString) {
	            var name = this.name;
	            if (!Plywood.RefExpression.SIMPLE_NAME_REGEXP.test(name))
	                name = JSON.stringify(name);
	            return [name, expressionString];
	        };
	        ApplyAction.prototype.equals = function (other) {
	            return _super.prototype.equals.call(this, other) &&
	                this.name === other.name;
	        };
	        ApplyAction.prototype._getFnHelper = function (inputFn, expressionFn) {
	            var name = this.name;
	            var type = this.expression.type;
	            return function (d, c) {
	                var inV = inputFn(d, c);
	                return inV ? inV.apply(name, expressionFn, type, Plywood.foldContext(d, c)) : null;
	            };
	        };
	        ApplyAction.prototype._getSQLHelper = function (dialect, inputSQL, expressionSQL) {
	            return expressionSQL + " AS " + dialect.escapeLiteral(this.name);
	        };
	        ApplyAction.prototype.isSimpleAggregate = function () {
	            var expression = this.expression;
	            if (expression instanceof Plywood.ChainExpression) {
	                var actions = expression.actions;
	                return actions.length === 1 && actions[0].isAggregate();
	            }
	            return false;
	        };
	        ApplyAction.prototype.isNester = function () {
	            return true;
	        };
	        ApplyAction.prototype._removeAction = function () {
	            var _a = this, name = _a.name, expression = _a.expression;
	            if (expression instanceof Plywood.RefExpression) {
	                return expression.name === name && expression.nest === 0;
	            }
	            return false;
	        };
	        ApplyAction.prototype._putBeforeLastAction = function (lastAction) {
	            if (this.isSimpleAggregate() &&
	                lastAction instanceof ApplyAction &&
	                !lastAction.isSimpleAggregate() &&
	                this.expression.getFreeReferences().indexOf(lastAction.name) === -1) {
	                return this;
	            }
	            return null;
	        };
	        return ApplyAction;
	    }(Plywood.Action));
	    Plywood.ApplyAction = ApplyAction;
	    Plywood.Action.register(ApplyAction);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var AverageAction = (function (_super) {
	        __extends(AverageAction, _super);
	        function AverageAction(parameters) {
	            _super.call(this, parameters, dummyObject);
	            this._ensureAction("average");
	            this._checkExpressionTypes('NUMBER');
	        }
	        AverageAction.fromJS = function (parameters) {
	            return new AverageAction(Plywood.Action.jsToValue(parameters));
	        };
	        AverageAction.prototype.getOutputType = function (inputType) {
	            this._checkInputTypes(inputType, 'DATASET');
	            return 'NUMBER';
	        };
	        AverageAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	            this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	            return {
	                type: 'NUMBER'
	            };
	        };
	        AverageAction.prototype._getSQLHelper = function (dialect, inputSQL, expressionSQL) {
	            return "AVG(" + dialect.aggregateFilterIfNeeded(inputSQL, expressionSQL) + ")";
	        };
	        AverageAction.prototype.isAggregate = function () {
	            return true;
	        };
	        AverageAction.prototype.isNester = function () {
	            return true;
	        };
	        return AverageAction;
	    }(Plywood.Action));
	    Plywood.AverageAction = AverageAction;
	    Plywood.Action.register(AverageAction);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var ConcatAction = (function (_super) {
	        __extends(ConcatAction, _super);
	        function ConcatAction(parameters) {
	            _super.call(this, parameters, dummyObject);
	            this._ensureAction("concat");
	            this._checkExpressionTypes('STRING');
	        }
	        ConcatAction.fromJS = function (parameters) {
	            return new ConcatAction(Plywood.Action.jsToValue(parameters));
	        };
	        ConcatAction.prototype.getOutputType = function (inputType) {
	            return this._stringTransformOutputType(inputType);
	        };
	        ConcatAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	            this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	            return inputType;
	        };
	        ConcatAction.prototype._getFnHelper = function (inputFn, expressionFn) {
	            return function (d, c) {
	                var inV = inputFn(d, c);
	                if (inV === null)
	                    return null;
	                var exV = expressionFn(d, c);
	                if (exV === null)
	                    return null;
	                return '' + inV + exV;
	            };
	        };
	        ConcatAction.prototype._getJSHelper = function (inputJS, expressionJS) {
	            return "(_1=" + inputJS + ",_2=" + expressionJS + ",(_1==null||_2==null)?null:(_1+_2))";
	        };
	        ConcatAction.prototype._getSQLHelper = function (dialect, inputSQL, expressionSQL) {
	            return "CONCAT(" + inputSQL + "," + expressionSQL + ")";
	        };
	        ConcatAction.prototype._removeAction = function () {
	            return this.expression.equals(Plywood.Expression.EMPTY_STRING);
	        };
	        ConcatAction.prototype._performOnLiteral = function (literalExpression) {
	            if (literalExpression.equals(Plywood.Expression.EMPTY_STRING)) {
	                return this.expression;
	            }
	            return null;
	        };
	        ConcatAction.prototype._foldWithPrevAction = function (prevAction) {
	            if (prevAction instanceof ConcatAction) {
	                var prevValue = prevAction.expression.getLiteralValue();
	                var myValue = this.expression.getLiteralValue();
	                if (typeof prevValue === 'string' && typeof myValue === 'string') {
	                    return new ConcatAction({
	                        expression: Plywood.r(prevValue + myValue)
	                    });
	                }
	            }
	            return null;
	        };
	        return ConcatAction;
	    }(Plywood.Action));
	    Plywood.ConcatAction = ConcatAction;
	    Plywood.Action.register(ConcatAction);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var ContainsAction = (function (_super) {
	        __extends(ContainsAction, _super);
	        function ContainsAction(parameters) {
	            _super.call(this, parameters, dummyObject);
	            var compare = parameters.compare;
	            if (!compare) {
	                compare = ContainsAction.NORMAL;
	            }
	            else if (compare !== ContainsAction.NORMAL && compare !== ContainsAction.IGNORE_CASE) {
	                throw new Error("compare must be '" + ContainsAction.NORMAL + "' or '" + ContainsAction.IGNORE_CASE + "'");
	            }
	            this.compare = compare;
	            this._ensureAction("contains");
	            this._checkExpressionTypes('STRING');
	        }
	        ContainsAction.fromJS = function (parameters) {
	            var value = Plywood.Action.jsToValue(parameters);
	            value.compare = parameters.compare;
	            return new ContainsAction(value);
	        };
	        ContainsAction.prototype.valueOf = function () {
	            var value = _super.prototype.valueOf.call(this);
	            value.compare = this.compare;
	            return value;
	        };
	        ContainsAction.prototype.toJS = function () {
	            var js = _super.prototype.toJS.call(this);
	            js.compare = this.compare;
	            return js;
	        };
	        ContainsAction.prototype.equals = function (other) {
	            return _super.prototype.equals.call(this, other) &&
	                this.compare === other.compare;
	        };
	        ContainsAction.prototype._toStringParameters = function (expressionString) {
	            return [expressionString, this.compare];
	        };
	        ContainsAction.prototype.getOutputType = function (inputType) {
	            this._checkInputTypes(inputType, 'STRING', 'SET/STRING');
	            return 'BOOLEAN';
	        };
	        ContainsAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	            this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	            return inputType;
	        };
	        ContainsAction.prototype._getFnHelper = function (inputFn, expressionFn) {
	            if (this.compare === ContainsAction.NORMAL) {
	                return function (d, c) {
	                    return String(inputFn(d, c)).indexOf(expressionFn(d, c)) > -1;
	                };
	            }
	            else {
	                return function (d, c) {
	                    return String(inputFn(d, c)).toLowerCase().indexOf(String(expressionFn(d, c)).toLowerCase()) > -1;
	                };
	            }
	        };
	        ContainsAction.prototype._getJSHelper = function (inputJS, expressionJS) {
	            if (this.compare === ContainsAction.NORMAL) {
	                return "(''+" + inputJS + ").indexOf(" + expressionJS + ")>-1";
	            }
	            else {
	                if (this.expression.isOp('literal')) {
	                    return "(''+" + inputJS + ").toLowerCase().indexOf(" + expressionJS.toLowerCase() + ")>-1";
	                }
	                else {
	                    return "(''+" + inputJS + ").toLowerCase().indexOf((''+" + expressionJS + ").toLowerCase())>-1";
	                }
	            }
	        };
	        ContainsAction.prototype._getSQLHelper = function (dialect, inputSQL, expressionSQL) {
	            if (this.compare === ContainsAction.IGNORE_CASE) {
	                expressionSQL = "LOWER(" + expressionSQL + ")";
	                inputSQL = "LOWER(" + inputSQL + ")";
	            }
	            return "LOCATE(" + expressionSQL + "," + inputSQL + ")>0";
	        };
	        ContainsAction.NORMAL = 'normal';
	        ContainsAction.IGNORE_CASE = 'ignoreCase';
	        return ContainsAction;
	    }(Plywood.Action));
	    Plywood.ContainsAction = ContainsAction;
	    Plywood.Action.register(ContainsAction);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var CountAction = (function (_super) {
	        __extends(CountAction, _super);
	        function CountAction(parameters) {
	            _super.call(this, parameters, dummyObject);
	            this._ensureAction("count");
	            this._checkNoExpression();
	        }
	        CountAction.fromJS = function (parameters) {
	            return new CountAction(Plywood.Action.jsToValue(parameters));
	        };
	        CountAction.prototype.getOutputType = function (inputType) {
	            this._checkInputTypes(inputType, 'DATASET');
	            return 'NUMBER';
	        };
	        CountAction.prototype._fillRefSubstitutions = function () {
	            return {
	                type: 'NUMBER'
	            };
	        };
	        CountAction.prototype.getFn = function (inputFn) {
	            return function (d, c) {
	                var inV = inputFn(d, c);
	                return inV ? inV.count() : 0;
	            };
	        };
	        CountAction.prototype._getSQLHelper = function (dialect, inputSQL, expressionSQL) {
	            return inputSQL.indexOf(' WHERE ') === -1 ? "COUNT(*)" : "SUM(" + dialect.aggregateFilterIfNeeded(inputSQL, '1') + ")";
	        };
	        CountAction.prototype.isAggregate = function () {
	            return true;
	        };
	        return CountAction;
	    }(Plywood.Action));
	    Plywood.CountAction = CountAction;
	    Plywood.Action.register(CountAction);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var CountDistinctAction = (function (_super) {
	        __extends(CountDistinctAction, _super);
	        function CountDistinctAction(parameters) {
	            _super.call(this, parameters, dummyObject);
	            this._ensureAction("countDistinct");
	        }
	        CountDistinctAction.fromJS = function (parameters) {
	            return new CountDistinctAction(Plywood.Action.jsToValue(parameters));
	        };
	        CountDistinctAction.prototype.getOutputType = function (inputType) {
	            this._checkInputTypes(inputType, 'DATASET');
	            return 'NUMBER';
	        };
	        CountDistinctAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	            this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	            return {
	                type: 'NUMBER'
	            };
	        };
	        CountDistinctAction.prototype._getSQLHelper = function (dialect, inputSQL, expressionSQL) {
	            return "COUNT(DISTINCT " + dialect.aggregateFilterIfNeeded(inputSQL, expressionSQL, 'NULL') + ")";
	        };
	        CountDistinctAction.prototype.isAggregate = function () {
	            return true;
	        };
	        CountDistinctAction.prototype.isNester = function () {
	            return true;
	        };
	        return CountDistinctAction;
	    }(Plywood.Action));
	    Plywood.CountDistinctAction = CountDistinctAction;
	    Plywood.Action.register(CountDistinctAction);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var CustomAction = (function (_super) {
	        __extends(CustomAction, _super);
	        function CustomAction(parameters) {
	            _super.call(this, parameters, dummyObject);
	            this.custom = parameters.custom;
	            this._ensureAction("custom");
	        }
	        CustomAction.fromJS = function (parameters) {
	            var value = Plywood.Action.jsToValue(parameters);
	            value.custom = parameters.custom;
	            return new CustomAction(value);
	        };
	        CustomAction.prototype.valueOf = function () {
	            var value = _super.prototype.valueOf.call(this);
	            value.custom = this.custom;
	            return value;
	        };
	        CustomAction.prototype.toJS = function () {
	            var js = _super.prototype.toJS.call(this);
	            js.custom = this.custom;
	            return js;
	        };
	        CustomAction.prototype.equals = function (other) {
	            return _super.prototype.equals.call(this, other) &&
	                this.custom === other.custom;
	        };
	        CustomAction.prototype._toStringParameters = function (expressionString) {
	            return [this.custom];
	        };
	        CustomAction.prototype.getOutputType = function (inputType) {
	            this._checkInputTypes(inputType, 'DATASET');
	            return 'NUMBER';
	        };
	        CustomAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	            return {
	                type: 'NUMBER'
	            };
	        };
	        CustomAction.prototype.getFn = function (inputFn) {
	            throw new Error('can not getFn on custom action');
	        };
	        CustomAction.prototype._getSQLHelper = function (dialect, inputSQL, expressionSQL) {
	            throw new Error('custom action not implemented');
	        };
	        CustomAction.prototype.isAggregate = function () {
	            return true;
	        };
	        return CustomAction;
	    }(Plywood.Action));
	    Plywood.CustomAction = CustomAction;
	    Plywood.Action.register(CustomAction);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var DivideAction = (function (_super) {
	        __extends(DivideAction, _super);
	        function DivideAction(parameters) {
	            _super.call(this, parameters, dummyObject);
	            this._ensureAction("divide");
	            this._checkExpressionTypes('NUMBER');
	        }
	        DivideAction.fromJS = function (parameters) {
	            return new DivideAction(Plywood.Action.jsToValue(parameters));
	        };
	        DivideAction.prototype.getOutputType = function (inputType) {
	            this._checkInputTypes(inputType, 'NUMBER');
	            return 'NUMBER';
	        };
	        DivideAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	            this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	            return inputType;
	        };
	        DivideAction.prototype._getFnHelper = function (inputFn, expressionFn) {
	            return function (d, c) {
	                var v = (inputFn(d, c) || 0) / (expressionFn(d, c) || 0);
	                return isNaN(v) ? null : v;
	            };
	        };
	        DivideAction.prototype._getJSHelper = function (inputJS, expressionJS) {
	            return "(" + inputJS + "/" + expressionJS + ")";
	        };
	        DivideAction.prototype._getSQLHelper = function (dialect, inputSQL, expressionSQL) {
	            return "(" + inputSQL + "/" + expressionSQL + ")";
	        };
	        DivideAction.prototype._removeAction = function () {
	            return this.expression.equals(Plywood.Expression.ONE);
	        };
	        return DivideAction;
	    }(Plywood.Action));
	    Plywood.DivideAction = DivideAction;
	    Plywood.Action.register(DivideAction);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var ExtractAction = (function (_super) {
	        __extends(ExtractAction, _super);
	        function ExtractAction(parameters) {
	            _super.call(this, parameters, dummyObject);
	            this.regexp = parameters.regexp;
	            this._ensureAction("extract");
	        }
	        ExtractAction.fromJS = function (parameters) {
	            var value = Plywood.Action.jsToValue(parameters);
	            value.regexp = parameters.regexp;
	            return new ExtractAction(value);
	        };
	        ExtractAction.prototype.valueOf = function () {
	            var value = _super.prototype.valueOf.call(this);
	            value.regexp = this.regexp;
	            return value;
	        };
	        ExtractAction.prototype.toJS = function () {
	            var js = _super.prototype.toJS.call(this);
	            js.regexp = this.regexp;
	            return js;
	        };
	        ExtractAction.prototype.equals = function (other) {
	            return _super.prototype.equals.call(this, other) &&
	                this.regexp === other.regexp;
	        };
	        ExtractAction.prototype._toStringParameters = function (expressionString) {
	            return [this.regexp];
	        };
	        ExtractAction.prototype.getOutputType = function (inputType) {
	            return this._stringTransformOutputType(inputType);
	        };
	        ExtractAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	            return inputType;
	        };
	        ExtractAction.prototype._getFnHelper = function (inputFn) {
	            var re = new RegExp(this.regexp);
	            return function (d, c) {
	                return (String(inputFn(d, c)).match(re) || [])[1] || null;
	            };
	        };
	        ExtractAction.prototype._getJSHelper = function (inputJS, expressionJS) {
	            return "((''+" + inputJS + ").match(/" + this.regexp + "/) || [])[1] || null";
	        };
	        ExtractAction.prototype._getSQLHelper = function (dialect, inputSQL, expressionSQL) {
	            if (this.regexp === '^(...)')
	                return "SUBSTR(" + inputSQL + ",1,3)";
	            throw new Error('not implemented yet');
	        };
	        return ExtractAction;
	    }(Plywood.Action));
	    Plywood.ExtractAction = ExtractAction;
	    Plywood.Action.register(ExtractAction);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var FallbackAction = (function (_super) {
	        __extends(FallbackAction, _super);
	        function FallbackAction(parameters) {
	            if (parameters === void 0) { parameters = {}; }
	            _super.call(this, parameters, dummyObject);
	            this._ensureAction("fallback");
	        }
	        FallbackAction.fromJS = function (parameters) {
	            return new FallbackAction(Plywood.Action.jsToValue(parameters));
	        };
	        FallbackAction.prototype.getOutputType = function (inputType) {
	            var expressionType = this.expression.type;
	            if (expressionType && expressionType !== 'NULL')
	                this._checkInputTypes(inputType, expressionType);
	            return expressionType;
	        };
	        FallbackAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	            this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	            return inputType;
	        };
	        FallbackAction.prototype._getFnHelper = function (inputFn, expressionFn) {
	            return function (d, c) {
	                var val = inputFn(d, c);
	                if (val === null) {
	                    return expressionFn(d, c);
	                }
	                return val;
	            };
	        };
	        FallbackAction.prototype._getJSHelper = function (inputJS, expressionJS) {
	            return "(_ = " + inputJS + ", (_ === null ? " + expressionJS + " : _))";
	        };
	        FallbackAction.prototype._getSQLHelper = function (dialect, inputSQL, expressionSQL) {
	            return "COALESCE(" + inputSQL + ", " + expressionSQL + ")";
	        };
	        FallbackAction.prototype._removeAction = function () {
	            return this.expression.equals(Plywood.Expression.NULL);
	        };
	        return FallbackAction;
	    }(Plywood.Action));
	    Plywood.FallbackAction = FallbackAction;
	    Plywood.Action.register(FallbackAction);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var FilterAction = (function (_super) {
	        __extends(FilterAction, _super);
	        function FilterAction(parameters) {
	            if (parameters === void 0) { parameters = {}; }
	            _super.call(this, parameters, dummyObject);
	            this._ensureAction("filter");
	            this._checkExpressionTypes('BOOLEAN');
	        }
	        FilterAction.fromJS = function (parameters) {
	            return new FilterAction({
	                action: parameters.action,
	                name: parameters.name,
	                expression: Plywood.Expression.fromJS(parameters.expression)
	            });
	        };
	        FilterAction.prototype.getOutputType = function (inputType) {
	            this._checkInputTypes(inputType, 'DATASET');
	            return 'DATASET';
	        };
	        FilterAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	            this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	            return inputType;
	        };
	        FilterAction.prototype._getSQLHelper = function (dialect, inputSQL, expressionSQL) {
	            return inputSQL + " WHERE " + expressionSQL;
	        };
	        FilterAction.prototype.isNester = function () {
	            return true;
	        };
	        FilterAction.prototype._foldWithPrevAction = function (prevAction) {
	            if (prevAction instanceof FilterAction) {
	                return new FilterAction({
	                    expression: prevAction.expression.and(this.expression)
	                });
	            }
	            return null;
	        };
	        FilterAction.prototype._putBeforeLastAction = function (lastAction) {
	            if (lastAction instanceof Plywood.ApplyAction) {
	                var freeReferences = this.getFreeReferences();
	                return freeReferences.indexOf(lastAction.name) === -1 ? this : null;
	            }
	            if (lastAction instanceof Plywood.SplitAction) {
	                var splits = lastAction.splits;
	                return new FilterAction({
	                    expression: this.expression.substitute(function (ex) {
	                        if (ex instanceof Plywood.RefExpression && splits[ex.name])
	                            return splits[ex.name];
	                        return null;
	                    })
	                });
	            }
	            if (lastAction instanceof Plywood.SortAction) {
	                return this;
	            }
	            return null;
	        };
	        return FilterAction;
	    }(Plywood.Action));
	    Plywood.FilterAction = FilterAction;
	    Plywood.Action.register(FilterAction);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var GreaterThanAction = (function (_super) {
	        __extends(GreaterThanAction, _super);
	        function GreaterThanAction(parameters) {
	            _super.call(this, parameters, dummyObject);
	            this._ensureAction("greaterThan");
	            this._checkExpressionTypes('NUMBER', 'TIME');
	        }
	        GreaterThanAction.fromJS = function (parameters) {
	            return new GreaterThanAction(Plywood.Action.jsToValue(parameters));
	        };
	        GreaterThanAction.prototype.getOutputType = function (inputType) {
	            var expressionType = this.expression.type;
	            if (expressionType)
	                this._checkInputTypes(inputType, expressionType);
	            return 'BOOLEAN';
	        };
	        GreaterThanAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	            this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	            return {
	                type: 'BOOLEAN'
	            };
	        };
	        GreaterThanAction.prototype._getFnHelper = function (inputFn, expressionFn) {
	            return function (d, c) {
	                return inputFn(d, c) > expressionFn(d, c);
	            };
	        };
	        GreaterThanAction.prototype._getJSHelper = function (inputJS, expressionJS) {
	            return "(" + inputJS + ">" + expressionJS + ")";
	        };
	        GreaterThanAction.prototype._getSQLHelper = function (dialect, inputSQL, expressionSQL) {
	            return "(" + inputSQL + ">" + expressionSQL + ")";
	        };
	        GreaterThanAction.prototype._specialSimplify = function (simpleExpression) {
	            var expression = this.expression;
	            if (expression instanceof Plywood.LiteralExpression) {
	                return new Plywood.InAction({
	                    expression: new Plywood.LiteralExpression({
	                        value: Plywood.Range.fromJS({ start: expression.value, end: null, bounds: '()' })
	                    })
	                });
	            }
	            return null;
	        };
	        GreaterThanAction.prototype._performOnLiteral = function (literalExpression) {
	            return (new Plywood.InAction({
	                expression: new Plywood.LiteralExpression({
	                    value: Plywood.Range.fromJS({ start: null, end: literalExpression.value, bounds: '()' })
	                })
	            })).performOnSimple(this.expression);
	        };
	        return GreaterThanAction;
	    }(Plywood.Action));
	    Plywood.GreaterThanAction = GreaterThanAction;
	    Plywood.Action.register(GreaterThanAction);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var GreaterThanOrEqualAction = (function (_super) {
	        __extends(GreaterThanOrEqualAction, _super);
	        function GreaterThanOrEqualAction(parameters) {
	            _super.call(this, parameters, dummyObject);
	            this._ensureAction("greaterThanOrEqual");
	            this._checkExpressionTypes('NUMBER', 'TIME');
	        }
	        GreaterThanOrEqualAction.fromJS = function (parameters) {
	            return new GreaterThanOrEqualAction(Plywood.Action.jsToValue(parameters));
	        };
	        GreaterThanOrEqualAction.prototype.getOutputType = function (inputType) {
	            var expressionType = this.expression.type;
	            if (expressionType)
	                this._checkInputTypes(inputType, expressionType);
	            return 'BOOLEAN';
	        };
	        GreaterThanOrEqualAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	            this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	            return {
	                type: 'BOOLEAN'
	            };
	        };
	        GreaterThanOrEqualAction.prototype._getFnHelper = function (inputFn, expressionFn) {
	            return function (d, c) {
	                return inputFn(d, c) >= expressionFn(d, c);
	            };
	        };
	        GreaterThanOrEqualAction.prototype._getJSHelper = function (inputJS, expressionJS) {
	            return "(" + inputJS + ">=" + expressionJS + ")";
	        };
	        GreaterThanOrEqualAction.prototype._getSQLHelper = function (dialect, inputSQL, expressionSQL) {
	            return "(" + inputSQL + ">=" + expressionSQL + ")";
	        };
	        GreaterThanOrEqualAction.prototype._specialSimplify = function (simpleExpression) {
	            var expression = this.expression;
	            if (expression instanceof Plywood.LiteralExpression) {
	                return new Plywood.InAction({
	                    expression: new Plywood.LiteralExpression({
	                        value: Plywood.Range.fromJS({ start: expression.value, end: null, bounds: '[)' })
	                    })
	                });
	            }
	            return null;
	        };
	        GreaterThanOrEqualAction.prototype._performOnLiteral = function (literalExpression) {
	            return (new Plywood.InAction({
	                expression: new Plywood.LiteralExpression({
	                    value: Plywood.Range.fromJS({ start: null, end: literalExpression.value, bounds: '(]' })
	                })
	            })).performOnSimple(this.expression);
	        };
	        return GreaterThanOrEqualAction;
	    }(Plywood.Action));
	    Plywood.GreaterThanOrEqualAction = GreaterThanOrEqualAction;
	    Plywood.Action.register(GreaterThanOrEqualAction);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var InAction = (function (_super) {
	        __extends(InAction, _super);
	        function InAction(parameters) {
	            _super.call(this, parameters, dummyObject);
	            this._ensureAction("in");
	        }
	        InAction.fromJS = function (parameters) {
	            return new InAction(Plywood.Action.jsToValue(parameters));
	        };
	        InAction.prototype.getOutputType = function (inputType) {
	            var expression = this.expression;
	            if (inputType) {
	                if (!((!Plywood.isSetType(inputType) && expression.canHaveType('SET')) ||
	                    (inputType === 'NUMBER' && expression.canHaveType('NUMBER_RANGE')) ||
	                    (inputType === 'TIME' && expression.canHaveType('TIME_RANGE')))) {
	                    throw new TypeError("in action has a bad type combination " + inputType + " IN " + (expression.type || '*'));
	                }
	            }
	            else {
	                if (!(expression.canHaveType('NUMBER_RANGE') || expression.canHaveType('TIME_RANGE') || expression.canHaveType('SET'))) {
	                    throw new TypeError("in action has invalid expression type " + expression.type);
	                }
	            }
	            return 'BOOLEAN';
	        };
	        InAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	            this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	            return {
	                type: 'BOOLEAN'
	            };
	        };
	        InAction.prototype._getFnHelper = function (inputFn, expressionFn) {
	            return function (d, c) {
	                var inV = inputFn(d, c);
	                var exV = expressionFn(d, c);
	                if (!exV)
	                    return null;
	                return exV.contains(inV);
	            };
	        };
	        InAction.prototype._getJSHelper = function (inputJS, expressionJS) {
	            return "(function() {throw new Error('ToDo: implement IN')})()";
	        };
	        InAction.prototype._getSQLHelper = function (dialect, inputSQL, expressionSQL) {
	            var expression = this.expression;
	            var expressionType = expression.type;
	            switch (expressionType) {
	                case 'NUMBER_RANGE':
	                    if (expression instanceof Plywood.LiteralExpression) {
	                        var numberRange = expression.value;
	                        return dialect.inExpression(inputSQL, dialect.numberToSQL(numberRange.start), dialect.numberToSQL(numberRange.end), numberRange.bounds);
	                    }
	                    throw new Error('not implemented yet');
	                case 'TIME_RANGE':
	                    if (expression instanceof Plywood.LiteralExpression) {
	                        var timeRange = expression.value;
	                        return dialect.inExpression(inputSQL, dialect.timeToSQL(timeRange.start), dialect.timeToSQL(timeRange.end), timeRange.bounds);
	                    }
	                    throw new Error('not implemented yet');
	                case 'SET/STRING':
	                case 'SET/NUMBER':
	                    return inputSQL + " IN " + expressionSQL;
	                case 'SET/NUMBER_RANGE':
	                    if (expression instanceof Plywood.LiteralExpression) {
	                        var setOfNumberRange = expression.value;
	                        return setOfNumberRange.elements.map(function (numberRange) {
	                            return dialect.inExpression(inputSQL, dialect.numberToSQL(numberRange.start), dialect.numberToSQL(numberRange.end), numberRange.bounds);
	                        }).join(' OR ');
	                    }
	                    throw new Error('not implemented yet');
	                default:
	                    throw new Error('not implemented yet');
	            }
	        };
	        InAction.prototype._nukeExpression = function () {
	            var expression = this.expression;
	            if (expression instanceof Plywood.LiteralExpression &&
	                Plywood.isSetType(expression.type) &&
	                expression.value.empty())
	                return Plywood.Expression.FALSE;
	            return null;
	        };
	        InAction.prototype._performOnSimpleWhatever = function (ex) {
	            var expression = this.expression;
	            var setValue = expression.getLiteralValue();
	            if (setValue && 'SET/' + ex.type === expression.type && setValue.size() === 1) {
	                return new Plywood.IsAction({ expression: Plywood.r(setValue.elements[0]) }).performOnSimple(ex);
	            }
	            return null;
	        };
	        InAction.prototype._performOnLiteral = function (literalExpression) {
	            return this._performOnSimpleWhatever(literalExpression);
	        };
	        InAction.prototype._performOnRef = function (refExpression) {
	            return this._performOnSimpleWhatever(refExpression);
	        };
	        InAction.prototype._performOnSimpleChain = function (chainExpression) {
	            return this._performOnSimpleWhatever(chainExpression);
	        };
	        return InAction;
	    }(Plywood.Action));
	    Plywood.InAction = InAction;
	    Plywood.Action.register(InAction);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var IsAction = (function (_super) {
	        __extends(IsAction, _super);
	        function IsAction(parameters) {
	            _super.call(this, parameters, dummyObject);
	            this._ensureAction("is");
	        }
	        IsAction.fromJS = function (parameters) {
	            return new IsAction(Plywood.Action.jsToValue(parameters));
	        };
	        IsAction.prototype.getOutputType = function (inputType) {
	            var expressionType = this.expression.type;
	            if (expressionType && expressionType !== 'NULL')
	                this._checkInputTypes(inputType, expressionType);
	            return 'BOOLEAN';
	        };
	        IsAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	            this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	            return {
	                type: 'BOOLEAN'
	            };
	        };
	        IsAction.prototype._getFnHelper = function (inputFn, expressionFn) {
	            return function (d, c) {
	                return inputFn(d, c) === expressionFn(d, c);
	            };
	        };
	        IsAction.prototype._getJSHelper = function (inputJS, expressionJS) {
	            return "(" + inputJS + "===" + expressionJS + ")";
	        };
	        IsAction.prototype._getSQLHelper = function (dialect, inputSQL, expressionSQL) {
	            return "(" + inputSQL + "<=>" + expressionSQL + ")";
	        };
	        IsAction.prototype._performOnLiteral = function (literalExpression) {
	            var expression = this.expression;
	            if (!expression.isOp('literal')) {
	                return new IsAction({ expression: literalExpression }).performOnSimple(expression);
	            }
	            return null;
	        };
	        IsAction.prototype._performOnRef = function (refExpression) {
	            if (this.expression.equals(refExpression)) {
	                return Plywood.Expression.TRUE;
	            }
	            return null;
	        };
	        IsAction.prototype._performOnSimpleChain = function (chainExpression) {
	            if (this.expression.equals(chainExpression)) {
	                return Plywood.Expression.TRUE;
	            }
	            var lastAction = chainExpression.lastAction();
	            var literalValue = this.getLiteralValue();
	            if (lastAction instanceof Plywood.TimeBucketAction && literalValue instanceof Plywood.TimeRange && lastAction.timezone) {
	                var duration = lastAction.duration;
	                var timezone = lastAction.timezone;
	                var start = literalValue.start;
	                var end = literalValue.end;
	                if (duration.isFloorable()) {
	                    if (duration.floor(start, timezone).valueOf() === start.valueOf() &&
	                        duration.shift(start, timezone, 1).valueOf() === end.valueOf()) {
	                        return new Plywood.InAction({ expression: this.expression }).performOnSimple(chainExpression.popAction());
	                    }
	                    else {
	                        return Plywood.Expression.FALSE;
	                    }
	                }
	            }
	            return null;
	        };
	        return IsAction;
	    }(Plywood.Action));
	    Plywood.IsAction = IsAction;
	    Plywood.Action.register(IsAction);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var JoinAction = (function (_super) {
	        __extends(JoinAction, _super);
	        function JoinAction(parameters) {
	            _super.call(this, parameters, dummyObject);
	            this._ensureAction("join");
	            if (!this.expression.canHaveType('DATASET'))
	                throw new TypeError('expression must be a DATASET');
	        }
	        JoinAction.fromJS = function (parameters) {
	            return new JoinAction(Plywood.Action.jsToValue(parameters));
	        };
	        JoinAction.prototype.getOutputType = function (inputType) {
	            this._checkInputTypes(inputType, 'DATASET');
	            return 'DATASET';
	        };
	        JoinAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	            var typeContextParent = typeContext.parent;
	            var expressionFullType = this.expression._fillRefSubstitutions(typeContextParent, indexer, alterations);
	            var inputDatasetType = typeContext.datasetType;
	            var expressionDatasetType = expressionFullType.datasetType;
	            var newDatasetType = Object.create(null);
	            for (var k in inputDatasetType) {
	                newDatasetType[k] = inputDatasetType[k];
	            }
	            for (var k in expressionDatasetType) {
	                var ft = expressionDatasetType[k];
	                if (hasOwnProperty(newDatasetType, k)) {
	                    if (newDatasetType[k].type !== ft.type) {
	                        throw new Error("incompatible types of joins on " + k + " between " + newDatasetType[k].type + " and " + ft.type);
	                    }
	                }
	                else {
	                    newDatasetType[k] = ft;
	                }
	            }
	            return {
	                parent: typeContextParent,
	                type: 'DATASET',
	                datasetType: newDatasetType,
	                remote: typeContext.remote || expressionFullType.remote
	            };
	        };
	        JoinAction.prototype._getFnHelper = function (inputFn, expressionFn) {
	            return function (d, c) {
	                var inV = inputFn(d, c);
	                return inV ? inV.join(expressionFn(d, c)) : inV;
	            };
	        };
	        JoinAction.prototype._getSQLHelper = function (dialect, inputSQL, expressionSQL) {
	            throw new Error('not possible');
	        };
	        return JoinAction;
	    }(Plywood.Action));
	    Plywood.JoinAction = JoinAction;
	    Plywood.Action.register(JoinAction);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var LessThanAction = (function (_super) {
	        __extends(LessThanAction, _super);
	        function LessThanAction(parameters) {
	            _super.call(this, parameters, dummyObject);
	            this._ensureAction("lessThan");
	            this._checkExpressionTypes('NUMBER', 'TIME');
	        }
	        LessThanAction.fromJS = function (parameters) {
	            return new LessThanAction(Plywood.Action.jsToValue(parameters));
	        };
	        LessThanAction.prototype.getOutputType = function (inputType) {
	            var expressionType = this.expression.type;
	            if (expressionType)
	                this._checkInputTypes(inputType, expressionType);
	            return 'BOOLEAN';
	        };
	        LessThanAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	            this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	            return {
	                type: 'BOOLEAN'
	            };
	        };
	        LessThanAction.prototype._getFnHelper = function (inputFn, expressionFn) {
	            return function (d, c) {
	                return inputFn(d, c) < expressionFn(d, c);
	            };
	        };
	        LessThanAction.prototype._getJSHelper = function (inputJS, expressionJS) {
	            return "(" + inputJS + "<" + expressionJS + ")";
	        };
	        LessThanAction.prototype._getSQLHelper = function (dialect, inputSQL, expressionSQL) {
	            return "(" + inputSQL + "<" + expressionSQL + ")";
	        };
	        LessThanAction.prototype._specialSimplify = function (simpleExpression) {
	            var expression = this.expression;
	            if (expression instanceof Plywood.LiteralExpression) {
	                return new Plywood.InAction({
	                    expression: new Plywood.LiteralExpression({
	                        value: Plywood.Range.fromJS({ start: null, end: expression.value, bounds: '()' })
	                    })
	                });
	            }
	            return null;
	        };
	        LessThanAction.prototype._performOnLiteral = function (literalExpression) {
	            return (new Plywood.InAction({
	                expression: new Plywood.LiteralExpression({
	                    value: Plywood.Range.fromJS({ start: literalExpression.value, end: null, bounds: '()' })
	                })
	            })).performOnSimple(this.expression);
	        };
	        return LessThanAction;
	    }(Plywood.Action));
	    Plywood.LessThanAction = LessThanAction;
	    Plywood.Action.register(LessThanAction);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var LessThanOrEqualAction = (function (_super) {
	        __extends(LessThanOrEqualAction, _super);
	        function LessThanOrEqualAction(parameters) {
	            _super.call(this, parameters, dummyObject);
	            this._ensureAction("lessThanOrEqual");
	            this._checkExpressionTypes('NUMBER', 'TIME');
	        }
	        LessThanOrEqualAction.fromJS = function (parameters) {
	            return new LessThanOrEqualAction(Plywood.Action.jsToValue(parameters));
	        };
	        LessThanOrEqualAction.prototype.getOutputType = function (inputType) {
	            var expressionType = this.expression.type;
	            if (expressionType)
	                this._checkInputTypes(inputType, expressionType);
	            return 'BOOLEAN';
	        };
	        LessThanOrEqualAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	            this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	            return {
	                type: 'BOOLEAN'
	            };
	        };
	        LessThanOrEqualAction.prototype._getFnHelper = function (inputFn, expressionFn) {
	            return function (d, c) {
	                return inputFn(d, c) <= expressionFn(d, c);
	            };
	        };
	        LessThanOrEqualAction.prototype._getJSHelper = function (inputJS, expressionJS) {
	            return "(" + inputJS + "<=" + expressionJS + ")";
	        };
	        LessThanOrEqualAction.prototype._getSQLHelper = function (dialect, inputSQL, expressionSQL) {
	            return "(" + inputSQL + "<=" + expressionSQL + ")";
	        };
	        LessThanOrEqualAction.prototype._specialSimplify = function (simpleExpression) {
	            var expression = this.expression;
	            if (expression instanceof Plywood.LiteralExpression) {
	                return new Plywood.InAction({
	                    expression: new Plywood.LiteralExpression({
	                        value: Plywood.Range.fromJS({ start: null, end: expression.value, bounds: '(]' })
	                    })
	                });
	            }
	            return null;
	        };
	        LessThanOrEqualAction.prototype._performOnLiteral = function (literalExpression) {
	            return (new Plywood.InAction({
	                expression: new Plywood.LiteralExpression({
	                    value: Plywood.Range.fromJS({ start: literalExpression.value, end: null, bounds: '[)' })
	                })
	            })).performOnSimple(this.expression);
	        };
	        return LessThanOrEqualAction;
	    }(Plywood.Action));
	    Plywood.LessThanOrEqualAction = LessThanOrEqualAction;
	    Plywood.Action.register(LessThanOrEqualAction);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var LookupAction = (function (_super) {
	        __extends(LookupAction, _super);
	        function LookupAction(parameters) {
	            _super.call(this, parameters, dummyObject);
	            this.lookup = parameters.lookup;
	            this._ensureAction("lookup");
	        }
	        LookupAction.fromJS = function (parameters) {
	            var value = Plywood.Action.jsToValue(parameters);
	            value.lookup = parameters.lookup;
	            return new LookupAction(value);
	        };
	        LookupAction.prototype.valueOf = function () {
	            var value = _super.prototype.valueOf.call(this);
	            value.lookup = this.lookup;
	            return value;
	        };
	        LookupAction.prototype.toJS = function () {
	            var js = _super.prototype.toJS.call(this);
	            js.lookup = this.lookup;
	            return js;
	        };
	        LookupAction.prototype.equals = function (other) {
	            return _super.prototype.equals.call(this, other) &&
	                this.lookup === other.lookup;
	        };
	        LookupAction.prototype._toStringParameters = function (expressionString) {
	            return [String(this.lookup)];
	        };
	        LookupAction.prototype.getOutputType = function (inputType) {
	            return this._stringTransformOutputType(inputType);
	        };
	        LookupAction.prototype._fillRefSubstitutions = function (typeContext, inputType) {
	            return inputType;
	        };
	        LookupAction.prototype.fullyDefined = function () {
	            return false;
	        };
	        LookupAction.prototype._getFnHelper = function (inputFn) {
	            throw new Error('can not express as JS');
	        };
	        LookupAction.prototype._getJSHelper = function (inputJS) {
	            throw new Error('can not express as JS');
	        };
	        LookupAction.prototype._getSQLHelper = function (dialect, inputSQL, expressionSQL) {
	            throw new Error('can not express as SQL');
	        };
	        return LookupAction;
	    }(Plywood.Action));
	    Plywood.LookupAction = LookupAction;
	    Plywood.Action.register(LookupAction);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var LimitAction = (function (_super) {
	        __extends(LimitAction, _super);
	        function LimitAction(parameters) {
	            if (parameters === void 0) { parameters = {}; }
	            _super.call(this, parameters, dummyObject);
	            this.limit = parameters.limit;
	            this._ensureAction("limit");
	        }
	        LimitAction.fromJS = function (parameters) {
	            return new LimitAction({
	                action: parameters.action,
	                limit: parameters.limit
	            });
	        };
	        LimitAction.prototype.valueOf = function () {
	            var value = _super.prototype.valueOf.call(this);
	            value.limit = this.limit;
	            return value;
	        };
	        LimitAction.prototype.toJS = function () {
	            var js = _super.prototype.toJS.call(this);
	            js.limit = this.limit;
	            return js;
	        };
	        LimitAction.prototype.equals = function (other) {
	            return _super.prototype.equals.call(this, other) &&
	                this.limit === other.limit;
	        };
	        LimitAction.prototype._toStringParameters = function (expressionString) {
	            return [String(this.limit)];
	        };
	        LimitAction.prototype.getOutputType = function (inputType) {
	            this._checkInputTypes(inputType, 'DATASET');
	            return 'DATASET';
	        };
	        LimitAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	            return inputType;
	        };
	        LimitAction.prototype._getFnHelper = function (inputFn, expressionFn) {
	            var limit = this.limit;
	            return function (d, c) {
	                var inV = inputFn(d, c);
	                return inV ? inV.limit(limit) : null;
	            };
	        };
	        LimitAction.prototype._getSQLHelper = function (dialect, inputSQL, expressionSQL) {
	            return "LIMIT " + this.limit;
	        };
	        LimitAction.prototype._foldWithPrevAction = function (prevAction) {
	            if (prevAction instanceof LimitAction) {
	                return new LimitAction({
	                    limit: Math.min(prevAction.limit, this.limit)
	                });
	            }
	            return null;
	        };
	        LimitAction.prototype._putBeforeLastAction = function (lastAction) {
	            if (lastAction instanceof Plywood.ApplyAction) {
	                return this;
	            }
	            return null;
	        };
	        return LimitAction;
	    }(Plywood.Action));
	    Plywood.LimitAction = LimitAction;
	    Plywood.Action.register(LimitAction);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var REGEXP_SPECIAL = "\\^$.|?*+()[{";
	    var MatchAction = (function (_super) {
	        __extends(MatchAction, _super);
	        function MatchAction(parameters) {
	            _super.call(this, parameters, dummyObject);
	            this.regexp = parameters.regexp;
	            this._ensureAction("match");
	        }
	        MatchAction.likeToRegExp = function (like, escapeChar) {
	            if (escapeChar === void 0) { escapeChar = '\\'; }
	            var regExp = ['^'];
	            for (var i = 0; i < like.length; i++) {
	                var char = like[i];
	                if (char === escapeChar) {
	                    var nextChar = like[i + 1];
	                    if (!nextChar)
	                        throw new Error("invalid LIKE string '" + like + "'");
	                    char = nextChar;
	                    i++;
	                }
	                else if (char === '%') {
	                    regExp.push('.*');
	                    continue;
	                }
	                else if (char === '_') {
	                    regExp.push('.');
	                    continue;
	                }
	                if (REGEXP_SPECIAL.indexOf(char) !== -1) {
	                    regExp.push('\\');
	                }
	                regExp.push(char);
	            }
	            regExp.push('$');
	            return regExp.join('');
	        };
	        MatchAction.fromJS = function (parameters) {
	            var value = Plywood.Action.jsToValue(parameters);
	            value.regexp = parameters.regexp;
	            return new MatchAction(value);
	        };
	        MatchAction.prototype.valueOf = function () {
	            var value = _super.prototype.valueOf.call(this);
	            value.regexp = this.regexp;
	            return value;
	        };
	        MatchAction.prototype.toJS = function () {
	            var js = _super.prototype.toJS.call(this);
	            js.regexp = this.regexp;
	            return js;
	        };
	        MatchAction.prototype.equals = function (other) {
	            return _super.prototype.equals.call(this, other) &&
	                this.regexp === other.regexp;
	        };
	        MatchAction.prototype._toStringParameters = function (expressionString) {
	            return [this.regexp];
	        };
	        MatchAction.prototype.getOutputType = function (inputType) {
	            this._checkInputTypes(inputType, 'STRING', 'SET/STRING');
	            return 'BOOLEAN';
	        };
	        MatchAction.prototype._fillRefSubstitutions = function () {
	            return {
	                type: 'BOOLEAN'
	            };
	        };
	        MatchAction.prototype._getFnHelper = function (inputFn) {
	            var re = new RegExp(this.regexp);
	            return function (d, c) {
	                var inV = inputFn(d, c);
	                if (!inV)
	                    return null;
	                if (inV === null)
	                    return null;
	                return re.test(inV);
	            };
	        };
	        MatchAction.prototype._getJSHelper = function (inputJS, expressionJS) {
	            return "/" + this.regexp + "/.test(" + inputJS + ")";
	        };
	        MatchAction.prototype._getSQLHelper = function (dialect, inputSQL, expressionSQL) {
	            return inputSQL + " REGEXP '" + this.regexp + "'";
	        };
	        return MatchAction;
	    }(Plywood.Action));
	    Plywood.MatchAction = MatchAction;
	    Plywood.Action.register(MatchAction);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var MaxAction = (function (_super) {
	        __extends(MaxAction, _super);
	        function MaxAction(parameters) {
	            _super.call(this, parameters, dummyObject);
	            this._ensureAction("max");
	            this._checkExpressionTypes('NUMBER', 'TIME');
	        }
	        MaxAction.fromJS = function (parameters) {
	            return new MaxAction(Plywood.Action.jsToValue(parameters));
	        };
	        MaxAction.prototype.getOutputType = function (inputType) {
	            this._checkInputTypes(inputType, 'DATASET');
	            return 'NUMBER';
	        };
	        MaxAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	            this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	            return {
	                type: 'NUMBER'
	            };
	        };
	        MaxAction.prototype._getSQLHelper = function (dialect, inputSQL, expressionSQL) {
	            return "MAX(" + dialect.aggregateFilterIfNeeded(inputSQL, expressionSQL) + ")";
	        };
	        MaxAction.prototype.isAggregate = function () {
	            return true;
	        };
	        MaxAction.prototype.isNester = function () {
	            return true;
	        };
	        return MaxAction;
	    }(Plywood.Action));
	    Plywood.MaxAction = MaxAction;
	    Plywood.Action.register(MaxAction);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var MinAction = (function (_super) {
	        __extends(MinAction, _super);
	        function MinAction(parameters) {
	            _super.call(this, parameters, dummyObject);
	            this._ensureAction("min");
	            this._checkExpressionTypes('NUMBER', 'TIME');
	        }
	        MinAction.fromJS = function (parameters) {
	            return new MinAction(Plywood.Action.jsToValue(parameters));
	        };
	        MinAction.prototype.getOutputType = function (inputType) {
	            this._checkInputTypes(inputType, 'DATASET');
	            return 'NUMBER';
	        };
	        MinAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	            this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	            return {
	                type: 'NUMBER'
	            };
	        };
	        MinAction.prototype._getSQLHelper = function (dialect, inputSQL, expressionSQL) {
	            return "MIN(" + dialect.aggregateFilterIfNeeded(inputSQL, expressionSQL) + ")";
	        };
	        MinAction.prototype.isAggregate = function () {
	            return true;
	        };
	        MinAction.prototype.isNester = function () {
	            return true;
	        };
	        return MinAction;
	    }(Plywood.Action));
	    Plywood.MinAction = MinAction;
	    Plywood.Action.register(MinAction);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var MultiplyAction = (function (_super) {
	        __extends(MultiplyAction, _super);
	        function MultiplyAction(parameters) {
	            _super.call(this, parameters, dummyObject);
	            this._ensureAction("multiply");
	            this._checkExpressionTypes('NUMBER');
	        }
	        MultiplyAction.fromJS = function (parameters) {
	            return new MultiplyAction(Plywood.Action.jsToValue(parameters));
	        };
	        MultiplyAction.prototype.getOutputType = function (inputType) {
	            this._checkInputTypes(inputType, 'NUMBER');
	            return 'NUMBER';
	        };
	        MultiplyAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	            this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	            return inputType;
	        };
	        MultiplyAction.prototype._getFnHelper = function (inputFn, expressionFn) {
	            return function (d, c) {
	                return (inputFn(d, c) || 0) * (expressionFn(d, c) || 0);
	            };
	        };
	        MultiplyAction.prototype._getJSHelper = function (inputJS, expressionJS) {
	            return "(" + inputJS + "*" + expressionJS + ")";
	        };
	        MultiplyAction.prototype._getSQLHelper = function (dialect, inputSQL, expressionSQL) {
	            return "(" + inputSQL + "*" + expressionSQL + ")";
	        };
	        MultiplyAction.prototype._removeAction = function () {
	            return this.expression.equals(Plywood.Expression.ONE);
	        };
	        MultiplyAction.prototype._nukeExpression = function () {
	            if (this.expression.equals(Plywood.Expression.ZERO))
	                return Plywood.Expression.ZERO;
	            return null;
	        };
	        MultiplyAction.prototype._distributeAction = function () {
	            return this.expression.actionize(this.action);
	        };
	        MultiplyAction.prototype._performOnLiteral = function (literalExpression) {
	            if (literalExpression.equals(Plywood.Expression.ONE)) {
	                return this.expression;
	            }
	            else if (literalExpression.equals(Plywood.Expression.ZERO)) {
	                return Plywood.Expression.ZERO;
	            }
	            return null;
	        };
	        return MultiplyAction;
	    }(Plywood.Action));
	    Plywood.MultiplyAction = MultiplyAction;
	    Plywood.Action.register(MultiplyAction);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var NotAction = (function (_super) {
	        __extends(NotAction, _super);
	        function NotAction(parameters) {
	            _super.call(this, parameters, dummyObject);
	            this._ensureAction("not");
	            this._checkNoExpression();
	        }
	        NotAction.fromJS = function (parameters) {
	            return new NotAction(Plywood.Action.jsToValue(parameters));
	        };
	        NotAction.prototype.getOutputType = function (inputType) {
	            this._checkInputTypes(inputType, 'BOOLEAN');
	            return 'BOOLEAN';
	        };
	        NotAction.prototype._fillRefSubstitutions = function (typeContext, inputType) {
	            return inputType;
	        };
	        NotAction.prototype._getFnHelper = function (inputFn) {
	            return function (d, c) {
	                return !inputFn(d, c);
	            };
	        };
	        NotAction.prototype._getJSHelper = function (inputJS) {
	            return "!(" + inputJS + ")";
	        };
	        NotAction.prototype._getSQLHelper = function (dialect, inputSQL, expressionSQL) {
	            return "NOT(" + inputSQL + ")";
	        };
	        NotAction.prototype._foldWithPrevAction = function (prevAction) {
	            if (prevAction instanceof NotAction) {
	                return new Plywood.AndAction({ expression: Plywood.Expression.TRUE });
	            }
	            return null;
	        };
	        return NotAction;
	    }(Plywood.Action));
	    Plywood.NotAction = NotAction;
	    Plywood.Action.register(NotAction);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var NumberBucketAction = (function (_super) {
	        __extends(NumberBucketAction, _super);
	        function NumberBucketAction(parameters) {
	            _super.call(this, parameters, dummyObject);
	            var size = parameters.size;
	            this.size = size;
	            var offset = parameters.offset;
	            this.offset = offset;
	            var lowerLimit = parameters.lowerLimit;
	            this.lowerLimit = lowerLimit;
	            var upperLimit = parameters.upperLimit;
	            this.upperLimit = upperLimit;
	            this._ensureAction("numberBucket");
	            if (lowerLimit !== null && upperLimit !== null && upperLimit - lowerLimit < size) {
	                throw new Error('lowerLimit and upperLimit must be at least size apart');
	            }
	        }
	        NumberBucketAction.fromJS = function (parameters) {
	            var value = Plywood.Action.jsToValue(parameters);
	            value.size = parameters.size;
	            value.offset = hasOwnProperty(parameters, 'offset') ? parameters.offset : 0;
	            value.lowerLimit = hasOwnProperty(parameters, 'lowerLimit') ? parameters.lowerLimit : null;
	            value.upperLimit = hasOwnProperty(parameters, 'upperLimit') ? parameters.upperLimit : null;
	            return new NumberBucketAction(value);
	        };
	        NumberBucketAction.prototype.valueOf = function () {
	            var value = _super.prototype.valueOf.call(this);
	            value.size = this.size;
	            value.offset = this.offset;
	            value.lowerLimit = this.lowerLimit;
	            value.upperLimit = this.upperLimit;
	            return value;
	        };
	        NumberBucketAction.prototype.toJS = function () {
	            var js = _super.prototype.toJS.call(this);
	            js.size = this.size;
	            if (this.offset)
	                js.offset = this.offset;
	            if (this.lowerLimit !== null)
	                js.lowerLimit = this.lowerLimit;
	            if (this.upperLimit !== null)
	                js.upperLimit = this.upperLimit;
	            return js;
	        };
	        NumberBucketAction.prototype.equals = function (other) {
	            return _super.prototype.equals.call(this, other) &&
	                this.size === other.size &&
	                this.offset === other.offset &&
	                this.lowerLimit === other.lowerLimit &&
	                this.upperLimit === other.upperLimit;
	        };
	        NumberBucketAction.prototype._toStringParameters = function (expressionString) {
	            var params = [String(this.size)];
	            if (this.offset)
	                params.push(String(this.offset));
	            return params;
	        };
	        NumberBucketAction.prototype.getOutputType = function (inputType) {
	            this._checkInputTypes(inputType, 'NUMBER', 'NUMBER_RANGE');
	            return 'NUMBER_RANGE';
	        };
	        NumberBucketAction.prototype._fillRefSubstitutions = function () {
	            return {
	                type: 'NUMBER_RANGE'
	            };
	        };
	        NumberBucketAction.prototype._getFnHelper = function (inputFn) {
	            var size = this.size;
	            var offset = this.offset;
	            var lowerLimit = this.lowerLimit;
	            var upperLimit = this.upperLimit;
	            return function (d, c) {
	                var num = inputFn(d, c);
	                if (num === null)
	                    return null;
	                return Plywood.NumberRange.numberBucket(num, size, offset);
	            };
	        };
	        NumberBucketAction.prototype._getJSHelper = function (inputJS) {
	            return Plywood.continuousFloorExpression(inputJS, "Math.floor", this.size, this.offset);
	        };
	        NumberBucketAction.prototype._getSQLHelper = function (dialect, inputSQL, expressionSQL) {
	            return Plywood.continuousFloorExpression(inputSQL, "FLOOR", this.size, this.offset);
	        };
	        return NumberBucketAction;
	    }(Plywood.Action));
	    Plywood.NumberBucketAction = NumberBucketAction;
	    Plywood.Action.register(NumberBucketAction);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    function mergeOr(ex1, ex2) {
	        if (!ex1.isOp('chain') ||
	            !ex2.isOp('chain') ||
	            !ex1.expression.isOp('ref') ||
	            !ex2.expression.isOp('ref') ||
	            !arraysEqual(ex1.getFreeReferences(), ex2.getFreeReferences()))
	            return null;
	        var ex1Actions = ex1.actions;
	        var ex2Actions = ex2.actions;
	        if (ex1Actions.length !== 1 || ex2Actions.length !== 1)
	            return null;
	        var firstActionExpression1 = ex1Actions[0].expression;
	        var firstActionExpression2 = ex2Actions[0].expression;
	        if (!firstActionExpression1.isOp('literal') || !firstActionExpression2.isOp('literal'))
	            return null;
	        var intersect = Plywood.Set.generalUnion(firstActionExpression1.getLiteralValue(), firstActionExpression2.getLiteralValue());
	        if (intersect === null)
	            return null;
	        return Plywood.Expression.inOrIs(ex1.expression, intersect);
	    }
	    var OrAction = (function (_super) {
	        __extends(OrAction, _super);
	        function OrAction(parameters) {
	            _super.call(this, parameters, dummyObject);
	            this._ensureAction("or");
	        }
	        OrAction.fromJS = function (parameters) {
	            return new OrAction(Plywood.Action.jsToValue(parameters));
	        };
	        OrAction.prototype.getOutputType = function (inputType) {
	            this._checkInputTypes(inputType, 'BOOLEAN');
	            return 'BOOLEAN';
	        };
	        OrAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	            this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	            return inputType;
	        };
	        OrAction.prototype._getFnHelper = function (inputFn, expressionFn) {
	            return function (d, c) {
	                return inputFn(d, c) || expressionFn(d, c);
	            };
	        };
	        OrAction.prototype._getJSHelper = function (inputJS, expressionJS) {
	            return "(" + inputJS + "||" + expressionJS + ")";
	        };
	        OrAction.prototype._getSQLHelper = function (dialect, inputSQL, expressionSQL) {
	            return "(" + inputSQL + " OR " + expressionSQL + ")";
	        };
	        OrAction.prototype._removeAction = function () {
	            return this.expression.equals(Plywood.Expression.FALSE);
	        };
	        OrAction.prototype._nukeExpression = function () {
	            if (this.expression.equals(Plywood.Expression.TRUE))
	                return Plywood.Expression.TRUE;
	            return null;
	        };
	        OrAction.prototype._distributeAction = function () {
	            return this.expression.actionize(this.action);
	        };
	        OrAction.prototype._performOnLiteral = function (literalExpression) {
	            if (literalExpression.equals(Plywood.Expression.FALSE)) {
	                return this.expression;
	            }
	            if (literalExpression.equals(Plywood.Expression.TRUE)) {
	                return Plywood.Expression.TRUE;
	            }
	            return null;
	        };
	        OrAction.prototype._performOnSimpleChain = function (chainExpression) {
	            var expression = this.expression;
	            var orExpressions = chainExpression.getExpressionPattern('or');
	            if (orExpressions) {
	                for (var i = 0; i < orExpressions.length; i++) {
	                    var orExpression = orExpressions[i];
	                    var mergedExpression = mergeOr(orExpression, expression);
	                    if (mergedExpression) {
	                        orExpressions[i] = mergedExpression;
	                        return Plywood.Expression.or(orExpressions).simplify();
	                    }
	                }
	            }
	            return mergeOr(chainExpression, expression);
	        };
	        return OrAction;
	    }(Plywood.Action));
	    Plywood.OrAction = OrAction;
	    Plywood.Action.register(OrAction);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var OverlapAction = (function (_super) {
	        __extends(OverlapAction, _super);
	        function OverlapAction(parameters) {
	            _super.call(this, parameters, dummyObject);
	            this._ensureAction("overlap");
	            if (!this.expression.canHaveType('SET')) {
	                throw new Error(this.action + " must have an expression of type SET (is: " + this.expression.type + ")");
	            }
	        }
	        OverlapAction.fromJS = function (parameters) {
	            return new OverlapAction(Plywood.Action.jsToValue(parameters));
	        };
	        OverlapAction.prototype.getOutputType = function (inputType) {
	            var expressionType = this.expression.type;
	            if (expressionType && expressionType !== 'NULL' && expressionType !== 'SET/NULL' && inputType && inputType !== 'NULL') {
	                var setInputType = Plywood.wrapSetType(inputType);
	                var setExpressionType = Plywood.wrapSetType(expressionType);
	                if (setInputType !== setExpressionType) {
	                    throw new Error("type mismatch in overlap action: " + inputType + " is incompatible with " + expressionType);
	                }
	            }
	            return 'BOOLEAN';
	        };
	        OverlapAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	            this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	            return {
	                type: 'BOOLEAN'
	            };
	        };
	        OverlapAction.prototype._getFnHelper = function (inputFn, expressionFn) {
	            return function (d, c) {
	                var inV = inputFn(d, c);
	                var exV = expressionFn(d, c);
	                if (inV == null || exV == null)
	                    return null;
	                return Plywood.Set.isSet(inV) ? inV.overlap(exV) : exV.contains(inV);
	            };
	        };
	        OverlapAction.prototype._nukeExpression = function () {
	            if (this.expression.equals(Plywood.Expression.EMPTY_SET))
	                return Plywood.Expression.FALSE;
	            return null;
	        };
	        OverlapAction.prototype._performOnSimpleWhatever = function (ex) {
	            var expression = this.expression;
	            if ('SET/' + ex.type === expression.type) {
	                return new Plywood.InAction({ expression: expression }).performOnSimple(ex);
	            }
	            return null;
	        };
	        OverlapAction.prototype._performOnLiteral = function (literalExpression) {
	            var expression = this.expression;
	            if (!expression.isOp('literal'))
	                return new OverlapAction({ expression: literalExpression }).performOnSimple(expression);
	            return this._performOnSimpleWhatever(literalExpression);
	        };
	        OverlapAction.prototype._performOnRef = function (refExpression) {
	            return this._performOnSimpleWhatever(refExpression);
	        };
	        OverlapAction.prototype._performOnSimpleChain = function (chainExpression) {
	            return this._performOnSimpleWhatever(chainExpression);
	        };
	        return OverlapAction;
	    }(Plywood.Action));
	    Plywood.OverlapAction = OverlapAction;
	    Plywood.Action.register(OverlapAction);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var PowerAction = (function (_super) {
	        __extends(PowerAction, _super);
	        function PowerAction(parameters) {
	            _super.call(this, parameters, dummyObject);
	            this._ensureAction("power");
	            this._checkExpressionTypes('NUMBER');
	        }
	        PowerAction.fromJS = function (parameters) {
	            return new PowerAction(Plywood.Action.jsToValue(parameters));
	        };
	        PowerAction.prototype.getOutputType = function (inputType) {
	            this._checkInputTypes(inputType, 'NUMBER');
	            return 'NUMBER';
	        };
	        PowerAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	            this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	            return inputType;
	        };
	        PowerAction.prototype._getFnHelper = function (inputFn, expressionFn) {
	            return function (d, c) {
	                return Math.pow((inputFn(d, c) || 0), (expressionFn(d, c) || 0));
	            };
	        };
	        PowerAction.prototype._getJSHelper = function (inputJS, expressionJS) {
	            return "Math.pow(" + inputJS + "," + expressionJS + ")";
	        };
	        PowerAction.prototype._getSQLHelper = function (dialect, inputSQL, expressionSQL) {
	            return "POW(" + inputSQL + "," + expressionSQL + ")";
	        };
	        PowerAction.prototype._removeAction = function () {
	            return this.expression.equals(Plywood.Expression.ONE);
	        };
	        PowerAction.prototype._performOnRef = function (simpleExpression) {
	            if (this.expression.equals(Plywood.Expression.ZERO))
	                return simpleExpression;
	            return null;
	        };
	        return PowerAction;
	    }(Plywood.Action));
	    Plywood.PowerAction = PowerAction;
	    Plywood.Action.register(PowerAction);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var QuantileAction = (function (_super) {
	        __extends(QuantileAction, _super);
	        function QuantileAction(parameters) {
	            _super.call(this, parameters, dummyObject);
	            this.quantile = parameters.quantile;
	            this._ensureAction("quantile");
	            this._checkExpressionTypes('NUMBER');
	        }
	        QuantileAction.fromJS = function (parameters) {
	            var value = Plywood.Action.jsToValue(parameters);
	            value.quantile = parameters.quantile;
	            return new QuantileAction(value);
	        };
	        QuantileAction.prototype.valueOf = function () {
	            var value = _super.prototype.valueOf.call(this);
	            value.quantile = this.quantile;
	            return value;
	        };
	        QuantileAction.prototype.toJS = function () {
	            var js = _super.prototype.toJS.call(this);
	            js.quantile = this.quantile;
	            return js;
	        };
	        QuantileAction.prototype.equals = function (other) {
	            return _super.prototype.equals.call(this, other) &&
	                this.quantile === other.quantile;
	        };
	        QuantileAction.prototype._toStringParameters = function (expressionString) {
	            return [expressionString, String(this.quantile)];
	        };
	        QuantileAction.prototype.getOutputType = function (inputType) {
	            this._checkInputTypes(inputType, 'DATASET');
	            return 'NUMBER';
	        };
	        QuantileAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	            this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	            return {
	                type: 'NUMBER'
	            };
	        };
	        QuantileAction.prototype._getFnHelper = function (inputFn, expressionFn) {
	            var quantile = this.quantile;
	            return function (d, c) {
	                var inV = inputFn(d, c);
	                return inV ? inV.quantile(expressionFn, quantile, Plywood.foldContext(d, c)) : null;
	            };
	        };
	        QuantileAction.prototype.isAggregate = function () {
	            return true;
	        };
	        QuantileAction.prototype.isNester = function () {
	            return true;
	        };
	        return QuantileAction;
	    }(Plywood.Action));
	    Plywood.QuantileAction = QuantileAction;
	    Plywood.Action.register(QuantileAction);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var SelectAction = (function (_super) {
	        __extends(SelectAction, _super);
	        function SelectAction(parameters) {
	            if (parameters === void 0) { parameters = {}; }
	            _super.call(this, parameters, dummyObject);
	            this.attributes = parameters.attributes;
	            this._ensureAction("select");
	        }
	        SelectAction.fromJS = function (parameters) {
	            return new SelectAction({
	                action: parameters.action,
	                attributes: parameters.attributes
	            });
	        };
	        SelectAction.prototype.valueOf = function () {
	            var value = _super.prototype.valueOf.call(this);
	            value.attributes = this.attributes;
	            return value;
	        };
	        SelectAction.prototype.toJS = function () {
	            var js = _super.prototype.toJS.call(this);
	            js.attributes = this.attributes;
	            return js;
	        };
	        SelectAction.prototype.equals = function (other) {
	            return _super.prototype.equals.call(this, other) &&
	                String(this.attributes) === String(other.attributes);
	        };
	        SelectAction.prototype._toStringParameters = function (expressionString) {
	            return this.attributes;
	        };
	        SelectAction.prototype.getOutputType = function (inputType) {
	            this._checkInputTypes(inputType, 'DATASET');
	            return 'DATASET';
	        };
	        SelectAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	            var attributes = this.attributes;
	            var datasetType = typeContext.datasetType;
	            var newDatasetType = Object.create(null);
	            for (var attr in datasetType) {
	                if (attributes.indexOf(attr) === -1)
	                    continue;
	                newDatasetType[attr] = datasetType[attr];
	            }
	            typeContext.datasetType = newDatasetType;
	            return typeContext;
	        };
	        SelectAction.prototype._getFnHelper = function (inputFn, expressionFn) {
	            var attributes = this.attributes;
	            return function (d, c) {
	                var inV = inputFn(d, c);
	                return inV ? inV.select(attributes) : null;
	            };
	        };
	        SelectAction.prototype._getSQLHelper = function (dialect, inputSQL, expressionSQL) {
	            throw new Error('can not be expressed as SQL directly');
	        };
	        SelectAction.prototype._foldWithPrevAction = function (prevAction) {
	            var attributes = this.attributes;
	            if (prevAction instanceof SelectAction) {
	                return new SelectAction({
	                    attributes: prevAction.attributes.filter(function (a) { return attributes.indexOf(a) !== -1; })
	                });
	            }
	            else if (prevAction instanceof Plywood.ApplyAction) {
	                if (attributes.indexOf(prevAction.name) === -1) {
	                    return this;
	                }
	            }
	            return null;
	        };
	        return SelectAction;
	    }(Plywood.Action));
	    Plywood.SelectAction = SelectAction;
	    Plywood.Action.register(SelectAction);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var SortAction = (function (_super) {
	        __extends(SortAction, _super);
	        function SortAction(parameters) {
	            if (parameters === void 0) { parameters = {}; }
	            _super.call(this, parameters, dummyObject);
	            var direction = parameters.direction || 'ascending';
	            if (direction !== SortAction.DESCENDING && direction !== SortAction.ASCENDING) {
	                throw new Error("direction must be '" + SortAction.DESCENDING + "' or '" + SortAction.ASCENDING + "'");
	            }
	            this.direction = direction;
	            if (!this.expression.isOp('ref')) {
	                throw new Error("must be a reference expression: " + this.expression);
	            }
	            this._ensureAction("sort");
	        }
	        SortAction.fromJS = function (parameters) {
	            var value = Plywood.Action.jsToValue(parameters);
	            value.direction = parameters.direction;
	            return new SortAction(value);
	        };
	        SortAction.prototype.valueOf = function () {
	            var value = _super.prototype.valueOf.call(this);
	            value.direction = this.direction;
	            return value;
	        };
	        SortAction.prototype.toJS = function () {
	            var js = _super.prototype.toJS.call(this);
	            js.direction = this.direction;
	            return js;
	        };
	        SortAction.prototype.equals = function (other) {
	            return _super.prototype.equals.call(this, other) &&
	                this.direction === other.direction;
	        };
	        SortAction.prototype._toStringParameters = function (expressionString) {
	            return [expressionString, this.direction];
	        };
	        SortAction.prototype.getOutputType = function (inputType) {
	            this._checkInputTypes(inputType, 'DATASET');
	            return 'DATASET';
	        };
	        SortAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	            this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	            return typeContext;
	        };
	        SortAction.prototype._getFnHelper = function (inputFn, expressionFn) {
	            var direction = this.direction;
	            return function (d, c) {
	                var inV = inputFn(d, c);
	                return inV ? inV.sort(expressionFn, direction) : null;
	            };
	        };
	        SortAction.prototype._getSQLHelper = function (dialect, inputSQL, expressionSQL) {
	            var dir = this.direction === SortAction.DESCENDING ? 'DESC' : 'ASC';
	            return "ORDER BY " + expressionSQL + " " + dir;
	        };
	        SortAction.prototype.refName = function () {
	            var expression = this.expression;
	            return (expression instanceof Plywood.RefExpression) ? expression.name : null;
	        };
	        SortAction.prototype.isNester = function () {
	            return true;
	        };
	        SortAction.prototype._foldWithPrevAction = function (prevAction) {
	            if (prevAction instanceof SortAction && this.expression.equals(prevAction.expression)) {
	                return this;
	            }
	            return null;
	        };
	        SortAction.prototype.toggleDirection = function () {
	            return new SortAction({
	                expression: this.expression,
	                direction: this.direction === SortAction.ASCENDING ? SortAction.DESCENDING : SortAction.ASCENDING
	            });
	        };
	        SortAction.DESCENDING = 'descending';
	        SortAction.ASCENDING = 'ascending';
	        return SortAction;
	    }(Plywood.Action));
	    Plywood.SortAction = SortAction;
	    Plywood.Action.register(SortAction);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var SplitAction = (function (_super) {
	        __extends(SplitAction, _super);
	        function SplitAction(parameters) {
	            _super.call(this, parameters, dummyObject);
	            var splits = parameters.splits;
	            if (!splits)
	                throw new Error('must have splits');
	            this.splits = splits;
	            this.keys = Object.keys(splits).sort();
	            if (!this.keys.length)
	                throw new Error('must have at least one split');
	            this.dataName = parameters.dataName;
	            this._ensureAction("split");
	        }
	        SplitAction.fromJS = function (parameters) {
	            var value = {
	                action: parameters.action
	            };
	            var splits;
	            if (parameters.expression && parameters.name) {
	                splits = (_a = {}, _a[parameters.name] = parameters.expression, _a);
	            }
	            else {
	                splits = parameters.splits;
	            }
	            value.splits = Plywood.helper.expressionLookupFromJS(splits);
	            value.dataName = parameters.dataName;
	            return new SplitAction(value);
	            var _a;
	        };
	        SplitAction.prototype.valueOf = function () {
	            var value = _super.prototype.valueOf.call(this);
	            value.splits = this.splits;
	            value.dataName = this.dataName;
	            return value;
	        };
	        SplitAction.prototype.toJS = function () {
	            var splits = this.splits;
	            var js = _super.prototype.toJS.call(this);
	            if (this.isMultiSplit()) {
	                js.splits = Plywood.helper.expressionLookupToJS(splits);
	            }
	            else {
	                for (var name in splits) {
	                    js.name = name;
	                    js.expression = splits[name].toJS();
	                }
	            }
	            js.dataName = this.dataName;
	            return js;
	        };
	        SplitAction.prototype.equals = function (other) {
	            return _super.prototype.equals.call(this, other) &&
	                Plywood.immutableLookupsEqual(this.splits, other.splits) &&
	                this.dataName === other.dataName;
	        };
	        SplitAction.prototype._toStringParameters = function (expressionString) {
	            if (this.isMultiSplit()) {
	                var splits = this.splits;
	                var splitStrings = [];
	                for (var name in splits) {
	                    splitStrings.push(name + ": " + splits[name]);
	                }
	                return [splitStrings.join(', '), this.dataName];
	            }
	            else {
	                return [this.firstSplitExpression().toString(), this.firstSplitName(), this.dataName];
	            }
	        };
	        SplitAction.prototype.getOutputType = function (inputType) {
	            this._checkInputTypes(inputType, 'DATASET');
	            return 'DATASET';
	        };
	        SplitAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	            var newDatasetType = {};
	            this.mapSplits(function (name, expression) {
	                newDatasetType[name] = expression._fillRefSubstitutions(typeContext, indexer, alterations);
	            });
	            newDatasetType[this.dataName] = typeContext;
	            return {
	                parent: typeContext.parent,
	                type: 'DATASET',
	                datasetType: newDatasetType,
	                remote: false
	            };
	        };
	        SplitAction.prototype.getFn = function (inputFn) {
	            var dataName = this.dataName;
	            var splitFns = this.mapSplitExpressions(function (ex) { return ex.getFn(); });
	            return function (d, c) {
	                var inV = inputFn(d, c);
	                return inV ? inV.split(splitFns, dataName) : null;
	            };
	        };
	        SplitAction.prototype.getSQL = function (inputSQL, dialect) {
	            var groupBys = this.mapSplits(function (name, expression) { return expression.getSQL(dialect); });
	            return "GROUP BY " + groupBys.join(', ');
	        };
	        SplitAction.prototype.getSelectSQL = function (dialect) {
	            return this.mapSplits(function (name, expression) { return (expression.getSQL(dialect) + " AS " + dialect.escapeLiteral(name)); });
	        };
	        SplitAction.prototype.getShortGroupBySQL = function () {
	            return 'GROUP BY ' + Object.keys(this.splits).map(function (d, i) { return i + 1; }).join(', ');
	        };
	        SplitAction.prototype.expressionCount = function () {
	            var count = 0;
	            this.mapSplits(function (k, expression) {
	                count += expression.expressionCount();
	            });
	            return count;
	        };
	        SplitAction.prototype.fullyDefined = function () {
	            return false;
	        };
	        SplitAction.prototype.simplify = function () {
	            if (this.simple)
	                return this;
	            var simpleSplits = this.mapSplitExpressions(function (ex) { return ex.simplify(); });
	            var value = this.valueOf();
	            value.splits = simpleSplits;
	            value.simple = true;
	            return new SplitAction(value);
	        };
	        SplitAction.prototype.getExpressions = function () {
	            return this.mapSplits(function (name, ex) { return ex; });
	        };
	        SplitAction.prototype._substituteHelper = function (substitutionFn, thisArg, indexer, depth, nestDiff) {
	            var nestDiffNext = nestDiff + 1;
	            var hasChanged = false;
	            var subSplits = this.mapSplitExpressions(function (ex) {
	                var subExpression = ex._substituteHelper(substitutionFn, thisArg, indexer, depth, nestDiffNext);
	                if (subExpression !== ex)
	                    hasChanged = true;
	                return subExpression;
	            });
	            if (!hasChanged)
	                return this;
	            var value = this.valueOf();
	            value.splits = subSplits;
	            return new SplitAction(value);
	        };
	        SplitAction.prototype.isNester = function () {
	            return true;
	        };
	        SplitAction.prototype.numSplits = function () {
	            return this.keys.length;
	        };
	        SplitAction.prototype.isMultiSplit = function () {
	            return this.numSplits() > 1;
	        };
	        SplitAction.prototype.mapSplits = function (fn) {
	            var _a = this, splits = _a.splits, keys = _a.keys;
	            var res = [];
	            for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {
	                var k = keys_2[_i];
	                var v = fn(k, splits[k]);
	                if (typeof v !== 'undefined')
	                    res.push(v);
	            }
	            return res;
	        };
	        SplitAction.prototype.mapSplitExpressions = function (fn) {
	            var _a = this, splits = _a.splits, keys = _a.keys;
	            var ret = Object.create(null);
	            for (var _i = 0, keys_3 = keys; _i < keys_3.length; _i++) {
	                var key = keys_3[_i];
	                ret[key] = fn(splits[key], key);
	            }
	            return ret;
	        };
	        SplitAction.prototype.transformExpressions = function (fn) {
	            var _a = this, splits = _a.splits, keys = _a.keys;
	            var newSplits = Object.create(null);
	            var changed = false;
	            for (var _i = 0, keys_4 = keys; _i < keys_4.length; _i++) {
	                var key = keys_4[_i];
	                var ex = splits[key];
	                var transformed = fn(ex, key);
	                if (transformed !== ex)
	                    changed = true;
	                newSplits[key] = transformed;
	            }
	            if (!changed)
	                return this;
	            var value = this.valueOf();
	            value.splits = newSplits;
	            return new SplitAction(value);
	        };
	        SplitAction.prototype.firstSplitName = function () {
	            return this.keys[0];
	        };
	        SplitAction.prototype.firstSplitExpression = function () {
	            return this.splits[this.firstSplitName()];
	        };
	        SplitAction.prototype.filterFromDatum = function (datum) {
	            return Plywood.Expression.and(this.mapSplits(function (name, expression) {
	                if (Plywood.isSetType(expression.type)) {
	                    return Plywood.r(datum[name]).in(expression);
	                }
	                else {
	                    return expression.is(Plywood.r(datum[name]));
	                }
	            })).simplify();
	        };
	        SplitAction.prototype.hasKey = function (key) {
	            return hasOwnProperty(this.splits, key);
	        };
	        SplitAction.prototype.maxBucketNumber = function () {
	            var _a = this, splits = _a.splits, keys = _a.keys;
	            var num = 1;
	            for (var _i = 0, keys_5 = keys; _i < keys_5.length; _i++) {
	                var key = keys_5[_i];
	                num *= splits[key].maxPossibleSplitValues();
	            }
	            return num;
	        };
	        SplitAction.prototype.isAggregate = function () {
	            return true;
	        };
	        return SplitAction;
	    }(Plywood.Action));
	    Plywood.SplitAction = SplitAction;
	    Plywood.Action.register(SplitAction);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var SubstrAction = (function (_super) {
	        __extends(SubstrAction, _super);
	        function SubstrAction(parameters) {
	            _super.call(this, parameters, dummyObject);
	            this.position = parameters.position;
	            this.length = parameters.length;
	            this._ensureAction("substr");
	        }
	        SubstrAction.fromJS = function (parameters) {
	            var value = Plywood.Action.jsToValue(parameters);
	            value.position = parameters.position;
	            value.length = parameters.length;
	            return new SubstrAction(value);
	        };
	        SubstrAction.prototype.valueOf = function () {
	            var value = _super.prototype.valueOf.call(this);
	            value.position = this.position;
	            value.length = this.length;
	            return value;
	        };
	        SubstrAction.prototype.toJS = function () {
	            var js = _super.prototype.toJS.call(this);
	            js.position = this.position;
	            js.length = this.length;
	            return js;
	        };
	        SubstrAction.prototype.equals = function (other) {
	            return _super.prototype.equals.call(this, other) &&
	                this.position === other.position &&
	                this.length === other.length;
	        };
	        SubstrAction.prototype._toStringParameters = function (expressionString) {
	            return [String(this.position), String(this.length)];
	        };
	        SubstrAction.prototype.getOutputType = function (inputType) {
	            return this._stringTransformOutputType(inputType);
	        };
	        SubstrAction.prototype._fillRefSubstitutions = function (typeContext, inputType) {
	            return inputType;
	        };
	        SubstrAction.prototype._getFnHelper = function (inputFn) {
	            var _a = this, position = _a.position, length = _a.length;
	            return function (d, c) {
	                var inV = inputFn(d, c);
	                if (inV === null)
	                    return null;
	                return inV.substr(position, length);
	            };
	        };
	        SubstrAction.prototype._getJSHelper = function (inputJS) {
	            var _a = this, position = _a.position, length = _a.length;
	            return "(_=" + inputJS + ",_==null?null:(''+_).substr(" + position + "," + length + "))";
	        };
	        SubstrAction.prototype._getSQLHelper = function (dialect, inputSQL, expressionSQL) {
	            return "SUBSTR(" + inputSQL + "," + (this.position + 1) + "," + this.length + ")";
	        };
	        return SubstrAction;
	    }(Plywood.Action));
	    Plywood.SubstrAction = SubstrAction;
	    Plywood.Action.register(SubstrAction);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var SubtractAction = (function (_super) {
	        __extends(SubtractAction, _super);
	        function SubtractAction(parameters) {
	            _super.call(this, parameters, dummyObject);
	            this._ensureAction("subtract");
	            this._checkExpressionTypes('NUMBER');
	        }
	        SubtractAction.fromJS = function (parameters) {
	            return new SubtractAction(Plywood.Action.jsToValue(parameters));
	        };
	        SubtractAction.prototype.getOutputType = function (inputType) {
	            this._checkInputTypes(inputType, 'NUMBER');
	            return 'NUMBER';
	        };
	        SubtractAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	            this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	            return inputType;
	        };
	        SubtractAction.prototype._getFnHelper = function (inputFn, expressionFn) {
	            return function (d, c) {
	                return (inputFn(d, c) || 0) - (expressionFn(d, c) || 0);
	            };
	        };
	        SubtractAction.prototype._getJSHelper = function (inputJS, expressionJS) {
	            return "(" + inputJS + "-" + expressionJS + ")";
	        };
	        SubtractAction.prototype._getSQLHelper = function (dialect, inputSQL, expressionSQL) {
	            return "(" + inputSQL + "-" + expressionSQL + ")";
	        };
	        SubtractAction.prototype._removeAction = function () {
	            return this.expression.equals(Plywood.Expression.ZERO);
	        };
	        return SubtractAction;
	    }(Plywood.Action));
	    Plywood.SubtractAction = SubtractAction;
	    Plywood.Action.register(SubtractAction);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var SumAction = (function (_super) {
	        __extends(SumAction, _super);
	        function SumAction(parameters) {
	            _super.call(this, parameters, dummyObject);
	            this._ensureAction("sum");
	            this._checkExpressionTypes('NUMBER');
	        }
	        SumAction.fromJS = function (parameters) {
	            return new SumAction(Plywood.Action.jsToValue(parameters));
	        };
	        SumAction.prototype.getOutputType = function (inputType) {
	            this._checkInputTypes(inputType, 'DATASET');
	            return 'NUMBER';
	        };
	        SumAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	            this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	            return {
	                type: 'NUMBER'
	            };
	        };
	        SumAction.prototype._getSQLHelper = function (dialect, inputSQL, expressionSQL) {
	            return "SUM(" + dialect.aggregateFilterIfNeeded(inputSQL, expressionSQL) + ")";
	        };
	        SumAction.prototype.isAggregate = function () {
	            return true;
	        };
	        SumAction.prototype.isNester = function () {
	            return true;
	        };
	        SumAction.prototype.canDistribute = function () {
	            var expression = this.expression;
	            return expression instanceof Plywood.LiteralExpression ||
	                Boolean(expression.getExpressionPattern('add') || expression.getExpressionPattern('subtract'));
	        };
	        SumAction.prototype.distribute = function (preEx) {
	            var expression = this.expression;
	            if (expression instanceof Plywood.LiteralExpression) {
	                var value = expression.value;
	                if (value === 0)
	                    return Plywood.Expression.ZERO;
	                return expression.multiply(preEx.count());
	            }
	            var pattern;
	            if (pattern = expression.getExpressionPattern('add')) {
	                return Plywood.Expression.add(pattern.map(function (ex) { return preEx.sum(ex).distribute(); }));
	            }
	            if (pattern = expression.getExpressionPattern('subtract')) {
	                return Plywood.Expression.subtract(pattern.map(function (ex) { return preEx.sum(ex).distribute(); }));
	            }
	            return null;
	        };
	        return SumAction;
	    }(Plywood.Action));
	    Plywood.SumAction = SumAction;
	    Plywood.Action.register(SumAction);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var TimeBucketAction = (function (_super) {
	        __extends(TimeBucketAction, _super);
	        function TimeBucketAction(parameters) {
	            _super.call(this, parameters, dummyObject);
	            this.duration = parameters.duration;
	            this.timezone = parameters.timezone;
	            this._ensureAction("timeBucket");
	            if (!Plywood.Duration.isDuration(this.duration)) {
	                throw new Error("`duration` must be a Duration");
	            }
	        }
	        TimeBucketAction.fromJS = function (parameters) {
	            var value = Plywood.Action.jsToValue(parameters);
	            value.duration = Plywood.Duration.fromJS(parameters.duration);
	            if (parameters.timezone)
	                value.timezone = Plywood.Timezone.fromJS(parameters.timezone);
	            return new TimeBucketAction(value);
	        };
	        TimeBucketAction.prototype.valueOf = function () {
	            var value = _super.prototype.valueOf.call(this);
	            value.duration = this.duration;
	            if (this.timezone)
	                value.timezone = this.timezone;
	            return value;
	        };
	        TimeBucketAction.prototype.toJS = function () {
	            var js = _super.prototype.toJS.call(this);
	            js.duration = this.duration.toJS();
	            if (this.timezone)
	                js.timezone = this.timezone.toJS();
	            return js;
	        };
	        TimeBucketAction.prototype.equals = function (other) {
	            return _super.prototype.equals.call(this, other) &&
	                this.duration.equals(other.duration) &&
	                Plywood.immutableEqual(this.timezone, other.timezone);
	        };
	        TimeBucketAction.prototype._toStringParameters = function (expressionString) {
	            var ret = [this.duration.toString()];
	            if (this.timezone)
	                ret.push(this.timezone.toString());
	            return ret;
	        };
	        TimeBucketAction.prototype.getOutputType = function (inputType) {
	            this._checkInputTypes(inputType, 'TIME', 'TIME_RANGE');
	            return 'TIME_RANGE';
	        };
	        TimeBucketAction.prototype._fillRefSubstitutions = function () {
	            return {
	                type: 'TIME_RANGE'
	            };
	        };
	        TimeBucketAction.prototype._getFnHelper = function (inputFn) {
	            var duration = this.duration;
	            var timezone = this.getTimezone();
	            return function (d, c) {
	                var inV = inputFn(d, c);
	                if (inV === null)
	                    return null;
	                return Plywood.TimeRange.timeBucket(inV, duration, timezone);
	            };
	        };
	        TimeBucketAction.prototype._getJSHelper = function (inputJS) {
	            throw new Error("implement me");
	        };
	        TimeBucketAction.prototype._getSQLHelper = function (dialect, inputSQL, expressionSQL) {
	            return dialect.timeBucketExpression(inputSQL, this.duration, this.getTimezone());
	        };
	        TimeBucketAction.prototype.needsEnvironment = function () {
	            return !this.timezone;
	        };
	        TimeBucketAction.prototype.defineEnvironment = function (environment) {
	            if (this.timezone || !environment.timezone)
	                return this;
	            var value = this.valueOf();
	            value.timezone = environment.timezone;
	            return new TimeBucketAction(value);
	        };
	        TimeBucketAction.prototype.getTimezone = function () {
	            return this.timezone || Plywood.Timezone.UTC;
	        };
	        return TimeBucketAction;
	    }(Plywood.Action));
	    Plywood.TimeBucketAction = TimeBucketAction;
	    Plywood.Action.register(TimeBucketAction);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var TimeFloorAction = (function (_super) {
	        __extends(TimeFloorAction, _super);
	        function TimeFloorAction(parameters) {
	            _super.call(this, parameters, dummyObject);
	            this.duration = parameters.duration;
	            this.timezone = parameters.timezone;
	            this._ensureAction("timeFloor");
	            if (!Plywood.Duration.isDuration(this.duration)) {
	                throw new Error("`duration` must be a Duration");
	            }
	        }
	        TimeFloorAction.fromJS = function (parameters) {
	            var value = Plywood.Action.jsToValue(parameters);
	            value.duration = Plywood.Duration.fromJS(parameters.duration);
	            if (parameters.timezone)
	                value.timezone = Plywood.Timezone.fromJS(parameters.timezone);
	            return new TimeFloorAction(value);
	        };
	        TimeFloorAction.prototype.valueOf = function () {
	            var value = _super.prototype.valueOf.call(this);
	            value.duration = this.duration;
	            if (this.timezone)
	                value.timezone = this.timezone;
	            return value;
	        };
	        TimeFloorAction.prototype.toJS = function () {
	            var js = _super.prototype.toJS.call(this);
	            js.duration = this.duration.toJS();
	            if (this.timezone)
	                js.timezone = this.timezone.toJS();
	            return js;
	        };
	        TimeFloorAction.prototype.equals = function (other) {
	            return _super.prototype.equals.call(this, other) &&
	                this.duration.equals(other.duration) &&
	                Plywood.immutableEqual(this.timezone, other.timezone);
	        };
	        TimeFloorAction.prototype._toStringParameters = function (expressionString) {
	            var ret = [this.duration.toString()];
	            if (this.timezone)
	                ret.push(this.timezone.toString());
	            return ret;
	        };
	        TimeFloorAction.prototype.getOutputType = function (inputType) {
	            this._checkInputTypes(inputType, 'TIME');
	            return 'TIME';
	        };
	        TimeFloorAction.prototype._fillRefSubstitutions = function () {
	            return {
	                type: 'TIME'
	            };
	        };
	        TimeFloorAction.prototype._getFnHelper = function (inputFn) {
	            var duration = this.duration;
	            var timezone = this.getTimezone();
	            return function (d, c) {
	                var inV = inputFn(d, c);
	                if (inV === null)
	                    return null;
	                return duration.floor(inV, timezone);
	            };
	        };
	        TimeFloorAction.prototype._getJSHelper = function (inputJS) {
	            throw new Error("implement me");
	        };
	        TimeFloorAction.prototype._getSQLHelper = function (dialect, inputSQL, expressionSQL) {
	            return dialect.timeFloorExpression(inputSQL, this.duration, this.getTimezone());
	        };
	        TimeFloorAction.prototype._foldWithPrevAction = function (prevAction) {
	            if (prevAction.equals(this)) {
	                return this;
	            }
	            return null;
	        };
	        TimeFloorAction.prototype.needsEnvironment = function () {
	            return !this.timezone;
	        };
	        TimeFloorAction.prototype.defineEnvironment = function (environment) {
	            if (this.timezone || !environment.timezone)
	                return this;
	            var value = this.valueOf();
	            value.timezone = environment.timezone;
	            return new TimeFloorAction(value);
	        };
	        TimeFloorAction.prototype.getTimezone = function () {
	            return this.timezone || Plywood.Timezone.UTC;
	        };
	        return TimeFloorAction;
	    }(Plywood.Action));
	    Plywood.TimeFloorAction = TimeFloorAction;
	    Plywood.Action.register(TimeFloorAction);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var PART_TO_FUNCTION = {
	        SECOND_OF_MINUTE: function (d) { return d.getSeconds(); },
	        SECOND_OF_HOUR: function (d) { return d.getMinutes() * 60 + d.getSeconds(); },
	        SECOND_OF_DAY: function (d) { return (d.getHours() * 60 + d.getMinutes()) * 60 + d.getSeconds(); },
	        SECOND_OF_WEEK: function (d) { return ((d.getDay() * 24) + d.getHours() * 60 + d.getMinutes()) * 60 + d.getSeconds(); },
	        SECOND_OF_MONTH: function (d) { return (((d.getDate() - 1) * 24) + d.getHours() * 60 + d.getMinutes()) * 60 + d.getSeconds(); },
	        SECOND_OF_YEAR: null,
	        MINUTE_OF_HOUR: function (d) { return d.getMinutes(); },
	        MINUTE_OF_DAY: function (d) { return d.getHours() * 60 + d.getMinutes(); },
	        MINUTE_OF_WEEK: function (d) { return (d.getDay() * 24) + d.getHours() * 60 + d.getMinutes(); },
	        MINUTE_OF_MONTH: function (d) { return ((d.getDate() - 1) * 24) + d.getHours() * 60 + d.getMinutes(); },
	        MINUTE_OF_YEAR: null,
	        HOUR_OF_DAY: function (d) { return d.getHours(); },
	        HOUR_OF_WEEK: function (d) { return d.getDay() * 24 + d.getHours(); },
	        HOUR_OF_MONTH: function (d) { return (d.getDate() - 1) * 24 + d.getHours(); },
	        HOUR_OF_YEAR: null,
	        DAY_OF_WEEK: function (d) { return d.getDay() || 7; },
	        DAY_OF_MONTH: function (d) { return d.getDate(); },
	        DAY_OF_YEAR: null,
	        WEEK_OF_MONTH: null,
	        WEEK_OF_YEAR: null,
	        MONTH_OF_YEAR: function (d) { return d.getMonth(); },
	        YEAR: function (d) { return d.getFullYear(); }
	    };
	    var PART_TO_MAX_VALUES = {
	        SECOND_OF_MINUTE: 61,
	        SECOND_OF_HOUR: 3601,
	        SECOND_OF_DAY: 93601,
	        SECOND_OF_WEEK: null,
	        SECOND_OF_MONTH: null,
	        SECOND_OF_YEAR: null,
	        MINUTE_OF_HOUR: 60,
	        MINUTE_OF_DAY: 26 * 60,
	        MINUTE_OF_WEEK: null,
	        MINUTE_OF_MONTH: null,
	        MINUTE_OF_YEAR: null,
	        HOUR_OF_DAY: 26,
	        HOUR_OF_WEEK: null,
	        HOUR_OF_MONTH: null,
	        HOUR_OF_YEAR: null,
	        DAY_OF_WEEK: 7,
	        DAY_OF_MONTH: 31,
	        DAY_OF_YEAR: 366,
	        WEEK_OF_MONTH: 5,
	        WEEK_OF_YEAR: 53,
	        MONTH_OF_YEAR: 12,
	        YEAR: null
	    };
	    var TimePartAction = (function (_super) {
	        __extends(TimePartAction, _super);
	        function TimePartAction(parameters) {
	            _super.call(this, parameters, dummyObject);
	            this.part = parameters.part;
	            this.timezone = parameters.timezone;
	            this._ensureAction("timePart");
	            if (typeof this.part !== 'string') {
	                throw new Error("`part` must be a string");
	            }
	        }
	        TimePartAction.fromJS = function (parameters) {
	            var value = Plywood.Action.jsToValue(parameters);
	            value.part = parameters.part;
	            if (parameters.timezone)
	                value.timezone = Plywood.Timezone.fromJS(parameters.timezone);
	            return new TimePartAction(value);
	        };
	        TimePartAction.prototype.valueOf = function () {
	            var value = _super.prototype.valueOf.call(this);
	            value.part = this.part;
	            if (this.timezone)
	                value.timezone = this.timezone;
	            return value;
	        };
	        TimePartAction.prototype.toJS = function () {
	            var js = _super.prototype.toJS.call(this);
	            js.part = this.part;
	            if (this.timezone)
	                js.timezone = this.timezone.toJS();
	            return js;
	        };
	        TimePartAction.prototype.equals = function (other) {
	            return _super.prototype.equals.call(this, other) &&
	                this.part === other.part &&
	                Plywood.immutableEqual(this.timezone, other.timezone);
	        };
	        TimePartAction.prototype._toStringParameters = function (expressionString) {
	            var ret = [this.part];
	            if (this.timezone)
	                ret.push(this.timezone.toString());
	            return ret;
	        };
	        TimePartAction.prototype.getOutputType = function (inputType) {
	            this._checkInputTypes(inputType, 'TIME');
	            return 'NUMBER';
	        };
	        TimePartAction.prototype._fillRefSubstitutions = function () {
	            return {
	                type: 'NUMBER'
	            };
	        };
	        TimePartAction.prototype._getFnHelper = function (inputFn) {
	            var part = this.part;
	            var timezone = this.getTimezone();
	            var parter = PART_TO_FUNCTION[part];
	            if (!parter)
	                throw new Error("unsupported part '" + part + "'");
	            return function (d, c) {
	                var inV = inputFn(d, c);
	                if (!inV)
	                    return null;
	                inV = Plywood.WallTime.UTCToWallTime(inV, timezone.toString());
	                return parter(inV);
	            };
	        };
	        TimePartAction.prototype._getJSHelper = function (inputJS) {
	            throw new Error("implement me");
	        };
	        TimePartAction.prototype._getSQLHelper = function (dialect, inputSQL, expressionSQL) {
	            return dialect.timePartExpression(inputSQL, this.part, this.getTimezone());
	        };
	        TimePartAction.prototype.maxPossibleSplitValues = function () {
	            var maxValue = PART_TO_MAX_VALUES[this.part];
	            if (!maxValue)
	                return Infinity;
	            return maxValue + 1;
	        };
	        TimePartAction.prototype.needsEnvironment = function () {
	            return !this.timezone;
	        };
	        TimePartAction.prototype.defineEnvironment = function (environment) {
	            if (this.timezone || !environment.timezone)
	                return this;
	            var value = this.valueOf();
	            value.timezone = environment.timezone;
	            return new TimePartAction(value);
	        };
	        TimePartAction.prototype.getTimezone = function () {
	            return this.timezone || Plywood.Timezone.UTC;
	        };
	        return TimePartAction;
	    }(Plywood.Action));
	    Plywood.TimePartAction = TimePartAction;
	    Plywood.Action.register(TimePartAction);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var TimeRangeAction = (function (_super) {
	        __extends(TimeRangeAction, _super);
	        function TimeRangeAction(parameters) {
	            _super.call(this, parameters, dummyObject);
	            this.duration = parameters.duration;
	            this.step = parameters.step || TimeRangeAction.DEFAULT_STEP;
	            this.timezone = parameters.timezone;
	            this._ensureAction("timeRange");
	            if (!Plywood.Duration.isDuration(this.duration)) {
	                throw new Error("`duration` must be a Duration");
	            }
	        }
	        TimeRangeAction.fromJS = function (parameters) {
	            var value = Plywood.Action.jsToValue(parameters);
	            value.duration = Plywood.Duration.fromJS(parameters.duration);
	            value.step = parameters.step;
	            if (parameters.timezone)
	                value.timezone = Plywood.Timezone.fromJS(parameters.timezone);
	            return new TimeRangeAction(value);
	        };
	        TimeRangeAction.prototype.valueOf = function () {
	            var value = _super.prototype.valueOf.call(this);
	            value.duration = this.duration;
	            value.step = this.step;
	            if (this.timezone)
	                value.timezone = this.timezone;
	            return value;
	        };
	        TimeRangeAction.prototype.toJS = function () {
	            var js = _super.prototype.toJS.call(this);
	            js.duration = this.duration.toJS();
	            js.step = this.step;
	            if (this.timezone)
	                js.timezone = this.timezone.toJS();
	            return js;
	        };
	        TimeRangeAction.prototype.equals = function (other) {
	            return _super.prototype.equals.call(this, other) &&
	                this.duration.equals(other.duration) &&
	                this.step === other.step &&
	                Plywood.immutableEqual(this.timezone, other.timezone);
	        };
	        TimeRangeAction.prototype._toStringParameters = function (expressionString) {
	            var ret = [this.duration.toString(), this.step.toString()];
	            if (this.timezone)
	                ret.push(this.timezone.toString());
	            return ret;
	        };
	        TimeRangeAction.prototype.getOutputType = function (inputType) {
	            this._checkInputTypes(inputType, 'TIME');
	            return 'TIME_RANGE';
	        };
	        TimeRangeAction.prototype._fillRefSubstitutions = function () {
	            return {
	                type: 'TIME_RANGE'
	            };
	        };
	        TimeRangeAction.prototype._getFnHelper = function (inputFn) {
	            var duration = this.duration;
	            var step = this.step;
	            var timezone = this.getTimezone();
	            return function (d, c) {
	                var inV = inputFn(d, c);
	                if (inV === null)
	                    return null;
	                var other = duration.shift(inV, timezone, step);
	                if (step > 0) {
	                    return new Plywood.TimeRange({ start: inV, end: other });
	                }
	                else {
	                    return new Plywood.TimeRange({ start: other, end: inV });
	                }
	            };
	        };
	        TimeRangeAction.prototype._getJSHelper = function (inputJS) {
	            throw new Error("implement me");
	        };
	        TimeRangeAction.prototype._getSQLHelper = function (dialect, inputSQL, expressionSQL) {
	            throw new Error("implement me");
	        };
	        TimeRangeAction.prototype.needsEnvironment = function () {
	            return !this.timezone;
	        };
	        TimeRangeAction.prototype.defineEnvironment = function (environment) {
	            if (this.timezone || !environment.timezone)
	                return this;
	            var value = this.valueOf();
	            value.timezone = environment.timezone;
	            return new TimeRangeAction(value);
	        };
	        TimeRangeAction.prototype.getTimezone = function () {
	            return this.timezone || Plywood.Timezone.UTC;
	        };
	        TimeRangeAction.DEFAULT_STEP = 1;
	        return TimeRangeAction;
	    }(Plywood.Action));
	    Plywood.TimeRangeAction = TimeRangeAction;
	    Plywood.Action.register(TimeRangeAction);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var TimeShiftAction = (function (_super) {
	        __extends(TimeShiftAction, _super);
	        function TimeShiftAction(parameters) {
	            _super.call(this, parameters, dummyObject);
	            this.duration = parameters.duration;
	            this.step = parameters.step || TimeShiftAction.DEFAULT_STEP;
	            this.timezone = parameters.timezone;
	            this._ensureAction("timeShift");
	            if (!Plywood.Duration.isDuration(this.duration)) {
	                throw new Error("`duration` must be a Duration");
	            }
	        }
	        TimeShiftAction.fromJS = function (parameters) {
	            var value = Plywood.Action.jsToValue(parameters);
	            value.duration = Plywood.Duration.fromJS(parameters.duration);
	            value.step = parameters.step;
	            if (parameters.timezone)
	                value.timezone = Plywood.Timezone.fromJS(parameters.timezone);
	            return new TimeShiftAction(value);
	        };
	        TimeShiftAction.prototype.valueOf = function () {
	            var value = _super.prototype.valueOf.call(this);
	            value.duration = this.duration;
	            value.step = this.step;
	            if (this.timezone)
	                value.timezone = this.timezone;
	            return value;
	        };
	        TimeShiftAction.prototype.toJS = function () {
	            var js = _super.prototype.toJS.call(this);
	            js.duration = this.duration.toJS();
	            js.step = this.step;
	            if (this.timezone)
	                js.timezone = this.timezone.toJS();
	            return js;
	        };
	        TimeShiftAction.prototype.equals = function (other) {
	            return _super.prototype.equals.call(this, other) &&
	                this.duration.equals(other.duration) &&
	                this.step === other.step &&
	                Plywood.immutableEqual(this.timezone, other.timezone);
	        };
	        TimeShiftAction.prototype._toStringParameters = function (expressionString) {
	            var ret = [this.duration.toString(), this.step.toString()];
	            if (this.timezone)
	                ret.push(this.timezone.toString());
	            return ret;
	        };
	        TimeShiftAction.prototype.getOutputType = function (inputType) {
	            this._checkInputTypes(inputType, 'TIME');
	            return 'TIME';
	        };
	        TimeShiftAction.prototype._fillRefSubstitutions = function () {
	            return {
	                type: 'TIME'
	            };
	        };
	        TimeShiftAction.prototype._getFnHelper = function (inputFn) {
	            var duration = this.duration;
	            var step = this.step;
	            var timezone = this.getTimezone();
	            return function (d, c) {
	                var inV = inputFn(d, c);
	                if (inV === null)
	                    return null;
	                return duration.shift(inV, timezone, step);
	            };
	        };
	        TimeShiftAction.prototype._getJSHelper = function (inputJS) {
	            throw new Error("implement me");
	        };
	        TimeShiftAction.prototype._getSQLHelper = function (dialect, inputSQL, expressionSQL) {
	            return dialect.timeShiftExpression(inputSQL, this.duration, this.getTimezone());
	        };
	        TimeShiftAction.prototype._foldWithPrevAction = function (prevAction) {
	            if (prevAction instanceof TimeShiftAction) {
	                if (this.duration.equals(prevAction.duration) &&
	                    Boolean(this.timezone) === Boolean(prevAction.timezone) &&
	                    (!this.timezone || this.timezone.equals(prevAction.timezone))) {
	                    var value = this.valueOf();
	                    value.step += prevAction.step;
	                    return new TimeShiftAction(value);
	                }
	            }
	            return null;
	        };
	        TimeShiftAction.prototype.needsEnvironment = function () {
	            return !this.timezone;
	        };
	        TimeShiftAction.prototype.defineEnvironment = function (environment) {
	            if (this.timezone || !environment.timezone)
	                return this;
	            var value = this.valueOf();
	            value.timezone = environment.timezone;
	            return new TimeShiftAction(value);
	        };
	        TimeShiftAction.prototype.getTimezone = function () {
	            return this.timezone || Plywood.Timezone.UTC;
	        };
	        TimeShiftAction.DEFAULT_STEP = 1;
	        return TimeShiftAction;
	    }(Plywood.Action));
	    Plywood.TimeShiftAction = TimeShiftAction;
	    Plywood.Action.register(TimeShiftAction);
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    function basicExecutorFactory(parameters) {
	        var datasets = parameters.datasets;
	        return function (ex) {
	            return ex.compute(datasets);
	        };
	    }
	    Plywood.basicExecutorFactory = basicExecutorFactory;
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var helper;
	    (function (helper) {
	        var integerRegExp = /^\d+$/;
	        function simpleLocator(parameters) {
	            if (typeof parameters === "string")
	                parameters = { resource: parameters };
	            var resource = parameters.resource;
	            var defaultPort = parameters.defaultPort;
	            if (!resource)
	                throw new Error("must have resource");
	            var locations = resource.split(";").map(function (locationString) {
	                var parts = locationString.split(":");
	                if (parts.length > 2)
	                    throw new Error("invalid resource part '" + locationString + "'");
	                var location = {
	                    hostname: parts[0]
	                };
	                if (parts.length === 2) {
	                    if (!integerRegExp.test(parts[1])) {
	                        throw new Error("invalid port in resource '" + parts[1] + "'");
	                    }
	                    location.port = Number(parts[1]);
	                }
	                else if (defaultPort) {
	                    location.port = defaultPort;
	                }
	                return location;
	            });
	            return function () { return Q(locations[Math.floor(Math.random() * locations.length)]); };
	        }
	        helper.simpleLocator = simpleLocator;
	    })(helper = Plywood.helper || (Plywood.helper = {}));
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var helper;
	    (function (helper) {
	        function verboseRequesterFactory(parameters) {
	            var requester = parameters.requester;
	            var printLine = parameters.printLine || (function (line) {
	                console['log'](line);
	            });
	            var preQuery = parameters.preQuery || (function (query, queryNumber) {
	                printLine("vvvvvvvvvvvvvvvvvvvvvvvvvv");
	                printLine("Sending query " + queryNumber + ":");
	                printLine(JSON.stringify(query, null, 2));
	                printLine("^^^^^^^^^^^^^^^^^^^^^^^^^^");
	            });
	            var onSuccess = parameters.onSuccess || (function (data, time, query, queryNumber) {
	                printLine("vvvvvvvvvvvvvvvvvvvvvvvvvv");
	                printLine("Got result from query " + queryNumber + ": (in " + time + "ms)");
	                printLine(JSON.stringify(data, null, 2));
	                printLine("^^^^^^^^^^^^^^^^^^^^^^^^^^");
	            });
	            var onError = parameters.onError || (function (error, time, query, queryNumber) {
	                printLine("vvvvvvvvvvvvvvvvvvvvvvvvvv");
	                printLine("Got error in query " + queryNumber + ": " + error.message + " (in " + time + "ms)");
	                printLine("^^^^^^^^^^^^^^^^^^^^^^^^^^");
	            });
	            var queryNumber = 0;
	            return function (request) {
	                queryNumber++;
	                var myQueryNumber = queryNumber;
	                preQuery(request.query, myQueryNumber);
	                var startTime = Date.now();
	                return requester(request)
	                    .then(function (data) {
	                    onSuccess(data, Date.now() - startTime, request.query, myQueryNumber);
	                    return data;
	                }, function (error) {
	                    onError(error, Date.now() - startTime, request.query, myQueryNumber);
	                    throw error;
	                });
	            };
	        }
	        helper.verboseRequesterFactory = verboseRequesterFactory;
	    })(helper = Plywood.helper || (Plywood.helper = {}));
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var helper;
	    (function (helper) {
	        function retryRequester(parameters) {
	            console.warn('retryRequester has been renamed to retryRequesterFactory and will soon be deprecated');
	            return retryRequesterFactory(parameters);
	        }
	        helper.retryRequester = retryRequester;
	        function retryRequesterFactory(parameters) {
	            var requester = parameters.requester;
	            var delay = parameters.delay || 500;
	            var retry = parameters.retry || 3;
	            var retryOnTimeout = Boolean(parameters.retryOnTimeout);
	            if (typeof delay !== "number")
	                throw new TypeError("delay should be a number");
	            if (typeof retry !== "number")
	                throw new TypeError("retry should be a number");
	            return function (request) {
	                var tries = 1;
	                function handleError(err) {
	                    if (tries > retry)
	                        throw err;
	                    tries++;
	                    if (err.message === "timeout" && !retryOnTimeout)
	                        throw err;
	                    return Q.delay(delay).then(function () { return requester(request); }).catch(handleError);
	                }
	                return requester(request).catch(handleError);
	            };
	        }
	        helper.retryRequesterFactory = retryRequesterFactory;
	    })(helper = Plywood.helper || (Plywood.helper = {}));
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var helper;
	    (function (helper) {
	        function concurrentLimitRequesterFactory(parameters) {
	            var requester = parameters.requester;
	            var concurrentLimit = parameters.concurrentLimit || 5;
	            if (typeof concurrentLimit !== "number")
	                throw new TypeError("concurrentLimit should be a number");
	            var requestQueue = [];
	            var outstandingRequests = 0;
	            function requestFinished() {
	                outstandingRequests--;
	                if (!(requestQueue.length && outstandingRequests < concurrentLimit))
	                    return;
	                var queueItem = requestQueue.shift();
	                var deferred = queueItem.deferred;
	                outstandingRequests++;
	                requester(queueItem.request)
	                    .then(deferred.resolve, deferred.reject)
	                    .fin(requestFinished);
	            }
	            return function (request) {
	                if (outstandingRequests < concurrentLimit) {
	                    outstandingRequests++;
	                    return requester(request).fin(requestFinished);
	                }
	                else {
	                    var deferred = Q.defer();
	                    requestQueue.push({
	                        request: request,
	                        deferred: deferred
	                    });
	                    return deferred.promise;
	                }
	            };
	        }
	        helper.concurrentLimitRequesterFactory = concurrentLimitRequesterFactory;
	    })(helper = Plywood.helper || (Plywood.helper = {}));
	})(Plywood || (Plywood = {}));
	var Plywood;
	(function (Plywood) {
	    var helper;
	    (function (helper) {
	        function parseJSON(text) {
	            text = text.trim();
	            var firstChar = text[0];
	            if (firstChar[0] === '[') {
	                try {
	                    return JSON.parse(text);
	                }
	                catch (e) {
	                    throw new Error("could not parse");
	                }
	            }
	            else if (firstChar[0] === '{') {
	                return text.split(/\r?\n/).map(function (line, i) {
	                    try {
	                        return JSON.parse(line);
	                    }
	                    catch (e) {
	                        throw new Error("problem in line: " + i + ": '" + line + "'");
	                    }
	                });
	            }
	            else {
	                throw new Error("Unsupported start, starts with '" + firstChar[0] + "'");
	            }
	        }
	        helper.parseJSON = parseJSON;
	        function find(array, fn) {
	            for (var i = 0, n = array.length; i < n; i++) {
	                var a = array[i];
	                if (fn.call(array, a, i))
	                    return a;
	            }
	            return null;
	        }
	        helper.find = find;
	        function findIndex(array, fn) {
	            for (var i = 0, n = array.length; i < n; i++) {
	                var a = array[i];
	                if (fn.call(array, a, i))
	                    return i;
	            }
	            return -1;
	        }
	        helper.findIndex = findIndex;
	        function findByName(array, name) {
	            return find(array, function (x) { return x.name === name; });
	        }
	        helper.findByName = findByName;
	        function findIndexByName(array, name) {
	            return findIndex(array, function (x) { return x.name === name; });
	        }
	        helper.findIndexByName = findIndexByName;
	        function overrideByName(things, thingOverride) {
	            var overrideName = thingOverride.name;
	            things = things.filter(function (t) { return t.name !== overrideName; });
	            things.push(thingOverride);
	            return things;
	        }
	        helper.overrideByName = overrideByName;
	        function overridesByName(things, thingOverrides) {
	            for (var _i = 0, thingOverrides_1 = thingOverrides; _i < thingOverrides_1.length; _i++) {
	                var thingOverride = thingOverrides_1[_i];
	                things = overrideByName(things, thingOverride);
	            }
	            return things;
	        }
	        helper.overridesByName = overridesByName;
	        function shallowCopy(thing) {
	            var newThing = {};
	            for (var k in thing) {
	                if (hasOwnProperty(thing, k))
	                    newThing[k] = thing[k];
	            }
	            return newThing;
	        }
	        helper.shallowCopy = shallowCopy;
	        function deduplicateSort(a) {
	            a = a.sort();
	            var newA = [];
	            var last = null;
	            for (var _i = 0, a_1 = a; _i < a_1.length; _i++) {
	                var v = a_1[_i];
	                if (v !== last)
	                    newA.push(v);
	                last = v;
	            }
	            return newA;
	        }
	        helper.deduplicateSort = deduplicateSort;
	        function mapLookup(thing, fn) {
	            var newThing = Object.create(null);
	            for (var k in thing) {
	                if (hasOwnProperty(thing, k))
	                    newThing[k] = fn(thing[k]);
	            }
	            return newThing;
	        }
	        helper.mapLookup = mapLookup;
	        function emptyLookup(lookup) {
	            for (var k in lookup) {
	                if (hasOwnProperty(lookup, k))
	                    return false;
	            }
	            return true;
	        }
	        helper.emptyLookup = emptyLookup;
	        function nonEmptyLookup(lookup) {
	            return !emptyLookup(lookup);
	        }
	        helper.nonEmptyLookup = nonEmptyLookup;
	        function expressionLookupFromJS(expressionJSs) {
	            var expressions = Object.create(null);
	            for (var name in expressionJSs) {
	                if (!hasOwnProperty(expressionJSs, name))
	                    continue;
	                expressions[name] = Plywood.Expression.fromJSLoose(expressionJSs[name]);
	            }
	            return expressions;
	        }
	        helper.expressionLookupFromJS = expressionLookupFromJS;
	        function expressionLookupToJS(expressions) {
	            var expressionsJSs = {};
	            for (var name in expressions) {
	                if (!hasOwnProperty(expressions, name))
	                    continue;
	                expressionsJSs[name] = expressions[name].toJS();
	            }
	            return expressionsJSs;
	        }
	        helper.expressionLookupToJS = expressionLookupToJS;
	    })(helper = Plywood.helper || (Plywood.helper = {}));
	})(Plywood || (Plywood = {}));
	expressionParser = __webpack_require__(190)(Plywood, Chronoshift);
	plyqlParser = __webpack_require__(191)(Plywood, Chronoshift);
	if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {
	    module.exports = Plywood;
	    module.exports.Chronoshift = Chronoshift;
	}


/***/ },
/* 189 */
/***/ function(module, exports) {

	"use strict";
	function isInstanceOf(thing, constructor) {
	    if (typeof constructor !== 'function')
	        throw new TypeError("constructor must be a function");
	    if (thing instanceof constructor)
	        return true;
	    if (thing == null)
	        return false;
	    var constructorName = constructor.name;
	    if (!constructorName)
	        return false;
	    var thingProto = thing.__proto__;
	    while (thingProto && thingProto.constructor) {
	        if (thingProto.constructor.name === constructorName)
	            return true;
	        thingProto = thingProto.__proto__;
	    }
	    return false;
	}
	exports.isInstanceOf = isInstanceOf;
	function isArrayOf(things, constructor) {
	    if (!Array.isArray(things))
	        return false;
	    for (var i = 0, length = things.length; i < length; i++) {
	        if (!isInstanceOf(things[i], constructor))
	            return false;
	    }
	    return true;
	}
	exports.isArrayOf = isArrayOf;
	function isImmutableClass(thing) {
	    if (!thing || typeof thing !== 'object')
	        return false;
	    var ClassFn = thing.constructor;
	    return typeof ClassFn.fromJS === 'function' &&
	        typeof thing.toJS === 'function' &&
	        typeof thing.equals === 'function';
	}
	exports.isImmutableClass = isImmutableClass;
	function generalEqual(a, b) {
	    if (a === b)
	        return true;
	    if (a && b) {
	        if (typeof a.toISOString === 'function' && typeof b.toISOString === 'function') {
	            return a.valueOf() === b.valueOf();
	        }
	        if (typeof a.equals === 'function') {
	            return immutableEqual(a, b);
	        }
	    }
	    return false;
	}
	exports.generalEqual = generalEqual;
	function immutableEqual(a, b) {
	    if (a === b)
	        return true;
	    return Boolean(a) && a.equals(b);
	}
	exports.immutableEqual = immutableEqual;
	function immutableArraysEqual(arrayA, arrayB) {
	    if (arrayA === arrayB)
	        return true;
	    if (!arrayA !== !arrayB)
	        return false;
	    var length = arrayA.length;
	    if (length !== arrayB.length)
	        return false;
	    for (var i = 0; i < length; i++) {
	        if (!immutableEqual(arrayA[i], arrayB[i]))
	            return false;
	    }
	    return true;
	}
	exports.immutableArraysEqual = immutableArraysEqual;
	function immutableLookupsEqual(lookupA, lookupB) {
	    if (lookupA === lookupB)
	        return true;
	    if (!lookupA !== !lookupB)
	        return false;
	    var keysA = Object.keys(lookupA);
	    var keysB = Object.keys(lookupB);
	    if (keysA.length !== keysB.length)
	        return false;
	    for (var _i = 0, keysA_1 = keysA; _i < keysA_1.length; _i++) {
	        var k = keysA_1[_i];
	        if (!immutableEqual(lookupA[k], lookupB[k]))
	            return false;
	    }
	    return true;
	}
	exports.immutableLookupsEqual = immutableLookupsEqual;


/***/ },
/* 190 */
/***/ function(module, exports) {

	"use strict";
	module.exports = function(plywood, chronoshift) {
	  /*
	   * Generated by PEG.js 0.9.0.
	   *
	   * http://pegjs.org/
	   */

	  function peg$subclass(child, parent) {
	    function ctor() { this.constructor = child; }
	    ctor.prototype = parent.prototype;
	    child.prototype = new ctor();
	  }

	  function peg$SyntaxError(message, expected, found, location) {
	    this.message  = message;
	    this.expected = expected;
	    this.found    = found;
	    this.location = location;
	    this.name     = "SyntaxError";

	    if (typeof Error.captureStackTrace === "function") {
	      Error.captureStackTrace(this, peg$SyntaxError);
	    }
	  }

	  peg$subclass(peg$SyntaxError, Error);

	  function peg$parse(input) {
	    var options = arguments.length > 1 ? arguments[1] : {},
	        parser  = this,

	        peg$FAILED = {},

	        peg$startRuleFunctions = { start: peg$parsestart },
	        peg$startRuleFunction  = peg$parsestart,

	        peg$c0 = function(ex) { return ex; },
	        peg$c1 = function(head, tail) { return naryExpressionFactory('or', head, tail); },
	        peg$c2 = function(head, tail) { return naryExpressionFactory('and', head, tail); },
	        peg$c3 = function(not, ex) {
	              if (not) ex = ex.not();
	              return ex;
	            },
	        peg$c4 = function(lhs, rest) {
	              if (!rest) return lhs;
	              return lhs[rest[0]](rest[2]);
	            },
	        peg$c5 = { type: "other", description: "Comparison" },
	        peg$c6 = "==",
	        peg$c7 = { type: "literal", value: "==", description: "\"==\"" },
	        peg$c8 = function() { return 'is'; },
	        peg$c9 = "!=",
	        peg$c10 = { type: "literal", value: "!=", description: "\"!=\"" },
	        peg$c11 = function() { return 'isnt'; },
	        peg$c12 = "in",
	        peg$c13 = { type: "literal", value: "in", description: "\"in\"" },
	        peg$c14 = function() { return 'in'; },
	        peg$c15 = "<=",
	        peg$c16 = { type: "literal", value: "<=", description: "\"<=\"" },
	        peg$c17 = function() { return 'lessThanOrEqual'; },
	        peg$c18 = ">=",
	        peg$c19 = { type: "literal", value: ">=", description: "\">=\"" },
	        peg$c20 = function() { return 'greaterThanOrEqual'; },
	        peg$c21 = "<",
	        peg$c22 = { type: "literal", value: "<", description: "\"<\"" },
	        peg$c23 = function() { return 'lessThan'; },
	        peg$c24 = ">",
	        peg$c25 = { type: "literal", value: ">", description: "\">\"" },
	        peg$c26 = function() { return 'greaterThan'; },
	        peg$c27 = function(head, tail) { return naryExpressionFactory('concat', head, tail); },
	        peg$c28 = function(head, tail) { return naryExpressionWithAltFactory('add', head, tail, '-', 'subtract'); },
	        peg$c29 = "+",
	        peg$c30 = { type: "literal", value: "+", description: "\"+\"" },
	        peg$c31 = "-",
	        peg$c32 = { type: "literal", value: "-", description: "\"-\"" },
	        peg$c33 = function(op) { return op; },
	        peg$c34 = function(head, tail) { return naryExpressionWithAltFactory('multiply', head, tail, '/', 'divide'); },
	        peg$c35 = "*",
	        peg$c36 = { type: "literal", value: "*", description: "\"*\"" },
	        peg$c37 = "/",
	        peg$c38 = { type: "literal", value: "/", description: "\"/\"" },
	        peg$c39 = function(ex, rhs) {
	              if (rhs) ex = ex.power(rhs[1]);
	              return ex;
	            },
	        peg$c40 = "^",
	        peg$c41 = { type: "literal", value: "^", description: "\"^\"" },
	        peg$c42 = function(op, ex) {
	              // !Number is to make sure that -3 parses as literal(-3) and not literal(3).negate()
	              var negEx = ex.negate(); // Always negate (even with +) just to make sure it is possible
	              return op === '-' ? negEx : ex;
	            },
	        peg$c43 = function(ex) { return ex.absolute(); },
	        peg$c44 = function(lhs, tail) {
	              if (!tail.length) return lhs;
	              var operand = lhs;
	              for (var i = 0, n = tail.length; i < n; i++) {
	                var part = tail[i];
	                var op = part[1];
	                if (!possibleCalls[op]) error('no such call: ' + op);
	                var params = part[3] || [];
	                operand = operand[op].apply(operand, params);
	              }
	              return operand;
	            },
	        peg$c45 = function(head, tail) { return makeListMap1(head, tail); },
	        peg$c46 = "ply",
	        peg$c47 = { type: "literal", value: "ply", description: "\"ply\"" },
	        peg$c48 = function() { return ply(); },
	        peg$c49 = "$",
	        peg$c50 = { type: "literal", value: "$", description: "\"$\"" },
	        peg$c51 = ":",
	        peg$c52 = { type: "literal", value: ":", description: "\":\"" },
	        peg$c53 = function(name) { return RefExpression.parse(name); },
	        peg$c54 = "{",
	        peg$c55 = { type: "literal", value: "{", description: "\"{\"" },
	        peg$c56 = /^[^}]/,
	        peg$c57 = { type: "class", value: "[^}]", description: "[^}]" },
	        peg$c58 = "}",
	        peg$c59 = { type: "literal", value: "}", description: "\"}\"" },
	        peg$c60 = function(value) { return r(value); },
	        peg$c61 = { type: "other", description: "StringSet" },
	        peg$c62 = function(head, tail) { return Set.fromJS(makeListMap1(head, tail)); },
	        peg$c63 = { type: "other", description: "NumberSet" },
	        peg$c64 = { type: "other", description: "String" },
	        peg$c65 = "'",
	        peg$c66 = { type: "literal", value: "'", description: "\"'\"" },
	        peg$c67 = function(chars) { return chars; },
	        peg$c68 = function(chars) { error("Unmatched single quote"); },
	        peg$c69 = "\"",
	        peg$c70 = { type: "literal", value: "\"", description: "\"\\\"\"" },
	        peg$c71 = function(chars) { error("Unmatched double quote"); },
	        peg$c72 = "null",
	        peg$c73 = { type: "literal", value: "null", description: "\"null\"" },
	        peg$c74 = function() { return null; },
	        peg$c75 = "false",
	        peg$c76 = { type: "literal", value: "false", description: "\"false\"" },
	        peg$c77 = function() { return false; },
	        peg$c78 = "true",
	        peg$c79 = { type: "literal", value: "true", description: "\"true\"" },
	        peg$c80 = function() { return true; },
	        peg$c81 = "not",
	        peg$c82 = { type: "literal", value: "not", description: "\"not\"" },
	        peg$c83 = "and",
	        peg$c84 = { type: "literal", value: "and", description: "\"and\"" },
	        peg$c85 = "or",
	        peg$c86 = { type: "literal", value: "or", description: "\"or\"" },
	        peg$c87 = "++",
	        peg$c88 = { type: "literal", value: "++", description: "\"++\"" },
	        peg$c89 = /^[a-z_]/i,
	        peg$c90 = { type: "class", value: "[a-z_]i", description: "[a-z_]i" },
	        peg$c91 = { type: "other", description: "Number" },
	        peg$c92 = function(n) { return parseFloat(n); },
	        peg$c93 = /^[1-9]/,
	        peg$c94 = { type: "class", value: "[1-9]", description: "[1-9]" },
	        peg$c95 = ".",
	        peg$c96 = { type: "literal", value: ".", description: "\".\"" },
	        peg$c97 = "e",
	        peg$c98 = { type: "literal", value: "e", description: "\"e\"" },
	        peg$c99 = /^[+\-]/,
	        peg$c100 = { type: "class", value: "[+-]", description: "[+-]" },
	        peg$c101 = /^[0-9]/,
	        peg$c102 = { type: "class", value: "[0-9]", description: "[0-9]" },
	        peg$c103 = { type: "other", description: "[" },
	        peg$c104 = "[",
	        peg$c105 = { type: "literal", value: "[", description: "\"[\"" },
	        peg$c106 = { type: "other", description: "]" },
	        peg$c107 = "]",
	        peg$c108 = { type: "literal", value: "]", description: "\"]\"" },
	        peg$c109 = { type: "other", description: "(" },
	        peg$c110 = "(",
	        peg$c111 = { type: "literal", value: "(", description: "\"(\"" },
	        peg$c112 = { type: "other", description: ")" },
	        peg$c113 = ")",
	        peg$c114 = { type: "literal", value: ")", description: "\")\"" },
	        peg$c115 = ",",
	        peg$c116 = { type: "literal", value: ",", description: "\",\"" },
	        peg$c117 = "|",
	        peg$c118 = { type: "literal", value: "|", description: "\"|\"" },
	        peg$c119 = { type: "other", description: "Name" },
	        peg$c120 = function(name) { return name; },
	        peg$c121 = /^[a-z0-9_]/i,
	        peg$c122 = { type: "class", value: "[a-z0-9_]i", description: "[a-z0-9_]i" },
	        peg$c123 = { type: "other", description: "TypeName" },
	        peg$c124 = /^[A-Z_\/]/,
	        peg$c125 = { type: "class", value: "[A-Z_/]", description: "[A-Z_/]" },
	        peg$c126 = { type: "other", description: "NotSQuote" },
	        peg$c127 = /^[^']/,
	        peg$c128 = { type: "class", value: "[^']", description: "[^']" },
	        peg$c129 = { type: "other", description: "NotDQuote" },
	        peg$c130 = /^[^"]/,
	        peg$c131 = { type: "class", value: "[^\"]", description: "[^\"]" },
	        peg$c132 = { type: "other", description: "Whitespace" },
	        peg$c133 = /^[ \t\r\n]/,
	        peg$c134 = { type: "class", value: "[ \\t\\r\\n]", description: "[ \\t\\r\\n]" },

	        peg$currPos          = 0,
	        peg$savedPos         = 0,
	        peg$posDetailsCache  = [{ line: 1, column: 1, seenCR: false }],
	        peg$maxFailPos       = 0,
	        peg$maxFailExpected  = [],
	        peg$silentFails      = 0,

	        peg$result;

	    if ("startRule" in options) {
	      if (!(options.startRule in peg$startRuleFunctions)) {
	        throw new Error("Can't start parsing from rule \"" + options.startRule + "\".");
	      }

	      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];
	    }

	    function text() {
	      return input.substring(peg$savedPos, peg$currPos);
	    }

	    function location() {
	      return peg$computeLocation(peg$savedPos, peg$currPos);
	    }

	    function expected(description) {
	      throw peg$buildException(
	        null,
	        [{ type: "other", description: description }],
	        input.substring(peg$savedPos, peg$currPos),
	        peg$computeLocation(peg$savedPos, peg$currPos)
	      );
	    }

	    function error(message) {
	      throw peg$buildException(
	        message,
	        null,
	        input.substring(peg$savedPos, peg$currPos),
	        peg$computeLocation(peg$savedPos, peg$currPos)
	      );
	    }

	    function peg$computePosDetails(pos) {
	      var details = peg$posDetailsCache[pos],
	          p, ch;

	      if (details) {
	        return details;
	      } else {
	        p = pos - 1;
	        while (!peg$posDetailsCache[p]) {
	          p--;
	        }

	        details = peg$posDetailsCache[p];
	        details = {
	          line:   details.line,
	          column: details.column,
	          seenCR: details.seenCR
	        };

	        while (p < pos) {
	          ch = input.charAt(p);
	          if (ch === "\n") {
	            if (!details.seenCR) { details.line++; }
	            details.column = 1;
	            details.seenCR = false;
	          } else if (ch === "\r" || ch === "\u2028" || ch === "\u2029") {
	            details.line++;
	            details.column = 1;
	            details.seenCR = true;
	          } else {
	            details.column++;
	            details.seenCR = false;
	          }

	          p++;
	        }

	        peg$posDetailsCache[pos] = details;
	        return details;
	      }
	    }

	    function peg$computeLocation(startPos, endPos) {
	      var startPosDetails = peg$computePosDetails(startPos),
	          endPosDetails   = peg$computePosDetails(endPos);

	      return {
	        start: {
	          offset: startPos,
	          line:   startPosDetails.line,
	          column: startPosDetails.column
	        },
	        end: {
	          offset: endPos,
	          line:   endPosDetails.line,
	          column: endPosDetails.column
	        }
	      };
	    }

	    function peg$fail(expected) {
	      if (peg$currPos < peg$maxFailPos) { return; }

	      if (peg$currPos > peg$maxFailPos) {
	        peg$maxFailPos = peg$currPos;
	        peg$maxFailExpected = [];
	      }

	      peg$maxFailExpected.push(expected);
	    }

	    function peg$buildException(message, expected, found, location) {
	      function cleanupExpected(expected) {
	        var i = 1;

	        expected.sort(function(a, b) {
	          if (a.description < b.description) {
	            return -1;
	          } else if (a.description > b.description) {
	            return 1;
	          } else {
	            return 0;
	          }
	        });

	        while (i < expected.length) {
	          if (expected[i - 1] === expected[i]) {
	            expected.splice(i, 1);
	          } else {
	            i++;
	          }
	        }
	      }

	      function buildMessage(expected, found) {
	        function stringEscape(s) {
	          function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }

	          return s
	            .replace(/\\/g,   '\\\\')
	            .replace(/"/g,    '\\"')
	            .replace(/\x08/g, '\\b')
	            .replace(/\t/g,   '\\t')
	            .replace(/\n/g,   '\\n')
	            .replace(/\f/g,   '\\f')
	            .replace(/\r/g,   '\\r')
	            .replace(/[\x00-\x07\x0B\x0E\x0F]/g, function(ch) { return '\\x0' + hex(ch); })
	            .replace(/[\x10-\x1F\x80-\xFF]/g,    function(ch) { return '\\x'  + hex(ch); })
	            .replace(/[\u0100-\u0FFF]/g,         function(ch) { return '\\u0' + hex(ch); })
	            .replace(/[\u1000-\uFFFF]/g,         function(ch) { return '\\u'  + hex(ch); });
	        }

	        var expectedDescs = new Array(expected.length),
	            expectedDesc, foundDesc, i;

	        for (i = 0; i < expected.length; i++) {
	          expectedDescs[i] = expected[i].description;
	        }

	        expectedDesc = expected.length > 1
	          ? expectedDescs.slice(0, -1).join(", ")
	              + " or "
	              + expectedDescs[expected.length - 1]
	          : expectedDescs[0];

	        foundDesc = found ? "\"" + stringEscape(found) + "\"" : "end of input";

	        return "Expected " + expectedDesc + " but " + foundDesc + " found.";
	      }

	      if (expected !== null) {
	        cleanupExpected(expected);
	      }

	      return new peg$SyntaxError(
	        message !== null ? message : buildMessage(expected, found),
	        expected,
	        found,
	        location
	      );
	    }

	    function peg$parsestart() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      s1 = peg$parse_();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseOrExpression();
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c0(s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseOrExpression() {
	      var s0, s1, s2, s3, s4, s5;

	      s0 = peg$currPos;
	      s1 = peg$parseAndExpression();
	      if (s1 !== peg$FAILED) {
	        s2 = [];
	        s3 = peg$currPos;
	        s4 = peg$parseOrToken();
	        if (s4 !== peg$FAILED) {
	          s5 = peg$parseAndExpression();
	          if (s5 !== peg$FAILED) {
	            s4 = [s4, s5];
	            s3 = s4;
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s3;
	          s3 = peg$FAILED;
	        }
	        while (s3 !== peg$FAILED) {
	          s2.push(s3);
	          s3 = peg$currPos;
	          s4 = peg$parseOrToken();
	          if (s4 !== peg$FAILED) {
	            s5 = peg$parseAndExpression();
	            if (s5 !== peg$FAILED) {
	              s4 = [s4, s5];
	              s3 = s4;
	            } else {
	              peg$currPos = s3;
	              s3 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c1(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseAndExpression() {
	      var s0, s1, s2, s3, s4, s5;

	      s0 = peg$currPos;
	      s1 = peg$parseNotExpression();
	      if (s1 !== peg$FAILED) {
	        s2 = [];
	        s3 = peg$currPos;
	        s4 = peg$parseAndToken();
	        if (s4 !== peg$FAILED) {
	          s5 = peg$parseNotExpression();
	          if (s5 !== peg$FAILED) {
	            s4 = [s4, s5];
	            s3 = s4;
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s3;
	          s3 = peg$FAILED;
	        }
	        while (s3 !== peg$FAILED) {
	          s2.push(s3);
	          s3 = peg$currPos;
	          s4 = peg$parseAndToken();
	          if (s4 !== peg$FAILED) {
	            s5 = peg$parseNotExpression();
	            if (s5 !== peg$FAILED) {
	              s4 = [s4, s5];
	              s3 = s4;
	            } else {
	              peg$currPos = s3;
	              s3 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c2(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseNotExpression() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      s1 = peg$parseNotToken();
	      if (s1 === peg$FAILED) {
	        s1 = null;
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseComparisonExpression();
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c3(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseComparisonExpression() {
	      var s0, s1, s2, s3, s4, s5;

	      s0 = peg$currPos;
	      s1 = peg$parseConcatExpression();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        s3 = peg$parseComparisonOp();
	        if (s3 !== peg$FAILED) {
	          s4 = peg$parse_();
	          if (s4 !== peg$FAILED) {
	            s5 = peg$parseConcatExpression();
	            if (s5 !== peg$FAILED) {
	              s3 = [s3, s4, s5];
	              s2 = s3;
	            } else {
	              peg$currPos = s2;
	              s2 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s2;
	            s2 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 === peg$FAILED) {
	          s2 = null;
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c4(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseComparisonOp() {
	      var s0, s1;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 2) === peg$c6) {
	        s1 = peg$c6;
	        peg$currPos += 2;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c7); }
	      }
	      if (s1 !== peg$FAILED) {
	        peg$savedPos = s0;
	        s1 = peg$c8();
	      }
	      s0 = s1;
	      if (s0 === peg$FAILED) {
	        s0 = peg$currPos;
	        if (input.substr(peg$currPos, 2) === peg$c9) {
	          s1 = peg$c9;
	          peg$currPos += 2;
	        } else {
	          s1 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c10); }
	        }
	        if (s1 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c11();
	        }
	        s0 = s1;
	        if (s0 === peg$FAILED) {
	          s0 = peg$currPos;
	          if (input.substr(peg$currPos, 2) === peg$c12) {
	            s1 = peg$c12;
	            peg$currPos += 2;
	          } else {
	            s1 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c13); }
	          }
	          if (s1 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c14();
	          }
	          s0 = s1;
	          if (s0 === peg$FAILED) {
	            s0 = peg$currPos;
	            if (input.substr(peg$currPos, 2) === peg$c15) {
	              s1 = peg$c15;
	              peg$currPos += 2;
	            } else {
	              s1 = peg$FAILED;
	              if (peg$silentFails === 0) { peg$fail(peg$c16); }
	            }
	            if (s1 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c17();
	            }
	            s0 = s1;
	            if (s0 === peg$FAILED) {
	              s0 = peg$currPos;
	              if (input.substr(peg$currPos, 2) === peg$c18) {
	                s1 = peg$c18;
	                peg$currPos += 2;
	              } else {
	                s1 = peg$FAILED;
	                if (peg$silentFails === 0) { peg$fail(peg$c19); }
	              }
	              if (s1 !== peg$FAILED) {
	                peg$savedPos = s0;
	                s1 = peg$c20();
	              }
	              s0 = s1;
	              if (s0 === peg$FAILED) {
	                s0 = peg$currPos;
	                if (input.charCodeAt(peg$currPos) === 60) {
	                  s1 = peg$c21;
	                  peg$currPos++;
	                } else {
	                  s1 = peg$FAILED;
	                  if (peg$silentFails === 0) { peg$fail(peg$c22); }
	                }
	                if (s1 !== peg$FAILED) {
	                  peg$savedPos = s0;
	                  s1 = peg$c23();
	                }
	                s0 = s1;
	                if (s0 === peg$FAILED) {
	                  s0 = peg$currPos;
	                  if (input.charCodeAt(peg$currPos) === 62) {
	                    s1 = peg$c24;
	                    peg$currPos++;
	                  } else {
	                    s1 = peg$FAILED;
	                    if (peg$silentFails === 0) { peg$fail(peg$c25); }
	                  }
	                  if (s1 !== peg$FAILED) {
	                    peg$savedPos = s0;
	                    s1 = peg$c26();
	                  }
	                  s0 = s1;
	                }
	              }
	            }
	          }
	        }
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c5); }
	      }

	      return s0;
	    }

	    function peg$parseConcatExpression() {
	      var s0, s1, s2, s3, s4, s5;

	      s0 = peg$currPos;
	      s1 = peg$parseAdditiveExpression();
	      if (s1 !== peg$FAILED) {
	        s2 = [];
	        s3 = peg$currPos;
	        s4 = peg$parseConcatToken();
	        if (s4 !== peg$FAILED) {
	          s5 = peg$parseAdditiveExpression();
	          if (s5 !== peg$FAILED) {
	            s4 = [s4, s5];
	            s3 = s4;
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s3;
	          s3 = peg$FAILED;
	        }
	        while (s3 !== peg$FAILED) {
	          s2.push(s3);
	          s3 = peg$currPos;
	          s4 = peg$parseConcatToken();
	          if (s4 !== peg$FAILED) {
	            s5 = peg$parseAdditiveExpression();
	            if (s5 !== peg$FAILED) {
	              s4 = [s4, s5];
	              s3 = s4;
	            } else {
	              peg$currPos = s3;
	              s3 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c27(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseAdditiveExpression() {
	      var s0, s1, s2, s3, s4, s5;

	      s0 = peg$currPos;
	      s1 = peg$parseMultiplicativeExpression();
	      if (s1 !== peg$FAILED) {
	        s2 = [];
	        s3 = peg$currPos;
	        s4 = peg$parseAdditiveOp();
	        if (s4 !== peg$FAILED) {
	          s5 = peg$parseMultiplicativeExpression();
	          if (s5 !== peg$FAILED) {
	            s4 = [s4, s5];
	            s3 = s4;
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s3;
	          s3 = peg$FAILED;
	        }
	        while (s3 !== peg$FAILED) {
	          s2.push(s3);
	          s3 = peg$currPos;
	          s4 = peg$parseAdditiveOp();
	          if (s4 !== peg$FAILED) {
	            s5 = peg$parseMultiplicativeExpression();
	            if (s5 !== peg$FAILED) {
	              s4 = [s4, s5];
	              s3 = s4;
	            } else {
	              peg$currPos = s3;
	              s3 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c28(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseAdditiveOp() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 43) {
	        s1 = peg$c29;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c30); }
	      }
	      if (s1 === peg$FAILED) {
	        if (input.charCodeAt(peg$currPos) === 45) {
	          s1 = peg$c31;
	          peg$currPos++;
	        } else {
	          s1 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c32); }
	        }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        if (input.charCodeAt(peg$currPos) === 43) {
	          s3 = peg$c29;
	          peg$currPos++;
	        } else {
	          s3 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c30); }
	        }
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c33(s1);
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseMultiplicativeExpression() {
	      var s0, s1, s2, s3, s4, s5;

	      s0 = peg$currPos;
	      s1 = peg$parseExponentialExpression();
	      if (s1 !== peg$FAILED) {
	        s2 = [];
	        s3 = peg$currPos;
	        s4 = peg$parseMultiplicativeOp();
	        if (s4 !== peg$FAILED) {
	          s5 = peg$parseExponentialExpression();
	          if (s5 !== peg$FAILED) {
	            s4 = [s4, s5];
	            s3 = s4;
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s3;
	          s3 = peg$FAILED;
	        }
	        while (s3 !== peg$FAILED) {
	          s2.push(s3);
	          s3 = peg$currPos;
	          s4 = peg$parseMultiplicativeOp();
	          if (s4 !== peg$FAILED) {
	            s5 = peg$parseExponentialExpression();
	            if (s5 !== peg$FAILED) {
	              s4 = [s4, s5];
	              s3 = s4;
	            } else {
	              peg$currPos = s3;
	              s3 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c34(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseMultiplicativeOp() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 42) {
	        s1 = peg$c35;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c36); }
	      }
	      if (s1 === peg$FAILED) {
	        if (input.charCodeAt(peg$currPos) === 47) {
	          s1 = peg$c37;
	          peg$currPos++;
	        } else {
	          s1 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c38); }
	        }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c33(s1);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseExponentialExpression() {
	      var s0, s1, s2, s3, s4;

	      s0 = peg$currPos;
	      s1 = peg$parseUnaryExpression();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        s3 = peg$parseExponentialOp();
	        if (s3 !== peg$FAILED) {
	          s4 = peg$parseExponentialExpression();
	          if (s4 !== peg$FAILED) {
	            s3 = [s3, s4];
	            s2 = s3;
	          } else {
	            peg$currPos = s2;
	            s2 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 === peg$FAILED) {
	          s2 = null;
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c39(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseExponentialOp() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 94) {
	        s1 = peg$c40;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c41); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          s1 = [s1, s2];
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseUnaryExpression() {
	      var s0, s1, s2, s3, s4, s5;

	      s0 = peg$currPos;
	      s1 = peg$parseAdditiveOp();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          s3 = peg$currPos;
	          peg$silentFails++;
	          s4 = peg$parseNumber();
	          peg$silentFails--;
	          if (s4 === peg$FAILED) {
	            s3 = void 0;
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	          if (s3 !== peg$FAILED) {
	            s4 = peg$parseCallChainExpression();
	            if (s4 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c42(s1, s4);
	              s0 = s1;
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      if (s0 === peg$FAILED) {
	        s0 = peg$parseCallChainExpression();
	        if (s0 === peg$FAILED) {
	          s0 = peg$currPos;
	          s1 = peg$parsePipe();
	          if (s1 !== peg$FAILED) {
	            s2 = peg$parse_();
	            if (s2 !== peg$FAILED) {
	              s3 = peg$parseOrExpression();
	              if (s3 !== peg$FAILED) {
	                s4 = peg$parse_();
	                if (s4 !== peg$FAILED) {
	                  s5 = peg$parsePipe();
	                  if (s5 !== peg$FAILED) {
	                    peg$savedPos = s0;
	                    s1 = peg$c43(s3);
	                    s0 = s1;
	                  } else {
	                    peg$currPos = s0;
	                    s0 = peg$FAILED;
	                  }
	                } else {
	                  peg$currPos = s0;
	                  s0 = peg$FAILED;
	                }
	              } else {
	                peg$currPos = s0;
	                s0 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        }
	      }

	      return s0;
	    }

	    function peg$parseCallChainExpression() {
	      var s0, s1, s2, s3, s4, s5, s6, s7, s8;

	      s0 = peg$currPos;
	      s1 = peg$parseBasicExpression();
	      if (s1 !== peg$FAILED) {
	        s2 = [];
	        s3 = peg$currPos;
	        s4 = peg$parseDot();
	        if (s4 !== peg$FAILED) {
	          s5 = peg$parseName();
	          if (s5 !== peg$FAILED) {
	            s6 = peg$parseOpenParen();
	            if (s6 !== peg$FAILED) {
	              s7 = peg$parseParams();
	              if (s7 === peg$FAILED) {
	                s7 = null;
	              }
	              if (s7 !== peg$FAILED) {
	                s8 = peg$parseCloseParen();
	                if (s8 !== peg$FAILED) {
	                  s4 = [s4, s5, s6, s7, s8];
	                  s3 = s4;
	                } else {
	                  peg$currPos = s3;
	                  s3 = peg$FAILED;
	                }
	              } else {
	                peg$currPos = s3;
	                s3 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s3;
	              s3 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s3;
	          s3 = peg$FAILED;
	        }
	        while (s3 !== peg$FAILED) {
	          s2.push(s3);
	          s3 = peg$currPos;
	          s4 = peg$parseDot();
	          if (s4 !== peg$FAILED) {
	            s5 = peg$parseName();
	            if (s5 !== peg$FAILED) {
	              s6 = peg$parseOpenParen();
	              if (s6 !== peg$FAILED) {
	                s7 = peg$parseParams();
	                if (s7 === peg$FAILED) {
	                  s7 = null;
	                }
	                if (s7 !== peg$FAILED) {
	                  s8 = peg$parseCloseParen();
	                  if (s8 !== peg$FAILED) {
	                    s4 = [s4, s5, s6, s7, s8];
	                    s3 = s4;
	                  } else {
	                    peg$currPos = s3;
	                    s3 = peg$FAILED;
	                  }
	                } else {
	                  peg$currPos = s3;
	                  s3 = peg$FAILED;
	                }
	              } else {
	                peg$currPos = s3;
	                s3 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s3;
	              s3 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c44(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseParams() {
	      var s0, s1, s2, s3, s4, s5;

	      s0 = peg$currPos;
	      s1 = peg$parseOrExpression();
	      if (s1 !== peg$FAILED) {
	        s2 = [];
	        s3 = peg$currPos;
	        s4 = peg$parseComma();
	        if (s4 !== peg$FAILED) {
	          s5 = peg$parseOrExpression();
	          if (s5 !== peg$FAILED) {
	            s4 = [s4, s5];
	            s3 = s4;
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s3;
	          s3 = peg$FAILED;
	        }
	        while (s3 !== peg$FAILED) {
	          s2.push(s3);
	          s3 = peg$currPos;
	          s4 = peg$parseComma();
	          if (s4 !== peg$FAILED) {
	            s5 = peg$parseOrExpression();
	            if (s5 !== peg$FAILED) {
	              s4 = [s4, s5];
	              s3 = s4;
	            } else {
	              peg$currPos = s3;
	              s3 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c45(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseBasicExpression() {
	      var s0, s1, s2, s3, s4;

	      s0 = peg$currPos;
	      s1 = peg$parseOpenParen();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parseOrExpression();
	          if (s3 !== peg$FAILED) {
	            s4 = peg$parseCloseParen();
	            if (s4 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c0(s3);
	              s0 = s1;
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      if (s0 === peg$FAILED) {
	        s0 = peg$currPos;
	        if (input.substr(peg$currPos, 3) === peg$c46) {
	          s1 = peg$c46;
	          peg$currPos += 3;
	        } else {
	          s1 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c47); }
	        }
	        if (s1 !== peg$FAILED) {
	          s2 = peg$parseOpenParen();
	          if (s2 !== peg$FAILED) {
	            s3 = peg$parseCloseParen();
	            if (s3 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c48();
	              s0 = s1;
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	        if (s0 === peg$FAILED) {
	          s0 = peg$parseRefExpression();
	          if (s0 === peg$FAILED) {
	            s0 = peg$parseLiteralExpression();
	          }
	        }
	      }

	      return s0;
	    }

	    function peg$parseRefExpression() {
	      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;

	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 36) {
	        s1 = peg$c49;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c50); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        s3 = peg$currPos;
	        s4 = [];
	        if (input.charCodeAt(peg$currPos) === 94) {
	          s5 = peg$c40;
	          peg$currPos++;
	        } else {
	          s5 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c41); }
	        }
	        while (s5 !== peg$FAILED) {
	          s4.push(s5);
	          if (input.charCodeAt(peg$currPos) === 94) {
	            s5 = peg$c40;
	            peg$currPos++;
	          } else {
	            s5 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c41); }
	          }
	        }
	        if (s4 !== peg$FAILED) {
	          s5 = peg$parseNamePart();
	          if (s5 !== peg$FAILED) {
	            s6 = peg$currPos;
	            if (input.charCodeAt(peg$currPos) === 58) {
	              s7 = peg$c51;
	              peg$currPos++;
	            } else {
	              s7 = peg$FAILED;
	              if (peg$silentFails === 0) { peg$fail(peg$c52); }
	            }
	            if (s7 !== peg$FAILED) {
	              s8 = peg$parseTypeName();
	              if (s8 !== peg$FAILED) {
	                s7 = [s7, s8];
	                s6 = s7;
	              } else {
	                peg$currPos = s6;
	                s6 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s6;
	              s6 = peg$FAILED;
	            }
	            if (s6 === peg$FAILED) {
	              s6 = null;
	            }
	            if (s6 !== peg$FAILED) {
	              s4 = [s4, s5, s6];
	              s3 = s4;
	            } else {
	              peg$currPos = s3;
	              s3 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s3;
	          s3 = peg$FAILED;
	        }
	        if (s3 !== peg$FAILED) {
	          s2 = input.substring(s2, peg$currPos);
	        } else {
	          s2 = s3;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c53(s2);
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      if (s0 === peg$FAILED) {
	        s0 = peg$currPos;
	        if (input.charCodeAt(peg$currPos) === 36) {
	          s1 = peg$c49;
	          peg$currPos++;
	        } else {
	          s1 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c50); }
	        }
	        if (s1 !== peg$FAILED) {
	          s2 = peg$currPos;
	          s3 = peg$currPos;
	          s4 = [];
	          if (input.charCodeAt(peg$currPos) === 94) {
	            s5 = peg$c40;
	            peg$currPos++;
	          } else {
	            s5 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c41); }
	          }
	          while (s5 !== peg$FAILED) {
	            s4.push(s5);
	            if (input.charCodeAt(peg$currPos) === 94) {
	              s5 = peg$c40;
	              peg$currPos++;
	            } else {
	              s5 = peg$FAILED;
	              if (peg$silentFails === 0) { peg$fail(peg$c41); }
	            }
	          }
	          if (s4 !== peg$FAILED) {
	            if (input.charCodeAt(peg$currPos) === 123) {
	              s5 = peg$c54;
	              peg$currPos++;
	            } else {
	              s5 = peg$FAILED;
	              if (peg$silentFails === 0) { peg$fail(peg$c55); }
	            }
	            if (s5 !== peg$FAILED) {
	              s6 = [];
	              if (peg$c56.test(input.charAt(peg$currPos))) {
	                s7 = input.charAt(peg$currPos);
	                peg$currPos++;
	              } else {
	                s7 = peg$FAILED;
	                if (peg$silentFails === 0) { peg$fail(peg$c57); }
	              }
	              if (s7 !== peg$FAILED) {
	                while (s7 !== peg$FAILED) {
	                  s6.push(s7);
	                  if (peg$c56.test(input.charAt(peg$currPos))) {
	                    s7 = input.charAt(peg$currPos);
	                    peg$currPos++;
	                  } else {
	                    s7 = peg$FAILED;
	                    if (peg$silentFails === 0) { peg$fail(peg$c57); }
	                  }
	                }
	              } else {
	                s6 = peg$FAILED;
	              }
	              if (s6 !== peg$FAILED) {
	                if (input.charCodeAt(peg$currPos) === 125) {
	                  s7 = peg$c58;
	                  peg$currPos++;
	                } else {
	                  s7 = peg$FAILED;
	                  if (peg$silentFails === 0) { peg$fail(peg$c59); }
	                }
	                if (s7 !== peg$FAILED) {
	                  s8 = peg$currPos;
	                  if (input.charCodeAt(peg$currPos) === 58) {
	                    s9 = peg$c51;
	                    peg$currPos++;
	                  } else {
	                    s9 = peg$FAILED;
	                    if (peg$silentFails === 0) { peg$fail(peg$c52); }
	                  }
	                  if (s9 !== peg$FAILED) {
	                    s10 = peg$parseTypeName();
	                    if (s10 !== peg$FAILED) {
	                      s9 = [s9, s10];
	                      s8 = s9;
	                    } else {
	                      peg$currPos = s8;
	                      s8 = peg$FAILED;
	                    }
	                  } else {
	                    peg$currPos = s8;
	                    s8 = peg$FAILED;
	                  }
	                  if (s8 === peg$FAILED) {
	                    s8 = null;
	                  }
	                  if (s8 !== peg$FAILED) {
	                    s4 = [s4, s5, s6, s7, s8];
	                    s3 = s4;
	                  } else {
	                    peg$currPos = s3;
	                    s3 = peg$FAILED;
	                  }
	                } else {
	                  peg$currPos = s3;
	                  s3 = peg$FAILED;
	                }
	              } else {
	                peg$currPos = s3;
	                s3 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s3;
	              s3 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	          if (s3 !== peg$FAILED) {
	            s2 = input.substring(s2, peg$currPos);
	          } else {
	            s2 = s3;
	          }
	          if (s2 !== peg$FAILED) {
	            s3 = peg$parse_();
	            if (s3 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c53(s2);
	              s0 = s1;
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      }

	      return s0;
	    }

	    function peg$parseLiteralExpression() {
	      var s0, s1;

	      s0 = peg$currPos;
	      s1 = peg$parseNullToken();
	      if (s1 === peg$FAILED) {
	        s1 = peg$parseFalseToken();
	        if (s1 === peg$FAILED) {
	          s1 = peg$parseTrueToken();
	        }
	      }
	      if (s1 !== peg$FAILED) {
	        peg$savedPos = s0;
	        s1 = peg$c60(s1);
	      }
	      s0 = s1;
	      if (s0 === peg$FAILED) {
	        s0 = peg$currPos;
	        s1 = peg$parseNumber();
	        if (s1 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c60(s1);
	        }
	        s0 = s1;
	        if (s0 === peg$FAILED) {
	          s0 = peg$currPos;
	          s1 = peg$parseName();
	          if (s1 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c60(s1);
	          }
	          s0 = s1;
	          if (s0 === peg$FAILED) {
	            s0 = peg$currPos;
	            s1 = peg$parseString();
	            if (s1 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c60(s1);
	            }
	            s0 = s1;
	            if (s0 === peg$FAILED) {
	              s0 = peg$currPos;
	              s1 = peg$parseStringSet();
	              if (s1 !== peg$FAILED) {
	                peg$savedPos = s0;
	                s1 = peg$c60(s1);
	              }
	              s0 = s1;
	              if (s0 === peg$FAILED) {
	                s0 = peg$currPos;
	                s1 = peg$parseNumberSet();
	                if (s1 !== peg$FAILED) {
	                  peg$savedPos = s0;
	                  s1 = peg$c60(s1);
	                }
	                s0 = s1;
	              }
	            }
	          }
	        }
	      }

	      return s0;
	    }

	    function peg$parseStringSet() {
	      var s0, s1, s2, s3, s4, s5, s6;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      s1 = peg$parseOpenBracket();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseStringOrNull();
	        if (s2 !== peg$FAILED) {
	          s3 = [];
	          s4 = peg$currPos;
	          s5 = peg$parseComma();
	          if (s5 !== peg$FAILED) {
	            s6 = peg$parseStringOrNull();
	            if (s6 !== peg$FAILED) {
	              s5 = [s5, s6];
	              s4 = s5;
	            } else {
	              peg$currPos = s4;
	              s4 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s4;
	            s4 = peg$FAILED;
	          }
	          while (s4 !== peg$FAILED) {
	            s3.push(s4);
	            s4 = peg$currPos;
	            s5 = peg$parseComma();
	            if (s5 !== peg$FAILED) {
	              s6 = peg$parseStringOrNull();
	              if (s6 !== peg$FAILED) {
	                s5 = [s5, s6];
	                s4 = s5;
	              } else {
	                peg$currPos = s4;
	                s4 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s4;
	              s4 = peg$FAILED;
	            }
	          }
	          if (s3 !== peg$FAILED) {
	            s4 = peg$parseCloseBracket();
	            if (s4 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c62(s2, s3);
	              s0 = s1;
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c61); }
	      }

	      return s0;
	    }

	    function peg$parseStringOrNull() {
	      var s0;

	      s0 = peg$parseString();
	      if (s0 === peg$FAILED) {
	        s0 = peg$parseNullToken();
	      }

	      return s0;
	    }

	    function peg$parseNumberSet() {
	      var s0, s1, s2, s3, s4, s5, s6;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      s1 = peg$parseOpenBracket();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseNumberOrNull();
	        if (s2 !== peg$FAILED) {
	          s3 = [];
	          s4 = peg$currPos;
	          s5 = peg$parseComma();
	          if (s5 !== peg$FAILED) {
	            s6 = peg$parseNumberOrNull();
	            if (s6 !== peg$FAILED) {
	              s5 = [s5, s6];
	              s4 = s5;
	            } else {
	              peg$currPos = s4;
	              s4 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s4;
	            s4 = peg$FAILED;
	          }
	          while (s4 !== peg$FAILED) {
	            s3.push(s4);
	            s4 = peg$currPos;
	            s5 = peg$parseComma();
	            if (s5 !== peg$FAILED) {
	              s6 = peg$parseNumberOrNull();
	              if (s6 !== peg$FAILED) {
	                s5 = [s5, s6];
	                s4 = s5;
	              } else {
	                peg$currPos = s4;
	                s4 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s4;
	              s4 = peg$FAILED;
	            }
	          }
	          if (s3 !== peg$FAILED) {
	            s4 = peg$parseCloseBracket();
	            if (s4 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c62(s2, s3);
	              s0 = s1;
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c63); }
	      }

	      return s0;
	    }

	    function peg$parseNumberOrNull() {
	      var s0;

	      s0 = peg$parseNumber();
	      if (s0 === peg$FAILED) {
	        s0 = peg$parseNullToken();
	      }

	      return s0;
	    }

	    function peg$parseString() {
	      var s0, s1, s2, s3, s4;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 39) {
	        s1 = peg$c65;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c66); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseNotSQuote();
	        if (s2 !== peg$FAILED) {
	          if (input.charCodeAt(peg$currPos) === 39) {
	            s3 = peg$c65;
	            peg$currPos++;
	          } else {
	            s3 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c66); }
	          }
	          if (s3 !== peg$FAILED) {
	            s4 = peg$parse_();
	            if (s4 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c67(s2);
	              s0 = s1;
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      if (s0 === peg$FAILED) {
	        s0 = peg$currPos;
	        if (input.charCodeAt(peg$currPos) === 39) {
	          s1 = peg$c65;
	          peg$currPos++;
	        } else {
	          s1 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c66); }
	        }
	        if (s1 !== peg$FAILED) {
	          s2 = peg$parseNotSQuote();
	          if (s2 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c68(s2);
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	        if (s0 === peg$FAILED) {
	          s0 = peg$currPos;
	          if (input.charCodeAt(peg$currPos) === 34) {
	            s1 = peg$c69;
	            peg$currPos++;
	          } else {
	            s1 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c70); }
	          }
	          if (s1 !== peg$FAILED) {
	            s2 = peg$parseNotDQuote();
	            if (s2 !== peg$FAILED) {
	              if (input.charCodeAt(peg$currPos) === 34) {
	                s3 = peg$c69;
	                peg$currPos++;
	              } else {
	                s3 = peg$FAILED;
	                if (peg$silentFails === 0) { peg$fail(peg$c70); }
	              }
	              if (s3 !== peg$FAILED) {
	                s4 = peg$parse_();
	                if (s4 !== peg$FAILED) {
	                  peg$savedPos = s0;
	                  s1 = peg$c67(s2);
	                  s0 = s1;
	                } else {
	                  peg$currPos = s0;
	                  s0 = peg$FAILED;
	                }
	              } else {
	                peg$currPos = s0;
	                s0 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	          if (s0 === peg$FAILED) {
	            s0 = peg$currPos;
	            if (input.charCodeAt(peg$currPos) === 34) {
	              s1 = peg$c69;
	              peg$currPos++;
	            } else {
	              s1 = peg$FAILED;
	              if (peg$silentFails === 0) { peg$fail(peg$c70); }
	            }
	            if (s1 !== peg$FAILED) {
	              s2 = peg$parseNotDQuote();
	              if (s2 !== peg$FAILED) {
	                peg$savedPos = s0;
	                s1 = peg$c71(s2);
	                s0 = s1;
	              } else {
	                peg$currPos = s0;
	                s0 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          }
	        }
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c64); }
	      }

	      return s0;
	    }

	    function peg$parseNullToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 4) === peg$c72) {
	        s1 = peg$c72;
	        peg$currPos += 4;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c73); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c74();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseFalseToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 5) === peg$c75) {
	        s1 = peg$c75;
	        peg$currPos += 5;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c76); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c77();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseTrueToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 4) === peg$c78) {
	        s1 = peg$c78;
	        peg$currPos += 4;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c79); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c80();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseNotToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 3) === peg$c81) {
	        s1 = peg$c81;
	        peg$currPos += 3;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c82); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseAndToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 3) === peg$c83) {
	        s1 = peg$c83;
	        peg$currPos += 3;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c84); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseOrToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 2) === peg$c85) {
	        s1 = peg$c85;
	        peg$currPos += 2;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c86); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseConcatToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 2) === peg$c87) {
	        s1 = peg$c87;
	        peg$currPos += 2;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c88); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseIdentifierPart() {
	      var s0;

	      if (peg$c89.test(input.charAt(peg$currPos))) {
	        s0 = input.charAt(peg$currPos);
	        peg$currPos++;
	      } else {
	        s0 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c90); }
	      }

	      return s0;
	    }

	    function peg$parseNumber() {
	      var s0, s1, s2, s3, s4, s5;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      s1 = peg$currPos;
	      s2 = peg$currPos;
	      s3 = peg$parseInt();
	      if (s3 !== peg$FAILED) {
	        s4 = peg$parseFraction();
	        if (s4 === peg$FAILED) {
	          s4 = null;
	        }
	        if (s4 !== peg$FAILED) {
	          s5 = peg$parseExp();
	          if (s5 === peg$FAILED) {
	            s5 = null;
	          }
	          if (s5 !== peg$FAILED) {
	            s3 = [s3, s4, s5];
	            s2 = s3;
	          } else {
	            peg$currPos = s2;
	            s2 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s2;
	        s2 = peg$FAILED;
	      }
	      if (s2 !== peg$FAILED) {
	        s1 = input.substring(s1, peg$currPos);
	      } else {
	        s1 = s2;
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c92(s1);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c91); }
	      }

	      return s0;
	    }

	    function peg$parseInt() {
	      var s0, s1, s2, s3, s4;

	      s0 = peg$currPos;
	      s1 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 45) {
	        s2 = peg$c31;
	        peg$currPos++;
	      } else {
	        s2 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c32); }
	      }
	      if (s2 === peg$FAILED) {
	        s2 = null;
	      }
	      if (s2 !== peg$FAILED) {
	        if (peg$c93.test(input.charAt(peg$currPos))) {
	          s3 = input.charAt(peg$currPos);
	          peg$currPos++;
	        } else {
	          s3 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c94); }
	        }
	        if (s3 !== peg$FAILED) {
	          s4 = peg$parseDigits();
	          if (s4 !== peg$FAILED) {
	            s2 = [s2, s3, s4];
	            s1 = s2;
	          } else {
	            peg$currPos = s1;
	            s1 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s1;
	          s1 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s1;
	        s1 = peg$FAILED;
	      }
	      if (s1 !== peg$FAILED) {
	        s0 = input.substring(s0, peg$currPos);
	      } else {
	        s0 = s1;
	      }
	      if (s0 === peg$FAILED) {
	        s0 = peg$currPos;
	        s1 = peg$currPos;
	        if (input.charCodeAt(peg$currPos) === 45) {
	          s2 = peg$c31;
	          peg$currPos++;
	        } else {
	          s2 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c32); }
	        }
	        if (s2 === peg$FAILED) {
	          s2 = null;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parseDigit();
	          if (s3 !== peg$FAILED) {
	            s2 = [s2, s3];
	            s1 = s2;
	          } else {
	            peg$currPos = s1;
	            s1 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s1;
	          s1 = peg$FAILED;
	        }
	        if (s1 !== peg$FAILED) {
	          s0 = input.substring(s0, peg$currPos);
	        } else {
	          s0 = s1;
	        }
	      }

	      return s0;
	    }

	    function peg$parseFraction() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      s1 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 46) {
	        s2 = peg$c95;
	        peg$currPos++;
	      } else {
	        s2 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c96); }
	      }
	      if (s2 !== peg$FAILED) {
	        s3 = peg$parseDigits();
	        if (s3 !== peg$FAILED) {
	          s2 = [s2, s3];
	          s1 = s2;
	        } else {
	          peg$currPos = s1;
	          s1 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s1;
	        s1 = peg$FAILED;
	      }
	      if (s1 !== peg$FAILED) {
	        s0 = input.substring(s0, peg$currPos);
	      } else {
	        s0 = s1;
	      }

	      return s0;
	    }

	    function peg$parseExp() {
	      var s0, s1, s2, s3, s4;

	      s0 = peg$currPos;
	      s1 = peg$currPos;
	      if (input.substr(peg$currPos, 1).toLowerCase() === peg$c97) {
	        s2 = input.charAt(peg$currPos);
	        peg$currPos++;
	      } else {
	        s2 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c98); }
	      }
	      if (s2 !== peg$FAILED) {
	        if (peg$c99.test(input.charAt(peg$currPos))) {
	          s3 = input.charAt(peg$currPos);
	          peg$currPos++;
	        } else {
	          s3 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c100); }
	        }
	        if (s3 === peg$FAILED) {
	          s3 = null;
	        }
	        if (s3 !== peg$FAILED) {
	          s4 = peg$parseDigits();
	          if (s4 !== peg$FAILED) {
	            s2 = [s2, s3, s4];
	            s1 = s2;
	          } else {
	            peg$currPos = s1;
	            s1 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s1;
	          s1 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s1;
	        s1 = peg$FAILED;
	      }
	      if (s1 !== peg$FAILED) {
	        s0 = input.substring(s0, peg$currPos);
	      } else {
	        s0 = s1;
	      }

	      return s0;
	    }

	    function peg$parseDigits() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      s1 = [];
	      s2 = peg$parseDigit();
	      if (s2 !== peg$FAILED) {
	        while (s2 !== peg$FAILED) {
	          s1.push(s2);
	          s2 = peg$parseDigit();
	        }
	      } else {
	        s1 = peg$FAILED;
	      }
	      if (s1 !== peg$FAILED) {
	        s0 = input.substring(s0, peg$currPos);
	      } else {
	        s0 = s1;
	      }

	      return s0;
	    }

	    function peg$parseDigit() {
	      var s0;

	      if (peg$c101.test(input.charAt(peg$currPos))) {
	        s0 = input.charAt(peg$currPos);
	        peg$currPos++;
	      } else {
	        s0 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c102); }
	      }

	      return s0;
	    }

	    function peg$parseOpenBracket() {
	      var s0, s1, s2;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 91) {
	        s1 = peg$c104;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c105); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          s1 = [s1, s2];
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c103); }
	      }

	      return s0;
	    }

	    function peg$parseCloseBracket() {
	      var s0, s1, s2;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 93) {
	        s1 = peg$c107;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c108); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          s1 = [s1, s2];
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c106); }
	      }

	      return s0;
	    }

	    function peg$parseOpenParen() {
	      var s0, s1, s2;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 40) {
	        s1 = peg$c110;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c111); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          s1 = [s1, s2];
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c109); }
	      }

	      return s0;
	    }

	    function peg$parseCloseParen() {
	      var s0, s1, s2;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 41) {
	        s1 = peg$c113;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c114); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          s1 = [s1, s2];
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c112); }
	      }

	      return s0;
	    }

	    function peg$parseComma() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 44) {
	        s1 = peg$c115;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c116); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          s1 = [s1, s2];
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseDot() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 46) {
	        s1 = peg$c95;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c96); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          s1 = [s1, s2];
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parsePipe() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 124) {
	        s1 = peg$c117;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c118); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          s1 = [s1, s2];
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseReservedWord() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 3) === peg$c46) {
	        s1 = peg$c46;
	        peg$currPos += 3;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c47); }
	      }
	      if (s1 === peg$FAILED) {
	        if (input.substr(peg$currPos, 5) === peg$c75) {
	          s1 = peg$c75;
	          peg$currPos += 5;
	        } else {
	          s1 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c76); }
	        }
	        if (s1 === peg$FAILED) {
	          if (input.substr(peg$currPos, 4) === peg$c78) {
	            s1 = peg$c78;
	            peg$currPos += 4;
	          } else {
	            s1 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c79); }
	          }
	        }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        if (peg$c89.test(input.charAt(peg$currPos))) {
	          s3 = input.charAt(peg$currPos);
	          peg$currPos++;
	        } else {
	          s3 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c90); }
	        }
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s1 = [s1, s2];
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseName() {
	      var s0, s1, s2;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      s1 = peg$parseNamePart();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c120(s1);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c119); }
	      }

	      return s0;
	    }

	    function peg$parseNamePart() {
	      var s0, s1, s2, s3, s4, s5;

	      s0 = peg$currPos;
	      s1 = peg$currPos;
	      s2 = peg$currPos;
	      peg$silentFails++;
	      s3 = peg$parseReservedWord();
	      peg$silentFails--;
	      if (s3 === peg$FAILED) {
	        s2 = void 0;
	      } else {
	        peg$currPos = s2;
	        s2 = peg$FAILED;
	      }
	      if (s2 !== peg$FAILED) {
	        if (peg$c89.test(input.charAt(peg$currPos))) {
	          s3 = input.charAt(peg$currPos);
	          peg$currPos++;
	        } else {
	          s3 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c90); }
	        }
	        if (s3 !== peg$FAILED) {
	          s4 = [];
	          if (peg$c121.test(input.charAt(peg$currPos))) {
	            s5 = input.charAt(peg$currPos);
	            peg$currPos++;
	          } else {
	            s5 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c122); }
	          }
	          while (s5 !== peg$FAILED) {
	            s4.push(s5);
	            if (peg$c121.test(input.charAt(peg$currPos))) {
	              s5 = input.charAt(peg$currPos);
	              peg$currPos++;
	            } else {
	              s5 = peg$FAILED;
	              if (peg$silentFails === 0) { peg$fail(peg$c122); }
	            }
	          }
	          if (s4 !== peg$FAILED) {
	            s2 = [s2, s3, s4];
	            s1 = s2;
	          } else {
	            peg$currPos = s1;
	            s1 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s1;
	          s1 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s1;
	        s1 = peg$FAILED;
	      }
	      if (s1 !== peg$FAILED) {
	        s0 = input.substring(s0, peg$currPos);
	      } else {
	        s0 = s1;
	      }

	      return s0;
	    }

	    function peg$parseTypeName() {
	      var s0, s1, s2;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      s1 = [];
	      if (peg$c124.test(input.charAt(peg$currPos))) {
	        s2 = input.charAt(peg$currPos);
	        peg$currPos++;
	      } else {
	        s2 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c125); }
	      }
	      if (s2 !== peg$FAILED) {
	        while (s2 !== peg$FAILED) {
	          s1.push(s2);
	          if (peg$c124.test(input.charAt(peg$currPos))) {
	            s2 = input.charAt(peg$currPos);
	            peg$currPos++;
	          } else {
	            s2 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c125); }
	          }
	        }
	      } else {
	        s1 = peg$FAILED;
	      }
	      if (s1 !== peg$FAILED) {
	        s0 = input.substring(s0, peg$currPos);
	      } else {
	        s0 = s1;
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c123); }
	      }

	      return s0;
	    }

	    function peg$parseNotSQuote() {
	      var s0, s1, s2;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      s1 = [];
	      if (peg$c127.test(input.charAt(peg$currPos))) {
	        s2 = input.charAt(peg$currPos);
	        peg$currPos++;
	      } else {
	        s2 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c128); }
	      }
	      while (s2 !== peg$FAILED) {
	        s1.push(s2);
	        if (peg$c127.test(input.charAt(peg$currPos))) {
	          s2 = input.charAt(peg$currPos);
	          peg$currPos++;
	        } else {
	          s2 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c128); }
	        }
	      }
	      if (s1 !== peg$FAILED) {
	        s0 = input.substring(s0, peg$currPos);
	      } else {
	        s0 = s1;
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c126); }
	      }

	      return s0;
	    }

	    function peg$parseNotDQuote() {
	      var s0, s1, s2;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      s1 = [];
	      if (peg$c130.test(input.charAt(peg$currPos))) {
	        s2 = input.charAt(peg$currPos);
	        peg$currPos++;
	      } else {
	        s2 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c131); }
	      }
	      while (s2 !== peg$FAILED) {
	        s1.push(s2);
	        if (peg$c130.test(input.charAt(peg$currPos))) {
	          s2 = input.charAt(peg$currPos);
	          peg$currPos++;
	        } else {
	          s2 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c131); }
	        }
	      }
	      if (s1 !== peg$FAILED) {
	        s0 = input.substring(s0, peg$currPos);
	      } else {
	        s0 = s1;
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c129); }
	      }

	      return s0;
	    }

	    function peg$parse_() {
	      var s0, s1, s2;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      s1 = [];
	      if (peg$c133.test(input.charAt(peg$currPos))) {
	        s2 = input.charAt(peg$currPos);
	        peg$currPos++;
	      } else {
	        s2 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c134); }
	      }
	      while (s2 !== peg$FAILED) {
	        s1.push(s2);
	        if (peg$c133.test(input.charAt(peg$currPos))) {
	          s2 = input.charAt(peg$currPos);
	          peg$currPos++;
	        } else {
	          s2 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c134); }
	        }
	      }
	      if (s1 !== peg$FAILED) {
	        s0 = input.substring(s0, peg$currPos);
	      } else {
	        s0 = s1;
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c132); }
	      }

	      return s0;
	    }

	    // starts with function(plywood, chronoshift)
	    var ply = plywood.ply;
	    var $ = plywood.$;
	    var r = plywood.r;
	    var Expression = plywood.Expression;
	    var LiteralExpression = plywood.LiteralExpression;
	    var RefExpression = plywood.RefExpression;
	    var Set = plywood.Set;
	    var Action = plywood.Action;

	    var possibleCalls = {};
	    for (var key in Action.classMap) possibleCalls[key] = 1;
	    possibleCalls['negate'] = 1;
	    possibleCalls['isnt'] = 1;
	    possibleCalls['sqrt'] = 1;

	    function makeListMap1(head, tail) {
	      return [head].concat(tail.map(function(t) { return t[1] }));
	    }

	    function naryExpressionFactory(op, head, tail) {
	      if (!tail.length) return head;
	      return head[op].apply(head, tail.map(function(t) { return t[1]; }));
	    }

	    function naryExpressionWithAltFactory(op, head, tail, altToken, altOp) {
	      if (!tail.length) return head;
	      for (var i = 0; i < tail.length; i++) {
	        var t = tail[i];
	        head = head[t[0] === altToken ? altOp : op].call(head, t[1]);
	      }
	      return head;
	    }



	    peg$result = peg$startRuleFunction();

	    if (peg$result !== peg$FAILED && peg$currPos === input.length) {
	      return peg$result;
	    } else {
	      if (peg$result !== peg$FAILED && peg$currPos < input.length) {
	        peg$fail({ type: "end", description: "end of input" });
	      }

	      throw peg$buildException(
	        null,
	        peg$maxFailExpected,
	        peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,
	        peg$maxFailPos < input.length
	          ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)
	          : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)
	      );
	    }
	  }

	  return {
	    SyntaxError: peg$SyntaxError,
	    parse:       peg$parse
	  };
	};


/***/ },
/* 191 */
/***/ function(module, exports) {

	"use strict";
	module.exports = function(plywood, chronoshift) {
	  /*
	   * Generated by PEG.js 0.9.0.
	   *
	   * http://pegjs.org/
	   */

	  function peg$subclass(child, parent) {
	    function ctor() { this.constructor = child; }
	    ctor.prototype = parent.prototype;
	    child.prototype = new ctor();
	  }

	  function peg$SyntaxError(message, expected, found, location) {
	    this.message  = message;
	    this.expected = expected;
	    this.found    = found;
	    this.location = location;
	    this.name     = "SyntaxError";

	    if (typeof Error.captureStackTrace === "function") {
	      Error.captureStackTrace(this, peg$SyntaxError);
	    }
	  }

	  peg$subclass(peg$SyntaxError, Error);

	  function peg$parse(input) {
	    var options = arguments.length > 1 ? arguments[1] : {},
	        parser  = this,

	        peg$FAILED = {},

	        peg$startRuleFunctions = { start: peg$parsestart },
	        peg$startRuleFunction  = peg$parsestart,

	        peg$c0 = function(queryParse) { return queryParse; },
	        peg$c1 = function(queryParse) {
	              return queryParse;
	            },
	        peg$c2 = function(ex) {
	              return {
	                verb: null,
	                expression: ex
	              }
	            },
	        peg$c3 = function(ex) {
	              return {
	                verb: 'SELECT',
	                rewrite: 'SHOW',
	                database: 'information_schema',
	                expression: ex
	              };
	            },
	        peg$c4 = function(like) {
	              // https://dev.mysql.com/doc/refman/5.7/en/show-variables.html
	              var ex = $('GLOBAL_VARIABLES')
	              if (like) ex = ex.filter(like($('VARIABLE_NAME')));
	              return ex
	                .apply('Variable_name', $('VARIABLE_NAME'))
	                .apply('Value', $('VARIABLE_VALUE'))
	                .select('Variable_name', 'Value');
	            },
	        peg$c5 = function(like) {
	              // https://dev.mysql.com/doc/refman/5.0/en/schemata-table.html
	              var ex = $('SCHEMATA')
	              if (like) ex = ex.filter(like($('SCHEMA_NAME')));
	              return ex
	                .apply('Database', $('SCHEMA_NAME'))
	                .select('Database');
	            },
	        peg$c6 = function(db, like) {
	              // https://dev.mysql.com/doc/refman/5.0/en/tables-table.html
	              var ex = $('TABLES')
	              if (db) ex= ex.filter($('TABLE_SCHEMA').is(db[1]));
	              if (like) ex = ex.filter(like($('TABLE_NAME')));
	              return ex
	                .apply('Tables_in_database', $('TABLE_NAME'))
	                .select('Tables_in_database');
	            },
	        peg$c7 = function(full, table, db, like, where) {
	              // https://dev.mysql.com/doc/refman/5.0/en/columns-table.html
	              var ex = $('COLUMNS').filter($('TABLE_NAME').is(table.name));
	              db = db ? db[1] : table.namespace;
	              if (db) ex = ex.filter($('TABLE_SCHEMA').is(db));
	              if (like) ex = ex.filter(like($('COLUMN_NAME')));
	              if (where) ex = ex.filter(where);
	              ex = ex
	                .apply('Field', $('COLUMN_NAME'))
	                .apply('Type', $('COLUMN_TYPE'))
	                .apply('Null', $('IS_NULLABLE'))
	                .apply('Key', $('COLUMN_KEY'))
	                .apply('Default', $('COLUMN_DEFAULT'))
	                .apply('Extra', $('EXTRA'))

	              if (full) {
	                ex = ex
	                  .apply('Collation', $('COLLATION_NAME'))
	                  .apply('Privileges', $('PRIVILEGES'))
	                  .apply('Comment', $('COLUMN_COMMENT'))
	                  .select('Field', 'Type', 'Null', 'Key', 'Default', 'Extra', 'Collation', 'Privileges', 'Comment')
	              } else {
	                ex = ex.select('Field', 'Type', 'Null', 'Key', 'Default', 'Extra')
	              }

	              return ex;
	            },
	        peg$c8 = { type: "any", description: "any character" },
	        peg$c9 = function(verb, rest) {
	              return {
	                verb: verb,
	                rest: rest
	              };
	            },
	        peg$c10 = function(table) {
	              return {
	                verb: 'DESCRIBE',
	                table: table.name
	              };
	            },
	        peg$c11 = function(verb) { return unsupportedVerbs[verb.toUpperCase()]; },
	        peg$c12 = function(verb, rest) {
	              return {
	                verb: verb.toUpperCase(),
	                rest: rest
	              };
	            },
	        peg$c13 = function(distinct, columns, from, where, groupBys, having, orderBy, limit) {
	              return {
	                verb: 'SELECT',
	                expression: constructQuery(distinct, columns, from, where, groupBys, having, orderBy, limit),
	                table: from ? from.name : null,
	                database: from ? from.namespace : null
	              };
	            },
	        peg$c14 = function(distinct, columns, where, groupBys, having, orderBy, limit) { return constructQuery(distinct, columns, null, where, groupBys, having, orderBy, limit); },
	        peg$c15 = function() { return '*'; },
	        peg$c16 = function(head, tail) { return makeListMap1(head, tail); },
	        peg$c17 = function(ex, as) {
	              if (as == null) {
	                as = text().trim();
	                if (as[0] === '`' && as[as.length - 1] === '`') as = as.substr(1, as.length - 2);
	              }
	              return new ApplyAction({
	                name: as,
	                expression: ex
	              });
	            },
	        peg$c18 = function(name) { return name; },
	        peg$c19 = function(nr) { return nr; },
	        peg$c20 = function(filter) { return filter; },
	        peg$c21 = function(having) { return new FilterAction({ expression: having }); },
	        peg$c22 = function(orderBy, direction, tail) {
	              if (tail.length) error('plywood does not currently support multi-column ORDER BYs');
	              return new SortAction({ expression: orderBy, direction: direction || 'ascending' });
	            },
	        peg$c23 = function(limit) { return new LimitAction({ limit: limit }); },
	        peg$c24 = ";",
	        peg$c25 = { type: "literal", value: ";", description: "\";\"" },
	        peg$c26 = function(head, tail) { return naryExpressionFactory('or', head, tail); },
	        peg$c27 = function(head, tail) { return naryExpressionFactory('and', head, tail); },
	        peg$c28 = function(not, ex) {
	              if (not) ex = ex.not();
	              return ex;
	            },
	        peg$c29 = function(ex, rhs) {
	              if (rhs) ex = rhs(ex);
	              return ex;
	            },
	        peg$c30 = function(not, rhs) {
	              if (!not) return rhs;
	              return function(ex) { return rhs(ex).not(); };
	            },
	        peg$c31 = function(not, rhs) {
	              return function(ex) {
	                ex = ex.is(rhs);
	                if (not) ex = ex.not();
	                return ex;
	              };
	            },
	        peg$c32 = function(op, lhs) {
	              return function(ex) { return ex[op](lhs); };
	            },
	        peg$c33 = function(start, end) {
	              var range = { start: start.value, end: end.value, bounds: '[]' };
	              return function(ex) { return ex.in(range); };
	            },
	        peg$c34 = function(list) {
	              return function(ex) { return ex.in(list); };
	            },
	        peg$c35 = function(string) {
	              return function(ex) { return ex.contains(string, 'ignoreCase'); };
	            },
	        peg$c36 = function(string) {
	              return function(ex) { return ex.match(string); };
	            },
	        peg$c37 = function(string, escape) {
	              var escapeStr = escape ? escape[1] : '\\';
	              if (escapeStr.length > 1) error('Invalid escape string: ' + escapeStr);
	              var regExp = MatchAction.likeToRegExp(string, escapeStr);
	              return function(ex) { return ex.match(regExp); };
	            },
	        peg$c38 = "=",
	        peg$c39 = { type: "literal", value: "=", description: "\"=\"" },
	        peg$c40 = function() { return 'is'; },
	        peg$c41 = "<=>",
	        peg$c42 = { type: "literal", value: "<=>", description: "\"<=>\"" },
	        peg$c43 = "<>",
	        peg$c44 = { type: "literal", value: "<>", description: "\"<>\"" },
	        peg$c45 = function() { return 'isnt'; },
	        peg$c46 = "!=",
	        peg$c47 = { type: "literal", value: "!=", description: "\"!=\"" },
	        peg$c48 = "<=",
	        peg$c49 = { type: "literal", value: "<=", description: "\"<=\"" },
	        peg$c50 = function() { return 'lessThanOrEqual'; },
	        peg$c51 = ">=",
	        peg$c52 = { type: "literal", value: ">=", description: "\">=\"" },
	        peg$c53 = function() { return 'greaterThanOrEqual'; },
	        peg$c54 = "<",
	        peg$c55 = { type: "literal", value: "<", description: "\"<\"" },
	        peg$c56 = function() { return 'lessThan'; },
	        peg$c57 = ">",
	        peg$c58 = { type: "literal", value: ">", description: "\">\"" },
	        peg$c59 = function() { return 'greaterThan'; },
	        peg$c60 = function(head, tail) { return naryExpressionWithAltFactory('add', head, tail, '-', 'subtract'); },
	        peg$c61 = "+",
	        peg$c62 = { type: "literal", value: "+", description: "\"+\"" },
	        peg$c63 = "-",
	        peg$c64 = { type: "literal", value: "-", description: "\"-\"" },
	        peg$c65 = function(op) { return op; },
	        peg$c66 = function(head, tail) { return naryExpressionWithAltFactory('multiply', head, tail, '/', 'divide'); },
	        peg$c67 = "*",
	        peg$c68 = { type: "literal", value: "*", description: "\"*\"" },
	        peg$c69 = "/",
	        peg$c70 = { type: "literal", value: "/", description: "\"/\"" },
	        peg$c71 = function(op, ex) {
	              // !Number is to make sure that -3 parses as literal(-3) and not literal(3).negate()
	              var negEx = ex.negate(); // Always negate (even with +) just to make sure it is possible
	              return op === '-' ? negEx : ex;
	            },
	        peg$c72 = function(sub) { return sub; },
	        peg$c73 = function(distinct, exd) {
	              if (!exd) {
	                if (distinct) error('COUNT DISTINCT must have an expression');
	                return dataRef.count();
	              } else if (exd.ex === '*') {
	                if (distinct) error('COUNT DISTINCT can not be used with *');
	                return exd.data.count();
	              } else {
	                return distinct ? exd.data.countDistinct(exd.ex) : exd.data.filter(exd.ex.isnt(null)).count()
	              }
	            },
	        peg$c74 = function(fn, distinct, exd) {
	              if (distinct) error('can not use DISTINCT for ' + fn + ' aggregator');
	              if (exd.ex === '*') error('can not use * for ' + fn + ' aggregator');
	              return exd.data[fn](exd.ex);
	            },
	        peg$c75 = function(distinct, exd, value) {
	              if (distinct) error('can not use DISTINCT for quantile aggregator');
	              if (exd.ex === '*') error('can not use * for quantile aggregator');
	              return exd.data.quantile(exd.ex, value);
	            },
	        peg$c76 = function(value, filter) {
	              var d = dataRef;
	              if (filter) d = d.filter(filter);
	              return d.custom(value);
	            },
	        peg$c77 = function(ex, filter) {
	              var data = dataRef;
	              if (filter) data = data.filter(filter);
	              return { ex: ex, data: data };
	            },
	        peg$c78 = function(fn, params) { return fn.apply(null, params); },
	        peg$c79 = function(name) { return fns[name.toUpperCase()]; },
	        peg$c80 = function(ref) { return $(ref.name); },
	        peg$c81 = function(ns, name) {
	              return {
	                namespace: ns ? ns[0] : null,
	                name: name
	              };
	            },
	        peg$c82 = function(name) { return reserved(name); },
	        peg$c83 = function(name) { return name },
	        peg$c84 = "`",
	        peg$c85 = { type: "literal", value: "`", description: "\"`\"" },
	        peg$c86 = /^[^`]/,
	        peg$c87 = { type: "class", value: "[^`]", description: "[^`]" },
	        peg$c88 = function(type, v) { return r(makeDate(type, v)); },
	        peg$c89 = function(v) { return r(v); },
	        peg$c90 = function(head, tail) { return Set.fromJS(makeListMap1(head, tail)); },
	        peg$c91 = function(head, tail) { return r(Set.fromJS(makeListMap1(head, tail))); },
	        peg$c92 = { type: "other", description: "String" },
	        peg$c93 = "'",
	        peg$c94 = { type: "literal", value: "'", description: "\"'\"" },
	        peg$c95 = function(chars) { return chars; },
	        peg$c96 = function(chars) { error("Unmatched single quote"); },
	        peg$c97 = "\"",
	        peg$c98 = { type: "literal", value: "\"", description: "\"\\\"\"" },
	        peg$c99 = function(chars) { error("Unmatched double quote"); },
	        peg$c100 = function(n, unit) { return intervalUnits[unit] },
	        peg$c101 = function(n, unit) {
	              if (n !== 0) error('only zero intervals supported for now');
	              return 0;
	            },
	        peg$c102 = "null",
	        peg$c103 = { type: "literal", value: "NULL", description: "\"NULL\"" },
	        peg$c104 = function() { return null; },
	        peg$c105 = "true",
	        peg$c106 = { type: "literal", value: "TRUE", description: "\"TRUE\"" },
	        peg$c107 = function() { return true; },
	        peg$c108 = "false",
	        peg$c109 = { type: "literal", value: "FALSE", description: "\"FALSE\"" },
	        peg$c110 = function() { return false; },
	        peg$c111 = "select",
	        peg$c112 = { type: "literal", value: "SELECT", description: "\"SELECT\"" },
	        peg$c113 = function() { return 'SELECT'; },
	        peg$c114 = "describe",
	        peg$c115 = { type: "literal", value: "DESCRIBE", description: "\"DESCRIBE\"" },
	        peg$c116 = function() { return 'DESCRIBE'; },
	        peg$c117 = "show",
	        peg$c118 = { type: "literal", value: "SHOW", description: "\"SHOW\"" },
	        peg$c119 = function() { return 'SHOW'; },
	        peg$c120 = "set",
	        peg$c121 = { type: "literal", value: "SET", description: "\"SET\"" },
	        peg$c122 = function() { return 'SET'; },
	        peg$c123 = "variables",
	        peg$c124 = { type: "literal", value: "VARIABLES", description: "\"VARIABLES\"" },
	        peg$c125 = "databases",
	        peg$c126 = { type: "literal", value: "DATABASES", description: "\"DATABASES\"" },
	        peg$c127 = "schemas",
	        peg$c128 = { type: "literal", value: "SCHEMAS", description: "\"SCHEMAS\"" },
	        peg$c129 = "columns",
	        peg$c130 = { type: "literal", value: "COLUMNS", description: "\"COLUMNS\"" },
	        peg$c131 = "full",
	        peg$c132 = { type: "literal", value: "FULL", description: "\"FULL\"" },
	        peg$c133 = "tables",
	        peg$c134 = { type: "literal", value: "TABLES", description: "\"TABLES\"" },
	        peg$c135 = "from",
	        peg$c136 = { type: "literal", value: "FROM", description: "\"FROM\"" },
	        peg$c137 = "as",
	        peg$c138 = { type: "literal", value: "AS", description: "\"AS\"" },
	        peg$c139 = "on",
	        peg$c140 = { type: "literal", value: "ON", description: "\"ON\"" },
	        peg$c141 = "left",
	        peg$c142 = { type: "literal", value: "LEFT", description: "\"LEFT\"" },
	        peg$c143 = "inner",
	        peg$c144 = { type: "literal", value: "INNER", description: "\"INNER\"" },
	        peg$c145 = "join",
	        peg$c146 = { type: "literal", value: "JOIN", description: "\"JOIN\"" },
	        peg$c147 = "union",
	        peg$c148 = { type: "literal", value: "UNION", description: "\"UNION\"" },
	        peg$c149 = "where",
	        peg$c150 = { type: "literal", value: "WHERE", description: "\"WHERE\"" },
	        peg$c151 = "group",
	        peg$c152 = { type: "literal", value: "GROUP", description: "\"GROUP\"" },
	        peg$c153 = "by",
	        peg$c154 = { type: "literal", value: "BY", description: "\"BY\"" },
	        peg$c155 = "order",
	        peg$c156 = { type: "literal", value: "ORDER", description: "\"ORDER\"" },
	        peg$c157 = "having",
	        peg$c158 = { type: "literal", value: "HAVING", description: "\"HAVING\"" },
	        peg$c159 = "limit",
	        peg$c160 = { type: "literal", value: "LIMIT", description: "\"LIMIT\"" },
	        peg$c161 = "asc",
	        peg$c162 = { type: "literal", value: "ASC", description: "\"ASC\"" },
	        peg$c163 = function() { return SortAction.ASCENDING;  },
	        peg$c164 = "desc",
	        peg$c165 = { type: "literal", value: "DESC", description: "\"DESC\"" },
	        peg$c166 = function() { return SortAction.DESCENDING; },
	        peg$c167 = "between",
	        peg$c168 = { type: "literal", value: "BETWEEN", description: "\"BETWEEN\"" },
	        peg$c169 = "in",
	        peg$c170 = { type: "literal", value: "IN", description: "\"IN\"" },
	        peg$c171 = "is",
	        peg$c172 = { type: "literal", value: "IS", description: "\"IS\"" },
	        peg$c173 = "like",
	        peg$c174 = { type: "literal", value: "LIKE", description: "\"LIKE\"" },
	        peg$c175 = "contains",
	        peg$c176 = { type: "literal", value: "CONTAINS", description: "\"CONTAINS\"" },
	        peg$c177 = "regexp",
	        peg$c178 = { type: "literal", value: "REGEXP", description: "\"REGEXP\"" },
	        peg$c179 = "escape",
	        peg$c180 = { type: "literal", value: "ESCAPE", description: "\"ESCAPE\"" },
	        peg$c181 = "not",
	        peg$c182 = { type: "literal", value: "NOT", description: "\"NOT\"" },
	        peg$c183 = "and",
	        peg$c184 = { type: "literal", value: "AND", description: "\"AND\"" },
	        peg$c185 = "or",
	        peg$c186 = { type: "literal", value: "OR", description: "\"OR\"" },
	        peg$c187 = "distinct",
	        peg$c188 = { type: "literal", value: "DISTINCT", description: "\"DISTINCT\"" },
	        peg$c189 = "count",
	        peg$c190 = { type: "literal", value: "COUNT", description: "\"COUNT\"" },
	        peg$c191 = function() { return 'count'; },
	        peg$c192 = "count_distinct",
	        peg$c193 = { type: "literal", value: "COUNT_DISTINCT", description: "\"COUNT_DISTINCT\"" },
	        peg$c194 = function() { return 'countDistinct'; },
	        peg$c195 = "sum",
	        peg$c196 = { type: "literal", value: "SUM", description: "\"SUM\"" },
	        peg$c197 = function() { return 'sum'; },
	        peg$c198 = "avg",
	        peg$c199 = { type: "literal", value: "AVG", description: "\"AVG\"" },
	        peg$c200 = function() { return 'average'; },
	        peg$c201 = "min",
	        peg$c202 = { type: "literal", value: "MIN", description: "\"MIN\"" },
	        peg$c203 = function() { return 'min'; },
	        peg$c204 = "max",
	        peg$c205 = { type: "literal", value: "MAX", description: "\"MAX\"" },
	        peg$c206 = function() { return 'max'; },
	        peg$c207 = "quantile",
	        peg$c208 = { type: "literal", value: "QUANTILE", description: "\"QUANTILE\"" },
	        peg$c209 = function() { return 'quantile'; },
	        peg$c210 = "custom",
	        peg$c211 = { type: "literal", value: "CUSTOM", description: "\"CUSTOM\"" },
	        peg$c212 = function() { return 'custom'; },
	        peg$c213 = "date",
	        peg$c214 = { type: "literal", value: "DATE", description: "\"DATE\"" },
	        peg$c215 = function() { return 'd'; },
	        peg$c216 = "time",
	        peg$c217 = { type: "literal", value: "TIME", description: "\"TIME\"" },
	        peg$c218 = function() { return 't'; },
	        peg$c219 = "timestamp",
	        peg$c220 = { type: "literal", value: "TIMESTAMP", description: "\"TIMESTAMP\"" },
	        peg$c221 = function() { return 'ts'; },
	        peg$c222 = "d",
	        peg$c223 = { type: "literal", value: "D", description: "\"D\"" },
	        peg$c224 = "t",
	        peg$c225 = { type: "literal", value: "T", description: "\"T\"" },
	        peg$c226 = "ts",
	        peg$c227 = { type: "literal", value: "TS", description: "\"TS\"" },
	        peg$c228 = "interval",
	        peg$c229 = { type: "literal", value: "INTERVAL", description: "\"INTERVAL\"" },
	        peg$c230 = /^[a-z_]/i,
	        peg$c231 = { type: "class", value: "[a-z_]i", description: "[a-z_]i" },
	        peg$c232 = { type: "other", description: "Number" },
	        peg$c233 = function(n) { return parseFloat(n); },
	        peg$c234 = /^[1-9]/,
	        peg$c235 = { type: "class", value: "[1-9]", description: "[1-9]" },
	        peg$c236 = ".",
	        peg$c237 = { type: "literal", value: ".", description: "\".\"" },
	        peg$c238 = "e",
	        peg$c239 = { type: "literal", value: "e", description: "\"e\"" },
	        peg$c240 = /^[+\-]/,
	        peg$c241 = { type: "class", value: "[+-]", description: "[+-]" },
	        peg$c242 = /^[0-9]/,
	        peg$c243 = { type: "class", value: "[0-9]", description: "[0-9]" },
	        peg$c244 = { type: "other", description: "(" },
	        peg$c245 = "(",
	        peg$c246 = { type: "literal", value: "(", description: "\"(\"" },
	        peg$c247 = { type: "other", description: ")" },
	        peg$c248 = ")",
	        peg$c249 = { type: "literal", value: ")", description: "\")\"" },
	        peg$c250 = { type: "other", description: "{" },
	        peg$c251 = "{",
	        peg$c252 = { type: "literal", value: "{", description: "\"{\"" },
	        peg$c253 = { type: "other", description: "}" },
	        peg$c254 = "}",
	        peg$c255 = { type: "literal", value: "}", description: "\"}\"" },
	        peg$c256 = ",",
	        peg$c257 = { type: "literal", value: ",", description: "\",\"" },
	        peg$c258 = { type: "other", description: "Name" },
	        peg$c259 = /^[a-z0-9_]/i,
	        peg$c260 = { type: "class", value: "[a-z0-9_]i", description: "[a-z0-9_]i" },
	        peg$c261 = { type: "other", description: "RelaxedName" },
	        peg$c262 = /^[a-z_\-:*\/]/i,
	        peg$c263 = { type: "class", value: "[a-z_\\-:*/]i", description: "[a-z_\\-:*/]i" },
	        peg$c264 = /^[a-z0-9_\-:*\/]/i,
	        peg$c265 = { type: "class", value: "[a-z0-9_\\-:*/]i", description: "[a-z0-9_\\-:*/]i" },
	        peg$c266 = { type: "other", description: "NotSQuote" },
	        peg$c267 = /^[^']/,
	        peg$c268 = { type: "class", value: "[^']", description: "[^']" },
	        peg$c269 = { type: "other", description: "NotDQuote" },
	        peg$c270 = /^[^"]/,
	        peg$c271 = { type: "class", value: "[^\"]", description: "[^\"]" },
	        peg$c272 = { type: "other", description: "Whitespace" },
	        peg$c273 = /^[ \t\r\n]/,
	        peg$c274 = { type: "class", value: "[ \\t\\r\\n]", description: "[ \\t\\r\\n]" },
	        peg$c275 = "/*",
	        peg$c276 = { type: "literal", value: "/*", description: "\"/*\"" },
	        peg$c277 = "-- ",
	        peg$c278 = { type: "literal", value: "-- ", description: "\"-- \"" },
	        peg$c279 = "#",
	        peg$c280 = { type: "literal", value: "#", description: "\"#\"" },
	        peg$c281 = "*/",
	        peg$c282 = { type: "literal", value: "*/", description: "\"*/\"" },
	        peg$c283 = /^[\n\r]/,
	        peg$c284 = { type: "class", value: "[\\n\\r]", description: "[\\n\\r]" },

	        peg$currPos          = 0,
	        peg$savedPos         = 0,
	        peg$posDetailsCache  = [{ line: 1, column: 1, seenCR: false }],
	        peg$maxFailPos       = 0,
	        peg$maxFailExpected  = [],
	        peg$silentFails      = 0,

	        peg$result;

	    if ("startRule" in options) {
	      if (!(options.startRule in peg$startRuleFunctions)) {
	        throw new Error("Can't start parsing from rule \"" + options.startRule + "\".");
	      }

	      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];
	    }

	    function text() {
	      return input.substring(peg$savedPos, peg$currPos);
	    }

	    function location() {
	      return peg$computeLocation(peg$savedPos, peg$currPos);
	    }

	    function expected(description) {
	      throw peg$buildException(
	        null,
	        [{ type: "other", description: description }],
	        input.substring(peg$savedPos, peg$currPos),
	        peg$computeLocation(peg$savedPos, peg$currPos)
	      );
	    }

	    function error(message) {
	      throw peg$buildException(
	        message,
	        null,
	        input.substring(peg$savedPos, peg$currPos),
	        peg$computeLocation(peg$savedPos, peg$currPos)
	      );
	    }

	    function peg$computePosDetails(pos) {
	      var details = peg$posDetailsCache[pos],
	          p, ch;

	      if (details) {
	        return details;
	      } else {
	        p = pos - 1;
	        while (!peg$posDetailsCache[p]) {
	          p--;
	        }

	        details = peg$posDetailsCache[p];
	        details = {
	          line:   details.line,
	          column: details.column,
	          seenCR: details.seenCR
	        };

	        while (p < pos) {
	          ch = input.charAt(p);
	          if (ch === "\n") {
	            if (!details.seenCR) { details.line++; }
	            details.column = 1;
	            details.seenCR = false;
	          } else if (ch === "\r" || ch === "\u2028" || ch === "\u2029") {
	            details.line++;
	            details.column = 1;
	            details.seenCR = true;
	          } else {
	            details.column++;
	            details.seenCR = false;
	          }

	          p++;
	        }

	        peg$posDetailsCache[pos] = details;
	        return details;
	      }
	    }

	    function peg$computeLocation(startPos, endPos) {
	      var startPosDetails = peg$computePosDetails(startPos),
	          endPosDetails   = peg$computePosDetails(endPos);

	      return {
	        start: {
	          offset: startPos,
	          line:   startPosDetails.line,
	          column: startPosDetails.column
	        },
	        end: {
	          offset: endPos,
	          line:   endPosDetails.line,
	          column: endPosDetails.column
	        }
	      };
	    }

	    function peg$fail(expected) {
	      if (peg$currPos < peg$maxFailPos) { return; }

	      if (peg$currPos > peg$maxFailPos) {
	        peg$maxFailPos = peg$currPos;
	        peg$maxFailExpected = [];
	      }

	      peg$maxFailExpected.push(expected);
	    }

	    function peg$buildException(message, expected, found, location) {
	      function cleanupExpected(expected) {
	        var i = 1;

	        expected.sort(function(a, b) {
	          if (a.description < b.description) {
	            return -1;
	          } else if (a.description > b.description) {
	            return 1;
	          } else {
	            return 0;
	          }
	        });

	        while (i < expected.length) {
	          if (expected[i - 1] === expected[i]) {
	            expected.splice(i, 1);
	          } else {
	            i++;
	          }
	        }
	      }

	      function buildMessage(expected, found) {
	        function stringEscape(s) {
	          function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }

	          return s
	            .replace(/\\/g,   '\\\\')
	            .replace(/"/g,    '\\"')
	            .replace(/\x08/g, '\\b')
	            .replace(/\t/g,   '\\t')
	            .replace(/\n/g,   '\\n')
	            .replace(/\f/g,   '\\f')
	            .replace(/\r/g,   '\\r')
	            .replace(/[\x00-\x07\x0B\x0E\x0F]/g, function(ch) { return '\\x0' + hex(ch); })
	            .replace(/[\x10-\x1F\x80-\xFF]/g,    function(ch) { return '\\x'  + hex(ch); })
	            .replace(/[\u0100-\u0FFF]/g,         function(ch) { return '\\u0' + hex(ch); })
	            .replace(/[\u1000-\uFFFF]/g,         function(ch) { return '\\u'  + hex(ch); });
	        }

	        var expectedDescs = new Array(expected.length),
	            expectedDesc, foundDesc, i;

	        for (i = 0; i < expected.length; i++) {
	          expectedDescs[i] = expected[i].description;
	        }

	        expectedDesc = expected.length > 1
	          ? expectedDescs.slice(0, -1).join(", ")
	              + " or "
	              + expectedDescs[expected.length - 1]
	          : expectedDescs[0];

	        foundDesc = found ? "\"" + stringEscape(found) + "\"" : "end of input";

	        return "Expected " + expectedDesc + " but " + foundDesc + " found.";
	      }

	      if (expected !== null) {
	        cleanupExpected(expected);
	      }

	      return new peg$SyntaxError(
	        message !== null ? message : buildMessage(expected, found),
	        expected,
	        found,
	        location
	      );
	    }

	    function peg$parsestart() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      s1 = peg$parse_();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseQuery();
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parseQueryTerminator();
	          if (s3 === peg$FAILED) {
	            s3 = null;
	          }
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c0(s2);
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseQuery() {
	      var s0, s1;

	      s0 = peg$currPos;
	      s1 = peg$parseSelectQuery();
	      if (s1 === peg$FAILED) {
	        s1 = peg$parseDescribeQuery();
	        if (s1 === peg$FAILED) {
	          s1 = peg$parseShowQuery();
	          if (s1 === peg$FAILED) {
	            s1 = peg$parseSetQuery();
	            if (s1 === peg$FAILED) {
	              s1 = peg$parseUnsupportedQuery();
	            }
	          }
	        }
	      }
	      if (s1 !== peg$FAILED) {
	        peg$savedPos = s0;
	        s1 = peg$c1(s1);
	      }
	      s0 = s1;
	      if (s0 === peg$FAILED) {
	        s0 = peg$currPos;
	        s1 = peg$parseOrExpression();
	        if (s1 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c2(s1);
	        }
	        s0 = s1;
	      }

	      return s0;
	    }

	    function peg$parseShowQuery() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      s1 = peg$parseShowToken();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseShowQueryExpression();
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c3(s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseShowQueryExpression() {
	      var s0, s1, s2, s3, s4, s5, s6, s7;

	      s0 = peg$currPos;
	      s1 = peg$parseVariablesToken();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseLikeRhs();
	        if (s2 === peg$FAILED) {
	          s2 = null;
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c4(s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      if (s0 === peg$FAILED) {
	        s0 = peg$currPos;
	        s1 = peg$parseSchemasToken();
	        if (s1 === peg$FAILED) {
	          s1 = peg$parseDatabasesToken();
	        }
	        if (s1 !== peg$FAILED) {
	          s2 = peg$parseLikeRhs();
	          if (s2 === peg$FAILED) {
	            s2 = null;
	          }
	          if (s2 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c5(s2);
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	        if (s0 === peg$FAILED) {
	          s0 = peg$currPos;
	          s1 = peg$parseTablesToken();
	          if (s1 !== peg$FAILED) {
	            s2 = peg$currPos;
	            s3 = peg$parseFromOrIn();
	            if (s3 !== peg$FAILED) {
	              s4 = peg$parseRef();
	              if (s4 !== peg$FAILED) {
	                s3 = [s3, s4];
	                s2 = s3;
	              } else {
	                peg$currPos = s2;
	                s2 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s2;
	              s2 = peg$FAILED;
	            }
	            if (s2 === peg$FAILED) {
	              s2 = null;
	            }
	            if (s2 !== peg$FAILED) {
	              s3 = peg$parseLikeRhs();
	              if (s3 === peg$FAILED) {
	                s3 = null;
	              }
	              if (s3 !== peg$FAILED) {
	                peg$savedPos = s0;
	                s1 = peg$c6(s2, s3);
	                s0 = s1;
	              } else {
	                peg$currPos = s0;
	                s0 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	          if (s0 === peg$FAILED) {
	            s0 = peg$currPos;
	            s1 = peg$parseFullToken();
	            if (s1 === peg$FAILED) {
	              s1 = null;
	            }
	            if (s1 !== peg$FAILED) {
	              s2 = peg$parseColumnsToken();
	              if (s2 !== peg$FAILED) {
	                s3 = peg$parseFromOrIn();
	                if (s3 !== peg$FAILED) {
	                  s4 = peg$parseRelaxedNamespacedRef();
	                  if (s4 !== peg$FAILED) {
	                    s5 = peg$currPos;
	                    s6 = peg$parseFromOrIn();
	                    if (s6 !== peg$FAILED) {
	                      s7 = peg$parseRef();
	                      if (s7 !== peg$FAILED) {
	                        s6 = [s6, s7];
	                        s5 = s6;
	                      } else {
	                        peg$currPos = s5;
	                        s5 = peg$FAILED;
	                      }
	                    } else {
	                      peg$currPos = s5;
	                      s5 = peg$FAILED;
	                    }
	                    if (s5 === peg$FAILED) {
	                      s5 = null;
	                    }
	                    if (s5 !== peg$FAILED) {
	                      s6 = peg$parseLikeRhs();
	                      if (s6 === peg$FAILED) {
	                        s6 = null;
	                      }
	                      if (s6 !== peg$FAILED) {
	                        s7 = peg$parseWhereClause();
	                        if (s7 === peg$FAILED) {
	                          s7 = null;
	                        }
	                        if (s7 !== peg$FAILED) {
	                          peg$savedPos = s0;
	                          s1 = peg$c7(s1, s4, s5, s6, s7);
	                          s0 = s1;
	                        } else {
	                          peg$currPos = s0;
	                          s0 = peg$FAILED;
	                        }
	                      } else {
	                        peg$currPos = s0;
	                        s0 = peg$FAILED;
	                      }
	                    } else {
	                      peg$currPos = s0;
	                      s0 = peg$FAILED;
	                    }
	                  } else {
	                    peg$currPos = s0;
	                    s0 = peg$FAILED;
	                  }
	                } else {
	                  peg$currPos = s0;
	                  s0 = peg$FAILED;
	                }
	              } else {
	                peg$currPos = s0;
	                s0 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          }
	        }
	      }

	      return s0;
	    }

	    function peg$parseFromOrIn() {
	      var s0;

	      s0 = peg$parseFromToken();
	      if (s0 === peg$FAILED) {
	        s0 = peg$parseInToken();
	      }

	      return s0;
	    }

	    function peg$parseSetQuery() {
	      var s0, s1, s2, s3, s4;

	      s0 = peg$currPos;
	      s1 = peg$parseSetToken();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        s3 = [];
	        if (input.length > peg$currPos) {
	          s4 = input.charAt(peg$currPos);
	          peg$currPos++;
	        } else {
	          s4 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c8); }
	        }
	        while (s4 !== peg$FAILED) {
	          s3.push(s4);
	          if (input.length > peg$currPos) {
	            s4 = input.charAt(peg$currPos);
	            peg$currPos++;
	          } else {
	            s4 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c8); }
	          }
	        }
	        if (s3 !== peg$FAILED) {
	          s2 = input.substring(s2, peg$currPos);
	        } else {
	          s2 = s3;
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c9(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseDescribeQuery() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      s1 = peg$parseDescribeToken();
	      if (s1 === peg$FAILED) {
	        s1 = peg$parseDescToken();
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseRelaxedNamespacedRef();
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c10(s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseUnsupportedQuery() {
	      var s0, s1, s2, s3, s4, s5, s6;

	      s0 = peg$currPos;
	      s1 = peg$parseName();
	      if (s1 !== peg$FAILED) {
	        peg$savedPos = peg$currPos;
	        s2 = peg$c11(s1);
	        if (s2) {
	          s2 = void 0;
	        } else {
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s4 = peg$currPos;
	            s5 = [];
	            if (input.length > peg$currPos) {
	              s6 = input.charAt(peg$currPos);
	              peg$currPos++;
	            } else {
	              s6 = peg$FAILED;
	              if (peg$silentFails === 0) { peg$fail(peg$c8); }
	            }
	            while (s6 !== peg$FAILED) {
	              s5.push(s6);
	              if (input.length > peg$currPos) {
	                s6 = input.charAt(peg$currPos);
	                peg$currPos++;
	              } else {
	                s6 = peg$FAILED;
	                if (peg$silentFails === 0) { peg$fail(peg$c8); }
	              }
	            }
	            if (s5 !== peg$FAILED) {
	              s4 = input.substring(s4, peg$currPos);
	            } else {
	              s4 = s5;
	            }
	            if (s4 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c12(s1, s4);
	              s0 = s1;
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseSelectQuery() {
	      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;

	      s0 = peg$currPos;
	      s1 = peg$parseSelectToken();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseDistinctToken();
	        if (s2 === peg$FAILED) {
	          s2 = null;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parseColumns();
	          if (s3 === peg$FAILED) {
	            s3 = null;
	          }
	          if (s3 !== peg$FAILED) {
	            s4 = peg$parseFromClause();
	            if (s4 === peg$FAILED) {
	              s4 = null;
	            }
	            if (s4 !== peg$FAILED) {
	              s5 = peg$parseWhereClause();
	              if (s5 === peg$FAILED) {
	                s5 = null;
	              }
	              if (s5 !== peg$FAILED) {
	                s6 = peg$parseGroupByClause();
	                if (s6 === peg$FAILED) {
	                  s6 = null;
	                }
	                if (s6 !== peg$FAILED) {
	                  s7 = peg$parseHavingClause();
	                  if (s7 === peg$FAILED) {
	                    s7 = null;
	                  }
	                  if (s7 !== peg$FAILED) {
	                    s8 = peg$parseOrderByClause();
	                    if (s8 === peg$FAILED) {
	                      s8 = null;
	                    }
	                    if (s8 !== peg$FAILED) {
	                      s9 = peg$parseLimitClause();
	                      if (s9 === peg$FAILED) {
	                        s9 = null;
	                      }
	                      if (s9 !== peg$FAILED) {
	                        peg$savedPos = s0;
	                        s1 = peg$c13(s2, s3, s4, s5, s6, s7, s8, s9);
	                        s0 = s1;
	                      } else {
	                        peg$currPos = s0;
	                        s0 = peg$FAILED;
	                      }
	                    } else {
	                      peg$currPos = s0;
	                      s0 = peg$FAILED;
	                    }
	                  } else {
	                    peg$currPos = s0;
	                    s0 = peg$FAILED;
	                  }
	                } else {
	                  peg$currPos = s0;
	                  s0 = peg$FAILED;
	                }
	              } else {
	                peg$currPos = s0;
	                s0 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseSelectSubQuery() {
	      var s0, s1, s2, s3, s4, s5, s6, s7, s8;

	      s0 = peg$currPos;
	      s1 = peg$parseSelectToken();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseDistinctToken();
	        if (s2 === peg$FAILED) {
	          s2 = null;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parseColumns();
	          if (s3 === peg$FAILED) {
	            s3 = null;
	          }
	          if (s3 !== peg$FAILED) {
	            s4 = peg$parseWhereClause();
	            if (s4 === peg$FAILED) {
	              s4 = null;
	            }
	            if (s4 !== peg$FAILED) {
	              s5 = peg$parseGroupByClause();
	              if (s5 !== peg$FAILED) {
	                s6 = peg$parseHavingClause();
	                if (s6 === peg$FAILED) {
	                  s6 = null;
	                }
	                if (s6 !== peg$FAILED) {
	                  s7 = peg$parseOrderByClause();
	                  if (s7 === peg$FAILED) {
	                    s7 = null;
	                  }
	                  if (s7 !== peg$FAILED) {
	                    s8 = peg$parseLimitClause();
	                    if (s8 === peg$FAILED) {
	                      s8 = null;
	                    }
	                    if (s8 !== peg$FAILED) {
	                      peg$savedPos = s0;
	                      s1 = peg$c14(s2, s3, s4, s5, s6, s7, s8);
	                      s0 = s1;
	                    } else {
	                      peg$currPos = s0;
	                      s0 = peg$FAILED;
	                    }
	                  } else {
	                    peg$currPos = s0;
	                    s0 = peg$FAILED;
	                  }
	                } else {
	                  peg$currPos = s0;
	                  s0 = peg$FAILED;
	                }
	              } else {
	                peg$currPos = s0;
	                s0 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseColumns() {
	      var s0, s1, s2, s3, s4, s5;

	      s0 = peg$currPos;
	      s1 = peg$parseStarToken();
	      if (s1 !== peg$FAILED) {
	        peg$savedPos = s0;
	        s1 = peg$c15();
	      }
	      s0 = s1;
	      if (s0 === peg$FAILED) {
	        s0 = peg$currPos;
	        s1 = peg$parseColumn();
	        if (s1 !== peg$FAILED) {
	          s2 = [];
	          s3 = peg$currPos;
	          s4 = peg$parseComma();
	          if (s4 !== peg$FAILED) {
	            s5 = peg$parseColumn();
	            if (s5 !== peg$FAILED) {
	              s4 = [s4, s5];
	              s3 = s4;
	            } else {
	              peg$currPos = s3;
	              s3 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	          while (s3 !== peg$FAILED) {
	            s2.push(s3);
	            s3 = peg$currPos;
	            s4 = peg$parseComma();
	            if (s4 !== peg$FAILED) {
	              s5 = peg$parseColumn();
	              if (s5 !== peg$FAILED) {
	                s4 = [s4, s5];
	                s3 = s4;
	              } else {
	                peg$currPos = s3;
	                s3 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s3;
	              s3 = peg$FAILED;
	            }
	          }
	          if (s2 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c16(s1, s2);
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      }

	      return s0;
	    }

	    function peg$parseColumn() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      s1 = peg$parseOrExpression();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseAs();
	        if (s2 === peg$FAILED) {
	          s2 = null;
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c17(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseAs() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      s1 = peg$parseAsToken();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseString();
	        if (s2 === peg$FAILED) {
	          s2 = peg$parseRef();
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c18(s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseFromClause() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      s1 = peg$parseFromToken();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseRelaxedNamespacedRef();
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c19(s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseWhereClause() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      s1 = peg$parseWhereToken();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseOrExpression();
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c20(s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseGroupByClause() {
	      var s0, s1, s2, s3, s4, s5, s6, s7;

	      s0 = peg$currPos;
	      s1 = peg$parseGroupToken();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseByToken();
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parseOrExpression();
	          if (s3 !== peg$FAILED) {
	            s4 = [];
	            s5 = peg$currPos;
	            s6 = peg$parseComma();
	            if (s6 !== peg$FAILED) {
	              s7 = peg$parseOrExpression();
	              if (s7 !== peg$FAILED) {
	                s6 = [s6, s7];
	                s5 = s6;
	              } else {
	                peg$currPos = s5;
	                s5 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s5;
	              s5 = peg$FAILED;
	            }
	            while (s5 !== peg$FAILED) {
	              s4.push(s5);
	              s5 = peg$currPos;
	              s6 = peg$parseComma();
	              if (s6 !== peg$FAILED) {
	                s7 = peg$parseOrExpression();
	                if (s7 !== peg$FAILED) {
	                  s6 = [s6, s7];
	                  s5 = s6;
	                } else {
	                  peg$currPos = s5;
	                  s5 = peg$FAILED;
	                }
	              } else {
	                peg$currPos = s5;
	                s5 = peg$FAILED;
	              }
	            }
	            if (s4 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c16(s3, s4);
	              s0 = s1;
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseHavingClause() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      s1 = peg$parseHavingToken();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseOrExpression();
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c21(s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseOrderByClause() {
	      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;

	      s0 = peg$currPos;
	      s1 = peg$parseOrderToken();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseByToken();
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parseOrExpression();
	          if (s3 !== peg$FAILED) {
	            s4 = peg$parseDirection();
	            if (s4 === peg$FAILED) {
	              s4 = null;
	            }
	            if (s4 !== peg$FAILED) {
	              s5 = [];
	              s6 = peg$currPos;
	              s7 = peg$parseComma();
	              if (s7 !== peg$FAILED) {
	                s8 = peg$parseOrExpression();
	                if (s8 !== peg$FAILED) {
	                  s9 = peg$parseDirection();
	                  if (s9 === peg$FAILED) {
	                    s9 = null;
	                  }
	                  if (s9 !== peg$FAILED) {
	                    s7 = [s7, s8, s9];
	                    s6 = s7;
	                  } else {
	                    peg$currPos = s6;
	                    s6 = peg$FAILED;
	                  }
	                } else {
	                  peg$currPos = s6;
	                  s6 = peg$FAILED;
	                }
	              } else {
	                peg$currPos = s6;
	                s6 = peg$FAILED;
	              }
	              while (s6 !== peg$FAILED) {
	                s5.push(s6);
	                s6 = peg$currPos;
	                s7 = peg$parseComma();
	                if (s7 !== peg$FAILED) {
	                  s8 = peg$parseOrExpression();
	                  if (s8 !== peg$FAILED) {
	                    s9 = peg$parseDirection();
	                    if (s9 === peg$FAILED) {
	                      s9 = null;
	                    }
	                    if (s9 !== peg$FAILED) {
	                      s7 = [s7, s8, s9];
	                      s6 = s7;
	                    } else {
	                      peg$currPos = s6;
	                      s6 = peg$FAILED;
	                    }
	                  } else {
	                    peg$currPos = s6;
	                    s6 = peg$FAILED;
	                  }
	                } else {
	                  peg$currPos = s6;
	                  s6 = peg$FAILED;
	                }
	              }
	              if (s5 !== peg$FAILED) {
	                peg$savedPos = s0;
	                s1 = peg$c22(s3, s4, s5);
	                s0 = s1;
	              } else {
	                peg$currPos = s0;
	                s0 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseDirection() {
	      var s0;

	      s0 = peg$parseAscToken();
	      if (s0 === peg$FAILED) {
	        s0 = peg$parseDescToken();
	      }

	      return s0;
	    }

	    function peg$parseLimitClause() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      s1 = peg$parseLimitToken();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseNumber();
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c23(s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseQueryTerminator() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 59) {
	        s1 = peg$c24;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c25); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          s1 = [s1, s2];
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseOrExpression() {
	      var s0, s1, s2, s3, s4, s5;

	      s0 = peg$currPos;
	      s1 = peg$parseAndExpression();
	      if (s1 !== peg$FAILED) {
	        s2 = [];
	        s3 = peg$currPos;
	        s4 = peg$parseOrToken();
	        if (s4 !== peg$FAILED) {
	          s5 = peg$parseAndExpression();
	          if (s5 !== peg$FAILED) {
	            s4 = [s4, s5];
	            s3 = s4;
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s3;
	          s3 = peg$FAILED;
	        }
	        while (s3 !== peg$FAILED) {
	          s2.push(s3);
	          s3 = peg$currPos;
	          s4 = peg$parseOrToken();
	          if (s4 !== peg$FAILED) {
	            s5 = peg$parseAndExpression();
	            if (s5 !== peg$FAILED) {
	              s4 = [s4, s5];
	              s3 = s4;
	            } else {
	              peg$currPos = s3;
	              s3 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c26(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseAndExpression() {
	      var s0, s1, s2, s3, s4, s5;

	      s0 = peg$currPos;
	      s1 = peg$parseNotExpression();
	      if (s1 !== peg$FAILED) {
	        s2 = [];
	        s3 = peg$currPos;
	        s4 = peg$parseAndToken();
	        if (s4 !== peg$FAILED) {
	          s5 = peg$parseNotExpression();
	          if (s5 !== peg$FAILED) {
	            s4 = [s4, s5];
	            s3 = s4;
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s3;
	          s3 = peg$FAILED;
	        }
	        while (s3 !== peg$FAILED) {
	          s2.push(s3);
	          s3 = peg$currPos;
	          s4 = peg$parseAndToken();
	          if (s4 !== peg$FAILED) {
	            s5 = peg$parseNotExpression();
	            if (s5 !== peg$FAILED) {
	              s4 = [s4, s5];
	              s3 = s4;
	            } else {
	              peg$currPos = s3;
	              s3 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c27(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseNotExpression() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      s1 = peg$parseNotToken();
	      if (s1 === peg$FAILED) {
	        s1 = null;
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseComparisonExpression();
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c28(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseComparisonExpression() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      s1 = peg$parseAdditiveExpression();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseComparisonExpressionRhs();
	        if (s2 === peg$FAILED) {
	          s2 = null;
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c29(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseComparisonExpressionRhs() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      s1 = peg$parseNotToken();
	      if (s1 === peg$FAILED) {
	        s1 = null;
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseComparisonExpressionRhsNotable();
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c30(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      if (s0 === peg$FAILED) {
	        s0 = peg$currPos;
	        s1 = peg$parseIsToken();
	        if (s1 !== peg$FAILED) {
	          s2 = peg$parseNotToken();
	          if (s2 === peg$FAILED) {
	            s2 = null;
	          }
	          if (s2 !== peg$FAILED) {
	            s3 = peg$parseAdditiveExpression();
	            if (s3 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c31(s2, s3);
	              s0 = s1;
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	        if (s0 === peg$FAILED) {
	          s0 = peg$currPos;
	          s1 = peg$parseComparisonOp();
	          if (s1 !== peg$FAILED) {
	            s2 = peg$parse_();
	            if (s2 !== peg$FAILED) {
	              s3 = peg$parseAdditiveExpression();
	              if (s3 !== peg$FAILED) {
	                peg$savedPos = s0;
	                s1 = peg$c32(s1, s3);
	                s0 = s1;
	              } else {
	                peg$currPos = s0;
	                s0 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        }
	      }

	      return s0;
	    }

	    function peg$parseComparisonExpressionRhsNotable() {
	      var s0, s1, s2, s3, s4;

	      s0 = peg$currPos;
	      s1 = peg$parseBetweenToken();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseLiteralExpression();
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parseAndToken();
	          if (s3 !== peg$FAILED) {
	            s4 = peg$parseLiteralExpression();
	            if (s4 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c33(s2, s4);
	              s0 = s1;
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      if (s0 === peg$FAILED) {
	        s0 = peg$currPos;
	        s1 = peg$parseInToken();
	        if (s1 !== peg$FAILED) {
	          s2 = peg$parseInListLiteralExpression();
	          if (s2 === peg$FAILED) {
	            s2 = peg$parseAdditiveExpression();
	          }
	          if (s2 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c34(s2);
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	        if (s0 === peg$FAILED) {
	          s0 = peg$currPos;
	          s1 = peg$parseContainsToken();
	          if (s1 !== peg$FAILED) {
	            s2 = peg$parseString();
	            if (s2 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c35(s2);
	              s0 = s1;
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	          if (s0 === peg$FAILED) {
	            s0 = peg$parseLikeRhs();
	            if (s0 === peg$FAILED) {
	              s0 = peg$currPos;
	              s1 = peg$parseRegExpToken();
	              if (s1 !== peg$FAILED) {
	                s2 = peg$parseString();
	                if (s2 !== peg$FAILED) {
	                  peg$savedPos = s0;
	                  s1 = peg$c36(s2);
	                  s0 = s1;
	                } else {
	                  peg$currPos = s0;
	                  s0 = peg$FAILED;
	                }
	              } else {
	                peg$currPos = s0;
	                s0 = peg$FAILED;
	              }
	            }
	          }
	        }
	      }

	      return s0;
	    }

	    function peg$parseLikeRhs() {
	      var s0, s1, s2, s3, s4, s5;

	      s0 = peg$currPos;
	      s1 = peg$parseLikeToken();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseString();
	        if (s2 !== peg$FAILED) {
	          s3 = peg$currPos;
	          s4 = peg$parseEscapeToken();
	          if (s4 !== peg$FAILED) {
	            s5 = peg$parseString();
	            if (s5 !== peg$FAILED) {
	              s4 = [s4, s5];
	              s3 = s4;
	            } else {
	              peg$currPos = s3;
	              s3 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	          if (s3 === peg$FAILED) {
	            s3 = null;
	          }
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c37(s2, s3);
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseComparisonOp() {
	      var s0, s1;

	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 61) {
	        s1 = peg$c38;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c39); }
	      }
	      if (s1 !== peg$FAILED) {
	        peg$savedPos = s0;
	        s1 = peg$c40();
	      }
	      s0 = s1;
	      if (s0 === peg$FAILED) {
	        s0 = peg$currPos;
	        if (input.substr(peg$currPos, 3) === peg$c41) {
	          s1 = peg$c41;
	          peg$currPos += 3;
	        } else {
	          s1 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c42); }
	        }
	        if (s1 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c40();
	        }
	        s0 = s1;
	        if (s0 === peg$FAILED) {
	          s0 = peg$currPos;
	          if (input.substr(peg$currPos, 2) === peg$c43) {
	            s1 = peg$c43;
	            peg$currPos += 2;
	          } else {
	            s1 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c44); }
	          }
	          if (s1 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c45();
	          }
	          s0 = s1;
	          if (s0 === peg$FAILED) {
	            s0 = peg$currPos;
	            if (input.substr(peg$currPos, 2) === peg$c46) {
	              s1 = peg$c46;
	              peg$currPos += 2;
	            } else {
	              s1 = peg$FAILED;
	              if (peg$silentFails === 0) { peg$fail(peg$c47); }
	            }
	            if (s1 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c45();
	            }
	            s0 = s1;
	            if (s0 === peg$FAILED) {
	              s0 = peg$currPos;
	              if (input.substr(peg$currPos, 2) === peg$c48) {
	                s1 = peg$c48;
	                peg$currPos += 2;
	              } else {
	                s1 = peg$FAILED;
	                if (peg$silentFails === 0) { peg$fail(peg$c49); }
	              }
	              if (s1 !== peg$FAILED) {
	                peg$savedPos = s0;
	                s1 = peg$c50();
	              }
	              s0 = s1;
	              if (s0 === peg$FAILED) {
	                s0 = peg$currPos;
	                if (input.substr(peg$currPos, 2) === peg$c51) {
	                  s1 = peg$c51;
	                  peg$currPos += 2;
	                } else {
	                  s1 = peg$FAILED;
	                  if (peg$silentFails === 0) { peg$fail(peg$c52); }
	                }
	                if (s1 !== peg$FAILED) {
	                  peg$savedPos = s0;
	                  s1 = peg$c53();
	                }
	                s0 = s1;
	                if (s0 === peg$FAILED) {
	                  s0 = peg$currPos;
	                  if (input.charCodeAt(peg$currPos) === 60) {
	                    s1 = peg$c54;
	                    peg$currPos++;
	                  } else {
	                    s1 = peg$FAILED;
	                    if (peg$silentFails === 0) { peg$fail(peg$c55); }
	                  }
	                  if (s1 !== peg$FAILED) {
	                    peg$savedPos = s0;
	                    s1 = peg$c56();
	                  }
	                  s0 = s1;
	                  if (s0 === peg$FAILED) {
	                    s0 = peg$currPos;
	                    if (input.charCodeAt(peg$currPos) === 62) {
	                      s1 = peg$c57;
	                      peg$currPos++;
	                    } else {
	                      s1 = peg$FAILED;
	                      if (peg$silentFails === 0) { peg$fail(peg$c58); }
	                    }
	                    if (s1 !== peg$FAILED) {
	                      peg$savedPos = s0;
	                      s1 = peg$c59();
	                    }
	                    s0 = s1;
	                  }
	                }
	              }
	            }
	          }
	        }
	      }

	      return s0;
	    }

	    function peg$parseAdditiveExpression() {
	      var s0, s1, s2, s3, s4, s5;

	      s0 = peg$currPos;
	      s1 = peg$parseMultiplicativeExpression();
	      if (s1 !== peg$FAILED) {
	        s2 = [];
	        s3 = peg$currPos;
	        s4 = peg$parseAdditiveOp();
	        if (s4 !== peg$FAILED) {
	          s5 = peg$parseMultiplicativeExpression();
	          if (s5 !== peg$FAILED) {
	            s4 = [s4, s5];
	            s3 = s4;
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s3;
	          s3 = peg$FAILED;
	        }
	        while (s3 !== peg$FAILED) {
	          s2.push(s3);
	          s3 = peg$currPos;
	          s4 = peg$parseAdditiveOp();
	          if (s4 !== peg$FAILED) {
	            s5 = peg$parseMultiplicativeExpression();
	            if (s5 !== peg$FAILED) {
	              s4 = [s4, s5];
	              s3 = s4;
	            } else {
	              peg$currPos = s3;
	              s3 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c60(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseAdditiveOp() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 43) {
	        s1 = peg$c61;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c62); }
	      }
	      if (s1 === peg$FAILED) {
	        if (input.charCodeAt(peg$currPos) === 45) {
	          s1 = peg$c63;
	          peg$currPos++;
	        } else {
	          s1 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c64); }
	        }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        if (input.charCodeAt(peg$currPos) === 43) {
	          s3 = peg$c61;
	          peg$currPos++;
	        } else {
	          s3 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c62); }
	        }
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c65(s1);
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseMultiplicativeExpression() {
	      var s0, s1, s2, s3, s4, s5;

	      s0 = peg$currPos;
	      s1 = peg$parseUnaryExpression();
	      if (s1 !== peg$FAILED) {
	        s2 = [];
	        s3 = peg$currPos;
	        s4 = peg$parseMultiplicativeOp();
	        if (s4 !== peg$FAILED) {
	          s5 = peg$parseUnaryExpression();
	          if (s5 !== peg$FAILED) {
	            s4 = [s4, s5];
	            s3 = s4;
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s3;
	          s3 = peg$FAILED;
	        }
	        while (s3 !== peg$FAILED) {
	          s2.push(s3);
	          s3 = peg$currPos;
	          s4 = peg$parseMultiplicativeOp();
	          if (s4 !== peg$FAILED) {
	            s5 = peg$parseUnaryExpression();
	            if (s5 !== peg$FAILED) {
	              s4 = [s4, s5];
	              s3 = s4;
	            } else {
	              peg$currPos = s3;
	              s3 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c66(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseMultiplicativeOp() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 42) {
	        s1 = peg$c67;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c68); }
	      }
	      if (s1 === peg$FAILED) {
	        if (input.charCodeAt(peg$currPos) === 47) {
	          s1 = peg$c69;
	          peg$currPos++;
	        } else {
	          s1 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c70); }
	        }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c65(s1);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseUnaryExpression() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      s1 = peg$parseAdditiveOp();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseNumber();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parseBasicExpression();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c71(s1, s3);
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      if (s0 === peg$FAILED) {
	        s0 = peg$parseBasicExpression();
	      }

	      return s0;
	    }

	    function peg$parseBasicExpression() {
	      var s0, s1, s2, s3;

	      s0 = peg$parseLiteralExpression();
	      if (s0 === peg$FAILED) {
	        s0 = peg$parseAggregateExpression();
	        if (s0 === peg$FAILED) {
	          s0 = peg$parseFunctionCallExpression();
	          if (s0 === peg$FAILED) {
	            s0 = peg$currPos;
	            s1 = peg$parseOpenParen();
	            if (s1 !== peg$FAILED) {
	              s2 = peg$parseOrExpression();
	              if (s2 === peg$FAILED) {
	                s2 = peg$parseSelectSubQuery();
	              }
	              if (s2 !== peg$FAILED) {
	                s3 = peg$parseCloseParen();
	                if (s3 !== peg$FAILED) {
	                  peg$savedPos = s0;
	                  s1 = peg$c72(s2);
	                  s0 = s1;
	                } else {
	                  peg$currPos = s0;
	                  s0 = peg$FAILED;
	                }
	              } else {
	                peg$currPos = s0;
	                s0 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	            if (s0 === peg$FAILED) {
	              s0 = peg$parseRefExpression();
	            }
	          }
	        }
	      }

	      return s0;
	    }

	    function peg$parseAggregateExpression() {
	      var s0, s1, s2, s3, s4, s5, s6, s7;

	      s0 = peg$currPos;
	      s1 = peg$parseCountToken();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseOpenParen();
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parseDistinctToken();
	          if (s3 === peg$FAILED) {
	            s3 = null;
	          }
	          if (s3 !== peg$FAILED) {
	            s4 = peg$parseExpressionMaybeFiltered();
	            if (s4 === peg$FAILED) {
	              s4 = null;
	            }
	            if (s4 !== peg$FAILED) {
	              s5 = peg$parseCloseParen();
	              if (s5 !== peg$FAILED) {
	                peg$savedPos = s0;
	                s1 = peg$c73(s3, s4);
	                s0 = s1;
	              } else {
	                peg$currPos = s0;
	                s0 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      if (s0 === peg$FAILED) {
	        s0 = peg$currPos;
	        s1 = peg$parseAggregateFn();
	        if (s1 !== peg$FAILED) {
	          s2 = peg$parseOpenParen();
	          if (s2 !== peg$FAILED) {
	            s3 = peg$parseDistinctToken();
	            if (s3 === peg$FAILED) {
	              s3 = null;
	            }
	            if (s3 !== peg$FAILED) {
	              s4 = peg$parseExpressionMaybeFiltered();
	              if (s4 !== peg$FAILED) {
	                s5 = peg$parseCloseParen();
	                if (s5 !== peg$FAILED) {
	                  peg$savedPos = s0;
	                  s1 = peg$c74(s1, s3, s4);
	                  s0 = s1;
	                } else {
	                  peg$currPos = s0;
	                  s0 = peg$FAILED;
	                }
	              } else {
	                peg$currPos = s0;
	                s0 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	        if (s0 === peg$FAILED) {
	          s0 = peg$currPos;
	          s1 = peg$parseQuantileToken();
	          if (s1 !== peg$FAILED) {
	            s2 = peg$parseOpenParen();
	            if (s2 !== peg$FAILED) {
	              s3 = peg$parseDistinctToken();
	              if (s3 === peg$FAILED) {
	                s3 = null;
	              }
	              if (s3 !== peg$FAILED) {
	                s4 = peg$parseExpressionMaybeFiltered();
	                if (s4 !== peg$FAILED) {
	                  s5 = peg$parseComma();
	                  if (s5 !== peg$FAILED) {
	                    s6 = peg$parseNumber();
	                    if (s6 !== peg$FAILED) {
	                      s7 = peg$parseCloseParen();
	                      if (s7 !== peg$FAILED) {
	                        peg$savedPos = s0;
	                        s1 = peg$c75(s3, s4, s6);
	                        s0 = s1;
	                      } else {
	                        peg$currPos = s0;
	                        s0 = peg$FAILED;
	                      }
	                    } else {
	                      peg$currPos = s0;
	                      s0 = peg$FAILED;
	                    }
	                  } else {
	                    peg$currPos = s0;
	                    s0 = peg$FAILED;
	                  }
	                } else {
	                  peg$currPos = s0;
	                  s0 = peg$FAILED;
	                }
	              } else {
	                peg$currPos = s0;
	                s0 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	          if (s0 === peg$FAILED) {
	            s0 = peg$currPos;
	            s1 = peg$parseCustomToken();
	            if (s1 !== peg$FAILED) {
	              s2 = peg$parseOpenParen();
	              if (s2 !== peg$FAILED) {
	                s3 = peg$parseString();
	                if (s3 !== peg$FAILED) {
	                  s4 = peg$parseWhereClause();
	                  if (s4 === peg$FAILED) {
	                    s4 = null;
	                  }
	                  if (s4 !== peg$FAILED) {
	                    s5 = peg$parseCloseParen();
	                    if (s5 !== peg$FAILED) {
	                      peg$savedPos = s0;
	                      s1 = peg$c76(s3, s4);
	                      s0 = s1;
	                    } else {
	                      peg$currPos = s0;
	                      s0 = peg$FAILED;
	                    }
	                  } else {
	                    peg$currPos = s0;
	                    s0 = peg$FAILED;
	                  }
	                } else {
	                  peg$currPos = s0;
	                  s0 = peg$FAILED;
	                }
	              } else {
	                peg$currPos = s0;
	                s0 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          }
	        }
	      }

	      return s0;
	    }

	    function peg$parseAggregateFn() {
	      var s0;

	      s0 = peg$parseSumToken();
	      if (s0 === peg$FAILED) {
	        s0 = peg$parseAvgToken();
	        if (s0 === peg$FAILED) {
	          s0 = peg$parseMinToken();
	          if (s0 === peg$FAILED) {
	            s0 = peg$parseMaxToken();
	            if (s0 === peg$FAILED) {
	              s0 = peg$parseCountDistinctToken();
	            }
	          }
	        }
	      }

	      return s0;
	    }

	    function peg$parseExpressionMaybeFiltered() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      s1 = peg$parseStarToken();
	      if (s1 === peg$FAILED) {
	        s1 = peg$parseOrExpression();
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseWhereClause();
	        if (s2 === peg$FAILED) {
	          s2 = null;
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c77(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseFunctionCallExpression() {
	      var s0, s1, s2, s3, s4;

	      s0 = peg$currPos;
	      s1 = peg$parseFn();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseOpenParen();
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parseParams();
	          if (s3 !== peg$FAILED) {
	            s4 = peg$parseCloseParen();
	            if (s4 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c78(s1, s3);
	              s0 = s1;
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseFn() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      s1 = peg$parseName();
	      if (s1 !== peg$FAILED) {
	        peg$savedPos = peg$currPos;
	        s2 = peg$c79(s1);
	        if (s2) {
	          s2 = void 0;
	        } else {
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c79(s1);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseParams() {
	      var s0, s1, s2, s3, s4, s5;

	      s0 = peg$currPos;
	      s1 = peg$parseParam();
	      if (s1 === peg$FAILED) {
	        s1 = null;
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = [];
	        s3 = peg$currPos;
	        s4 = peg$parseComma();
	        if (s4 !== peg$FAILED) {
	          s5 = peg$parseParam();
	          if (s5 !== peg$FAILED) {
	            s4 = [s4, s5];
	            s3 = s4;
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s3;
	          s3 = peg$FAILED;
	        }
	        while (s3 !== peg$FAILED) {
	          s2.push(s3);
	          s3 = peg$currPos;
	          s4 = peg$parseComma();
	          if (s4 !== peg$FAILED) {
	            s5 = peg$parseParam();
	            if (s5 !== peg$FAILED) {
	              s4 = [s4, s5];
	              s3 = s4;
	            } else {
	              peg$currPos = s3;
	              s3 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c16(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseParam() {
	      var s0;

	      s0 = peg$parseNumber();
	      if (s0 === peg$FAILED) {
	        s0 = peg$parseString();
	        if (s0 === peg$FAILED) {
	          s0 = peg$parseInterval();
	          if (s0 === peg$FAILED) {
	            s0 = peg$parseOrExpression();
	          }
	        }
	      }

	      return s0;
	    }

	    function peg$parseRefExpression() {
	      var s0, s1;

	      s0 = peg$currPos;
	      s1 = peg$parseNamespacedRef();
	      if (s1 !== peg$FAILED) {
	        peg$savedPos = s0;
	        s1 = peg$c80(s1);
	      }
	      s0 = s1;

	      return s0;
	    }

	    function peg$parseRelaxedNamespacedRef() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      s1 = peg$currPos;
	      s2 = peg$parseRef();
	      if (s2 !== peg$FAILED) {
	        s3 = peg$parseDot();
	        if (s3 !== peg$FAILED) {
	          s2 = [s2, s3];
	          s1 = s2;
	        } else {
	          peg$currPos = s1;
	          s1 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s1;
	        s1 = peg$FAILED;
	      }
	      if (s1 === peg$FAILED) {
	        s1 = null;
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseRelaxedRef();
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c81(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseNamespacedRef() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      s1 = peg$currPos;
	      s2 = peg$parseRef();
	      if (s2 !== peg$FAILED) {
	        s3 = peg$parseDot();
	        if (s3 !== peg$FAILED) {
	          s2 = [s2, s3];
	          s1 = s2;
	        } else {
	          peg$currPos = s1;
	          s1 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s1;
	        s1 = peg$FAILED;
	      }
	      if (s1 === peg$FAILED) {
	        s1 = null;
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseRef();
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c81(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseRelaxedRef() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      s1 = peg$parseRelaxedName();
	      if (s1 !== peg$FAILED) {
	        peg$savedPos = peg$currPos;
	        s2 = peg$c82(s1);
	        if (s2) {
	          s2 = peg$FAILED;
	        } else {
	          s2 = void 0;
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c83(s1);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      if (s0 === peg$FAILED) {
	        s0 = peg$parseBacktickRef();
	      }

	      return s0;
	    }

	    function peg$parseRef() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      s1 = peg$parseName();
	      if (s1 !== peg$FAILED) {
	        peg$savedPos = peg$currPos;
	        s2 = peg$c82(s1);
	        if (s2) {
	          s2 = peg$FAILED;
	        } else {
	          s2 = void 0;
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c83(s1);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      if (s0 === peg$FAILED) {
	        s0 = peg$parseBacktickRef();
	      }

	      return s0;
	    }

	    function peg$parseBacktickRef() {
	      var s0, s1, s2, s3, s4;

	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 96) {
	        s1 = peg$c84;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c85); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        s3 = [];
	        if (peg$c86.test(input.charAt(peg$currPos))) {
	          s4 = input.charAt(peg$currPos);
	          peg$currPos++;
	        } else {
	          s4 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c87); }
	        }
	        if (s4 !== peg$FAILED) {
	          while (s4 !== peg$FAILED) {
	            s3.push(s4);
	            if (peg$c86.test(input.charAt(peg$currPos))) {
	              s4 = input.charAt(peg$currPos);
	              peg$currPos++;
	            } else {
	              s4 = peg$FAILED;
	              if (peg$silentFails === 0) { peg$fail(peg$c87); }
	            }
	          }
	        } else {
	          s3 = peg$FAILED;
	        }
	        if (s3 !== peg$FAILED) {
	          s2 = input.substring(s2, peg$currPos);
	        } else {
	          s2 = s3;
	        }
	        if (s2 !== peg$FAILED) {
	          if (input.charCodeAt(peg$currPos) === 96) {
	            s3 = peg$c84;
	            peg$currPos++;
	          } else {
	            s3 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c85); }
	          }
	          if (s3 !== peg$FAILED) {
	            s4 = peg$parse_();
	            if (s4 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c83(s2);
	              s0 = s1;
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseNameOrString() {
	      var s0;

	      s0 = peg$parseName();
	      if (s0 === peg$FAILED) {
	        s0 = peg$parseString();
	      }

	      return s0;
	    }

	    function peg$parseStringOrNumber() {
	      var s0;

	      s0 = peg$parseString();
	      if (s0 === peg$FAILED) {
	        s0 = peg$parseNumber();
	      }

	      return s0;
	    }

	    function peg$parseLiteralExpression() {
	      var s0, s1, s2, s3, s4;

	      s0 = peg$currPos;
	      s1 = peg$parseOpenCurly();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseDToken();
	        if (s2 === peg$FAILED) {
	          s2 = peg$parseTToken();
	          if (s2 === peg$FAILED) {
	            s2 = peg$parseTsToken();
	          }
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parseString();
	          if (s3 !== peg$FAILED) {
	            s4 = peg$parseCloseCurly();
	            if (s4 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c88(s2, s3);
	              s0 = s1;
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      if (s0 === peg$FAILED) {
	        s0 = peg$currPos;
	        s1 = peg$parseDateToken();
	        if (s1 === peg$FAILED) {
	          s1 = peg$parseTimeToken();
	          if (s1 === peg$FAILED) {
	            s1 = peg$parseTimestampToken();
	          }
	        }
	        if (s1 !== peg$FAILED) {
	          s2 = peg$parseString();
	          if (s2 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c88(s1, s2);
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	        if (s0 === peg$FAILED) {
	          s0 = peg$currPos;
	          s1 = peg$parseNumber();
	          if (s1 === peg$FAILED) {
	            s1 = peg$parseString();
	            if (s1 === peg$FAILED) {
	              s1 = peg$parseListLiteral();
	              if (s1 === peg$FAILED) {
	                s1 = peg$parseNullToken();
	                if (s1 === peg$FAILED) {
	                  s1 = peg$parseTrueToken();
	                  if (s1 === peg$FAILED) {
	                    s1 = peg$parseFalseToken();
	                  }
	                }
	              }
	            }
	          }
	          if (s1 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c89(s1);
	          }
	          s0 = s1;
	        }
	      }

	      return s0;
	    }

	    function peg$parseListLiteral() {
	      var s0, s1, s2, s3, s4, s5, s6;

	      s0 = peg$currPos;
	      s1 = peg$parseOpenCurly();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseStringOrNumber();
	        if (s2 === peg$FAILED) {
	          s2 = null;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = [];
	          s4 = peg$currPos;
	          s5 = peg$parseComma();
	          if (s5 !== peg$FAILED) {
	            s6 = peg$parseStringOrNumber();
	            if (s6 !== peg$FAILED) {
	              s5 = [s5, s6];
	              s4 = s5;
	            } else {
	              peg$currPos = s4;
	              s4 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s4;
	            s4 = peg$FAILED;
	          }
	          while (s4 !== peg$FAILED) {
	            s3.push(s4);
	            s4 = peg$currPos;
	            s5 = peg$parseComma();
	            if (s5 !== peg$FAILED) {
	              s6 = peg$parseStringOrNumber();
	              if (s6 !== peg$FAILED) {
	                s5 = [s5, s6];
	                s4 = s5;
	              } else {
	                peg$currPos = s4;
	                s4 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s4;
	              s4 = peg$FAILED;
	            }
	          }
	          if (s3 !== peg$FAILED) {
	            s4 = peg$parseCloseCurly();
	            if (s4 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c90(s2, s3);
	              s0 = s1;
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseInListLiteralExpression() {
	      var s0, s1, s2, s3, s4, s5, s6;

	      s0 = peg$currPos;
	      s1 = peg$parseOpenParen();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseStringOrNumber();
	        if (s2 !== peg$FAILED) {
	          s3 = [];
	          s4 = peg$currPos;
	          s5 = peg$parseComma();
	          if (s5 !== peg$FAILED) {
	            s6 = peg$parseStringOrNumber();
	            if (s6 !== peg$FAILED) {
	              s5 = [s5, s6];
	              s4 = s5;
	            } else {
	              peg$currPos = s4;
	              s4 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s4;
	            s4 = peg$FAILED;
	          }
	          while (s4 !== peg$FAILED) {
	            s3.push(s4);
	            s4 = peg$currPos;
	            s5 = peg$parseComma();
	            if (s5 !== peg$FAILED) {
	              s6 = peg$parseStringOrNumber();
	              if (s6 !== peg$FAILED) {
	                s5 = [s5, s6];
	                s4 = s5;
	              } else {
	                peg$currPos = s4;
	                s4 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s4;
	              s4 = peg$FAILED;
	            }
	          }
	          if (s3 !== peg$FAILED) {
	            s4 = peg$parseCloseParen();
	            if (s4 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c91(s2, s3);
	              s0 = s1;
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseString() {
	      var s0, s1, s2, s3, s4;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 39) {
	        s1 = peg$c93;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c94); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseNotSQuote();
	        if (s2 !== peg$FAILED) {
	          if (input.charCodeAt(peg$currPos) === 39) {
	            s3 = peg$c93;
	            peg$currPos++;
	          } else {
	            s3 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c94); }
	          }
	          if (s3 !== peg$FAILED) {
	            s4 = peg$parse_();
	            if (s4 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c95(s2);
	              s0 = s1;
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      if (s0 === peg$FAILED) {
	        s0 = peg$currPos;
	        if (input.charCodeAt(peg$currPos) === 39) {
	          s1 = peg$c93;
	          peg$currPos++;
	        } else {
	          s1 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c94); }
	        }
	        if (s1 !== peg$FAILED) {
	          s2 = peg$parseNotSQuote();
	          if (s2 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c96(s2);
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	        if (s0 === peg$FAILED) {
	          s0 = peg$currPos;
	          if (input.charCodeAt(peg$currPos) === 34) {
	            s1 = peg$c97;
	            peg$currPos++;
	          } else {
	            s1 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c98); }
	          }
	          if (s1 !== peg$FAILED) {
	            s2 = peg$parseNotDQuote();
	            if (s2 !== peg$FAILED) {
	              if (input.charCodeAt(peg$currPos) === 34) {
	                s3 = peg$c97;
	                peg$currPos++;
	              } else {
	                s3 = peg$FAILED;
	                if (peg$silentFails === 0) { peg$fail(peg$c98); }
	              }
	              if (s3 !== peg$FAILED) {
	                s4 = peg$parse_();
	                if (s4 !== peg$FAILED) {
	                  peg$savedPos = s0;
	                  s1 = peg$c95(s2);
	                  s0 = s1;
	                } else {
	                  peg$currPos = s0;
	                  s0 = peg$FAILED;
	                }
	              } else {
	                peg$currPos = s0;
	                s0 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	          if (s0 === peg$FAILED) {
	            s0 = peg$currPos;
	            if (input.charCodeAt(peg$currPos) === 34) {
	              s1 = peg$c97;
	              peg$currPos++;
	            } else {
	              s1 = peg$FAILED;
	              if (peg$silentFails === 0) { peg$fail(peg$c98); }
	            }
	            if (s1 !== peg$FAILED) {
	              s2 = peg$parseNotDQuote();
	              if (s2 !== peg$FAILED) {
	                peg$savedPos = s0;
	                s1 = peg$c99(s2);
	                s0 = s1;
	              } else {
	                peg$currPos = s0;
	                s0 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          }
	        }
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c92); }
	      }

	      return s0;
	    }

	    function peg$parseInterval() {
	      var s0, s1, s2, s3, s4;

	      s0 = peg$currPos;
	      s1 = peg$parseIntervalToken();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseNumber();
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parseName();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = peg$currPos;
	            s4 = peg$c100(s2, s3);
	            if (s4) {
	              s4 = void 0;
	            } else {
	              s4 = peg$FAILED;
	            }
	            if (s4 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c101(s2, s3);
	              s0 = s1;
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseNullToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 4).toLowerCase() === peg$c102) {
	        s1 = input.substr(peg$currPos, 4);
	        peg$currPos += 4;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c103); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c104();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseTrueToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 4).toLowerCase() === peg$c105) {
	        s1 = input.substr(peg$currPos, 4);
	        peg$currPos += 4;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c106); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c107();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseFalseToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 5).toLowerCase() === peg$c108) {
	        s1 = input.substr(peg$currPos, 5);
	        peg$currPos += 5;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c109); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c110();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseSelectToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 6).toLowerCase() === peg$c111) {
	        s1 = input.substr(peg$currPos, 6);
	        peg$currPos += 6;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c112); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c113();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseDescribeToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 8).toLowerCase() === peg$c114) {
	        s1 = input.substr(peg$currPos, 8);
	        peg$currPos += 8;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c115); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c116();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseShowToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 4).toLowerCase() === peg$c117) {
	        s1 = input.substr(peg$currPos, 4);
	        peg$currPos += 4;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c118); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c119();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseSetToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 3).toLowerCase() === peg$c120) {
	        s1 = input.substr(peg$currPos, 3);
	        peg$currPos += 3;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c121); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c122();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseVariablesToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 9).toLowerCase() === peg$c123) {
	        s1 = input.substr(peg$currPos, 9);
	        peg$currPos += 9;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c124); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseDatabasesToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 9).toLowerCase() === peg$c125) {
	        s1 = input.substr(peg$currPos, 9);
	        peg$currPos += 9;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c126); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseSchemasToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 7).toLowerCase() === peg$c127) {
	        s1 = input.substr(peg$currPos, 7);
	        peg$currPos += 7;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c128); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseColumnsToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 7).toLowerCase() === peg$c129) {
	        s1 = input.substr(peg$currPos, 7);
	        peg$currPos += 7;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c130); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseFullToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 4).toLowerCase() === peg$c131) {
	        s1 = input.substr(peg$currPos, 4);
	        peg$currPos += 4;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c132); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseTablesToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 6).toLowerCase() === peg$c133) {
	        s1 = input.substr(peg$currPos, 6);
	        peg$currPos += 6;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c134); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseFromToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 4).toLowerCase() === peg$c135) {
	        s1 = input.substr(peg$currPos, 4);
	        peg$currPos += 4;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c136); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseAsToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 2).toLowerCase() === peg$c137) {
	        s1 = input.substr(peg$currPos, 2);
	        peg$currPos += 2;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c138); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseOnToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 2).toLowerCase() === peg$c139) {
	        s1 = input.substr(peg$currPos, 2);
	        peg$currPos += 2;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c140); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseLeftToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 4).toLowerCase() === peg$c141) {
	        s1 = input.substr(peg$currPos, 4);
	        peg$currPos += 4;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c142); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseInnerToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 5).toLowerCase() === peg$c143) {
	        s1 = input.substr(peg$currPos, 5);
	        peg$currPos += 5;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c144); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseJoinToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 4).toLowerCase() === peg$c145) {
	        s1 = input.substr(peg$currPos, 4);
	        peg$currPos += 4;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c146); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseUnionToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 5).toLowerCase() === peg$c147) {
	        s1 = input.substr(peg$currPos, 5);
	        peg$currPos += 5;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c148); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseWhereToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 5).toLowerCase() === peg$c149) {
	        s1 = input.substr(peg$currPos, 5);
	        peg$currPos += 5;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c150); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseGroupToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 5).toLowerCase() === peg$c151) {
	        s1 = input.substr(peg$currPos, 5);
	        peg$currPos += 5;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c152); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseByToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 2).toLowerCase() === peg$c153) {
	        s1 = input.substr(peg$currPos, 2);
	        peg$currPos += 2;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c154); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseOrderToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 5).toLowerCase() === peg$c155) {
	        s1 = input.substr(peg$currPos, 5);
	        peg$currPos += 5;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c156); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseHavingToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 6).toLowerCase() === peg$c157) {
	        s1 = input.substr(peg$currPos, 6);
	        peg$currPos += 6;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c158); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseLimitToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 5).toLowerCase() === peg$c159) {
	        s1 = input.substr(peg$currPos, 5);
	        peg$currPos += 5;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c160); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseAscToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 3).toLowerCase() === peg$c161) {
	        s1 = input.substr(peg$currPos, 3);
	        peg$currPos += 3;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c162); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c163();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseDescToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 4).toLowerCase() === peg$c164) {
	        s1 = input.substr(peg$currPos, 4);
	        peg$currPos += 4;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c165); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c166();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseBetweenToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 7).toLowerCase() === peg$c167) {
	        s1 = input.substr(peg$currPos, 7);
	        peg$currPos += 7;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c168); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseInToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 2).toLowerCase() === peg$c169) {
	        s1 = input.substr(peg$currPos, 2);
	        peg$currPos += 2;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c170); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseIsToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 2).toLowerCase() === peg$c171) {
	        s1 = input.substr(peg$currPos, 2);
	        peg$currPos += 2;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c172); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseLikeToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 4).toLowerCase() === peg$c173) {
	        s1 = input.substr(peg$currPos, 4);
	        peg$currPos += 4;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c174); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseContainsToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 8).toLowerCase() === peg$c175) {
	        s1 = input.substr(peg$currPos, 8);
	        peg$currPos += 8;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c176); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseRegExpToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 6).toLowerCase() === peg$c177) {
	        s1 = input.substr(peg$currPos, 6);
	        peg$currPos += 6;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c178); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseEscapeToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 6).toLowerCase() === peg$c179) {
	        s1 = input.substr(peg$currPos, 6);
	        peg$currPos += 6;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c180); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseNotToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 3).toLowerCase() === peg$c181) {
	        s1 = input.substr(peg$currPos, 3);
	        peg$currPos += 3;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c182); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseAndToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 3).toLowerCase() === peg$c183) {
	        s1 = input.substr(peg$currPos, 3);
	        peg$currPos += 3;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c184); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseOrToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 2).toLowerCase() === peg$c185) {
	        s1 = input.substr(peg$currPos, 2);
	        peg$currPos += 2;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c186); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseDistinctToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 8).toLowerCase() === peg$c187) {
	        s1 = input.substr(peg$currPos, 8);
	        peg$currPos += 8;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c188); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseStarToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 42) {
	        s1 = peg$c67;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c68); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c15();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseCountToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 5).toLowerCase() === peg$c189) {
	        s1 = input.substr(peg$currPos, 5);
	        peg$currPos += 5;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c190); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c191();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseCountDistinctToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 14).toLowerCase() === peg$c192) {
	        s1 = input.substr(peg$currPos, 14);
	        peg$currPos += 14;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c193); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c194();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseSumToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 3).toLowerCase() === peg$c195) {
	        s1 = input.substr(peg$currPos, 3);
	        peg$currPos += 3;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c196); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c197();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseAvgToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 3).toLowerCase() === peg$c198) {
	        s1 = input.substr(peg$currPos, 3);
	        peg$currPos += 3;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c199); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c200();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseMinToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 3).toLowerCase() === peg$c201) {
	        s1 = input.substr(peg$currPos, 3);
	        peg$currPos += 3;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c202); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c203();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseMaxToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 3).toLowerCase() === peg$c204) {
	        s1 = input.substr(peg$currPos, 3);
	        peg$currPos += 3;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c205); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c206();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseQuantileToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 8).toLowerCase() === peg$c207) {
	        s1 = input.substr(peg$currPos, 8);
	        peg$currPos += 8;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c208); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c209();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseCustomToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 6).toLowerCase() === peg$c210) {
	        s1 = input.substr(peg$currPos, 6);
	        peg$currPos += 6;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c211); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c212();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseDateToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 4).toLowerCase() === peg$c213) {
	        s1 = input.substr(peg$currPos, 4);
	        peg$currPos += 4;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c214); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c215();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseTimeToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 4).toLowerCase() === peg$c216) {
	        s1 = input.substr(peg$currPos, 4);
	        peg$currPos += 4;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c217); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c218();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseTimestampToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 9).toLowerCase() === peg$c219) {
	        s1 = input.substr(peg$currPos, 9);
	        peg$currPos += 9;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c220); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c221();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseDToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 1).toLowerCase() === peg$c222) {
	        s1 = input.charAt(peg$currPos);
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c223); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c215();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseTToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 1).toLowerCase() === peg$c224) {
	        s1 = input.charAt(peg$currPos);
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c225); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c218();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseTsToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 2).toLowerCase() === peg$c226) {
	        s1 = input.substr(peg$currPos, 2);
	        peg$currPos += 2;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c227); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c221();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseIntervalToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 8).toLowerCase() === peg$c228) {
	        s1 = input.substr(peg$currPos, 8);
	        peg$currPos += 8;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c229); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseIdentifierPart() {
	      var s0;

	      if (peg$c230.test(input.charAt(peg$currPos))) {
	        s0 = input.charAt(peg$currPos);
	        peg$currPos++;
	      } else {
	        s0 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c231); }
	      }

	      return s0;
	    }

	    function peg$parseNumber() {
	      var s0, s1, s2, s3, s4, s5;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      s1 = peg$currPos;
	      s2 = peg$currPos;
	      s3 = peg$parseInt();
	      if (s3 !== peg$FAILED) {
	        s4 = peg$parseFraction();
	        if (s4 === peg$FAILED) {
	          s4 = null;
	        }
	        if (s4 !== peg$FAILED) {
	          s5 = peg$parseExp();
	          if (s5 === peg$FAILED) {
	            s5 = null;
	          }
	          if (s5 !== peg$FAILED) {
	            s3 = [s3, s4, s5];
	            s2 = s3;
	          } else {
	            peg$currPos = s2;
	            s2 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s2;
	        s2 = peg$FAILED;
	      }
	      if (s2 !== peg$FAILED) {
	        s1 = input.substring(s1, peg$currPos);
	      } else {
	        s1 = s2;
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c233(s1);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c232); }
	      }

	      return s0;
	    }

	    function peg$parseInt() {
	      var s0, s1, s2, s3, s4;

	      s0 = peg$currPos;
	      s1 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 45) {
	        s2 = peg$c63;
	        peg$currPos++;
	      } else {
	        s2 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c64); }
	      }
	      if (s2 === peg$FAILED) {
	        s2 = null;
	      }
	      if (s2 !== peg$FAILED) {
	        if (peg$c234.test(input.charAt(peg$currPos))) {
	          s3 = input.charAt(peg$currPos);
	          peg$currPos++;
	        } else {
	          s3 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c235); }
	        }
	        if (s3 !== peg$FAILED) {
	          s4 = peg$parseDigits();
	          if (s4 !== peg$FAILED) {
	            s2 = [s2, s3, s4];
	            s1 = s2;
	          } else {
	            peg$currPos = s1;
	            s1 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s1;
	          s1 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s1;
	        s1 = peg$FAILED;
	      }
	      if (s1 !== peg$FAILED) {
	        s0 = input.substring(s0, peg$currPos);
	      } else {
	        s0 = s1;
	      }
	      if (s0 === peg$FAILED) {
	        s0 = peg$currPos;
	        s1 = peg$currPos;
	        if (input.charCodeAt(peg$currPos) === 45) {
	          s2 = peg$c63;
	          peg$currPos++;
	        } else {
	          s2 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c64); }
	        }
	        if (s2 === peg$FAILED) {
	          s2 = null;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parseDigit();
	          if (s3 !== peg$FAILED) {
	            s2 = [s2, s3];
	            s1 = s2;
	          } else {
	            peg$currPos = s1;
	            s1 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s1;
	          s1 = peg$FAILED;
	        }
	        if (s1 !== peg$FAILED) {
	          s0 = input.substring(s0, peg$currPos);
	        } else {
	          s0 = s1;
	        }
	      }

	      return s0;
	    }

	    function peg$parseFraction() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      s1 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 46) {
	        s2 = peg$c236;
	        peg$currPos++;
	      } else {
	        s2 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c237); }
	      }
	      if (s2 !== peg$FAILED) {
	        s3 = peg$parseDigits();
	        if (s3 !== peg$FAILED) {
	          s2 = [s2, s3];
	          s1 = s2;
	        } else {
	          peg$currPos = s1;
	          s1 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s1;
	        s1 = peg$FAILED;
	      }
	      if (s1 !== peg$FAILED) {
	        s0 = input.substring(s0, peg$currPos);
	      } else {
	        s0 = s1;
	      }

	      return s0;
	    }

	    function peg$parseExp() {
	      var s0, s1, s2, s3, s4;

	      s0 = peg$currPos;
	      s1 = peg$currPos;
	      if (input.substr(peg$currPos, 1).toLowerCase() === peg$c238) {
	        s2 = input.charAt(peg$currPos);
	        peg$currPos++;
	      } else {
	        s2 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c239); }
	      }
	      if (s2 !== peg$FAILED) {
	        if (peg$c240.test(input.charAt(peg$currPos))) {
	          s3 = input.charAt(peg$currPos);
	          peg$currPos++;
	        } else {
	          s3 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c241); }
	        }
	        if (s3 === peg$FAILED) {
	          s3 = null;
	        }
	        if (s3 !== peg$FAILED) {
	          s4 = peg$parseDigits();
	          if (s4 !== peg$FAILED) {
	            s2 = [s2, s3, s4];
	            s1 = s2;
	          } else {
	            peg$currPos = s1;
	            s1 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s1;
	          s1 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s1;
	        s1 = peg$FAILED;
	      }
	      if (s1 !== peg$FAILED) {
	        s0 = input.substring(s0, peg$currPos);
	      } else {
	        s0 = s1;
	      }

	      return s0;
	    }

	    function peg$parseDigits() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      s1 = [];
	      s2 = peg$parseDigit();
	      if (s2 !== peg$FAILED) {
	        while (s2 !== peg$FAILED) {
	          s1.push(s2);
	          s2 = peg$parseDigit();
	        }
	      } else {
	        s1 = peg$FAILED;
	      }
	      if (s1 !== peg$FAILED) {
	        s0 = input.substring(s0, peg$currPos);
	      } else {
	        s0 = s1;
	      }

	      return s0;
	    }

	    function peg$parseDigit() {
	      var s0;

	      if (peg$c242.test(input.charAt(peg$currPos))) {
	        s0 = input.charAt(peg$currPos);
	        peg$currPos++;
	      } else {
	        s0 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c243); }
	      }

	      return s0;
	    }

	    function peg$parseOpenParen() {
	      var s0, s1, s2;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 40) {
	        s1 = peg$c245;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c246); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          s1 = [s1, s2];
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c244); }
	      }

	      return s0;
	    }

	    function peg$parseCloseParen() {
	      var s0, s1, s2;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 41) {
	        s1 = peg$c248;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c249); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          s1 = [s1, s2];
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c247); }
	      }

	      return s0;
	    }

	    function peg$parseOpenCurly() {
	      var s0, s1, s2;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 123) {
	        s1 = peg$c251;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c252); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          s1 = [s1, s2];
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c250); }
	      }

	      return s0;
	    }

	    function peg$parseCloseCurly() {
	      var s0, s1, s2;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 125) {
	        s1 = peg$c254;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c255); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          s1 = [s1, s2];
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c253); }
	      }

	      return s0;
	    }

	    function peg$parseComma() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 44) {
	        s1 = peg$c256;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c257); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          s1 = [s1, s2];
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseDot() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 46) {
	        s1 = peg$c236;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c237); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          s1 = [s1, s2];
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseName() {
	      var s0, s1, s2, s3, s4, s5;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      s1 = peg$currPos;
	      s2 = peg$currPos;
	      if (peg$c230.test(input.charAt(peg$currPos))) {
	        s3 = input.charAt(peg$currPos);
	        peg$currPos++;
	      } else {
	        s3 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c231); }
	      }
	      if (s3 !== peg$FAILED) {
	        s4 = [];
	        if (peg$c259.test(input.charAt(peg$currPos))) {
	          s5 = input.charAt(peg$currPos);
	          peg$currPos++;
	        } else {
	          s5 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c260); }
	        }
	        while (s5 !== peg$FAILED) {
	          s4.push(s5);
	          if (peg$c259.test(input.charAt(peg$currPos))) {
	            s5 = input.charAt(peg$currPos);
	            peg$currPos++;
	          } else {
	            s5 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c260); }
	          }
	        }
	        if (s4 !== peg$FAILED) {
	          s3 = [s3, s4];
	          s2 = s3;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s2;
	        s2 = peg$FAILED;
	      }
	      if (s2 !== peg$FAILED) {
	        s1 = input.substring(s1, peg$currPos);
	      } else {
	        s1 = s2;
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c18(s1);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c258); }
	      }

	      return s0;
	    }

	    function peg$parseRelaxedName() {
	      var s0, s1, s2, s3, s4, s5;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      s1 = peg$currPos;
	      s2 = peg$currPos;
	      if (peg$c262.test(input.charAt(peg$currPos))) {
	        s3 = input.charAt(peg$currPos);
	        peg$currPos++;
	      } else {
	        s3 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c263); }
	      }
	      if (s3 !== peg$FAILED) {
	        s4 = [];
	        if (peg$c264.test(input.charAt(peg$currPos))) {
	          s5 = input.charAt(peg$currPos);
	          peg$currPos++;
	        } else {
	          s5 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c265); }
	        }
	        while (s5 !== peg$FAILED) {
	          s4.push(s5);
	          if (peg$c264.test(input.charAt(peg$currPos))) {
	            s5 = input.charAt(peg$currPos);
	            peg$currPos++;
	          } else {
	            s5 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c265); }
	          }
	        }
	        if (s4 !== peg$FAILED) {
	          s3 = [s3, s4];
	          s2 = s3;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s2;
	        s2 = peg$FAILED;
	      }
	      if (s2 !== peg$FAILED) {
	        s1 = input.substring(s1, peg$currPos);
	      } else {
	        s1 = s2;
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c18(s1);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c261); }
	      }

	      return s0;
	    }

	    function peg$parseNotSQuote() {
	      var s0, s1, s2;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      s1 = [];
	      if (peg$c267.test(input.charAt(peg$currPos))) {
	        s2 = input.charAt(peg$currPos);
	        peg$currPos++;
	      } else {
	        s2 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c268); }
	      }
	      while (s2 !== peg$FAILED) {
	        s1.push(s2);
	        if (peg$c267.test(input.charAt(peg$currPos))) {
	          s2 = input.charAt(peg$currPos);
	          peg$currPos++;
	        } else {
	          s2 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c268); }
	        }
	      }
	      if (s1 !== peg$FAILED) {
	        s0 = input.substring(s0, peg$currPos);
	      } else {
	        s0 = s1;
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c266); }
	      }

	      return s0;
	    }

	    function peg$parseNotDQuote() {
	      var s0, s1, s2;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      s1 = [];
	      if (peg$c270.test(input.charAt(peg$currPos))) {
	        s2 = input.charAt(peg$currPos);
	        peg$currPos++;
	      } else {
	        s2 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c271); }
	      }
	      while (s2 !== peg$FAILED) {
	        s1.push(s2);
	        if (peg$c270.test(input.charAt(peg$currPos))) {
	          s2 = input.charAt(peg$currPos);
	          peg$currPos++;
	        } else {
	          s2 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c271); }
	        }
	      }
	      if (s1 !== peg$FAILED) {
	        s0 = input.substring(s0, peg$currPos);
	      } else {
	        s0 = s1;
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c269); }
	      }

	      return s0;
	    }

	    function peg$parse_() {
	      var s0, s1, s2;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      s1 = [];
	      if (peg$c273.test(input.charAt(peg$currPos))) {
	        s2 = input.charAt(peg$currPos);
	        peg$currPos++;
	      } else {
	        s2 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c274); }
	      }
	      if (s2 === peg$FAILED) {
	        s2 = peg$parseSingleLineComment();
	        if (s2 === peg$FAILED) {
	          s2 = peg$parseInlineComment();
	        }
	      }
	      while (s2 !== peg$FAILED) {
	        s1.push(s2);
	        if (peg$c273.test(input.charAt(peg$currPos))) {
	          s2 = input.charAt(peg$currPos);
	          peg$currPos++;
	        } else {
	          s2 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c274); }
	        }
	        if (s2 === peg$FAILED) {
	          s2 = peg$parseSingleLineComment();
	          if (s2 === peg$FAILED) {
	            s2 = peg$parseInlineComment();
	          }
	        }
	      }
	      if (s1 !== peg$FAILED) {
	        s0 = input.substring(s0, peg$currPos);
	      } else {
	        s0 = s1;
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c272); }
	      }

	      return s0;
	    }

	    function peg$parseInlineComment() {
	      var s0, s1, s2, s3, s4, s5;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 2) === peg$c275) {
	        s1 = peg$c275;
	        peg$currPos += 2;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c276); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = [];
	        s3 = peg$currPos;
	        s4 = peg$currPos;
	        peg$silentFails++;
	        s5 = peg$parseCommentTerminator();
	        peg$silentFails--;
	        if (s5 === peg$FAILED) {
	          s4 = void 0;
	        } else {
	          peg$currPos = s4;
	          s4 = peg$FAILED;
	        }
	        if (s4 !== peg$FAILED) {
	          if (input.length > peg$currPos) {
	            s5 = input.charAt(peg$currPos);
	            peg$currPos++;
	          } else {
	            s5 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c8); }
	          }
	          if (s5 !== peg$FAILED) {
	            s4 = [s4, s5];
	            s3 = s4;
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s3;
	          s3 = peg$FAILED;
	        }
	        while (s3 !== peg$FAILED) {
	          s2.push(s3);
	          s3 = peg$currPos;
	          s4 = peg$currPos;
	          peg$silentFails++;
	          s5 = peg$parseCommentTerminator();
	          peg$silentFails--;
	          if (s5 === peg$FAILED) {
	            s4 = void 0;
	          } else {
	            peg$currPos = s4;
	            s4 = peg$FAILED;
	          }
	          if (s4 !== peg$FAILED) {
	            if (input.length > peg$currPos) {
	              s5 = input.charAt(peg$currPos);
	              peg$currPos++;
	            } else {
	              s5 = peg$FAILED;
	              if (peg$silentFails === 0) { peg$fail(peg$c8); }
	            }
	            if (s5 !== peg$FAILED) {
	              s4 = [s4, s5];
	              s3 = s4;
	            } else {
	              peg$currPos = s3;
	              s3 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parseCommentTerminator();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseSingleLineComment() {
	      var s0, s1, s2, s3, s4, s5;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 3) === peg$c277) {
	        s1 = peg$c277;
	        peg$currPos += 3;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c278); }
	      }
	      if (s1 === peg$FAILED) {
	        if (input.charCodeAt(peg$currPos) === 35) {
	          s1 = peg$c279;
	          peg$currPos++;
	        } else {
	          s1 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c280); }
	        }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = [];
	        s3 = peg$currPos;
	        s4 = peg$currPos;
	        peg$silentFails++;
	        s5 = peg$parseLineTerminator();
	        peg$silentFails--;
	        if (s5 === peg$FAILED) {
	          s4 = void 0;
	        } else {
	          peg$currPos = s4;
	          s4 = peg$FAILED;
	        }
	        if (s4 !== peg$FAILED) {
	          if (input.length > peg$currPos) {
	            s5 = input.charAt(peg$currPos);
	            peg$currPos++;
	          } else {
	            s5 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c8); }
	          }
	          if (s5 !== peg$FAILED) {
	            s4 = [s4, s5];
	            s3 = s4;
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s3;
	          s3 = peg$FAILED;
	        }
	        while (s3 !== peg$FAILED) {
	          s2.push(s3);
	          s3 = peg$currPos;
	          s4 = peg$currPos;
	          peg$silentFails++;
	          s5 = peg$parseLineTerminator();
	          peg$silentFails--;
	          if (s5 === peg$FAILED) {
	            s4 = void 0;
	          } else {
	            peg$currPos = s4;
	            s4 = peg$FAILED;
	          }
	          if (s4 !== peg$FAILED) {
	            if (input.length > peg$currPos) {
	              s5 = input.charAt(peg$currPos);
	              peg$currPos++;
	            } else {
	              s5 = peg$FAILED;
	              if (peg$silentFails === 0) { peg$fail(peg$c8); }
	            }
	            if (s5 !== peg$FAILED) {
	              s4 = [s4, s5];
	              s3 = s4;
	            } else {
	              peg$currPos = s3;
	              s3 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        }
	        if (s2 !== peg$FAILED) {
	          s1 = [s1, s2];
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseCommentTerminator() {
	      var s0;

	      if (input.substr(peg$currPos, 2) === peg$c281) {
	        s0 = peg$c281;
	        peg$currPos += 2;
	      } else {
	        s0 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c282); }
	      }

	      return s0;
	    }

	    function peg$parseLineTerminator() {
	      var s0;

	      if (peg$c283.test(input.charAt(peg$currPos))) {
	        s0 = input.charAt(peg$currPos);
	        peg$currPos++;
	      } else {
	        s0 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c284); }
	      }

	      return s0;
	    }

	    // starts with function(plywood, chronoshift)
	    var ply = plywood.ply;
	    var $ = plywood.$;
	    var r = plywood.r;
	    var Expression = plywood.Expression;
	    var FilterAction = plywood.FilterAction;
	    var ApplyAction = plywood.ApplyAction;
	    var SortAction = plywood.SortAction;
	    var LimitAction = plywood.LimitAction;
	    var MatchAction = plywood.MatchAction;

	    var Timezone = chronoshift.Timezone;

	    var Set = plywood.Set;

	    var dataRef = $('data');

	    // See here: https://www.drupal.org/node/141051
	    var reservedWords = {
	      ALL: 1, AND: 1, AS: 1, ASC: 1,
	      BETWEEN: 1, BY: 1,
	      CONTAINS: 1, CREATE: 1,
	      DELETE: 1, DESC: 1, DESCRIBE: 1, DISTINCT: 1, DROP: 1,
	      EXISTS: 1, EXPLAIN: 1, ESCAPE: 1,
	      FALSE: 1, FROM: 1,
	      GROUP: 1,
	      HAVING: 1,
	      IN: 1, INNER: 1, INSERT: 1, INTO: 1, IS: 1,
	      JOIN: 1,
	      LEFT: 1, LIKE: 1, LIMIT: 1, LOOKUP: 1,
	      MATCH: 1,
	      NOT: 1, NULL: 1,
	      ON: 1, OR: 1, ORDER: 1,
	      REPLACE: 1, REGEXP: 1,
	      SELECT: 1, SET: 1, SHOW: 1,
	      TABLE: 1, TRUE: 1,
	      UNION: 1, UPDATE: 1,
	      VALUES: 1,
	      WHERE: 1
	    };

	    var unsupportedVerbs = {
	      ALTER: 1,
	      CALL: 1,
	      CREATE: 1,
	      DEALLOCATE: 1,
	      DELETE: 1,
	      DO: 1,
	      DROP: 1,
	      EXECUTE: 1,
	      HANDLER: 1,
	      INSERT: 1,
	      LOAD: 1,
	      LOCK: 1,
	      PREPARE: 1,
	      RENAME: 1,
	      REPLACE: 1,
	      SAVEPOINT: 1,
	      START: 1,
	      TRUNCATE: 1,
	      UNLOCK: 1,
	      UPDATE: 1
	    };

	    var intervalUnits = {
	      MICROSECOND: 1,
	      SECOND: 1,
	      MINUTE: 1,
	      HOUR: 1,
	      DAY: 1,
	      WEEK: 1,
	      MONTH: 1,
	      QUARTER: 1,
	      YEAR: 1
	    }

	    var dateFormats = {
	      '%Y-%m-%d %H:%i:%s': 'PT1S',
	      '%Y-%m-%d %H:%i:00': 'PT1M',
	      '%Y-%m-%d %H:00:00': 'PT1H',
	      '%Y-%m-%d': 'P1D',
	      '%Y-%m-01': 'P1M',
	      '%Y-01-01': 'P1Y',
	    };

	    function upgrade(v) {
	      if (!Expression.isExpression(v)) return r(v);
	      return v;
	    }

	    var notImplemented = function() { error('not implemented yet'); };
	    var fns = {
	      ABSOLUTE: function(op) { return upgrade(op).absolute(); },
	      OVERLAP: function(op, ex) { return upgrade(op).overlap(ex); },
	      SQRT: function(op) { return upgrade(op).power(0.5); },
	      EXP: function(ex) { return r(Math.E).power(ex); },
	      POWER: function(op, ex) { return upgrade(op).power(ex); },
	      NOW: function() { return r(new Date()); },
	      CURDATE: function() { return r(chronoshift.day.floor(new Date(), Timezone.UTC)); },
	      FALLBACK: function(op, ex) { return upgrade(op).fallback(ex); },
	      MATCH: function(op, reg) { return upgrade(op).match(reg); },
	      EXTRACT: function(op, reg) { return upgrade(op).extract(reg); },
	      CONCAT: function() { return Expression.concat(Array.prototype.map.call(arguments, upgrade)); },
	      SUBSTRING: function(op, i, n) { return upgrade(op).substr(i, n); },
	      TIME_FLOOR: function(op, d, tz) { return upgrade(op).timeFloor(d, tz); },
	      TIME_SHIFT: function(op, d, s, tz) { return upgrade(op).timeShift(d, s, tz); },
	      TIME_RANGE: function(op, d, s, tz) { return upgrade(op).timeRange(d, s, tz); },
	      TIME_BUCKET: function(op, d, tz) { return upgrade(op).timeBucket(d, tz); },
	      NUMBER_BUCKET: function(op, s, o) { return upgrade(op).numberBucket(s, o); },
	      TIME_PART: function(op, part, tz) { return upgrade(op).timePart(part, tz); },
	      LOOKUP: function(op, name) { return upgrade(op).lookup(name); },
	      PI: function() { return r(Math.PI); },
	      STD: notImplemented,
	      DATE_FORMAT: function(op, format) {
	        var duration = dateFormats[format.replace(/ 00:00:00$/, '')];
	        if (!duration) error('unsupported format: ' + format);
	        return upgrade(op).timeFloor(duration);
	      },

	      YEAR: function(op, tz) { return upgrade(op).timePart('YEAR', tz); },
	      MONTH: function(op, tz) { return upgrade(op).timePart('MONTH_OF_YEAR', tz); },
	      WEEK_OF_YEAR: function(op, tz) { return upgrade(op).timePart('WEEK_OF_YEAR', tz); },
	      DAY_OF_YEAR: function(op, tz) { return upgrade(op).timePart('DAY_OF_YEAR', tz); },
	      DAY_OF_MONTH: function(op, tz) { return upgrade(op).timePart('DAY_OF_MONTH', tz); },
	      DAY_OF_WEEK: function(op, tz) { return upgrade(op).timePart('DAY_OF_WEEK', tz); },
	      WEEKDAY: notImplemented,
	      HOUR: function(op, tz) { return upgrade(op).timePart('HOUR_OF_DAY', tz); },
	      MINUTE: function(op, tz) { return upgrade(op).timePart('MINUTE_OF_HOUR', tz); },
	      SECOND: function(op, tz) { return upgrade(op).timePart('SECOND_OF_MINUTE', tz); },
	      DATE: function(op, tz) { return upgrade(op).timeFloor('P1D', tz); },
	      TIMESTAMP: function(op) { return upgrade(op).bumpStringLiteralToTime(); },
	      TIME: function() { error('time literals are not supported'); },
	      DATE_ADD: function(op, d, tz) { return d === 0 ? upgrade(op) : error('only zero interval supported in date math'); },
	      DATE_SUB: function(op, d, tz) { return d === 0 ? upgrade(op) : error('only zero interval supported in date math'); },
	    };
	    fns.ABS = fns.ABSOLUTE;
	    fns.POW = fns.POWER;
	    fns.IFNULL = fns.FALLBACK;
	    fns.SUBSTR = fns.SUBSTRING;
	    fns.CURRENT_TIMESTAMP = fns.NOW;
	    fns.LOCALTIME = fns.NOW;
	    fns.LOCALTIMESTAMP = fns.NOW;
	    fns.UTC_TIMESTAMP = fns.NOW;
	    fns.SYSDATE = fns.NOW;
	    fns.CURRENT_DATE = fns.CURDATE;
	    fns.UTC_DATE = fns.CURDATE;
	    fns.DAY_OF_YEAR = fns.DAY_OF_YEAR;
	    fns.DOY = fns.DAY_OF_YEAR;
	    fns.DOW = fns.DAY_OF_WEEK;
	    fns.DAYOFMONTH = fns.DAY_OF_MONTH;
	    fns.DAY = fns.DAY_OF_MONTH;
	    fns.WEEKOFYEAR = fns.WEEK_OF_YEAR;
	    fns.WEEK = fns.WEEK_OF_YEAR;
	    fns.ADDDATE = fns.DATE_ADD;
	    fns.SUBDATE = fns.DATE_SUB;
	    fns.STDDEV = fns.STD;
	    fns.STDDEV_POP = fns.STD;

	    var objectHasOwnProperty = Object.prototype.hasOwnProperty;
	    function reserved(str) {
	      return objectHasOwnProperty.call(reservedWords, str.toUpperCase());
	    }

	    function makeDate(type, v) {
	      try {
	        return chronoshift.parseSQLDate(type, v);
	      } catch (e) {
	        var isoDate = chronoshift.parseISODate(v);
	        if (isoDate) {
	          if (type === 'd') isoDate = chronoshift.day.floor(isoDate, Timezone.UTC);
	          return isoDate;
	        }
	        error(e.message);
	      }
	    }

	    function extractGroupByColumn(columns, groupBy, index) {
	      var label = null;
	      var otherColumns = [];
	      for (var i = 0; i < columns.length; i++) {
	        var column = columns[i];
	        if (groupBy.equals(column.expression)) {
	          if (label) error('already have a label');
	          label = column.name;
	        } else {
	          otherColumns.push(column);
	        }
	      }
	      if (!label) label = 'split' + index;
	      return {
	        label: label,
	        otherColumns: otherColumns
	      };
	    }

	    function upgradeGroupBys(distinct, columns, groupBys) {
	      if (Array.isArray(columns)) { // Not *
	        if (!groupBys) {
	          // Support for not having a group by clause if there are aggregates in the columns
	          // A having an aggregate columns is the same as having "GROUP BY ''"

	          var hasAggregate = columns.some(function(column) {
	            var columnExpression = column.expression;
	            return columnExpression.isOp('chain') &&
	              columnExpression.actions.some(function(action) { return action.isAggregate(); })
	          })
	          if (hasAggregate) {
	            return [Expression.EMPTY_STRING];
	          } else if (distinct) {
	            return columns.map(function(column) { return column.expression });
	          }

	        } else {
	          return groupBys.map(function(groupBy) {
	            if (groupBy.isOp('literal') && groupBy.type === 'NUMBER') {
	              // Support for not having a group by clause refer to a select column by index

	              var groupByColumn = columns[groupBy.value - 1];
	              if (!groupByColumn) error("Unknown column '" + groupBy.value + "' in group by statement");

	              return groupByColumn.expression;
	            } else {
	              return groupBy;
	            }
	          });
	        }
	      }

	      return groupBys;
	    }

	    function staticColumn(column) {
	      return column.expression.getFreeReferences().length === 0;
	    }

	    function constructQuery(distinct, columns, from, where, groupBys, having, orderBy, limit) {
	      if (!columns) error('Can not have empty column list');

	      var query = null;

	      if (!distinct && Array.isArray(columns) && !from && !where && !groupBys && columns.every(staticColumn)) {
	        // This is a SELECT 1+1; type query
	        query = ply();
	        for (var i = 0; i < columns.length; i++) {
	          query = query.performAction(columns[i]);
	        }

	      } else {
	        var fromEx = from ? $(from.name) : dataRef;

	        if (where) {
	          fromEx = fromEx.filter(where);
	        }

	        groupBys = upgradeGroupBys(distinct, columns, groupBys);


	        if (!groupBys) {
	          // Select query
	          query = fromEx;

	          if (Array.isArray(columns)) {
	            var attributes = [];
	            for (var i = 0; i < columns.length; i++) {
	              var column = columns[i];
	              query = query.performAction(column);
	              attributes.push(column.name);
	            }
	            query = query.select.apply(query, attributes);
	          }

	        } else {
	          // Group By query
	          if (columns === '*') error('can not SELECT * with a GROUP BY');

	          if (groupBys.length === 1 && groupBys[0].isOp('literal')) {
	            query = ply().apply('data', fromEx);
	          } else {
	            var splits = {};
	            for (var i = 0; i < groupBys.length; i++) {
	              var groupBy = groupBys[i];
	              var extract = extractGroupByColumn(columns, groupBy, i);
	              columns = extract.otherColumns;
	              splits[extract.label] = groupBy;
	            }
	            query = fromEx.split(splits, 'data');
	          }

	          if (Array.isArray(columns)) {
	            for (var i = 0; i < columns.length; i++) {
	              query = query.performAction(columns[i]);
	            }
	          }
	        }
	      }

	      if (having) {
	        query = query.performAction(having);
	      }
	      if (orderBy) {
	        query = query.performAction(orderBy);
	      }
	      if (limit) {
	        query = query.performAction(limit);
	      }

	      return query;
	    }

	    function makeListMap1(head, tail) {
	      if (head == null) return [];
	      return [head].concat(tail.map(function(t) { return t[1] }));
	    }

	    function naryExpressionFactory(op, head, tail) {
	      if (!tail.length) return head;
	      return head[op].apply(head, tail.map(function(t) { return t[1]; }));
	    }

	    function naryExpressionWithAltFactory(op, head, tail, altToken, altOp) {
	      if (!tail.length) return head;
	      for (var i = 0; i < tail.length; i++) {
	        var t = tail[i];
	        head = head[t[0] === altToken ? altOp : op].call(head, t[1]);
	      }
	      return head;
	    }



	    peg$result = peg$startRuleFunction();

	    if (peg$result !== peg$FAILED && peg$currPos === input.length) {
	      return peg$result;
	    } else {
	      if (peg$result !== peg$FAILED && peg$currPos < input.length) {
	        peg$fail({ type: "end", description: "end of input" });
	      }

	      throw peg$buildException(
	        null,
	        peg$maxFailExpected,
	        peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,
	        peg$maxFailPos < input.length
	          ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)
	          : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)
	      );
	    }
	  }

	  return {
	    SyntaxError: peg$SyntaxError,
	    parse:       peg$parse
	  };
	};


/***/ },
/* 192 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	__export(__webpack_require__(193));
	__export(__webpack_require__(194));
	__export(__webpack_require__(195));
	__export(__webpack_require__(196));
	__export(__webpack_require__(198));
	__export(__webpack_require__(200));
	__export(__webpack_require__(201));
	__export(__webpack_require__(202));
	__export(__webpack_require__(203));
	__export(__webpack_require__(204));
	__export(__webpack_require__(205));
	__export(__webpack_require__(206));
	__export(__webpack_require__(207));
	__export(__webpack_require__(208));
	__export(__webpack_require__(209));
	__export(__webpack_require__(211));
	__export(__webpack_require__(212));
	__export(__webpack_require__(213));
	__export(__webpack_require__(214));
	__export(__webpack_require__(215));


/***/ },
/* 193 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var immutable_class_1 = __webpack_require__(189);
	var check;
	var Stage = (function () {
	    function Stage(parameters) {
	        this.x = parameters.x;
	        this.y = parameters.y;
	        this.width = parameters.width;
	        this.height = parameters.height;
	    }
	    Stage.isStage = function (candidate) {
	        return immutable_class_1.isInstanceOf(candidate, Stage);
	    };
	    Stage.fromJS = function (parameters) {
	        return new Stage({
	            x: parameters.x,
	            y: parameters.y,
	            width: parameters.width,
	            height: parameters.height
	        });
	    };
	    Stage.fromClientRect = function (rect) {
	        return new Stage({
	            x: rect.left,
	            y: rect.top,
	            width: rect.width,
	            height: rect.height
	        });
	    };
	    Stage.fromSize = function (width, height) {
	        return new Stage({
	            x: 0,
	            y: 0,
	            width: width,
	            height: height
	        });
	    };
	    Stage.prototype.valueOf = function () {
	        return {
	            x: this.x,
	            y: this.y,
	            width: this.width,
	            height: this.height
	        };
	    };
	    Stage.prototype.toJS = function () {
	        return {
	            x: this.x,
	            y: this.y,
	            width: this.width,
	            height: this.height
	        };
	    };
	    Stage.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    Stage.prototype.sizeOnlyValue = function () {
	        return {
	            x: 0,
	            y: 0,
	            width: this.width,
	            height: this.height
	        };
	    };
	    Stage.prototype.toString = function () {
	        return "[stage: " + this.width + "x" + this.height + "}]";
	    };
	    Stage.prototype.equals = function (other) {
	        return Stage.isStage(other) &&
	            this.x === other.x &&
	            this.y === other.y &&
	            this.width === other.width &&
	            this.height === other.height;
	    };
	    Stage.prototype.getTransform = function () {
	        return "translate(" + this.x + "," + this.y + ")";
	    };
	    Stage.prototype.getViewBox = function () {
	        return "0 0 " + this.width + " " + this.height;
	    };
	    Stage.prototype.getLeftTop = function () {
	        return {
	            left: this.x,
	            top: this.y
	        };
	    };
	    Stage.prototype.getWidthHeight = function () {
	        return {
	            width: this.width,
	            height: this.height
	        };
	    };
	    Stage.prototype.getLeftTopWidthHeight = function () {
	        return {
	            left: this.x,
	            top: this.y,
	            width: this.width,
	            height: this.height
	        };
	    };
	    Stage.prototype.within = function (param) {
	        var value = this.sizeOnlyValue();
	        var left = param.left, right = param.right, top = param.top, bottom = param.bottom;
	        if (left) {
	            value.x = left;
	            value.width -= left;
	        }
	        if (right) {
	            value.width -= right;
	        }
	        if (top) {
	            value.y = top;
	            value.height -= top;
	        }
	        if (bottom) {
	            value.height -= bottom;
	        }
	        return new Stage(value);
	    };
	    return Stage;
	}());
	exports.Stage = Stage;
	check = Stage;


/***/ },
/* 194 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var immutable_class_1 = __webpack_require__(189);
	var check;
	var MaxTime = (function () {
	    function MaxTime(parameters) {
	        this.time = parameters.time;
	        this.updated = parameters.updated;
	    }
	    MaxTime.isMaxTime = function (candidate) {
	        return immutable_class_1.isInstanceOf(candidate, MaxTime);
	    };
	    MaxTime.fromNow = function () {
	        var now = new Date();
	        return new MaxTime({
	            time: now,
	            updated: now
	        });
	    };
	    MaxTime.fromDate = function (time) {
	        return new MaxTime({
	            time: time,
	            updated: new Date()
	        });
	    };
	    MaxTime.fromJS = function (parameters) {
	        var time = new Date(parameters.time);
	        if (isNaN(time)) {
	            throw new Error('maxTime must have a valid `time`');
	        }
	        return new MaxTime({
	            time: time,
	            updated: new Date((parameters.updated || parameters.time))
	        });
	    };
	    MaxTime.prototype.valueOf = function () {
	        return {
	            time: this.time,
	            updated: this.updated
	        };
	    };
	    MaxTime.prototype.toJS = function () {
	        return {
	            time: this.time,
	            updated: this.updated
	        };
	    };
	    MaxTime.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    MaxTime.prototype.toString = function () {
	        return "[MaxTime: " + this.time.toISOString() + "]";
	    };
	    MaxTime.prototype.equals = function (other) {
	        return MaxTime.isMaxTime(other) &&
	            this.time.valueOf() === other.time.valueOf();
	    };
	    return MaxTime;
	}());
	exports.MaxTime = MaxTime;
	check = MaxTime;


/***/ },
/* 195 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var immutable_class_1 = __webpack_require__(189);
	var chronoshift_1 = __webpack_require__(179);
	var check;
	var RefreshRule = (function () {
	    function RefreshRule(parameters) {
	        var rule = parameters.rule;
	        if (rule !== RefreshRule.FIXED && rule !== RefreshRule.QUERY && rule !== RefreshRule.REALTIME) {
	            throw new Error("rule must be on of: " + RefreshRule.FIXED + ", " + RefreshRule.QUERY + ", or " + RefreshRule.REALTIME);
	        }
	        this.rule = rule;
	        this.refresh = parameters.refresh;
	        if (this.rule !== RefreshRule.FIXED && !this.refresh) {
	            this.refresh = RefreshRule.DEFAULT_QUERY_REFRESH;
	        }
	        this.time = parameters.time;
	    }
	    RefreshRule.isRefreshRule = function (candidate) {
	        return immutable_class_1.isInstanceOf(candidate, RefreshRule);
	    };
	    RefreshRule.query = function (refresh) {
	        return new RefreshRule({
	            rule: RefreshRule.QUERY,
	            refresh: refresh
	        });
	    };
	    RefreshRule.fromJS = function (parameters) {
	        var value = {
	            rule: parameters.rule
	        };
	        if (parameters.refresh) {
	            value.refresh = chronoshift_1.Duration.fromJS(parameters.refresh);
	        }
	        if (parameters.time) {
	            value.time = new Date(parameters.time);
	        }
	        return new RefreshRule(value);
	    };
	    RefreshRule.prototype.valueOf = function () {
	        var value = {
	            rule: this.rule
	        };
	        if (this.refresh) {
	            value.refresh = this.refresh;
	        }
	        if (this.time) {
	            value.time = this.time;
	        }
	        return value;
	    };
	    RefreshRule.prototype.toJS = function () {
	        var js = {
	            rule: this.rule
	        };
	        if (this.refresh) {
	            js.refresh = this.refresh.toJS();
	        }
	        if (this.time) {
	            js.time = this.time;
	        }
	        return js;
	    };
	    RefreshRule.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    RefreshRule.prototype.toString = function () {
	        return "[RefreshRule: " + this.rule + "]";
	    };
	    RefreshRule.prototype.equals = function (other) {
	        return RefreshRule.isRefreshRule(other) &&
	            this.rule === other.rule &&
	            Boolean(this.refresh) === Boolean(other.refresh) &&
	            (!this.refresh || this.refresh.equals(other.refresh)) &&
	            (!this.time || this.time.valueOf() === other.time.valueOf());
	    };
	    RefreshRule.prototype.isFixed = function () {
	        return this.rule === RefreshRule.FIXED;
	    };
	    RefreshRule.prototype.isQuery = function () {
	        return this.rule === RefreshRule.QUERY;
	    };
	    RefreshRule.prototype.isRealtime = function () {
	        return this.rule === RefreshRule.REALTIME;
	    };
	    RefreshRule.prototype.shouldUpdate = function (maxTime) {
	        if (this.isFixed())
	            return false;
	        if (!maxTime)
	            return true;
	        var refresh = this.refresh;
	        if (!refresh)
	            return false;
	        return Date.now() - maxTime.updated.valueOf() > refresh.getCanonicalLength();
	    };
	    RefreshRule.FIXED = 'fixed';
	    RefreshRule.QUERY = 'query';
	    RefreshRule.REALTIME = 'realtime';
	    RefreshRule.DEFAULT_QUERY_REFRESH = chronoshift_1.Duration.fromJS('PT1M');
	    return RefreshRule;
	}());
	exports.RefreshRule = RefreshRule;
	check = RefreshRule;


/***/ },
/* 196 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var immutable_class_1 = __webpack_require__(189);
	var plywood_1 = __webpack_require__(188);
	var general_1 = __webpack_require__(197);
	var geoName = /continent|country|city|region/i;
	function isGeo(name) {
	    return geoName.test(name);
	}
	function typeToKind(type) {
	    if (!type)
	        return type;
	    return type.toLowerCase().replace(/_/g, '-').replace(/-range$/, '');
	}
	var check;
	var Dimension = (function () {
	    function Dimension(parameters) {
	        var name = parameters.name;
	        general_1.verifyUrlSafeName(name);
	        this.name = name;
	        this.title = parameters.title || general_1.makeTitle(name);
	        this.expression = parameters.expression || plywood_1.$(name);
	        var kind = parameters.kind || typeToKind(this.expression.type) || 'string';
	        this.kind = kind;
	        if (kind === 'string' && isGeo(name)) {
	            this.className = 'string-geo';
	        }
	        else {
	            this.className = kind;
	        }
	        if (parameters.url) {
	            if (typeof parameters.url !== 'string') {
	                throw new Error("unsupported url: " + parameters.url + ": only strings are supported");
	            }
	            this.url = parameters.url;
	        }
	    }
	    Dimension.isDimension = function (candidate) {
	        return immutable_class_1.isInstanceOf(candidate, Dimension);
	    };
	    Dimension.getDimension = function (dimensions, dimensionName) {
	        if (!dimensionName)
	            return null;
	        dimensionName = dimensionName.toLowerCase(); // Case insensitive
	        return dimensions.find(function (dimension) { return dimension.name.toLowerCase() === dimensionName; });
	    };
	    Dimension.getDimensionByExpression = function (dimensions, expression) {
	        return dimensions.find(function (dimension) { return dimension.expression.equals(expression); });
	    };
	    Dimension.fromJS = function (parameters) {
	        return new Dimension({
	            name: parameters.name,
	            title: parameters.title,
	            expression: parameters.expression ? plywood_1.Expression.fromJSLoose(parameters.expression) : null,
	            kind: parameters.kind || typeToKind(parameters.type),
	            url: parameters.url
	        });
	    };
	    Dimension.prototype.valueOf = function () {
	        return {
	            name: this.name,
	            title: this.title,
	            expression: this.expression,
	            kind: this.kind,
	            url: this.url
	        };
	    };
	    Dimension.prototype.toJS = function () {
	        var js = {
	            name: this.name,
	            title: this.title,
	            expression: this.expression.toJS(),
	            kind: this.kind
	        };
	        if (this.url)
	            js.url = this.url;
	        return js;
	    };
	    Dimension.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    Dimension.prototype.toString = function () {
	        return "[Dimension: " + this.name + "]";
	    };
	    Dimension.prototype.equals = function (other) {
	        return Dimension.isDimension(other) &&
	            this.name === other.name &&
	            this.title === other.title &&
	            this.expression.equals(other.expression) &&
	            this.kind === other.kind &&
	            this.url === other.url;
	    };
	    return Dimension;
	}());
	exports.Dimension = Dimension;
	check = Dimension;


/***/ },
/* 197 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var immutable_1 = __webpack_require__(178);
	var immutable_class_1 = __webpack_require__(189);
	var objectHasOwnProperty = Object.prototype.hasOwnProperty;
	function hasOwnProperty(obj, key) {
	    if (!obj)
	        return false;
	    return objectHasOwnProperty.call(obj, key);
	}
	exports.hasOwnProperty = hasOwnProperty;
	function moveInList(list, itemIndex, insertPoint) {
	    var n = list.size;
	    if (itemIndex < 0 || itemIndex >= n)
	        throw new Error('itemIndex out of range');
	    if (insertPoint < 0 || insertPoint > n)
	        throw new Error('insertPoint out of range');
	    var newArray = [];
	    list.forEach(function (value, i) {
	        if (i === insertPoint)
	            newArray.push(list.get(itemIndex));
	        if (i !== itemIndex)
	            newArray.push(value);
	    });
	    if (n === insertPoint)
	        newArray.push(list.get(itemIndex));
	    return immutable_1.List(newArray);
	}
	exports.moveInList = moveInList;
	function makeTitle(name) {
	    return name
	        .replace(/^[ _\-]+|[ _\-]+$/g, '')
	        .replace(/(^|[_\-]+)\w/g, function (s) {
	        return s.replace(/[_\-]+/, ' ').toUpperCase();
	    })
	        .replace(/[a-z0-9][A-Z]/g, function (s) {
	        return s[0] + ' ' + s[1];
	    });
	}
	exports.makeTitle = makeTitle;
	function immutableListsEqual(listA, listB) {
	    if (listA === listB)
	        return true;
	    if (!listA !== !listB)
	        return false;
	    return immutable_class_1.immutableArraysEqual(listA.toArray(), listB.toArray());
	}
	exports.immutableListsEqual = immutableListsEqual;
	function collect(wait, fn) {
	    var timeout;
	    var later = function () {
	        timeout = null;
	        fn();
	    };
	    return function () {
	        if (!timeout) {
	            timeout = setTimeout(later, wait);
	        }
	    };
	}
	exports.collect = collect;
	var URL_UNSAFE_CHARS = /[^\w.~\-]+/g;
	function makeUrlSafeName(name) {
	    return name.replace(URL_UNSAFE_CHARS, '_');
	}
	exports.makeUrlSafeName = makeUrlSafeName;
	function verifyUrlSafeName(name) {
	    if (typeof name !== 'string')
	        throw new TypeError('name must be a string');
	    if (!name.length)
	        throw new Error('can not have empty name');
	    var urlSafeName = makeUrlSafeName(name);
	    if (name !== urlSafeName) {
	        throw new Error("'" + name + "' is not a URL safe name. Try '" + urlSafeName + "' instead?");
	    }
	}
	exports.verifyUrlSafeName = verifyUrlSafeName;
	function arraySum(inputArray) {
	    return inputArray.reduce(function (pV, cV) {
	        return pV + cV;
	    }, 0);
	}
	exports.arraySum = arraySum;


/***/ },
/* 198 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var immutable_class_1 = __webpack_require__(189);
	var numeral = __webpack_require__(199);
	var plywood_1 = __webpack_require__(188);
	var general_1 = __webpack_require__(197);
	function formatFnFactory(format) {
	    return function (n) {
	        if (isNaN(n) || !isFinite(n))
	            return '-';
	        return numeral(n).format(format);
	    };
	}
	var check;
	var Measure = (function () {
	    function Measure(parameters) {
	        var name = parameters.name;
	        general_1.verifyUrlSafeName(name);
	        this.name = name;
	        this.title = parameters.title || general_1.makeTitle(name);
	        var expression = parameters.expression;
	        if (!expression)
	            throw new Error('measure must have expression');
	        this.expression = expression;
	        var format = parameters.format || Measure.DEFAULT_FORMAT;
	        if (format[0] === '(')
	            throw new Error('can not have format that uses ( )');
	        this.format = format;
	        this.formatFn = formatFnFactory(format);
	    }
	    Measure.isMeasure = function (candidate) {
	        return immutable_class_1.isInstanceOf(candidate, Measure);
	    };
	    Measure.getMeasure = function (measures, measureName) {
	        if (!measureName)
	            return null;
	        measureName = measureName.toLowerCase(); // Case insensitive
	        return measures.find(function (measure) { return measure.name.toLowerCase() === measureName; });
	    };
	    /**
	     * Look for all instances of aggregateAction($blah) and return the blahs
	     * @param ex
	     * @returns {string[]}
	     */
	    Measure.getAggregateReferences = function (ex) {
	        var references = [];
	        ex.forEach(function (ex) {
	            if (ex instanceof plywood_1.ChainExpression) {
	                var actions = ex.actions;
	                for (var _i = 0, actions_1 = actions; _i < actions_1.length; _i++) {
	                    var action = actions_1[_i];
	                    if (action.isAggregate()) {
	                        references = references.concat(action.getFreeReferences());
	                    }
	                }
	            }
	        });
	        return plywood_1.helper.deduplicateSort(references);
	    };
	    /**
	     * Look for all instances of countDistinct($blah) and return the blahs
	     * @param ex
	     * @returns {string[]}
	     */
	    Measure.getCountDistinctReferences = function (ex) {
	        var references = [];
	        ex.forEach(function (ex) {
	            if (ex instanceof plywood_1.ChainExpression) {
	                var actions = ex.actions;
	                for (var _i = 0, actions_2 = actions; _i < actions_2.length; _i++) {
	                    var action = actions_2[_i];
	                    if (action.action === 'countDistinct') {
	                        references = references.concat(action.getFreeReferences());
	                    }
	                }
	            }
	        });
	        return plywood_1.helper.deduplicateSort(references);
	    };
	    Measure.measuresFromAttributeInfo = function (attribute) {
	        var name = attribute.name, special = attribute.special;
	        var $main = plywood_1.$('main');
	        var ref = plywood_1.$(name);
	        if (special) {
	            if (special === 'unique') {
	                return [
	                    new Measure({
	                        name: general_1.makeUrlSafeName(name),
	                        expression: $main.countDistinct(ref)
	                    })
	                ];
	            }
	            else if (special === 'histogram') {
	                return [
	                    new Measure({
	                        name: general_1.makeUrlSafeName(name + '_p95'),
	                        expression: $main.quantile(ref, 0.95)
	                    }),
	                    new Measure({
	                        name: general_1.makeUrlSafeName(name + '_p99'),
	                        expression: $main.quantile(ref, 0.99)
	                    })
	                ];
	            }
	        }
	        var expression = $main.sum(ref);
	        var makerAction = attribute.makerAction;
	        if (makerAction) {
	            switch (makerAction.action) {
	                case 'min':
	                    expression = $main.min(ref);
	                    break;
	                case 'max':
	                    expression = $main.max(ref);
	                    break;
	            }
	        }
	        return [new Measure({
	                name: general_1.makeUrlSafeName(name),
	                expression: expression
	            })];
	    };
	    Measure.fromJS = function (parameters) {
	        var name = parameters.name;
	        return new Measure({
	            name: name,
	            title: parameters.title,
	            expression: parameters.expression ? plywood_1.Expression.fromJSLoose(parameters.expression) : plywood_1.$('main').sum(plywood_1.$(name)),
	            format: parameters.format
	        });
	    };
	    Measure.prototype.valueOf = function () {
	        return {
	            name: this.name,
	            title: this.title,
	            expression: this.expression,
	            format: this.format
	        };
	    };
	    Measure.prototype.toJS = function () {
	        var js = {
	            name: this.name,
	            title: this.title,
	            expression: this.expression.toJS()
	        };
	        if (this.format !== Measure.DEFAULT_FORMAT)
	            js.format = this.format;
	        return js;
	    };
	    Measure.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    Measure.prototype.toString = function () {
	        return "[Measure: " + this.name + "]";
	    };
	    Measure.prototype.equals = function (other) {
	        return Measure.isMeasure(other) &&
	            this.name === other.name &&
	            this.title === other.title &&
	            this.expression.equals(other.expression) &&
	            this.format === other.format;
	    };
	    Measure.prototype.toApplyAction = function () {
	        var _a = this, name = _a.name, expression = _a.expression;
	        return new plywood_1.ApplyAction({
	            name: name,
	            expression: expression
	        });
	    };
	    Measure.prototype.formatDatum = function (datum) {
	        return this.formatFn(datum[this.name]);
	    };
	    Measure.DEFAULT_FORMAT = '0,0.0 a';
	    Measure.INTEGER_FORMAT = '0,0 a';
	    return Measure;
	}());
	exports.Measure = Measure;
	check = Measure;


/***/ },
/* 199 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	 * numeral.js
	 * version : 1.5.3
	 * author : Adam Draper
	 * license : MIT
	 * http://adamwdraper.github.com/Numeral-js/
	 */

	(function () {

	    /************************************
	        Constants
	    ************************************/

	    var numeral,
	        VERSION = '1.5.3',
	        // internal storage for language config files
	        languages = {},
	        currentLanguage = 'en',
	        zeroFormat = null,
	        defaultFormat = '0,0',
	        // check for nodeJS
	        hasModule = (typeof module !== 'undefined' && module.exports);


	    /************************************
	        Constructors
	    ************************************/


	    // Numeral prototype object
	    function Numeral (number) {
	        this._value = number;
	    }

	    /**
	     * Implementation of toFixed() that treats floats more like decimals
	     *
	     * Fixes binary rounding issues (eg. (0.615).toFixed(2) === '0.61') that present
	     * problems for accounting- and finance-related software.
	     */
	    function toFixed (value, precision, roundingFunction, optionals) {
	        var power = Math.pow(10, precision),
	            optionalsRegExp,
	            output;
	            
	        //roundingFunction = (roundingFunction !== undefined ? roundingFunction : Math.round);
	        // Multiply up by precision, round accurately, then divide and use native toFixed():
	        output = (roundingFunction(value * power) / power).toFixed(precision);

	        if (optionals) {
	            optionalsRegExp = new RegExp('0{1,' + optionals + '}$');
	            output = output.replace(optionalsRegExp, '');
	        }

	        return output;
	    }

	    /************************************
	        Formatting
	    ************************************/

	    // determine what type of formatting we need to do
	    function formatNumeral (n, format, roundingFunction) {
	        var output;

	        // figure out what kind of format we are dealing with
	        if (format.indexOf('$') > -1) { // currency!!!!!
	            output = formatCurrency(n, format, roundingFunction);
	        } else if (format.indexOf('%') > -1) { // percentage
	            output = formatPercentage(n, format, roundingFunction);
	        } else if (format.indexOf(':') > -1) { // time
	            output = formatTime(n, format);
	        } else { // plain ol' numbers or bytes
	            output = formatNumber(n._value, format, roundingFunction);
	        }

	        // return string
	        return output;
	    }

	    // revert to number
	    function unformatNumeral (n, string) {
	        var stringOriginal = string,
	            thousandRegExp,
	            millionRegExp,
	            billionRegExp,
	            trillionRegExp,
	            suffixes = ['KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],
	            bytesMultiplier = false,
	            power;

	        if (string.indexOf(':') > -1) {
	            n._value = unformatTime(string);
	        } else {
	            if (string === zeroFormat) {
	                n._value = 0;
	            } else {
	                if (languages[currentLanguage].delimiters.decimal !== '.') {
	                    string = string.replace(/\./g,'').replace(languages[currentLanguage].delimiters.decimal, '.');
	                }

	                // see if abbreviations are there so that we can multiply to the correct number
	                thousandRegExp = new RegExp('[^a-zA-Z]' + languages[currentLanguage].abbreviations.thousand + '(?:\\)|(\\' + languages[currentLanguage].currency.symbol + ')?(?:\\))?)?$');
	                millionRegExp = new RegExp('[^a-zA-Z]' + languages[currentLanguage].abbreviations.million + '(?:\\)|(\\' + languages[currentLanguage].currency.symbol + ')?(?:\\))?)?$');
	                billionRegExp = new RegExp('[^a-zA-Z]' + languages[currentLanguage].abbreviations.billion + '(?:\\)|(\\' + languages[currentLanguage].currency.symbol + ')?(?:\\))?)?$');
	                trillionRegExp = new RegExp('[^a-zA-Z]' + languages[currentLanguage].abbreviations.trillion + '(?:\\)|(\\' + languages[currentLanguage].currency.symbol + ')?(?:\\))?)?$');

	                // see if bytes are there so that we can multiply to the correct number
	                for (power = 0; power <= suffixes.length; power++) {
	                    bytesMultiplier = (string.indexOf(suffixes[power]) > -1) ? Math.pow(1024, power + 1) : false;

	                    if (bytesMultiplier) {
	                        break;
	                    }
	                }

	                // do some math to create our number
	                n._value = ((bytesMultiplier) ? bytesMultiplier : 1) * ((stringOriginal.match(thousandRegExp)) ? Math.pow(10, 3) : 1) * ((stringOriginal.match(millionRegExp)) ? Math.pow(10, 6) : 1) * ((stringOriginal.match(billionRegExp)) ? Math.pow(10, 9) : 1) * ((stringOriginal.match(trillionRegExp)) ? Math.pow(10, 12) : 1) * ((string.indexOf('%') > -1) ? 0.01 : 1) * (((string.split('-').length + Math.min(string.split('(').length-1, string.split(')').length-1)) % 2)? 1: -1) * Number(string.replace(/[^0-9\.]+/g, ''));

	                // round if we are talking about bytes
	                n._value = (bytesMultiplier) ? Math.ceil(n._value) : n._value;
	            }
	        }
	        return n._value;
	    }

	    function formatCurrency (n, format, roundingFunction) {
	        var symbolIndex = format.indexOf('$'),
	            openParenIndex = format.indexOf('('),
	            minusSignIndex = format.indexOf('-'),
	            space = '',
	            spliceIndex,
	            output;

	        // check for space before or after currency
	        if (format.indexOf(' $') > -1) {
	            space = ' ';
	            format = format.replace(' $', '');
	        } else if (format.indexOf('$ ') > -1) {
	            space = ' ';
	            format = format.replace('$ ', '');
	        } else {
	            format = format.replace('$', '');
	        }

	        // format the number
	        output = formatNumber(n._value, format, roundingFunction);

	        // position the symbol
	        if (symbolIndex <= 1) {
	            if (output.indexOf('(') > -1 || output.indexOf('-') > -1) {
	                output = output.split('');
	                spliceIndex = 1;
	                if (symbolIndex < openParenIndex || symbolIndex < minusSignIndex){
	                    // the symbol appears before the "(" or "-"
	                    spliceIndex = 0;
	                }
	                output.splice(spliceIndex, 0, languages[currentLanguage].currency.symbol + space);
	                output = output.join('');
	            } else {
	                output = languages[currentLanguage].currency.symbol + space + output;
	            }
	        } else {
	            if (output.indexOf(')') > -1) {
	                output = output.split('');
	                output.splice(-1, 0, space + languages[currentLanguage].currency.symbol);
	                output = output.join('');
	            } else {
	                output = output + space + languages[currentLanguage].currency.symbol;
	            }
	        }

	        return output;
	    }

	    function formatPercentage (n, format, roundingFunction) {
	        var space = '',
	            output,
	            value = n._value * 100;

	        // check for space before %
	        if (format.indexOf(' %') > -1) {
	            space = ' ';
	            format = format.replace(' %', '');
	        } else {
	            format = format.replace('%', '');
	        }

	        output = formatNumber(value, format, roundingFunction);
	        
	        if (output.indexOf(')') > -1 ) {
	            output = output.split('');
	            output.splice(-1, 0, space + '%');
	            output = output.join('');
	        } else {
	            output = output + space + '%';
	        }

	        return output;
	    }

	    function formatTime (n) {
	        var hours = Math.floor(n._value/60/60),
	            minutes = Math.floor((n._value - (hours * 60 * 60))/60),
	            seconds = Math.round(n._value - (hours * 60 * 60) - (minutes * 60));
	        return hours + ':' + ((minutes < 10) ? '0' + minutes : minutes) + ':' + ((seconds < 10) ? '0' + seconds : seconds);
	    }

	    function unformatTime (string) {
	        var timeArray = string.split(':'),
	            seconds = 0;
	        // turn hours and minutes into seconds and add them all up
	        if (timeArray.length === 3) {
	            // hours
	            seconds = seconds + (Number(timeArray[0]) * 60 * 60);
	            // minutes
	            seconds = seconds + (Number(timeArray[1]) * 60);
	            // seconds
	            seconds = seconds + Number(timeArray[2]);
	        } else if (timeArray.length === 2) {
	            // minutes
	            seconds = seconds + (Number(timeArray[0]) * 60);
	            // seconds
	            seconds = seconds + Number(timeArray[1]);
	        }
	        return Number(seconds);
	    }

	    function formatNumber (value, format, roundingFunction) {
	        var negP = false,
	            signed = false,
	            optDec = false,
	            abbr = '',
	            abbrK = false, // force abbreviation to thousands
	            abbrM = false, // force abbreviation to millions
	            abbrB = false, // force abbreviation to billions
	            abbrT = false, // force abbreviation to trillions
	            abbrForce = false, // force abbreviation
	            bytes = '',
	            ord = '',
	            abs = Math.abs(value),
	            suffixes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],
	            min,
	            max,
	            power,
	            w,
	            precision,
	            thousands,
	            d = '',
	            neg = false;

	        // check if number is zero and a custom zero format has been set
	        if (value === 0 && zeroFormat !== null) {
	            return zeroFormat;
	        } else {
	            // see if we should use parentheses for negative number or if we should prefix with a sign
	            // if both are present we default to parentheses
	            if (format.indexOf('(') > -1) {
	                negP = true;
	                format = format.slice(1, -1);
	            } else if (format.indexOf('+') > -1) {
	                signed = true;
	                format = format.replace(/\+/g, '');
	            }

	            // see if abbreviation is wanted
	            if (format.indexOf('a') > -1) {
	                // check if abbreviation is specified
	                abbrK = format.indexOf('aK') >= 0;
	                abbrM = format.indexOf('aM') >= 0;
	                abbrB = format.indexOf('aB') >= 0;
	                abbrT = format.indexOf('aT') >= 0;
	                abbrForce = abbrK || abbrM || abbrB || abbrT;

	                // check for space before abbreviation
	                if (format.indexOf(' a') > -1) {
	                    abbr = ' ';
	                    format = format.replace(' a', '');
	                } else {
	                    format = format.replace('a', '');
	                }

	                if (abs >= Math.pow(10, 12) && !abbrForce || abbrT) {
	                    // trillion
	                    abbr = abbr + languages[currentLanguage].abbreviations.trillion;
	                    value = value / Math.pow(10, 12);
	                } else if (abs < Math.pow(10, 12) && abs >= Math.pow(10, 9) && !abbrForce || abbrB) {
	                    // billion
	                    abbr = abbr + languages[currentLanguage].abbreviations.billion;
	                    value = value / Math.pow(10, 9);
	                } else if (abs < Math.pow(10, 9) && abs >= Math.pow(10, 6) && !abbrForce || abbrM) {
	                    // million
	                    abbr = abbr + languages[currentLanguage].abbreviations.million;
	                    value = value / Math.pow(10, 6);
	                } else if (abs < Math.pow(10, 6) && abs >= Math.pow(10, 3) && !abbrForce || abbrK) {
	                    // thousand
	                    abbr = abbr + languages[currentLanguage].abbreviations.thousand;
	                    value = value / Math.pow(10, 3);
	                }
	            }

	            // see if we are formatting bytes
	            if (format.indexOf('b') > -1) {
	                // check for space before
	                if (format.indexOf(' b') > -1) {
	                    bytes = ' ';
	                    format = format.replace(' b', '');
	                } else {
	                    format = format.replace('b', '');
	                }

	                for (power = 0; power <= suffixes.length; power++) {
	                    min = Math.pow(1024, power);
	                    max = Math.pow(1024, power+1);

	                    if (value >= min && value < max) {
	                        bytes = bytes + suffixes[power];
	                        if (min > 0) {
	                            value = value / min;
	                        }
	                        break;
	                    }
	                }
	            }

	            // see if ordinal is wanted
	            if (format.indexOf('o') > -1) {
	                // check for space before
	                if (format.indexOf(' o') > -1) {
	                    ord = ' ';
	                    format = format.replace(' o', '');
	                } else {
	                    format = format.replace('o', '');
	                }

	                ord = ord + languages[currentLanguage].ordinal(value);
	            }

	            if (format.indexOf('[.]') > -1) {
	                optDec = true;
	                format = format.replace('[.]', '.');
	            }

	            w = value.toString().split('.')[0];
	            precision = format.split('.')[1];
	            thousands = format.indexOf(',');

	            if (precision) {
	                if (precision.indexOf('[') > -1) {
	                    precision = precision.replace(']', '');
	                    precision = precision.split('[');
	                    d = toFixed(value, (precision[0].length + precision[1].length), roundingFunction, precision[1].length);
	                } else {
	                    d = toFixed(value, precision.length, roundingFunction);
	                }

	                w = d.split('.')[0];

	                if (d.split('.')[1].length) {
	                    d = languages[currentLanguage].delimiters.decimal + d.split('.')[1];
	                } else {
	                    d = '';
	                }

	                if (optDec && Number(d.slice(1)) === 0) {
	                    d = '';
	                }
	            } else {
	                w = toFixed(value, null, roundingFunction);
	            }

	            // format number
	            if (w.indexOf('-') > -1) {
	                w = w.slice(1);
	                neg = true;
	            }

	            if (thousands > -1) {
	                w = w.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1' + languages[currentLanguage].delimiters.thousands);
	            }

	            if (format.indexOf('.') === 0) {
	                w = '';
	            }

	            return ((negP && neg) ? '(' : '') + ((!negP && neg) ? '-' : '') + ((!neg && signed) ? '+' : '') + w + d + ((ord) ? ord : '') + ((abbr) ? abbr : '') + ((bytes) ? bytes : '') + ((negP && neg) ? ')' : '');
	        }
	    }

	    /************************************
	        Top Level Functions
	    ************************************/

	    numeral = function (input) {
	        if (numeral.isNumeral(input)) {
	            input = input.value();
	        } else if (input === 0 || typeof input === 'undefined') {
	            input = 0;
	        } else if (!Number(input)) {
	            input = numeral.fn.unformat(input);
	        }

	        return new Numeral(Number(input));
	    };

	    // version number
	    numeral.version = VERSION;

	    // compare numeral object
	    numeral.isNumeral = function (obj) {
	        return obj instanceof Numeral;
	    };

	    // This function will load languages and then set the global language.  If
	    // no arguments are passed in, it will simply return the current global
	    // language key.
	    numeral.language = function (key, values) {
	        if (!key) {
	            return currentLanguage;
	        }

	        if (key && !values) {
	            if(!languages[key]) {
	                throw new Error('Unknown language : ' + key);
	            }
	            currentLanguage = key;
	        }

	        if (values || !languages[key]) {
	            loadLanguage(key, values);
	        }

	        return numeral;
	    };
	    
	    // This function provides access to the loaded language data.  If
	    // no arguments are passed in, it will simply return the current
	    // global language object.
	    numeral.languageData = function (key) {
	        if (!key) {
	            return languages[currentLanguage];
	        }
	        
	        if (!languages[key]) {
	            throw new Error('Unknown language : ' + key);
	        }
	        
	        return languages[key];
	    };

	    numeral.language('en', {
	        delimiters: {
	            thousands: ',',
	            decimal: '.'
	        },
	        abbreviations: {
	            thousand: 'k',
	            million: 'm',
	            billion: 'b',
	            trillion: 't'
	        },
	        ordinal: function (number) {
	            var b = number % 10;
	            return (~~ (number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	        },
	        currency: {
	            symbol: '$'
	        }
	    });

	    numeral.zeroFormat = function (format) {
	        zeroFormat = typeof(format) === 'string' ? format : null;
	    };

	    numeral.defaultFormat = function (format) {
	        defaultFormat = typeof(format) === 'string' ? format : '0.0';
	    };

	    /************************************
	        Helpers
	    ************************************/

	    function loadLanguage(key, values) {
	        languages[key] = values;
	    }

	    /************************************
	        Floating-point helpers
	    ************************************/

	    // The floating-point helper functions and implementation
	    // borrows heavily from sinful.js: http://guipn.github.io/sinful.js/

	    /**
	     * Array.prototype.reduce for browsers that don't support it
	     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce#Compatibility
	     */
	    if ('function' !== typeof Array.prototype.reduce) {
	        Array.prototype.reduce = function (callback, opt_initialValue) {
	            'use strict';
	            
	            if (null === this || 'undefined' === typeof this) {
	                // At the moment all modern browsers, that support strict mode, have
	                // native implementation of Array.prototype.reduce. For instance, IE8
	                // does not support strict mode, so this check is actually useless.
	                throw new TypeError('Array.prototype.reduce called on null or undefined');
	            }
	            
	            if ('function' !== typeof callback) {
	                throw new TypeError(callback + ' is not a function');
	            }

	            var index,
	                value,
	                length = this.length >>> 0,
	                isValueSet = false;

	            if (1 < arguments.length) {
	                value = opt_initialValue;
	                isValueSet = true;
	            }

	            for (index = 0; length > index; ++index) {
	                if (this.hasOwnProperty(index)) {
	                    if (isValueSet) {
	                        value = callback(value, this[index], index, this);
	                    } else {
	                        value = this[index];
	                        isValueSet = true;
	                    }
	                }
	            }

	            if (!isValueSet) {
	                throw new TypeError('Reduce of empty array with no initial value');
	            }

	            return value;
	        };
	    }

	    
	    /**
	     * Computes the multiplier necessary to make x >= 1,
	     * effectively eliminating miscalculations caused by
	     * finite precision.
	     */
	    function multiplier(x) {
	        var parts = x.toString().split('.');
	        if (parts.length < 2) {
	            return 1;
	        }
	        return Math.pow(10, parts[1].length);
	    }

	    /**
	     * Given a variable number of arguments, returns the maximum
	     * multiplier that must be used to normalize an operation involving
	     * all of them.
	     */
	    function correctionFactor() {
	        var args = Array.prototype.slice.call(arguments);
	        return args.reduce(function (prev, next) {
	            var mp = multiplier(prev),
	                mn = multiplier(next);
	        return mp > mn ? mp : mn;
	        }, -Infinity);
	    }        


	    /************************************
	        Numeral Prototype
	    ************************************/


	    numeral.fn = Numeral.prototype = {

	        clone : function () {
	            return numeral(this);
	        },

	        format : function (inputString, roundingFunction) {
	            return formatNumeral(this, 
	                  inputString ? inputString : defaultFormat, 
	                  (roundingFunction !== undefined) ? roundingFunction : Math.round
	              );
	        },

	        unformat : function (inputString) {
	            if (Object.prototype.toString.call(inputString) === '[object Number]') { 
	                return inputString; 
	            }
	            return unformatNumeral(this, inputString ? inputString : defaultFormat);
	        },

	        value : function () {
	            return this._value;
	        },

	        valueOf : function () {
	            return this._value;
	        },

	        set : function (value) {
	            this._value = Number(value);
	            return this;
	        },

	        add : function (value) {
	            var corrFactor = correctionFactor.call(null, this._value, value);
	            function cback(accum, curr, currI, O) {
	                return accum + corrFactor * curr;
	            }
	            this._value = [this._value, value].reduce(cback, 0) / corrFactor;
	            return this;
	        },

	        subtract : function (value) {
	            var corrFactor = correctionFactor.call(null, this._value, value);
	            function cback(accum, curr, currI, O) {
	                return accum - corrFactor * curr;
	            }
	            this._value = [value].reduce(cback, this._value * corrFactor) / corrFactor;            
	            return this;
	        },

	        multiply : function (value) {
	            function cback(accum, curr, currI, O) {
	                var corrFactor = correctionFactor(accum, curr);
	                return (accum * corrFactor) * (curr * corrFactor) /
	                    (corrFactor * corrFactor);
	            }
	            this._value = [this._value, value].reduce(cback, 1);
	            return this;
	        },

	        divide : function (value) {
	            function cback(accum, curr, currI, O) {
	                var corrFactor = correctionFactor(accum, curr);
	                return (accum * corrFactor) / (curr * corrFactor);
	            }
	            this._value = [this._value, value].reduce(cback);            
	            return this;
	        },

	        difference : function (value) {
	            return Math.abs(numeral(this._value).subtract(value).value());
	        }

	    };

	    /************************************
	        Exposing Numeral
	    ************************************/

	    // CommonJS module is defined
	    if (hasModule) {
	        module.exports = numeral;
	    }

	    /*global ender:false */
	    if (typeof ender === 'undefined') {
	        // here, `this` means `window` in the browser, or `global` on the server
	        // add `numeral` as a global object via a string identifier,
	        // for Closure Compiler 'advanced' mode
	        this['numeral'] = numeral;
	    }

	    /*global define:false */
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
	            return numeral;
	        }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	    }
	}).call(this);


/***/ },
/* 200 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var immutable_class_1 = __webpack_require__(189);
	var chronoshift_1 = __webpack_require__(179);
	var plywood_1 = __webpack_require__(188);
	function isLiteral(ex) {
	    if (ex instanceof plywood_1.LiteralExpression)
	        return plywood_1.TimeRange.isTimeRange(ex.value) || plywood_1.Set.isSet(ex.value);
	    return false;
	}
	function isRelative(ex) {
	    if (ex instanceof plywood_1.ChainExpression) {
	        if (ex.type !== 'TIME_RANGE')
	            return false;
	        var expression = ex.expression;
	        if (expression instanceof plywood_1.RefExpression) {
	            return expression.name === FilterClause.NOW_REF_NAME || expression.name === FilterClause.MAX_TIME_REF_NAME;
	        }
	    }
	    return false;
	}
	var check;
	var FilterClause = (function () {
	    function FilterClause(parameters) {
	        this.expression = parameters.expression;
	        var selection = parameters.selection;
	        if (isRelative(selection)) {
	            this.relative = true;
	        }
	        else if (isLiteral(selection)) {
	            this.relative = false;
	        }
	        else {
	            throw new Error("invalid expression " + selection.toString());
	        }
	        this.selection = selection;
	        this.exclude = parameters.exclude || false;
	    }
	    FilterClause.isFilterClause = function (candidate) {
	        return immutable_class_1.isInstanceOf(candidate, FilterClause);
	    };
	    FilterClause.evaluate = function (selection, now, maxTime, timezone) {
	        if (!selection)
	            return null;
	        var maxTimeMinuteTop = chronoshift_1.minute.shift(chronoshift_1.minute.floor(maxTime, timezone), timezone, 1);
	        var datum = {};
	        datum[FilterClause.NOW_REF_NAME] = now;
	        datum[FilterClause.MAX_TIME_REF_NAME] = maxTimeMinuteTop;
	        return selection.defineEnvironment({ timezone: timezone }).getFn()(datum, {});
	    };
	    FilterClause.fromExpression = function (ex) {
	        var exclude = false;
	        if (ex.lastAction() instanceof plywood_1.NotAction) {
	            ex = ex.popAction();
	            exclude = true;
	        }
	        var lastAction = ex.lastAction();
	        var dimExpression = ex.popAction();
	        if (lastAction instanceof plywood_1.InAction || lastAction instanceof plywood_1.OverlapAction) {
	            var selection = lastAction.expression;
	            if (selection.type === 'SET/TIME_RANGE') {
	                var literalSet = selection.getLiteralValue();
	                if (literalSet.size() > 1)
	                    throw new Error('can not filter on multiple time range values');
	                selection = plywood_1.r(literalSet.elements[0]);
	            }
	            return new FilterClause({
	                expression: dimExpression,
	                selection: selection,
	                exclude: exclude
	            });
	        }
	        throw new Error("invalid expression " + ex.toString());
	    };
	    FilterClause.fromJS = function (parameters) {
	        var value = {
	            expression: plywood_1.Expression.fromJS(parameters.expression),
	            selection: plywood_1.Expression.fromJS(parameters.selection),
	            exclude: Boolean(parameters.exclude)
	        };
	        return new FilterClause(value);
	    };
	    FilterClause.prototype.valueOf = function () {
	        return {
	            expression: this.expression,
	            selection: this.selection,
	            exclude: this.exclude
	        };
	    };
	    FilterClause.prototype.toJS = function () {
	        var js = {
	            expression: this.expression.toJS(),
	            selection: this.selection.toJS()
	        };
	        if (this.exclude)
	            js.exclude = true;
	        return js;
	    };
	    FilterClause.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    FilterClause.prototype.toString = function () {
	        return "[FilterClause: " + this.expression.toString() + "]";
	    };
	    FilterClause.prototype.equals = function (other) {
	        return FilterClause.isFilterClause(other) &&
	            this.expression.equals(other.expression) &&
	            this.selection.equals(other.selection) &&
	            this.exclude === other.exclude;
	    };
	    FilterClause.prototype.toExpression = function () {
	        var _a = this, expression = _a.expression, selection = _a.selection;
	        var ex = (selection.type === 'TIME_RANGE') ? expression.in(selection) : expression.overlap(selection);
	        if (this.exclude)
	            ex = ex.not();
	        return ex;
	    };
	    FilterClause.prototype.getTimeRange = function () {
	        if (this.relative)
	            return null;
	        var v = this.selection.getLiteralValue();
	        return plywood_1.TimeRange.isTimeRange(v) ? v : null;
	    };
	    FilterClause.prototype.getLiteralSet = function () {
	        if (this.relative)
	            return null;
	        var v = this.selection.getLiteralValue();
	        return plywood_1.TimeRange.isTimeRange(v) ? plywood_1.Set.fromJS([v]) : v;
	    };
	    FilterClause.prototype.changeSelection = function (selection) {
	        var value = this.valueOf();
	        value.selection = selection;
	        return new FilterClause(value);
	    };
	    FilterClause.prototype.evaluate = function (now, maxTime, timezone) {
	        if (!this.relative)
	            return this;
	        return this.changeSelection(plywood_1.r(FilterClause.evaluate(this.selection, now, maxTime, timezone)));
	    };
	    FilterClause.NOW_REF_NAME = 'n';
	    FilterClause.MAX_TIME_REF_NAME = 'm';
	    return FilterClause;
	}());
	exports.FilterClause = FilterClause;
	check = FilterClause;


/***/ },
/* 201 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var immutable_1 = __webpack_require__(178);
	var immutable_class_1 = __webpack_require__(189);
	var plywood_1 = __webpack_require__(188);
	var general_1 = __webpack_require__(197);
	var dimension_1 = __webpack_require__(196);
	var filter_clause_1 = __webpack_require__(200);
	function withholdClause(clauses, clause, allowIndex) {
	    return clauses.filter(function (c, i) {
	        return i === allowIndex || !c.equals(clause);
	    });
	}
	function swapClause(clauses, clause, other, allowIndex) {
	    return clauses.map(function (c, i) {
	        return (i === allowIndex || !c.equals(clause)) ? c : other;
	    });
	}
	function dateToFileString(date) {
	    return date.toISOString()
	        .replace('T', '_')
	        .replace('Z', '')
	        .replace('.000', '');
	}
	var check;
	var Filter = (function () {
	    function Filter(parameters) {
	        this.clauses = parameters;
	    }
	    Filter.isFilter = function (candidate) {
	        return immutable_class_1.isInstanceOf(candidate, Filter);
	    };
	    Filter.fromClause = function (clause) {
	        if (!clause)
	            throw new Error('must have clause');
	        return new Filter(immutable_1.List([clause]));
	    };
	    Filter.fromJS = function (parameters) {
	        var expression = plywood_1.Expression.fromJSLoose(parameters);
	        var clauses = null;
	        if (expression.equals(plywood_1.Expression.TRUE)) {
	            clauses = [];
	        }
	        else {
	            clauses = (expression.getExpressionPattern('and') || [expression]).map(function (c) { return filter_clause_1.FilterClause.fromExpression(c); });
	        }
	        return new Filter(immutable_1.List(clauses));
	    };
	    Filter.prototype.valueOf = function () {
	        return this.clauses;
	    };
	    Filter.prototype.toJS = function () {
	        return this.toExpression().toJS();
	    };
	    Filter.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    Filter.prototype.toString = function () {
	        return this.clauses.map(function (clause) { return clause.toString(); }).join(' and ');
	    };
	    Filter.prototype.equals = function (other) {
	        return Filter.isFilter(other) &&
	            general_1.immutableListsEqual(this.clauses, other.clauses);
	    };
	    Filter.prototype.replaceByIndex = function (index, replace) {
	        var clauses = this.clauses;
	        if (clauses.size === index)
	            return this.insertByIndex(index, replace);
	        var replacedClause = clauses.get(index);
	        clauses = clauses.map(function (c, i) { return i === index ? replace : c; });
	        clauses = swapClause(clauses, replace, replacedClause, index);
	        return new Filter(clauses);
	    };
	    Filter.prototype.insertByIndex = function (index, insert) {
	        var clauses = this.clauses;
	        clauses = clauses.splice(index, 0, insert);
	        clauses = withholdClause(clauses, insert, index);
	        return new Filter(clauses);
	    };
	    Filter.prototype.empty = function () {
	        return this.clauses.size === 0;
	    };
	    Filter.prototype.single = function () {
	        return this.clauses.size === 1;
	    };
	    Filter.prototype.length = function () {
	        return this.clauses.size;
	    };
	    Filter.prototype.toExpression = function () {
	        var clauses = this.clauses.toArray().map(function (clause) {
	            return clause.toExpression();
	        });
	        switch (clauses.length) {
	            case 0:
	                return plywood_1.Expression.TRUE;
	            case 1:
	                return clauses[0];
	            default:
	                return plywood_1.Expression.and(clauses);
	        }
	    };
	    Filter.prototype.isRelative = function () {
	        return this.clauses.some(function (clause) { return clause.relative; });
	    };
	    Filter.prototype.getSpecificFilter = function (now, maxTime, timezone) {
	        if (!this.isRelative())
	            return this;
	        return new Filter(this.clauses.map(function (c) { return c.evaluate(now, maxTime, timezone); }));
	    };
	    Filter.prototype.indexOfClause = function (attribute) {
	        return this.clauses.findIndex(function (clause) { return clause.expression.equals(attribute); });
	    };
	    Filter.prototype.clauseForExpression = function (attribute) {
	        return this.clauses.find(function (clause) { return clause.expression.equals(attribute); });
	    };
	    Filter.prototype.filteredOn = function (attribute) {
	        return this.indexOfClause(attribute) !== -1;
	    };
	    Filter.prototype.filteredOnValue = function (attribute, value) {
	        var clauses = this.clauses;
	        var index = this.indexOfClause(attribute);
	        if (index === -1)
	            return false;
	        return clauses.get(index).getLiteralSet().contains(value);
	    };
	    Filter.prototype.addValue = function (attribute, value) {
	        var clauses = this.clauses;
	        var index = this.indexOfClause(attribute);
	        if (index === -1) {
	            return new Filter(clauses.concat(new filter_clause_1.FilterClause({
	                expression: attribute,
	                selection: plywood_1.r(plywood_1.Set.fromJS([value]))
	            })));
	        }
	        else {
	            var clause = clauses.get(index);
	            var newSet = clause.getLiteralSet().add(value);
	            return new Filter(clauses.splice(index, 1, clause.changeSelection(plywood_1.r(newSet))));
	        }
	    };
	    Filter.prototype.remove = function (attribute) {
	        var clauses = this.clauses;
	        var index = this.indexOfClause(attribute);
	        if (index === -1)
	            return this;
	        return new Filter(clauses.delete(index));
	    };
	    Filter.prototype.removeValue = function (attribute, value) {
	        var clauses = this.clauses;
	        var index = this.indexOfClause(attribute);
	        if (index === -1)
	            return this;
	        var clause = clauses.get(index);
	        var newSet = clause.getLiteralSet().remove(value);
	        if (newSet.empty()) {
	            return new Filter(clauses.delete(index));
	        }
	        else {
	            clauses = clauses.splice(index, 1, clause.changeSelection(plywood_1.r(newSet)));
	            return new Filter(clauses);
	        }
	    };
	    Filter.prototype.toggleValue = function (attribute, value) {
	        return this.filteredOnValue(attribute, value) ? this.removeValue(attribute, value) : this.addValue(attribute, value);
	    };
	    Filter.prototype.getSelection = function (attribute) {
	        var clauses = this.clauses;
	        var index = this.indexOfClause(attribute);
	        if (index === -1)
	            return null;
	        return clauses.get(index).selection;
	    };
	    Filter.prototype.setSelection = function (attribute, selection) {
	        var clauses = this.clauses;
	        var index = this.indexOfClause(attribute);
	        var newClause = new filter_clause_1.FilterClause({
	            expression: attribute,
	            selection: selection
	        });
	        if (index === -1) {
	            clauses = clauses.push(newClause);
	        }
	        else {
	            clauses = clauses.splice(index, 1, newClause);
	        }
	        return new Filter(clauses);
	    };
	    Filter.prototype.getTimeRange = function (attribute) {
	        var clauses = this.clauses;
	        var index = this.indexOfClause(attribute);
	        if (index === -1)
	            return null;
	        return clauses.get(index).getTimeRange();
	    };
	    Filter.prototype.getFileString = function (timeAttribute) {
	        var nonTimeClauseSize = this.clauses.size;
	        var timeRange = this.getTimeRange(timeAttribute);
	        var nonTimeFilters = (function (nonTimeClauseSize) {
	            return nonTimeClauseSize === 0 ? "" : "_filters-" + nonTimeClauseSize;
	        });
	        if (timeRange) {
	            var start = timeRange.start, end = timeRange.end;
	            nonTimeClauseSize--;
	            return dateToFileString(start) + "_" + dateToFileString(end) + nonTimeFilters(nonTimeClauseSize);
	        }
	        return nonTimeFilters(nonTimeClauseSize);
	    };
	    Filter.prototype.getLiteralSet = function (attribute) {
	        var clauses = this.clauses;
	        var index = this.indexOfClause(attribute);
	        if (index === -1)
	            return null;
	        return clauses.get(index).getLiteralSet();
	    };
	    Filter.prototype.setClause = function (expression) {
	        var expressionAttribute = expression.expression;
	        var added = false;
	        var newOperands = this.clauses.map(function (clause) {
	            if (clause.expression.equals(expressionAttribute)) {
	                added = true;
	                return expression;
	            }
	            else {
	                return clause;
	            }
	        });
	        if (!added) {
	            newOperands = newOperands.push(expression);
	        }
	        return new Filter(newOperands);
	    };
	    Filter.prototype.applyDelta = function (delta) {
	        var newFilter = this;
	        var deltaClauses = delta.clauses;
	        deltaClauses.forEach(function (deltaClause) {
	            newFilter = newFilter.setClause(deltaClause);
	        });
	        return newFilter;
	    };
	    Filter.prototype.getSingleClauseSet = function () {
	        var clauses = this.clauses;
	        if (clauses.size !== 1)
	            return null;
	        return clauses.get(0).getLiteralSet();
	    };
	    Filter.prototype.constrainToDimensions = function (dimensions, timeAttribute, oldTimeAttribute) {
	        if (oldTimeAttribute === void 0) { oldTimeAttribute = null; }
	        var hasChanged = false;
	        var clauses = [];
	        this.clauses.forEach(function (clause) {
	            var clauseExpression = clause.expression;
	            if (dimension_1.Dimension.getDimensionByExpression(dimensions, clauseExpression)) {
	                clauses.push(clause);
	            }
	            else {
	                hasChanged = true;
	                // Special handling for time filter
	                if (timeAttribute && oldTimeAttribute && oldTimeAttribute.equals(clauseExpression)) {
	                    clauses.push(new filter_clause_1.FilterClause({
	                        expression: timeAttribute,
	                        selection: clause.selection
	                    }));
	                }
	            }
	        });
	        return hasChanged ? new Filter(immutable_1.List(clauses)) : this;
	    };
	    Filter.prototype.overQuery = function (duration, timezone, timeAttribute) {
	        if (!timeAttribute)
	            return this;
	        return new Filter(this.clauses.map(function (clause) {
	            if (clause.expression.equals(timeAttribute)) {
	                var timeRange = clause.getTimeRange();
	                var newTimeRange = new plywood_1.TimeRange({
	                    start: duration.shift(timeRange.start, timezone, -1),
	                    end: duration.shift(timeRange.end, timezone, 1)
	                });
	                return clause.changeSelection(plywood_1.r(newTimeRange));
	            }
	            else {
	                return clause;
	            }
	        }));
	    };
	    return Filter;
	}());
	exports.Filter = Filter;
	check = Filter;
	Filter.EMPTY = new Filter(immutable_1.List());


/***/ },
/* 202 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var immutable_class_1 = __webpack_require__(189);
	var plywood_1 = __webpack_require__(188);
	var dimension_1 = __webpack_require__(196);
	var check;
	var SplitCombine = (function () {
	    function SplitCombine(parameters) {
	        this.expression = parameters.expression;
	        if (!this.expression)
	            throw new Error('must have expression');
	        this.bucketAction = parameters.bucketAction;
	        this.sortAction = parameters.sortAction;
	        this.limitAction = parameters.limitAction;
	    }
	    SplitCombine.isSplitCombine = function (candidate) {
	        return immutable_class_1.isInstanceOf(candidate, SplitCombine);
	    };
	    SplitCombine.fromExpression = function (expression) {
	        return new SplitCombine({
	            expression: expression,
	            bucketAction: null,
	            sortAction: null,
	            limitAction: null
	        });
	    };
	    SplitCombine.fromJS = function (parameters, context) {
	        if (typeof parameters === 'string') {
	            if (!context)
	                throw new Error('must have context for string split');
	            var dimension = context.dimensions.find(function (d) { return d.name === parameters; });
	            if (!dimension)
	                throw new Error("can not find dimension " + parameters);
	            return new SplitCombine({
	                expression: dimension.expression,
	                bucketAction: null,
	                sortAction: null,
	                limitAction: null
	            });
	        }
	        else {
	            var value = {
	                expression: plywood_1.Expression.fromJSLoose(parameters.expression),
	                bucketAction: null,
	                sortAction: null,
	                limitAction: null
	            };
	            if (parameters.bucketAction)
	                value.bucketAction = plywood_1.Action.fromJS(parameters.bucketAction);
	            if (parameters.sortAction)
	                value.sortAction = plywood_1.SortAction.fromJS(parameters.sortAction);
	            if (parameters.limitAction)
	                value.limitAction = plywood_1.LimitAction.fromJS(parameters.limitAction);
	            return new SplitCombine(value);
	        }
	    };
	    SplitCombine.prototype.valueOf = function () {
	        return {
	            expression: this.expression,
	            bucketAction: this.bucketAction,
	            sortAction: this.sortAction,
	            limitAction: this.limitAction
	        };
	    };
	    SplitCombine.prototype.toJS = function () {
	        var js = {
	            expression: this.expression.toJS()
	        };
	        if (this.bucketAction)
	            js.bucketAction = this.bucketAction.toJS();
	        if (this.sortAction)
	            js.sortAction = this.sortAction.toJS();
	        if (this.limitAction)
	            js.limitAction = this.limitAction.toJS();
	        return js;
	    };
	    SplitCombine.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    SplitCombine.prototype.toString = function () {
	        return "[SplitCombine: " + this.expression + "]";
	    };
	    SplitCombine.prototype.equals = function (other) {
	        var _a = this, expression = _a.expression, bucketAction = _a.bucketAction, sortAction = _a.sortAction, limitAction = _a.limitAction;
	        return SplitCombine.isSplitCombine(other) &&
	            expression.equals(other.expression) &&
	            Boolean(bucketAction) === Boolean(other.bucketAction) &&
	            (!bucketAction || bucketAction.equals(other.bucketAction)) &&
	            Boolean(sortAction) === Boolean(other.sortAction) &&
	            (!sortAction || sortAction.equals(other.sortAction)) &&
	            Boolean(limitAction) === Boolean(other.limitAction) &&
	            (!limitAction || limitAction.equals(other.limitAction));
	    };
	    SplitCombine.prototype.equalsByExpression = function (other) {
	        var expression = this.expression;
	        return SplitCombine.isSplitCombine(other) && expression.equals(other.expression);
	    };
	    SplitCombine.prototype.toSplitExpression = function () {
	        var _a = this, expression = _a.expression, bucketAction = _a.bucketAction;
	        if (!bucketAction)
	            return expression;
	        return expression.performAction(bucketAction);
	    };
	    SplitCombine.prototype.toKey = function () {
	        return this.toSplitExpression().toString();
	    };
	    SplitCombine.prototype.changeBucketAction = function (bucketAction) {
	        var value = this.valueOf();
	        value.bucketAction = bucketAction;
	        return new SplitCombine(value);
	    };
	    SplitCombine.prototype.changeSortAction = function (sortAction) {
	        var value = this.valueOf();
	        value.sortAction = sortAction;
	        return new SplitCombine(value);
	    };
	    SplitCombine.prototype.changeLimitAction = function (limitAction) {
	        var value = this.valueOf();
	        value.limitAction = limitAction;
	        return new SplitCombine(value);
	    };
	    SplitCombine.prototype.changeLimit = function (limit) {
	        var limitAction = limit === null ? null : new plywood_1.LimitAction({ limit: limit });
	        return this.changeLimitAction(limitAction);
	    };
	    SplitCombine.prototype.getDimension = function (dimensions) {
	        return dimension_1.Dimension.getDimensionByExpression(dimensions, this.expression);
	    };
	    SplitCombine.prototype.getTitle = function (dimensions) {
	        var dimension = this.getDimension(dimensions);
	        return (dimension ? dimension.title : '?') + this.getBucketTitle();
	    };
	    SplitCombine.prototype.getBucketTitle = function () {
	        var bucketAction = this.bucketAction;
	        if (bucketAction instanceof plywood_1.TimeBucketAction) {
	            var duration = bucketAction.duration.toString();
	            switch (duration) {
	                case 'PT1M':
	                    return ' (Minute)';
	                case 'PT5M':
	                    return ' (5 Minutes)';
	                case 'PT1H':
	                    return ' (Hour)';
	                case 'P1D':
	                    return ' (Day)';
	                case 'P1W':
	                    return ' (Week)';
	                default:
	                    return '';
	            }
	        }
	        return '';
	    };
	    return SplitCombine;
	}());
	exports.SplitCombine = SplitCombine;


/***/ },
/* 203 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var immutable_1 = __webpack_require__(178);
	var immutable_class_1 = __webpack_require__(189);
	var chronoshift_1 = __webpack_require__(179);
	var plywood_1 = __webpack_require__(188);
	var general_1 = __webpack_require__(197);
	var split_combine_1 = __webpack_require__(202);
	var DEFAULT_GRANULARITY = chronoshift_1.Duration.fromJS('P1D');
	function getBestGranularity(timeRange) {
	    var len = timeRange.end.valueOf() - timeRange.start.valueOf();
	    if (len > 95 * chronoshift_1.day.canonicalLength) {
	        return chronoshift_1.Duration.fromJS('P1W');
	    }
	    else if (len > 8 * chronoshift_1.day.canonicalLength) {
	        return chronoshift_1.Duration.fromJS('P1D');
	    }
	    else if (len > 8 * chronoshift_1.hour.canonicalLength) {
	        return chronoshift_1.Duration.fromJS('PT1H');
	    }
	    else if (len > 3 * chronoshift_1.hour.canonicalLength) {
	        return chronoshift_1.Duration.fromJS('PT5M');
	    }
	    else {
	        return chronoshift_1.Duration.fromJS('PT1M');
	    }
	}
	function withholdSplit(splits, split, allowIndex) {
	    return splits.filter(function (s, i) {
	        return i === allowIndex || !s.equalsByExpression(split);
	    });
	}
	function swapSplit(splits, split, other, allowIndex) {
	    return splits.map(function (s, i) {
	        return (i === allowIndex || !s.equalsByExpression(split)) ? s : other;
	    });
	}
	var check;
	var Splits = (function () {
	    function Splits(parameters) {
	        this.splitCombines = parameters;
	    }
	    Splits.isSplits = function (candidate) {
	        return immutable_class_1.isInstanceOf(candidate, Splits);
	    };
	    Splits.fromSplitCombine = function (splitCombine) {
	        return new Splits(immutable_1.List([splitCombine]));
	    };
	    Splits.fromJS = function (parameters, context) {
	        if (!Array.isArray(parameters))
	            parameters = [parameters];
	        return new Splits(immutable_1.List(parameters.map(function (splitCombine) { return split_combine_1.SplitCombine.fromJS(splitCombine, context); })));
	    };
	    Splits.prototype.valueOf = function () {
	        return this.splitCombines;
	    };
	    Splits.prototype.toJS = function () {
	        return this.splitCombines.toArray().map(function (splitCombine) { return splitCombine.toJS(); });
	    };
	    Splits.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    Splits.prototype.toString = function () {
	        return this.splitCombines.map(function (splitCombine) { return splitCombine.toString(); }).join(',');
	    };
	    Splits.prototype.equals = function (other) {
	        return Splits.isSplits(other) &&
	            general_1.immutableListsEqual(this.splitCombines, other.splitCombines);
	    };
	    Splits.prototype.replaceByIndex = function (index, replace) {
	        var splitCombines = this.splitCombines;
	        if (splitCombines.size === index)
	            return this.insertByIndex(index, replace);
	        var replacedSplit = splitCombines.get(index);
	        splitCombines = splitCombines.map(function (s, i) { return i === index ? replace : s; });
	        splitCombines = swapSplit(splitCombines, replace, replacedSplit, index);
	        return new Splits(splitCombines);
	    };
	    Splits.prototype.insertByIndex = function (index, insert) {
	        var splitCombines = this.splitCombines;
	        splitCombines = splitCombines.splice(index, 0, insert);
	        splitCombines = withholdSplit(splitCombines, insert, index);
	        return new Splits(splitCombines);
	    };
	    Splits.prototype.addSplit = function (split) {
	        var splitCombines = this.splitCombines;
	        return this.insertByIndex(splitCombines.size, split);
	    };
	    Splits.prototype.removeSplit = function (split) {
	        return new Splits(this.splitCombines.filter(function (s) { return s !== split; }));
	    };
	    Splits.prototype.changeSortAction = function (sort) {
	        return new Splits(this.splitCombines.map(function (s) { return s.changeSortAction(sort); }));
	    };
	    Splits.prototype.getTitle = function (dimensions) {
	        return this.splitCombines.map(function (s) { return s.getDimension(dimensions).title; }).join(', ');
	    };
	    Splits.prototype.length = function () {
	        return this.splitCombines.size;
	    };
	    Splits.prototype.forEach = function (sideEffect, context) {
	        return this.splitCombines.forEach(sideEffect, context);
	    };
	    Splits.prototype.get = function (index) {
	        return this.splitCombines.get(index);
	    };
	    Splits.prototype.first = function () {
	        return this.splitCombines.first();
	    };
	    Splits.prototype.last = function () {
	        return this.splitCombines.last();
	    };
	    Splits.prototype.findSplitForDimension = function (dimension) {
	        var dimensionExpression = dimension.expression;
	        return this.splitCombines.find(function (s) { return s.expression.equals(dimensionExpression); });
	    };
	    Splits.prototype.hasSplitOn = function (dimension) {
	        return Boolean(this.findSplitForDimension(dimension));
	    };
	    Splits.prototype.replace = function (search, replace) {
	        return new Splits(this.splitCombines.map(function (s) { return s.equals(search) ? replace : s; }));
	    };
	    Splits.prototype.map = function (mapper, context) {
	        return new Splits(this.splitCombines.map(mapper, context));
	    };
	    Splits.prototype.toArray = function () {
	        return this.splitCombines.toArray();
	    };
	    Splits.prototype.updateWithTimeRange = function (timeAttribute, timeRange, timezone, force) {
	        var changed = false;
	        var granularity = timeRange ? getBestGranularity(timeRange) : DEFAULT_GRANULARITY;
	        var newSplitCombines = this.splitCombines.map(function (splitCombine) {
	            if (!splitCombine.expression.equals(timeAttribute))
	                return splitCombine;
	            var bucketAction = splitCombine.bucketAction;
	            if (bucketAction) {
	                if (!force)
	                    return splitCombine;
	                if (bucketAction instanceof plywood_1.TimeBucketAction && !bucketAction.duration.equals(granularity)) {
	                    changed = true;
	                    return splitCombine.changeBucketAction(new plywood_1.TimeBucketAction({
	                        timezone: bucketAction.timezone,
	                        duration: granularity
	                    }));
	                }
	                else {
	                    return splitCombine;
	                }
	            }
	            else {
	                changed = true;
	                return splitCombine.changeBucketAction(new plywood_1.TimeBucketAction({
	                    timezone: timezone,
	                    duration: granularity
	                }));
	            }
	        });
	        return changed ? new Splits(newSplitCombines) : this;
	    };
	    Splits.prototype.constrainToDimensions = function (dimensions) {
	        var hasChanged = false;
	        var splitCombines = [];
	        this.splitCombines.forEach(function (split) {
	            if (split.getDimension(dimensions)) {
	                splitCombines.push(split);
	            }
	            else {
	                hasChanged = true;
	            }
	        });
	        return hasChanged ? new Splits(immutable_1.List(splitCombines)) : this;
	    };
	    return Splits;
	}());
	exports.Splits = Splits;
	check = Splits;
	Splits.EMPTY = new Splits(immutable_1.List());


/***/ },
/* 204 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var immutable_class_1 = __webpack_require__(189);
	var filter_1 = __webpack_require__(201);
	var check;
	var Highlight = (function () {
	    function Highlight(parameters) {
	        var owner = parameters.owner;
	        if (typeof owner !== 'string')
	            throw new TypeError('owner must be a string');
	        this.owner = owner;
	        this.delta = parameters.delta;
	        this.measure = parameters.measure || null;
	    }
	    Highlight.isHighlight = function (candidate) {
	        return immutable_class_1.isInstanceOf(candidate, Highlight);
	    };
	    Highlight.fromJS = function (parameters) {
	        return new Highlight({
	            owner: parameters.owner,
	            delta: filter_1.Filter.fromJS(parameters.delta),
	            measure: parameters.measure
	        });
	    };
	    Highlight.prototype.valueOf = function () {
	        return {
	            owner: this.owner,
	            delta: this.delta,
	            measure: this.measure
	        };
	    };
	    Highlight.prototype.toJS = function () {
	        var js = {
	            owner: this.owner,
	            delta: this.delta.toJS()
	        };
	        if (this.measure)
	            js.measure = this.measure;
	        return js;
	    };
	    Highlight.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    Highlight.prototype.toString = function () {
	        return "[Highlight " + this.owner + "]";
	    };
	    Highlight.prototype.equals = function (other) {
	        return Highlight.isHighlight(other) &&
	            this.owner === other.owner &&
	            this.delta.equals(other.delta) &&
	            this.measure === other.measure;
	    };
	    Highlight.prototype.applyToFilter = function (filter) {
	        return filter.applyDelta(this.delta);
	    };
	    Highlight.prototype.constrainToDimensions = function (dimensions, timeAttribute) {
	        var delta = this.delta;
	        var newDelta = delta.constrainToDimensions(dimensions, timeAttribute);
	        if (newDelta === delta)
	            return this;
	        if (newDelta.length() === 0)
	            return null;
	        var value = this.valueOf();
	        value.delta = newDelta;
	        return new Highlight(value);
	    };
	    return Highlight;
	}());
	exports.Highlight = Highlight;
	check = Highlight;


/***/ },
/* 205 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var Q = __webpack_require__(186);
	var immutable_1 = __webpack_require__(178);
	var immutable_class_1 = __webpack_require__(189);
	var chronoshift_1 = __webpack_require__(179);
	var plywood_1 = __webpack_require__(188);
	var general_1 = __webpack_require__(197);
	var dimension_1 = __webpack_require__(196);
	var measure_1 = __webpack_require__(198);
	var filter_1 = __webpack_require__(201);
	var max_time_1 = __webpack_require__(194);
	var refresh_rule_1 = __webpack_require__(195);
	function formatTimeDiff(diff) {
	    diff = Math.round(Math.abs(diff) / 1000); // turn to seconds
	    if (diff < 60)
	        return 'less than 1 minute';
	    diff = Math.floor(diff / 60); // turn to minutes
	    if (diff === 1)
	        return '1 minute';
	    if (diff < 60)
	        return diff + ' minutes';
	    diff = Math.floor(diff / 60); // turn to hours
	    if (diff === 1)
	        return '1 hour';
	    if (diff <= 24)
	        return diff + ' hours';
	    diff = Math.floor(diff / 24); // turn to days
	    return diff + ' days';
	}
	function makeUniqueDimensionList(dimensions) {
	    var seen = {};
	    return immutable_1.List(dimensions.filter(function (dimension) {
	        var dimensionName = dimension.name.toLowerCase();
	        if (seen[dimensionName])
	            return false;
	        seen[dimensionName] = 1;
	        return true;
	    }));
	}
	function makeUniqueMeasureList(measures) {
	    var seen = {};
	    return immutable_1.List(measures.filter(function (measure) {
	        var measureName = measure.name.toLowerCase();
	        if (seen[measureName])
	            return false;
	        seen[measureName] = 1;
	        return true;
	    }));
	}
	function measuresFromLongForm(longForm) {
	    var metricColumn = longForm.metricColumn, values = longForm.values, possibleAggregates = longForm.possibleAggregates, titleNameTrim = longForm.titleNameTrim;
	    var myPossibleAggregates = {};
	    for (var agg in possibleAggregates) {
	        if (!general_1.hasOwnProperty(possibleAggregates, agg))
	            continue;
	        myPossibleAggregates[agg] = plywood_1.Expression.fromJSLoose(possibleAggregates[agg]);
	    }
	    var measures = [];
	    for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {
	        var value = values_1[_i];
	        var aggregates = value.aggregates;
	        if (!Array.isArray(aggregates)) {
	            throw new Error('must have aggregates in longForm value');
	        }
	        for (var _a = 0, aggregates_1 = aggregates; _a < aggregates_1.length; _a++) {
	            var aggregate = aggregates_1[_a];
	            var myExpression = myPossibleAggregates[aggregate];
	            if (!myExpression)
	                throw new Error("can not find aggregate " + aggregate + " for value " + value.value);
	            var name = general_1.makeUrlSafeName(aggregate + "_" + value.value);
	            measures.push(new measure_1.Measure({
	                name: name,
	                title: general_1.makeTitle(titleNameTrim ? name.replace(titleNameTrim, '') : name),
	                expression: myExpression.substitute(function (ex) {
	                    if (ex instanceof plywood_1.RefExpression && ex.name === 'filtered') {
	                        return plywood_1.$('main').filter(plywood_1.$(metricColumn).is(plywood_1.r(value.value)));
	                    }
	                    return null;
	                })
	            }));
	        }
	    }
	    return measures;
	}
	function filterFromLongFrom(longForm) {
	    var metricColumn = longForm.metricColumn, values = longForm.values;
	    return plywood_1.$(metricColumn).in(values.map(function (v) { return v.value; }));
	}
	var check;
	var DataSource = (function () {
	    function DataSource(parameters) {
	        var name = parameters.name;
	        general_1.verifyUrlSafeName(name);
	        this.name = name;
	        this.title = parameters.title || general_1.makeTitle(name);
	        this.engine = parameters.engine || 'druid';
	        this.source = parameters.source || name;
	        this.subsetFilter = parameters.subsetFilter;
	        this.rollup = Boolean(parameters.rollup);
	        this.options = parameters.options || {};
	        this.introspection = parameters.introspection || DataSource.DEFAULT_INTROSPECTION;
	        this.attributes = parameters.attributes || [];
	        this.attributeOverrides = parameters.attributeOverrides || [];
	        this.derivedAttributes = parameters.derivedAttributes;
	        this.dimensions = parameters.dimensions || immutable_1.List([]);
	        this.measures = parameters.measures || immutable_1.List([]);
	        this.timeAttribute = parameters.timeAttribute;
	        this.defaultTimezone = parameters.defaultTimezone;
	        this.defaultFilter = parameters.defaultFilter;
	        this.defaultDuration = parameters.defaultDuration;
	        this.defaultSortMeasure = parameters.defaultSortMeasure;
	        this.defaultPinnedDimensions = parameters.defaultPinnedDimensions;
	        this.refreshRule = parameters.refreshRule;
	        this.maxTime = parameters.maxTime;
	        this.executor = parameters.executor;
	        this.external = parameters.external;
	        this._validateDefaults();
	    }
	    DataSource.isDataSource = function (candidate) {
	        return immutable_class_1.isInstanceOf(candidate, DataSource);
	    };
	    DataSource.updateMaxTime = function (dataSource) {
	        if (dataSource.refreshRule.isRealtime()) {
	            return Q(dataSource.changeMaxTime(max_time_1.MaxTime.fromNow()));
	        }
	        var ex = plywood_1.ply().apply('maxTime', plywood_1.$('main').max(dataSource.timeAttribute));
	        return dataSource.executor(ex).then(function (dataset) {
	            var maxTimeDate = dataset.data[0]['maxTime'];
	            if (!isNaN(maxTimeDate)) {
	                return dataSource.changeMaxTime(max_time_1.MaxTime.fromDate(maxTimeDate));
	            }
	            return dataSource;
	        });
	    };
	    DataSource.fromJS = function (parameters, context) {
	        if (context === void 0) { context = {}; }
	        var executor = context.executor, external = context.external;
	        var engine = parameters.engine;
	        var introspection = parameters.introspection;
	        var attributeOverrideJSs = parameters.attributeOverrides;
	        // Back compat.
	        var options = parameters.options || {};
	        if (options.skipIntrospection) {
	            if (!introspection)
	                introspection = 'none';
	            delete options.skipIntrospection;
	        }
	        if (options.disableAutofill) {
	            if (!introspection)
	                introspection = 'no-autofill';
	            delete options.disableAutofill;
	        }
	        if (options.attributeOverrides) {
	            if (!attributeOverrideJSs)
	                attributeOverrideJSs = options.attributeOverrides;
	            delete options.attributeOverrides;
	        }
	        if (options.defaultSplitDimension) {
	            options.defaultSplits = options.defaultSplitDimension;
	            delete options.defaultSplitDimension;
	        }
	        // End Back compat.
	        introspection = introspection || DataSource.DEFAULT_INTROSPECTION;
	        if (DataSource.INTROSPECTION_VALUES.indexOf(introspection) === -1) {
	            throw new Error("invalid introspection value " + introspection + ", must be one of " + DataSource.INTROSPECTION_VALUES.join(', '));
	        }
	        var refreshRule = parameters.refreshRule ? refresh_rule_1.RefreshRule.fromJS(parameters.refreshRule) : refresh_rule_1.RefreshRule.query();
	        var maxTime = parameters.maxTime ? max_time_1.MaxTime.fromJS(parameters.maxTime) : null;
	        if (!maxTime && refreshRule.isRealtime()) {
	            maxTime = max_time_1.MaxTime.fromNow();
	        }
	        var timeAttributeName = parameters.timeAttribute;
	        if (engine === 'druid' && !timeAttributeName) {
	            timeAttributeName = '__time';
	        }
	        var timeAttribute = timeAttributeName ? plywood_1.$(timeAttributeName) : null;
	        var attributeOverrides = plywood_1.AttributeInfo.fromJSs(attributeOverrideJSs || []);
	        var attributes = plywood_1.AttributeInfo.fromJSs(parameters.attributes || []);
	        var derivedAttributes = null;
	        if (parameters.derivedAttributes) {
	            derivedAttributes = plywood_1.helper.expressionLookupFromJS(parameters.derivedAttributes);
	        }
	        var dimensions = makeUniqueDimensionList((parameters.dimensions || []).map(function (d) { return dimension_1.Dimension.fromJS(d); }));
	        var measures = makeUniqueMeasureList((parameters.measures || []).map(function (m) { return measure_1.Measure.fromJS(m); }));
	        if (timeAttribute && !dimension_1.Dimension.getDimensionByExpression(dimensions, timeAttribute)) {
	            dimensions = dimensions.unshift(new dimension_1.Dimension({
	                name: timeAttributeName,
	                expression: timeAttribute,
	                kind: 'time'
	            }));
	        }
	        var subsetFilter = parameters.subsetFilter ? plywood_1.Expression.fromJSLoose(parameters.subsetFilter) : null;
	        var longForm = parameters.longForm;
	        if (longForm) {
	            measures = measures.concat(measuresFromLongForm(longForm));
	            if (longForm.addSubsetFilter) {
	                if (!subsetFilter)
	                    subsetFilter = plywood_1.Expression.TRUE;
	                subsetFilter = subsetFilter.and(filterFromLongFrom(longForm)).simplify();
	            }
	        }
	        var value = {
	            executor: null,
	            name: parameters.name,
	            title: parameters.title,
	            engine: engine,
	            source: parameters.source,
	            subsetFilter: subsetFilter,
	            rollup: parameters.rollup,
	            options: options,
	            introspection: introspection,
	            attributeOverrides: attributeOverrides,
	            attributes: attributes,
	            derivedAttributes: derivedAttributes,
	            dimensions: dimensions,
	            measures: measures,
	            timeAttribute: timeAttribute,
	            defaultTimezone: parameters.defaultTimezone ? chronoshift_1.Timezone.fromJS(parameters.defaultTimezone) : DataSource.DEFAULT_TIMEZONE,
	            defaultFilter: parameters.defaultFilter ? filter_1.Filter.fromJS(parameters.defaultFilter) : filter_1.Filter.EMPTY,
	            defaultDuration: parameters.defaultDuration ? chronoshift_1.Duration.fromJS(parameters.defaultDuration) : DataSource.DEFAULT_DURATION,
	            defaultSortMeasure: parameters.defaultSortMeasure || (measures.size ? measures.first().name : null),
	            defaultPinnedDimensions: immutable_1.OrderedSet(parameters.defaultPinnedDimensions || []),
	            refreshRule: refreshRule,
	            maxTime: maxTime
	        };
	        if (external)
	            value.external = external;
	        if (executor)
	            value.executor = executor;
	        return new DataSource(value);
	    };
	    DataSource.prototype.valueOf = function () {
	        var value = {
	            name: this.name,
	            title: this.title,
	            engine: this.engine,
	            source: this.source,
	            subsetFilter: this.subsetFilter,
	            rollup: this.rollup,
	            options: this.options,
	            introspection: this.introspection,
	            attributeOverrides: this.attributeOverrides,
	            attributes: this.attributes,
	            derivedAttributes: this.derivedAttributes,
	            dimensions: this.dimensions,
	            measures: this.measures,
	            timeAttribute: this.timeAttribute,
	            defaultTimezone: this.defaultTimezone,
	            defaultFilter: this.defaultFilter,
	            defaultDuration: this.defaultDuration,
	            defaultSortMeasure: this.defaultSortMeasure,
	            defaultPinnedDimensions: this.defaultPinnedDimensions,
	            refreshRule: this.refreshRule,
	            maxTime: this.maxTime
	        };
	        if (this.executor)
	            value.executor = this.executor;
	        if (this.external)
	            value.external = this.external;
	        return value;
	    };
	    DataSource.prototype.toJS = function () {
	        var js = {
	            name: this.name,
	            title: this.title,
	            engine: this.engine,
	            source: this.source,
	            subsetFilter: this.subsetFilter ? this.subsetFilter.toJS() : null,
	            introspection: this.introspection,
	            dimensions: this.dimensions.toArray().map(function (dimension) { return dimension.toJS(); }),
	            measures: this.measures.toArray().map(function (measure) { return measure.toJS(); }),
	            defaultTimezone: this.defaultTimezone.toJS(),
	            defaultFilter: this.defaultFilter.toJS(),
	            defaultDuration: this.defaultDuration.toJS(),
	            defaultSortMeasure: this.defaultSortMeasure,
	            defaultPinnedDimensions: this.defaultPinnedDimensions.toArray(),
	            refreshRule: this.refreshRule.toJS()
	        };
	        if (this.rollup)
	            js.rollup = true;
	        if (this.timeAttribute)
	            js.timeAttribute = this.timeAttribute.name;
	        if (this.attributeOverrides.length)
	            js.attributeOverrides = plywood_1.AttributeInfo.toJSs(this.attributeOverrides);
	        if (this.attributes.length)
	            js.attributes = plywood_1.AttributeInfo.toJSs(this.attributes);
	        if (this.derivedAttributes)
	            js.derivedAttributes = plywood_1.helper.expressionLookupToJS(this.derivedAttributes);
	        if (Object.keys(this.options).length)
	            js.options = this.options;
	        if (this.maxTime)
	            js.maxTime = this.maxTime.toJS();
	        return js;
	    };
	    DataSource.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    DataSource.prototype.toString = function () {
	        return "[DataSource: " + this.name + "]";
	    };
	    DataSource.prototype.equals = function (other) {
	        return this.equalsWithoutMaxTime(other) &&
	            Boolean(this.maxTime) === Boolean(other.maxTime) &&
	            (!this.maxTime || this.maxTime.equals(other.maxTime));
	    };
	    DataSource.prototype.equalsWithoutMaxTime = function (other) {
	        return DataSource.isDataSource(other) &&
	            this.name === other.name &&
	            this.title === other.title &&
	            this.engine === other.engine &&
	            this.source === other.source &&
	            immutable_class_1.immutableEqual(this.subsetFilter, other.subsetFilter) &&
	            this.rollup === other.rollup &&
	            JSON.stringify(this.options) === JSON.stringify(other.options) &&
	            this.introspection === other.introspection &&
	            immutable_class_1.immutableArraysEqual(this.attributeOverrides, other.attributeOverrides) &&
	            immutable_class_1.immutableArraysEqual(this.attributes, other.attributes) &&
	            immutable_class_1.immutableLookupsEqual(this.derivedAttributes, other.derivedAttributes) &&
	            general_1.immutableListsEqual(this.dimensions, other.dimensions) &&
	            general_1.immutableListsEqual(this.measures, other.measures) &&
	            immutable_class_1.immutableEqual(this.timeAttribute, other.timeAttribute) &&
	            this.defaultTimezone.equals(other.defaultTimezone) &&
	            this.defaultFilter.equals(other.defaultFilter) &&
	            this.defaultDuration.equals(other.defaultDuration) &&
	            this.defaultSortMeasure === other.defaultSortMeasure &&
	            this.defaultPinnedDimensions.equals(other.defaultPinnedDimensions) &&
	            this.refreshRule.equals(other.refreshRule);
	    };
	    DataSource.prototype._validateDefaults = function () {
	        var _a = this, measures = _a.measures, defaultSortMeasure = _a.defaultSortMeasure;
	        if (defaultSortMeasure) {
	            if (!measures.find(function (measure) { return measure.name === defaultSortMeasure; })) {
	                throw new Error("can not find defaultSortMeasure '" + defaultSortMeasure + "' in data source '" + this.name + "'");
	            }
	        }
	    };
	    DataSource.prototype.getMainTypeContext = function () {
	        var _a = this, attributes = _a.attributes, derivedAttributes = _a.derivedAttributes;
	        if (!attributes)
	            return null;
	        var datasetType = {};
	        for (var _i = 0, attributes_1 = attributes; _i < attributes_1.length; _i++) {
	            var attribute = attributes_1[_i];
	            datasetType[attribute.name] = attribute;
	        }
	        for (var name in derivedAttributes) {
	            datasetType[name] = {
	                type: derivedAttributes[name].type
	            };
	        }
	        return {
	            type: 'DATASET',
	            datasetType: datasetType
	        };
	    };
	    DataSource.prototype.getIssues = function () {
	        var _a = this, dimensions = _a.dimensions, measures = _a.measures;
	        var mainTypeContext = this.getMainTypeContext();
	        var issues = [];
	        dimensions.forEach(function (dimension) {
	            try {
	                dimension.expression.referenceCheckInTypeContext(mainTypeContext);
	            }
	            catch (e) {
	                issues.push("failed to validate dimension '" + dimension.name + "': " + e.message);
	            }
	        });
	        var measureTypeContext = {
	            type: 'DATASET',
	            datasetType: {
	                main: mainTypeContext
	            }
	        };
	        measures.forEach(function (measure) {
	            try {
	                measure.expression.referenceCheckInTypeContext(measureTypeContext);
	            }
	            catch (e) {
	                var message = e.message;
	                // If we get here it is possible that the user has misunderstood what the meaning of a measure is and have tried
	                // to do something like $volume / $volume. We detect this here by checking for a reference to $main
	                // If there is no main reference raise a more informative issue.
	                if (measure.expression.getFreeReferences().indexOf('main') === -1) {
	                    message = 'measure must contain a $main reference';
	                }
	                issues.push("failed to validate measure '" + measure.name + "': " + message);
	            }
	        });
	        return issues;
	    };
	    DataSource.prototype.createExternal = function (requester, introspectionStrategy, timeout) {
	        if (this.engine !== 'druid')
	            return; // Only Druid supported for now.
	        var value = this.valueOf();
	        var context = {
	            timeout: timeout
	        };
	        if (this.introspection === 'none') {
	            value.external = new plywood_1.DruidExternal({
	                suppress: true,
	                dataSource: this.source,
	                rollup: this.rollup,
	                timeAttribute: this.timeAttribute.name,
	                customAggregations: this.options.customAggregations,
	                attributes: plywood_1.AttributeInfo.override(this.deduceAttributes(), this.attributeOverrides),
	                derivedAttributes: this.derivedAttributes,
	                introspectionStrategy: introspectionStrategy,
	                filter: this.subsetFilter,
	                allowSelectQueries: true,
	                context: context,
	                requester: requester
	            });
	        }
	        else {
	            value.external = new plywood_1.DruidExternal({
	                suppress: true,
	                dataSource: this.source,
	                rollup: this.rollup,
	                timeAttribute: this.timeAttribute.name,
	                attributeOverrides: this.attributeOverrides,
	                derivedAttributes: this.derivedAttributes,
	                customAggregations: this.options.customAggregations,
	                introspectionStrategy: introspectionStrategy,
	                filter: this.subsetFilter,
	                allowSelectQueries: true,
	                context: context,
	                requester: requester
	            });
	        }
	        return new DataSource(value);
	    };
	    DataSource.prototype.introspect = function () {
	        var _this = this;
	        var external = this.external;
	        if (this.engine === 'native')
	            return Q(this);
	        if (!external)
	            throw new Error("must have external to introspect in " + this.name);
	        var countDistinctReferences = [];
	        if (this.measures) {
	            countDistinctReferences = [].concat.apply([], this.measures.toArray().map(function (measure) {
	                return measure_1.Measure.getCountDistinctReferences(measure.expression);
	            }));
	        }
	        return external.introspect()
	            .then(function (introspectedExternal) {
	            if (immutable_class_1.immutableArraysEqual(external.attributes, introspectedExternal.attributes))
	                return _this;
	            if (!countDistinctReferences) {
	                var attributes = introspectedExternal.attributes;
	                for (var _i = 0, attributes_2 = attributes; _i < attributes_2.length; _i++) {
	                    var attribute = attributes_2[_i];
	                    // This is a metric that should really be a HLL
	                    if (attribute.type === 'NUMBER' && countDistinctReferences.indexOf(attribute.name) !== -1) {
	                        introspectedExternal = introspectedExternal.updateAttribute(plywood_1.AttributeInfo.fromJS({
	                            name: attribute.name,
	                            special: 'unique'
	                        }));
	                    }
	                }
	            }
	            var value = _this.addAttributes(introspectedExternal.attributes).valueOf();
	            value.external = introspectedExternal;
	            value.executor = plywood_1.basicExecutorFactory({
	                datasets: { main: introspectedExternal }
	            });
	            return new DataSource(value);
	        });
	    };
	    DataSource.prototype.attachExecutor = function (executor) {
	        var value = this.valueOf();
	        value.executor = executor;
	        return new DataSource(value);
	    };
	    DataSource.prototype.toClientDataSource = function () {
	        var value = this.valueOf();
	        // Do not reveal the subset filter to the client
	        value.subsetFilter = null;
	        // No need for any introspection on the client
	        value.introspection = 'none';
	        // No point sending over the maxTime
	        if (this.refreshRule.isRealtime()) {
	            value.maxTime = null;
	        }
	        // No need for the overrides
	        value.attributeOverrides = null;
	        return new DataSource(value);
	    };
	    DataSource.prototype.isQueryable = function () {
	        return Boolean(this.executor);
	    };
	    DataSource.prototype.getMaxTimeDate = function () {
	        var refreshRule = this.refreshRule;
	        if (refreshRule.isFixed())
	            return refreshRule.time;
	        // refreshRule is query or realtime
	        var maxTime = this.maxTime;
	        if (!maxTime)
	            return null;
	        return chronoshift_1.second.ceil(maxTime.time, chronoshift_1.Timezone.UTC);
	    };
	    DataSource.prototype.updatedText = function () {
	        var refreshRule = this.refreshRule;
	        if (refreshRule.isRealtime()) {
	            return 'Updated ~1 second ago';
	        }
	        else if (refreshRule.isFixed()) {
	            return "Fixed to " + refreshRule.time.toISOString();
	        }
	        else {
	            var maxTime = this.maxTime;
	            if (maxTime) {
	                return "Updated " + formatTimeDiff(Date.now() - maxTime.time.valueOf()) + " ago";
	            }
	            else {
	                return null;
	            }
	        }
	    };
	    DataSource.prototype.shouldUpdateMaxTime = function () {
	        if (!this.refreshRule.shouldUpdate(this.maxTime))
	            return false;
	        return Boolean(this.executor) || this.refreshRule.isRealtime();
	    };
	    DataSource.prototype.getDimension = function (dimensionName) {
	        return dimension_1.Dimension.getDimension(this.dimensions, dimensionName);
	    };
	    DataSource.prototype.getDimensionByExpression = function (expression) {
	        return dimension_1.Dimension.getDimensionByExpression(this.dimensions, expression);
	    };
	    DataSource.prototype.getDimensionByKind = function (kind) {
	        return this.dimensions.filter(function (d) { return d.kind === kind; });
	    };
	    DataSource.prototype.getTimeDimension = function () {
	        return this.getDimensionByExpression(this.timeAttribute);
	    };
	    DataSource.prototype.isTimeAttribute = function (ex) {
	        return ex.equals(this.timeAttribute);
	    };
	    DataSource.prototype.getMeasure = function (measureName) {
	        return measure_1.Measure.getMeasure(this.measures, measureName);
	    };
	    DataSource.prototype.getMeasureByExpression = function (expression) {
	        return this.measures.find(function (measure) { return measure.expression.equals(expression); });
	    };
	    DataSource.prototype.changeDimensions = function (dimensions) {
	        var value = this.valueOf();
	        value.dimensions = dimensions;
	        return new DataSource(value);
	    };
	    DataSource.prototype.rolledUp = function () {
	        return this.engine === 'druid';
	    };
	    /**
	     * This function tries to deduce the structure of the dataSource based on the dimensions and measures defined within.
	     * It should only be used when, for some reason, introspection if not available.
	     */
	    DataSource.prototype.deduceAttributes = function () {
	        var _a = this, dimensions = _a.dimensions, measures = _a.measures, timeAttribute = _a.timeAttribute, attributeOverrides = _a.attributeOverrides;
	        var attributes = [];
	        if (timeAttribute) {
	            attributes.push(plywood_1.AttributeInfo.fromJS({ name: timeAttribute.name, type: 'TIME' }));
	        }
	        dimensions.forEach(function (dimension) {
	            var expression = dimension.expression;
	            if (expression.equals(timeAttribute))
	                return;
	            var references = expression.getFreeReferences();
	            for (var _i = 0, references_1 = references; _i < references_1.length; _i++) {
	                var reference = references_1[_i];
	                if (plywood_1.helper.findByName(attributes, reference))
	                    continue;
	                attributes.push(plywood_1.AttributeInfo.fromJS({ name: reference, type: 'STRING' }));
	            }
	        });
	        measures.forEach(function (measure) {
	            var expression = measure.expression;
	            var references = measure_1.Measure.getAggregateReferences(expression);
	            var countDistinctReferences = measure_1.Measure.getCountDistinctReferences(expression);
	            for (var _i = 0, references_2 = references; _i < references_2.length; _i++) {
	                var reference = references_2[_i];
	                if (plywood_1.helper.findByName(attributes, reference))
	                    continue;
	                if (countDistinctReferences.indexOf(reference) !== -1) {
	                    attributes.push(plywood_1.AttributeInfo.fromJS({ name: reference, special: 'unique' }));
	                }
	                else {
	                    attributes.push(plywood_1.AttributeInfo.fromJS({ name: reference, type: 'NUMBER' }));
	                }
	            }
	        });
	        if (attributeOverrides.length) {
	            attributes = plywood_1.AttributeInfo.override(attributes, attributeOverrides);
	        }
	        return attributes;
	    };
	    DataSource.prototype.addAttributes = function (newAttributes) {
	        var _this = this;
	        var _a = this, introspection = _a.introspection, dimensions = _a.dimensions, measures = _a.measures, attributes = _a.attributes;
	        if (introspection === 'none')
	            return this;
	        var autofillDimensions = introspection === 'autofill-dimensions-only' || introspection === 'autofill-all';
	        var autofillMeasures = introspection === 'autofill-measures-only' || introspection === 'autofill-all';
	        var $main = plywood_1.$('main');
	        for (var _i = 0, newAttributes_1 = newAttributes; _i < newAttributes_1.length; _i++) {
	            var newAttribute = newAttributes_1[_i];
	            var name = newAttribute.name, type = newAttribute.type, special = newAttribute.special;
	            // Already exists
	            if (attributes && plywood_1.helper.findByName(attributes, name))
	                continue;
	            var expression;
	            switch (type) {
	                case 'TIME':
	                    if (!autofillDimensions)
	                        continue;
	                    expression = plywood_1.$(name);
	                    if (this.getDimensionByExpression(expression))
	                        continue;
	                    // Add to the start
	                    dimensions = dimensions.unshift(new dimension_1.Dimension({
	                        name: general_1.makeUrlSafeName(name),
	                        kind: 'time',
	                        expression: expression
	                    }));
	                    break;
	                case 'STRING':
	                    if (special === 'unique') {
	                        if (!autofillMeasures)
	                            continue;
	                        var newMeasures = measure_1.Measure.measuresFromAttributeInfo(newAttribute);
	                        newMeasures.forEach(function (newMeasure) {
	                            if (_this.getMeasureByExpression(newMeasure.expression))
	                                return;
	                            measures = measures.push(newMeasure);
	                        });
	                    }
	                    else {
	                        if (!autofillDimensions)
	                            continue;
	                        expression = plywood_1.$(name);
	                        if (this.getDimensionByExpression(expression))
	                            continue;
	                        dimensions = dimensions.push(new dimension_1.Dimension({
	                            name: general_1.makeUrlSafeName(name),
	                            expression: expression
	                        }));
	                    }
	                    break;
	                case 'SET/STRING':
	                    if (!autofillDimensions)
	                        continue;
	                    expression = plywood_1.$(name);
	                    if (this.getDimensionByExpression(expression))
	                        continue;
	                    dimensions = dimensions.push(new dimension_1.Dimension({
	                        name: general_1.makeUrlSafeName(name),
	                        expression: expression
	                    }));
	                    break;
	                case 'BOOLEAN':
	                    if (!autofillDimensions)
	                        continue;
	                    expression = plywood_1.$(name);
	                    if (this.getDimensionByExpression(expression))
	                        continue;
	                    dimensions = dimensions.push(new dimension_1.Dimension({
	                        name: general_1.makeUrlSafeName(name),
	                        kind: 'boolean',
	                        expression: expression
	                    }));
	                    break;
	                case 'NUMBER':
	                    if (!autofillMeasures)
	                        continue;
	                    var newMeasures = measure_1.Measure.measuresFromAttributeInfo(newAttribute);
	                    newMeasures.forEach(function (newMeasure) {
	                        if (_this.getMeasureByExpression(newMeasure.expression))
	                            return;
	                        measures = (name === 'count') ? measures.unshift(newMeasure) : measures.push(newMeasure);
	                    });
	                    break;
	                default:
	                    throw new Error("unsupported type " + type);
	            }
	        }
	        if (!this.rolledUp() && !measures.find(function (m) { return m.name === 'count'; })) {
	            measures = measures.unshift(new measure_1.Measure({
	                name: 'count',
	                expression: $main.count()
	            }));
	        }
	        var value = this.valueOf();
	        value.attributes = attributes ? plywood_1.AttributeInfo.override(attributes, newAttributes) : newAttributes;
	        value.dimensions = dimensions;
	        value.measures = measures;
	        if (!value.defaultSortMeasure) {
	            value.defaultSortMeasure = measures.size ? measures.first().name : null;
	        }
	        // ToDo: remove this when Pivot can handle it
	        if (!value.timeAttribute && dimensions.first().kind === 'time') {
	            value.timeAttribute = dimensions.first().expression;
	        }
	        return new DataSource(value);
	    };
	    DataSource.prototype.changeMaxTime = function (maxTime) {
	        var value = this.valueOf();
	        value.maxTime = maxTime;
	        return new DataSource(value);
	    };
	    DataSource.prototype.getDefaultSortAction = function () {
	        return new plywood_1.SortAction({
	            expression: plywood_1.$(this.defaultSortMeasure),
	            direction: plywood_1.SortAction.DESCENDING
	        });
	    };
	    DataSource.DEFAULT_INTROSPECTION = 'autofill-all';
	    DataSource.INTROSPECTION_VALUES = ['none', 'no-autofill', 'autofill-dimensions-only', 'autofill-measures-only', 'autofill-all'];
	    DataSource.DEFAULT_TIMEZONE = chronoshift_1.Timezone.UTC;
	    DataSource.DEFAULT_DURATION = chronoshift_1.Duration.fromJS('P1D');
	    return DataSource;
	}());
	exports.DataSource = DataSource;
	check = DataSource;


/***/ },
/* 206 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var immutable_class_1 = __webpack_require__(189);
	var plywood_1 = __webpack_require__(188);
	var dimension_1 = __webpack_require__(196);
	var measure_1 = __webpack_require__(198);
	var check;
	var SortOn = (function () {
	    function SortOn(parameters) {
	        this.dimension = parameters.dimension;
	        this.measure = parameters.measure;
	    }
	    SortOn.isSortOn = function (candidate) {
	        return immutable_class_1.isInstanceOf(candidate, SortOn);
	    };
	    SortOn.equal = function (s1, s2) {
	        return s1 === s2 || s1.equals(s2);
	    };
	    SortOn.getName = function (s) {
	        return s.toName();
	    };
	    SortOn.getTitle = function (s) {
	        return s.getTitle();
	    };
	    SortOn.fromDimension = function (dimension) {
	        return new SortOn({ dimension: dimension });
	    };
	    SortOn.fromMeasure = function (measure) {
	        return new SortOn({ measure: measure });
	    };
	    SortOn.fromSortAction = function (sortAction, dataSource, fallbackDimension) {
	        if (!sortAction)
	            return SortOn.fromDimension(fallbackDimension);
	        var sortOnName = sortAction.expression.name;
	        var measure = dataSource.getMeasure(sortOnName);
	        if (measure)
	            return SortOn.fromMeasure(measure);
	        return SortOn.fromDimension(fallbackDimension);
	    };
	    SortOn.fromJS = function (parameters) {
	        var value = {};
	        if (parameters.dimension) {
	            value.dimension = dimension_1.Dimension.fromJS(parameters.dimension);
	        }
	        else {
	            value.measure = measure_1.Measure.fromJS(parameters.measure);
	        }
	        return new SortOn(value);
	    };
	    SortOn.prototype.valueOf = function () {
	        return {
	            dimension: this.dimension,
	            measure: this.measure
	        };
	    };
	    SortOn.prototype.toJS = function () {
	        var js = {};
	        if (this.dimension) {
	            js.dimension = this.dimension.toJS();
	        }
	        else {
	            js.measure = this.measure.toJS();
	        }
	        return js;
	    };
	    SortOn.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    SortOn.prototype.toString = function () {
	        return "[SortOn: " + this.toName() + "]";
	    };
	    SortOn.prototype.equals = function (other) {
	        return SortOn.isSortOn(other) &&
	            (this.dimension ? this.dimension.equals(other.dimension) : this.measure.equals(other.measure));
	    };
	    SortOn.prototype.toName = function () {
	        var measure = this.measure;
	        return measure ? measure.name : this.dimension.name;
	    };
	    SortOn.prototype.getTitle = function () {
	        var measure = this.measure;
	        return measure ? measure.title : this.dimension.title;
	    };
	    SortOn.prototype.getExpression = function () {
	        var measure = this.measure;
	        return plywood_1.$(measure ? measure.name : 'SEGMENT');
	    };
	    return SortOn;
	}());
	exports.SortOn = SortOn;
	check = SortOn;


/***/ },
/* 207 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var immutable_class_1 = __webpack_require__(189);
	var plywood_1 = __webpack_require__(188);
	var general_1 = __webpack_require__(197);
	var NULL_COLOR = '#666666';
	//const OTHERS_COLOR = '#AAAAAA';
	var NORMAL_COLORS = [
	    '#2D95CA',
	    '#EFB925',
	    '#DA4E99',
	    '#4CC873',
	    '#745CBD',
	    '#EA7136',
	    '#E68EE0',
	    '#218C35',
	    '#B0B510',
	    '#904064'
	];
	function valuesToJS(values) {
	    var valuesJS = {};
	    for (var i = 0; i < NORMAL_COLORS.length; i++) {
	        if (!general_1.hasOwnProperty(values, i))
	            continue;
	        valuesJS[i] = plywood_1.valueToJS(values[i]);
	    }
	    return valuesJS;
	}
	function valueEquals(v1, v2) {
	    if (v1 === v2)
	        return true;
	    if (!v1 !== !v2)
	        return false;
	    if (v1.toISOString && v2.toISOString)
	        return v1.valueOf() === v2.valueOf();
	    if (immutable_class_1.isImmutableClass(v1))
	        return v1.equals(v2);
	    return false;
	}
	function valuesEqual(values1, values2) {
	    if (!Boolean(values1) === Boolean(values2))
	        return false;
	    if (values1 === values2)
	        return true;
	    if (!values1 !== !values2)
	        return false;
	    if (typeof values1 !== typeof values2)
	        return false;
	    for (var i = 0; i < NORMAL_COLORS.length; i++) {
	        var v1 = values1[i];
	        var v2 = values2[i];
	        if (general_1.hasOwnProperty(values1, i) !== general_1.hasOwnProperty(values2, i))
	            return false;
	        if (!valueEquals(v1, v2))
	            return false;
	    }
	    return true;
	}
	function cloneValues(values) {
	    var newValues = {};
	    for (var i = 0; i < NORMAL_COLORS.length; i++) {
	        if (!general_1.hasOwnProperty(values, i))
	            continue;
	        newValues[i] = values[i];
	    }
	    return newValues;
	}
	var check;
	var Colors = (function () {
	    function Colors(parameters) {
	        this.dimension = parameters.dimension;
	        if (!this.dimension)
	            throw new Error('must have a dimension');
	        this.values = parameters.values;
	        this.hasNull = parameters.hasNull;
	        this.limit = parameters.limit;
	        if (!this.values && !this.limit)
	            throw new Error('must have values or limit');
	    }
	    Colors.isColors = function (candidate) {
	        return immutable_class_1.isInstanceOf(candidate, Colors);
	    };
	    Colors.fromLimit = function (dimension, limit) {
	        return new Colors({ dimension: dimension, limit: limit });
	    };
	    Colors.fromValues = function (dimension, values) {
	        var valueLookup = {};
	        var hasNull = false;
	        var n = Math.min(values.length, NORMAL_COLORS.length + 1);
	        var i = 0;
	        var j = 0;
	        while (i < n) {
	            var v = values[i];
	            if (v === null) {
	                hasNull = true;
	            }
	            else {
	                valueLookup[j] = v;
	                j++;
	            }
	            i++;
	        }
	        return new Colors({
	            dimension: dimension,
	            hasNull: hasNull,
	            values: valueLookup
	        });
	    };
	    Colors.fromJS = function (parameters) {
	        var value = {
	            dimension: parameters.dimension,
	            limit: parameters.limit
	        };
	        var valuesJS = parameters.values;
	        if (valuesJS) {
	            var hasNull = Boolean(parameters.hasNull);
	            var values = {};
	            for (var i = 0; i < NORMAL_COLORS.length; i++) {
	                if (!general_1.hasOwnProperty(valuesJS, i))
	                    continue;
	                var vJS = valuesJS[i];
	                if (vJS === null) {
	                    hasNull = true; // Back compat (there might be a null in values)
	                }
	                else {
	                    values[i] = plywood_1.valueFromJS(vJS);
	                }
	            }
	            value.values = values;
	            value.hasNull = hasNull;
	        }
	        return new Colors(value);
	    };
	    Colors.prototype.valueOf = function () {
	        return {
	            dimension: this.dimension,
	            values: this.values,
	            hasNull: this.hasNull,
	            limit: this.limit
	        };
	    };
	    Colors.prototype.toJS = function () {
	        var js = {
	            dimension: this.dimension
	        };
	        if (this.values)
	            js.values = valuesToJS(this.values);
	        if (this.hasNull)
	            js.hasNull = true;
	        if (this.limit)
	            js.limit = this.limit;
	        return js;
	    };
	    Colors.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    Colors.prototype.toString = function () {
	        return "[Colors: " + this.dimension + "]";
	    };
	    Colors.prototype.equals = function (other) {
	        return Colors.isColors(other) &&
	            valuesEqual(this.values, other.values) &&
	            this.hasNull === other.hasNull &&
	            this.limit === other.limit;
	    };
	    Colors.prototype.numColors = function () {
	        var _a = this, values = _a.values, limit = _a.limit;
	        if (values) {
	            return Object.keys(values).length + Number(this.hasNull);
	        }
	        return limit;
	    };
	    Colors.prototype.toArray = function () {
	        var _a = this, values = _a.values, hasNull = _a.hasNull;
	        if (!values)
	            return null;
	        var vs = [];
	        if (hasNull)
	            vs.push(null);
	        for (var i = 0; i < NORMAL_COLORS.length; i++) {
	            if (!general_1.hasOwnProperty(values, i))
	                continue;
	            vs.push(values[i]);
	        }
	        return vs;
	    };
	    Colors.prototype.toSet = function () {
	        if (!this.values)
	            return null;
	        return plywood_1.Set.fromJS(this.toArray());
	    };
	    Colors.prototype.toHavingFilter = function (segmentName) {
	        var _a = this, dimension = _a.dimension, values = _a.values;
	        if (!segmentName)
	            segmentName = dimension;
	        if (!values)
	            return null;
	        return new plywood_1.FilterAction({
	            expression: plywood_1.$(segmentName).in(this.toSet())
	        });
	    };
	    Colors.prototype.toLimitAction = function () {
	        return new plywood_1.LimitAction({
	            limit: this.numColors()
	        });
	    };
	    Colors.prototype.toggle = function (v) {
	        return this.has(v) ? this.remove(v) : this.add(v);
	    };
	    Colors.prototype.valueIndex = function (v) {
	        var values = this.values;
	        if (!values)
	            return -1;
	        for (var i = 0; i < NORMAL_COLORS.length; i++) {
	            if (!general_1.hasOwnProperty(values, i))
	                continue;
	            if (valueEquals(values[i], v))
	                return i;
	        }
	        return -1;
	    };
	    Colors.prototype.nextIndex = function () {
	        var values = this.values;
	        if (!values)
	            return 0;
	        for (var i = 0; i < NORMAL_COLORS.length; i++) {
	            if (general_1.hasOwnProperty(values, i))
	                continue;
	            return i;
	        }
	        return -1;
	    };
	    Colors.prototype.has = function (v) {
	        if (v == null)
	            return this.hasNull;
	        return this.valueIndex(v) !== -1;
	    };
	    Colors.prototype.add = function (v) {
	        if (this.has(v))
	            return this;
	        var value = this.valueOf();
	        if (v === null) {
	            value.hasNull = true;
	        }
	        else {
	            var idx = this.nextIndex();
	            if (idx === -1)
	                return this;
	            value.values = value.values ? cloneValues(value.values) : {};
	            value.values[idx] = v;
	            delete value.limit;
	        }
	        return new Colors(value);
	    };
	    Colors.prototype.remove = function (v) {
	        if (!this.has(v))
	            return this;
	        var value = this.valueOf();
	        if (v == null) {
	            value.hasNull = false;
	        }
	        else {
	            var idx = this.valueIndex(v);
	            if (idx === -1)
	                return this;
	            value.values = cloneValues(value.values);
	            delete value.values[idx];
	            delete value.limit;
	        }
	        return new Colors(value);
	    };
	    Colors.prototype.getColors = function (valuesToColor) {
	        var _this = this;
	        var _a = this, values = _a.values, limit = _a.limit, hasNull = _a.hasNull;
	        if (values) {
	            return valuesToColor.map(function (value) {
	                if (value === null && hasNull)
	                    return NULL_COLOR;
	                var colorIdx = _this.valueIndex(value);
	                return colorIdx === -1 ? null : NORMAL_COLORS[colorIdx];
	            });
	        }
	        else {
	            var colors = [];
	            var colorIdx = 0;
	            for (var i = 0; i < valuesToColor.length; i++) {
	                if (i < limit) {
	                    var v = valuesToColor[i];
	                    if (v === null) {
	                        colors.push(NULL_COLOR);
	                    }
	                    else {
	                        colors.push(NORMAL_COLORS[colorIdx]);
	                        colorIdx++;
	                    }
	                }
	                else {
	                    colors.push(null);
	                }
	            }
	            return colors;
	        }
	    };
	    return Colors;
	}());
	exports.Colors = Colors;
	check = Colors;


/***/ },
/* 208 */
/***/ function(module, exports) {

	"use strict";
	var Resolve = (function () {
	    function Resolve(score, state, adjustment, message, resolutions) {
	        this.score = Math.max(1, Math.min(10, score));
	        this.state = state;
	        this.adjustment = adjustment;
	        this.message = message;
	        this.resolutions = resolutions;
	    }
	    Resolve.compare = function (r1, r2) {
	        return r2.score - r1.score;
	    };
	    Resolve.automatic = function (score, adjustment) {
	        return new Resolve(score, 'automatic', adjustment, null, null);
	    };
	    Resolve.manual = function (score, message, resolutions) {
	        return new Resolve(score, 'manual', null, message, resolutions);
	    };
	    Resolve.ready = function (score) {
	        return new Resolve(score, 'ready', null, null, null);
	    };
	    Resolve.prototype.toString = function () {
	        return this.state;
	    };
	    Resolve.prototype.valueOf = function () {
	        return this.state;
	    };
	    Resolve.prototype.isReady = function () {
	        return this.state === 'ready';
	    };
	    Resolve.prototype.isAutomatic = function () {
	        return this.state === 'automatic';
	    };
	    Resolve.prototype.isManual = function () {
	        return this.state === 'manual';
	    };
	    return Resolve;
	}());
	exports.Resolve = Resolve;
	Resolve.NEVER = new Resolve(-1, 'never', null, null, null);


/***/ },
/* 209 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var immutable_1 = __webpack_require__(178);
	var lz_string_1 = __webpack_require__(210);
	var immutable_class_1 = __webpack_require__(189);
	var chronoshift_1 = __webpack_require__(179);
	var plywood_1 = __webpack_require__(188);
	var general_1 = __webpack_require__(197);
	var filter_1 = __webpack_require__(201);
	var filter_clause_1 = __webpack_require__(200);
	var highlight_1 = __webpack_require__(204);
	var splits_1 = __webpack_require__(203);
	var colors_1 = __webpack_require__(207);
	var manifest_1 = __webpack_require__(208);
	var HASH_VERSION = 2;
	function constrainDimensions(dimensions, dataSource) {
	    return dimensions.filter(function (dimensionName) { return Boolean(dataSource.getDimension(dimensionName)); });
	}
	function constrainMeasures(measures, dataSource) {
	    return measures.filter(function (measureName) { return Boolean(dataSource.getMeasure(measureName)); });
	}
	function addToSetInOrder(order, setToAdd, thing) {
	    return immutable_1.OrderedSet(order.toArray().filter(function (name) { return setToAdd.has(name) || name === thing; }));
	}
	/**
	 * FairGame   - Run all visualizations pretending that there is no current
	 * UnfairGame - Run all visualizations but mark current vis as current
	 * KeepAlways - Just keep the current one
	 */
	(function (VisStrategy) {
	    VisStrategy[VisStrategy["FairGame"] = 0] = "FairGame";
	    VisStrategy[VisStrategy["UnfairGame"] = 1] = "UnfairGame";
	    VisStrategy[VisStrategy["KeepAlways"] = 2] = "KeepAlways";
	})(exports.VisStrategy || (exports.VisStrategy = {}));
	var VisStrategy = exports.VisStrategy;
	var check;
	var Essence = (function () {
	    function Essence(parameters) {
	        var visualizations = parameters.visualizations, dataSource = parameters.dataSource, visualization = parameters.visualization, timezone = parameters.timezone, filter = parameters.filter, splits = parameters.splits, multiMeasureMode = parameters.multiMeasureMode, singleMeasure = parameters.singleMeasure, selectedMeasures = parameters.selectedMeasures, pinnedDimensions = parameters.pinnedDimensions, colors = parameters.colors, pinnedSort = parameters.pinnedSort, compare = parameters.compare, highlight = parameters.highlight;
	        if (!dataSource)
	            throw new Error('Essence must have a dataSource');
	        timezone = timezone || chronoshift_1.Timezone.UTC;
	        if (!filter && dataSource.timeAttribute) {
	            filter = dataSource.defaultFilter.setSelection(dataSource.timeAttribute, plywood_1.$(filter_clause_1.FilterClause.MAX_TIME_REF_NAME).timeRange(dataSource.defaultDuration, -1));
	        }
	        multiMeasureMode = Boolean(multiMeasureMode);
	        function visibleMeasure(measureName) {
	            return multiMeasureMode ? selectedMeasures.has(measureName) : measureName === singleMeasure;
	        }
	        // Wipe out the highlight if measure is not selected
	        if (highlight && highlight.measure && !visibleMeasure(highlight.measure)) {
	            highlight = null;
	        }
	        // Place vis here because it needs to know about splits and colors (and maybe later other things)
	        if (!visualization) {
	            var visAndResolve = Essence.getBestVisualization(visualizations, dataSource, splits, colors, null);
	            visualization = visAndResolve.visualization;
	        }
	        var visResolve = visualization.handleCircumstance(dataSource, splits, colors, true);
	        if (visResolve.isAutomatic()) {
	            var adjustment = visResolve.adjustment;
	            splits = adjustment.splits;
	            colors = adjustment.colors || null;
	            visResolve = visualization.handleCircumstance(dataSource, splits, colors, true);
	            if (!visResolve.isReady()) {
	                console.log(visResolve);
	                throw new Error('visualization must be ready after automatic adjustment');
	            }
	        }
	        this.visualizations = visualizations;
	        this.dataSource = dataSource;
	        this.visualization = visualization;
	        this.dataSource = dataSource;
	        this.timezone = timezone;
	        this.filter = filter;
	        this.splits = splits;
	        this.multiMeasureMode = multiMeasureMode;
	        this.singleMeasure = singleMeasure;
	        this.selectedMeasures = selectedMeasures;
	        this.pinnedDimensions = pinnedDimensions;
	        this.colors = colors;
	        this.pinnedSort = pinnedSort;
	        this.highlight = highlight;
	        this.compare = compare;
	        this.visResolve = visResolve;
	    }
	    Essence.isEssence = function (candidate) {
	        return immutable_class_1.isInstanceOf(candidate, Essence);
	    };
	    Essence.getBestVisualization = function (visualizations, dataSource, splits, colors, currentVisualization) {
	        var visAndResolves = visualizations.toArray().map(function (visualization) {
	            return {
	                visualization: visualization,
	                resolve: visualization.handleCircumstance(dataSource, splits, colors, visualization === currentVisualization)
	            };
	        });
	        return visAndResolves.sort(function (vr1, vr2) { return manifest_1.Resolve.compare(vr1.resolve, vr2.resolve); })[0];
	    };
	    Essence.fromHash = function (hash, context) {
	        var parts = hash.split('/');
	        if (parts.length < 3)
	            return null;
	        var visualization = parts.shift();
	        var version = parseInt(parts.shift(), 10);
	        if (version > HASH_VERSION)
	            return null;
	        var jsArray = null;
	        try {
	            jsArray = JSON.parse('[' + lz_string_1.decompressFromBase64(parts.join('/')) + ']');
	        }
	        catch (e) {
	            return null;
	        }
	        if (!Array.isArray(jsArray))
	            return null;
	        if (version === 1) {
	            jsArray.splice(3, 0, false, null); // Insert null at position 3 (between splits and selectedMeasures)
	        }
	        var jsArrayLength = jsArray.length;
	        if (!(8 <= jsArrayLength && jsArrayLength <= 11))
	            return null;
	        var essence;
	        try {
	            essence = Essence.fromJS({
	                visualization: visualization,
	                timezone: jsArray[0],
	                filter: jsArray[1],
	                splits: jsArray[2],
	                multiMeasureMode: jsArray[3],
	                singleMeasure: jsArray[4],
	                selectedMeasures: jsArray[5],
	                pinnedDimensions: jsArray[6],
	                pinnedSort: jsArray[7],
	                colors: jsArray[8] || null,
	                compare: jsArray[9] || null,
	                highlight: jsArray[10] || null
	            }, context);
	        }
	        catch (e) {
	            return null;
	        }
	        return essence;
	    };
	    Essence.fromDataSource = function (dataSource, context) {
	        var timezone = dataSource.defaultTimezone;
	        var splits = splits_1.Splits.EMPTY;
	        var defaultSplits = dataSource.options.defaultSplits;
	        if (defaultSplits) {
	            splits = splits_1.Splits.fromJS(defaultSplits, dataSource);
	        }
	        var essence = new Essence({
	            dataSource: context.dataSource,
	            visualizations: context.visualizations,
	            visualization: null,
	            timezone: timezone,
	            filter: null,
	            splits: splits,
	            multiMeasureMode: false,
	            singleMeasure: dataSource.defaultSortMeasure,
	            selectedMeasures: immutable_1.OrderedSet(dataSource.measures.toArray().slice(0, 4).map(function (m) { return m.name; })),
	            pinnedDimensions: dataSource.defaultPinnedDimensions,
	            colors: null,
	            pinnedSort: dataSource.defaultSortMeasure,
	            compare: null,
	            highlight: null
	        });
	        if (defaultSplits) {
	            essence = essence.updateWithTimeRange();
	        }
	        return essence;
	    };
	    Essence.fromJS = function (parameters, context) {
	        if (!context)
	            throw new Error('must have context');
	        var dataSource = context.dataSource, visualizations = context.visualizations;
	        var visualizationID = parameters.visualization;
	        var visualization = visualizations.find(function (v) { return v.id === visualizationID; });
	        var timezone = parameters.timezone ? chronoshift_1.Timezone.fromJS(parameters.timezone) : null;
	        var filter = parameters.filter ? filter_1.Filter.fromJS(parameters.filter).constrainToDimensions(dataSource.dimensions, dataSource.timeAttribute) : null;
	        var splits = splits_1.Splits.fromJS(parameters.splits || [], dataSource).constrainToDimensions(dataSource.dimensions);
	        var defaultSortMeasureName = dataSource.defaultSortMeasure;
	        var multiMeasureMode = general_1.hasOwnProperty(parameters, 'multiMeasureMode') ? parameters.multiMeasureMode : !general_1.hasOwnProperty(parameters, 'singleMeasure');
	        var singleMeasure = dataSource.getMeasure(parameters.singleMeasure) ? parameters.singleMeasure : defaultSortMeasureName;
	        var selectedMeasures = constrainMeasures(immutable_1.OrderedSet(parameters.selectedMeasures || []), dataSource);
	        var pinnedDimensions = constrainDimensions(immutable_1.OrderedSet(parameters.pinnedDimensions || []), dataSource);
	        var colors = parameters.colors ? colors_1.Colors.fromJS(parameters.colors) : null;
	        var pinnedSort = dataSource.getMeasure(parameters.pinnedSort) ? parameters.pinnedSort : defaultSortMeasureName;
	        var compare = null;
	        var compareJS = parameters.compare;
	        if (compareJS) {
	            compare = filter_1.Filter.fromJS(compareJS).constrainToDimensions(dataSource.dimensions, dataSource.timeAttribute);
	        }
	        var highlight = null;
	        var highlightJS = parameters.highlight;
	        if (highlightJS) {
	            highlight = highlight_1.Highlight.fromJS(highlightJS).constrainToDimensions(dataSource.dimensions, dataSource.timeAttribute);
	        }
	        return new Essence({
	            dataSource: dataSource,
	            visualizations: visualizations,
	            visualization: visualization,
	            timezone: timezone,
	            filter: filter,
	            splits: splits,
	            multiMeasureMode: multiMeasureMode,
	            singleMeasure: singleMeasure,
	            selectedMeasures: selectedMeasures,
	            pinnedDimensions: pinnedDimensions,
	            colors: colors,
	            pinnedSort: pinnedSort,
	            compare: compare,
	            highlight: highlight
	        });
	    };
	    Essence.prototype.valueOf = function () {
	        return {
	            dataSource: this.dataSource,
	            visualizations: this.visualizations,
	            visualization: this.visualization,
	            timezone: this.timezone,
	            filter: this.filter,
	            splits: this.splits,
	            multiMeasureMode: this.multiMeasureMode,
	            singleMeasure: this.singleMeasure,
	            selectedMeasures: this.selectedMeasures,
	            pinnedDimensions: this.pinnedDimensions,
	            colors: this.colors,
	            pinnedSort: this.pinnedSort,
	            compare: this.compare,
	            highlight: this.highlight
	        };
	    };
	    Essence.prototype.toJS = function () {
	        var js = {
	            visualization: this.visualization.id,
	            timezone: this.timezone.toJS(),
	            filter: this.filter.toJS(),
	            splits: this.splits.toJS(),
	            singleMeasure: this.singleMeasure,
	            selectedMeasures: this.selectedMeasures.toArray(),
	            pinnedDimensions: this.pinnedDimensions.toArray()
	        };
	        if (this.multiMeasureMode)
	            js.multiMeasureMode = true;
	        if (this.colors)
	            js.colors = this.colors.toJS();
	        var defaultSortMeasure = this.dataSource.defaultSortMeasure;
	        if (this.pinnedSort !== defaultSortMeasure)
	            js.pinnedSort = this.pinnedSort;
	        if (this.compare)
	            js.compare = this.compare.toJS();
	        if (this.highlight)
	            js.highlight = this.highlight.toJS();
	        return js;
	    };
	    Essence.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    Essence.prototype.toString = function () {
	        return "[Essence]";
	    };
	    Essence.prototype.equals = function (other) {
	        return Essence.isEssence(other) &&
	            this.dataSource.equals(other.dataSource) &&
	            this.visualization.id === other.visualization.id &&
	            this.timezone.equals(other.timezone) &&
	            this.filter.equals(other.filter) &&
	            this.splits.equals(other.splits) &&
	            this.multiMeasureMode === other.multiMeasureMode &&
	            this.singleMeasure === other.singleMeasure &&
	            this.selectedMeasures.equals(other.selectedMeasures) &&
	            this.pinnedDimensions.equals(other.pinnedDimensions) &&
	            immutable_class_1.immutableEqual(this.colors, other.colors) &&
	            this.pinnedSort === other.pinnedSort &&
	            immutable_class_1.immutableEqual(this.compare, other.compare) &&
	            immutable_class_1.immutableEqual(this.highlight, other.highlight);
	    };
	    Essence.prototype.toHash = function () {
	        var js = this.toJS();
	        var compressed = [
	            js.timezone,
	            js.filter,
	            js.splits,
	            js.multiMeasureMode,
	            js.singleMeasure,
	            js.selectedMeasures,
	            js.pinnedDimensions,
	            js.pinnedSort // 7
	        ];
	        if (js.colors)
	            compressed[8] = js.colors;
	        if (js.compare)
	            compressed[9] = js.compare;
	        if (js.highlight)
	            compressed[10] = js.highlight;
	        var restJSON = [];
	        for (var i = 0; i < compressed.length; i++) {
	            restJSON.push(JSON.stringify(compressed[i] || null));
	        }
	        return [
	            js.visualization,
	            HASH_VERSION,
	            lz_string_1.compressToBase64(restJSON.join(','))
	        ].join('/');
	    };
	    Essence.prototype.getURL = function (urlPrefix) {
	        return urlPrefix + this.toHash();
	    };
	    Essence.prototype.getTimeAttribute = function () {
	        return this.dataSource.timeAttribute;
	    };
	    Essence.prototype.getTimeDimension = function () {
	        return this.dataSource.getTimeDimension();
	    };
	    Essence.prototype.evaluateSelection = function (selection, now) {
	        if (now === void 0) { now = new Date(); }
	        var _a = this, dataSource = _a.dataSource, timezone = _a.timezone;
	        var maxTime = dataSource.getMaxTimeDate();
	        return filter_clause_1.FilterClause.evaluate(selection, now, maxTime, timezone);
	    };
	    Essence.prototype.getEffectiveFilter = function (highlightId, unfilterDimension) {
	        if (highlightId === void 0) { highlightId = null; }
	        if (unfilterDimension === void 0) { unfilterDimension = null; }
	        var _a = this, dataSource = _a.dataSource, filter = _a.filter, highlight = _a.highlight, timezone = _a.timezone;
	        if (highlight && (highlightId !== highlight.owner))
	            filter = highlight.applyToFilter(filter);
	        if (unfilterDimension)
	            filter = filter.remove(unfilterDimension.expression);
	        var maxTime = dataSource.getMaxTimeDate();
	        return filter.getSpecificFilter(new Date(), maxTime, timezone);
	    };
	    Essence.prototype.isFixedMeasureMode = function () {
	        return Boolean(this.visualization.measureModeNeed);
	    };
	    Essence.prototype.getEffectiveMultiMeasureMode = function () {
	        var measureModeNeed = this.visualization.measureModeNeed;
	        if (measureModeNeed) {
	            return measureModeNeed === 'multi';
	        }
	        return this.multiMeasureMode;
	    };
	    Essence.prototype.getEffectiveMeasures = function () {
	        if (this.getEffectiveMultiMeasureMode()) {
	            return this.getMeasures();
	        }
	        else {
	            return immutable_1.List([this.dataSource.getMeasure(this.singleMeasure)]);
	        }
	    };
	    Essence.prototype.getMeasures = function () {
	        var dataSource = this.dataSource;
	        return this.selectedMeasures.toList().map(function (measureName) { return dataSource.getMeasure(measureName); });
	    };
	    Essence.prototype.getEffectiveSelectedMeasure = function () {
	        if (this.getEffectiveMultiMeasureMode()) {
	            return this.selectedMeasures;
	        }
	        else {
	            return immutable_1.OrderedSet([this.singleMeasure]);
	        }
	    };
	    Essence.prototype.differentDataSource = function (other) {
	        return this.dataSource !== other.dataSource;
	    };
	    Essence.prototype.differentTimezone = function (other) {
	        return !this.timezone.equals(other.timezone);
	    };
	    Essence.prototype.differentFilter = function (other) {
	        return !this.filter.equals(other.filter);
	    };
	    Essence.prototype.differentSplits = function (other) {
	        return !this.splits.equals(other.splits);
	    };
	    Essence.prototype.differentColors = function (other) {
	        if (Boolean(this.colors) !== Boolean(other.colors))
	            return true;
	        if (!this.colors)
	            return false;
	        return !this.colors.equals(other.colors);
	    };
	    Essence.prototype.differentSelectedMeasures = function (other) {
	        return !this.selectedMeasures.equals(other.selectedMeasures);
	    };
	    Essence.prototype.differentEffectiveMeasures = function (other) {
	        return !this.getEffectiveSelectedMeasure().equals(other.getEffectiveSelectedMeasure());
	    };
	    Essence.prototype.newSelectedMeasures = function (other) {
	        return !this.selectedMeasures.isSubset(other.selectedMeasures);
	    };
	    Essence.prototype.newEffectiveMeasures = function (other) {
	        return !this.getEffectiveSelectedMeasure().isSubset(other.getEffectiveSelectedMeasure());
	    };
	    Essence.prototype.differentPinnedDimensions = function (other) {
	        return !this.pinnedDimensions.equals(other.pinnedDimensions);
	    };
	    Essence.prototype.differentPinnedSort = function (other) {
	        return this.pinnedSort !== other.pinnedSort;
	    };
	    Essence.prototype.differentCompare = function (other) {
	        if (Boolean(this.compare) !== Boolean(other.compare))
	            return true;
	        return Boolean(this.compare && !this.compare.equals(other.compare));
	    };
	    Essence.prototype.differentHighligh = function (other) {
	        if (Boolean(this.highlight) !== Boolean(other.highlight))
	            return true;
	        return Boolean(this.highlight && !this.highlight.equals(other.highlight));
	    };
	    Essence.prototype.differentEffectiveFilter = function (other, highlightId, unfilterDimension) {
	        if (highlightId === void 0) { highlightId = null; }
	        if (unfilterDimension === void 0) { unfilterDimension = null; }
	        var myEffectiveFilter = this.getEffectiveFilter(highlightId, unfilterDimension);
	        var otherEffectiveFilter = other.getEffectiveFilter(highlightId, unfilterDimension);
	        return !myEffectiveFilter.equals(otherEffectiveFilter);
	    };
	    Essence.prototype.highlightOn = function (owner, measure) {
	        var highlight = this.highlight;
	        if (!highlight)
	            return false;
	        return highlight.owner === owner && (!measure || highlight.measure === measure);
	    };
	    Essence.prototype.highlightOnDifferentMeasure = function (owner, measure) {
	        var highlight = this.highlight;
	        if (!highlight)
	            return false;
	        return highlight.owner === owner && measure && highlight.measure !== measure;
	    };
	    Essence.prototype.getSingleHighlightSet = function () {
	        var highlight = this.highlight;
	        if (!highlight)
	            return null;
	        return highlight.delta.getSingleClauseSet();
	    };
	    Essence.prototype.getApplyForSort = function (sort) {
	        var sortOn = sort.expression.name;
	        var sortMeasure = this.dataSource.getMeasure(sortOn);
	        if (!sortMeasure)
	            return null;
	        return sortMeasure.toApplyAction();
	    };
	    Essence.prototype.getCommonSort = function () {
	        var splits = this.splits.toArray();
	        var commonSort = null;
	        for (var _i = 0, splits_2 = splits; _i < splits_2.length; _i++) {
	            var split = splits_2[_i];
	            var sort = split.sortAction;
	            if (commonSort) {
	                if (!commonSort.equals(sort))
	                    return null;
	            }
	            else {
	                commonSort = sort;
	            }
	        }
	        return commonSort;
	    };
	    Essence.prototype.updateDataSource = function (newDataSource) {
	        var _a = this, dataSource = _a.dataSource, visualizations = _a.visualizations;
	        if (dataSource.equals(newDataSource))
	            return this; // nothing to do
	        if (dataSource.equalsWithoutMaxTime(newDataSource)) {
	            var value = this.valueOf();
	            value.dataSource = newDataSource;
	            return new Essence(value);
	        }
	        if (dataSource.name !== newDataSource.name)
	            return Essence.fromDataSource(newDataSource, {
	                dataSource: newDataSource,
	                visualizations: visualizations
	            });
	        var value = this.valueOf();
	        value.dataSource = newDataSource;
	        // Make sure that all the elements of state are still valid
	        value.filter = value.filter.constrainToDimensions(newDataSource.dimensions, newDataSource.timeAttribute, dataSource.timeAttribute);
	        value.splits = value.splits.constrainToDimensions(newDataSource.dimensions);
	        value.selectedMeasures = constrainMeasures(value.selectedMeasures, newDataSource);
	        value.pinnedDimensions = constrainDimensions(value.pinnedDimensions, newDataSource);
	        if (value.colors && !newDataSource.getDimension(value.colors.dimension)) {
	            value.colors = null;
	        }
	        var defaultSortMeasureName = newDataSource.defaultSortMeasure;
	        if (!newDataSource.getMeasure(value.pinnedSort))
	            value.pinnedSort = defaultSortMeasureName;
	        if (value.compare) {
	            value.compare = value.compare.constrainToDimensions(newDataSource.dimensions, newDataSource.timeAttribute);
	        }
	        if (value.highlight) {
	            value.highlight = value.highlight.constrainToDimensions(newDataSource.dimensions, newDataSource.timeAttribute);
	        }
	        return new Essence(value);
	    };
	    // Modification
	    Essence.prototype.changeFilter = function (filter, removeHighlight) {
	        if (removeHighlight === void 0) { removeHighlight = false; }
	        var value = this.valueOf();
	        value.filter = filter;
	        if (removeHighlight) {
	            value.highlight = null;
	        }
	        var timeAttribute = this.getTimeAttribute();
	        if (timeAttribute) {
	            var oldTimeSelection = this.filter.getSelection(timeAttribute);
	            var newTimeSelection = filter.getSelection(timeAttribute);
	            if (newTimeSelection && !newTimeSelection.equals(oldTimeSelection)) {
	                value.splits = value.splits.updateWithTimeRange(timeAttribute, this.evaluateSelection(newTimeSelection), this.timezone, true);
	            }
	        }
	        return new Essence(value);
	    };
	    Essence.prototype.changeTimeSelection = function (check) {
	        var filter = this.filter;
	        var timeAttribute = this.getTimeAttribute();
	        return this.changeFilter(filter.setSelection(timeAttribute, check));
	    };
	    Essence.prototype.convertToSpecificFilter = function () {
	        var _a = this, dataSource = _a.dataSource, filter = _a.filter, timezone = _a.timezone;
	        if (!filter.isRelative())
	            return this;
	        var maxTime = dataSource.getMaxTimeDate();
	        return this.changeFilter(filter.getSpecificFilter(new Date(), maxTime, timezone));
	    };
	    Essence.prototype.changeSplits = function (splits, strategy) {
	        var _a = this, visualizations = _a.visualizations, dataSource = _a.dataSource, visualization = _a.visualization, visResolve = _a.visResolve, filter = _a.filter, colors = _a.colors, timezone = _a.timezone;
	        var timeAttribute = this.getTimeAttribute();
	        if (timeAttribute) {
	            splits = splits.updateWithTimeRange(timeAttribute, this.evaluateSelection(filter.getSelection(timeAttribute)), timezone);
	        }
	        // If in manual mode stay there, keep the vis regardless of suggested strategy
	        if (visResolve.isManual()) {
	            strategy = VisStrategy.KeepAlways;
	        }
	        if (strategy !== VisStrategy.KeepAlways) {
	            var visAndResolve = Essence.getBestVisualization(visualizations, dataSource, splits, colors, (strategy === VisStrategy.FairGame ? null : visualization));
	            visualization = visAndResolve.visualization;
	        }
	        var value = this.valueOf();
	        value.splits = splits;
	        value.visualization = visualization;
	        if (value.highlight) {
	            value.filter = value.highlight.applyToFilter(value.filter);
	            value.highlight = null;
	        }
	        return new Essence(value);
	    };
	    Essence.prototype.changeSplit = function (splitCombine, strategy) {
	        return this.changeSplits(splits_1.Splits.fromSplitCombine(splitCombine), strategy);
	    };
	    Essence.prototype.addSplit = function (split, strategy) {
	        var splits = this.splits;
	        return this.changeSplits(splits.addSplit(split), strategy);
	    };
	    Essence.prototype.removeSplit = function (split, strategy) {
	        var splits = this.splits;
	        return this.changeSplits(splits.removeSplit(split), strategy);
	    };
	    Essence.prototype.updateWithTimeRange = function () {
	        var _a = this, filter = _a.filter, splits = _a.splits, timezone = _a.timezone;
	        var timeAttribute = this.getTimeAttribute();
	        if (!timeAttribute)
	            return this;
	        var value = this.valueOf();
	        value.splits = splits.updateWithTimeRange(timeAttribute, this.evaluateSelection(filter.getSelection(timeAttribute)), timezone);
	        return new Essence(value);
	    };
	    Essence.prototype.changeColors = function (colors) {
	        var value = this.valueOf();
	        value.colors = colors;
	        return new Essence(value);
	    };
	    Essence.prototype.changeVisualization = function (visualization) {
	        var value = this.valueOf();
	        value.visualization = visualization;
	        return new Essence(value);
	    };
	    Essence.prototype.pin = function (dimension) {
	        var value = this.valueOf();
	        value.pinnedDimensions = value.pinnedDimensions.add(dimension.name);
	        return new Essence(value);
	    };
	    Essence.prototype.unpin = function (dimension) {
	        var value = this.valueOf();
	        value.pinnedDimensions = value.pinnedDimensions.remove(dimension.name);
	        return new Essence(value);
	    };
	    Essence.prototype.getPinnedSortMeasure = function () {
	        return this.dataSource.getMeasure(this.pinnedSort);
	    };
	    Essence.prototype.changePinnedSortMeasure = function (measure) {
	        var value = this.valueOf();
	        value.pinnedSort = measure.name;
	        return new Essence(value);
	    };
	    Essence.prototype.toggleMultiMeasureMode = function () {
	        var _a = this, dataSource = _a.dataSource, multiMeasureMode = _a.multiMeasureMode, selectedMeasures = _a.selectedMeasures, singleMeasure = _a.singleMeasure;
	        var value = this.valueOf();
	        value.multiMeasureMode = !multiMeasureMode;
	        if (multiMeasureMode) {
	            // Ensure that the singleMeasure is in the selectedMeasures
	            if (selectedMeasures.size && !selectedMeasures.has(singleMeasure)) {
	                value.singleMeasure = selectedMeasures.first();
	            }
	        }
	        else {
	            value.selectedMeasures = addToSetInOrder(dataSource.measures.map(function (m) { return m.name; }), value.selectedMeasures, singleMeasure);
	        }
	        return new Essence(value);
	    };
	    Essence.prototype.changeSingleMeasure = function (measure) {
	        if (measure.name === this.singleMeasure)
	            return this;
	        var value = this.valueOf();
	        value.singleMeasure = measure.name;
	        value.pinnedSort = measure.name;
	        return new Essence(value);
	    };
	    Essence.prototype.toggleSelectedMeasure = function (measure) {
	        var dataSource = this.dataSource;
	        var value = this.valueOf();
	        var selectedMeasures = value.selectedMeasures;
	        var measureName = measure.name;
	        if (selectedMeasures.has(measureName)) {
	            value.selectedMeasures = selectedMeasures.delete(measureName);
	        }
	        else {
	            value.selectedMeasures = addToSetInOrder(dataSource.measures.map(function (m) { return m.name; }), selectedMeasures, measureName);
	        }
	        return new Essence(value);
	    };
	    Essence.prototype.toggleEffectiveMeasure = function (measure) {
	        if (this.getEffectiveMultiMeasureMode()) {
	            return this.toggleSelectedMeasure(measure);
	        }
	        else {
	            return this.changeSingleMeasure(measure);
	        }
	    };
	    Essence.prototype.acceptHighlight = function () {
	        var highlight = this.highlight;
	        if (!highlight)
	            return this;
	        return this.changeFilter(highlight.applyToFilter(this.filter), true);
	    };
	    Essence.prototype.changeHighlight = function (owner, measure, delta) {
	        var highlight = this.highlight;
	        // If there is already a highlight from someone else accept it
	        var value;
	        if (highlight && highlight.owner !== owner) {
	            value = this.changeFilter(highlight.applyToFilter(this.filter)).valueOf();
	        }
	        else {
	            value = this.valueOf();
	        }
	        value.highlight = new highlight_1.Highlight({
	            owner: owner,
	            delta: delta,
	            measure: measure
	        });
	        return new Essence(value);
	    };
	    Essence.prototype.dropHighlight = function () {
	        var value = this.valueOf();
	        value.highlight = null;
	        return new Essence(value);
	    };
	    return Essence;
	}());
	exports.Essence = Essence;
	check = Essence;


/***/ },
/* 210 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>
	// This work is free. You can redistribute it and/or modify it
	// under the terms of the WTFPL, Version 2
	// For more information see LICENSE.txt or http://www.wtfpl.net/
	//
	// For more information, the home page:
	// http://pieroxy.net/blog/pages/lz-string/testing.html
	//
	// LZ-based compression algorithm, version 1.4.4
	var LZString = (function() {

	// private property
	var f = String.fromCharCode;
	var keyStrBase64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
	var keyStrUriSafe = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$";
	var baseReverseDic = {};

	function getBaseValue(alphabet, character) {
	  if (!baseReverseDic[alphabet]) {
	    baseReverseDic[alphabet] = {};
	    for (var i=0 ; i<alphabet.length ; i++) {
	      baseReverseDic[alphabet][alphabet.charAt(i)] = i;
	    }
	  }
	  return baseReverseDic[alphabet][character];
	}

	var LZString = {
	  compressToBase64 : function (input) {
	    if (input == null) return "";
	    var res = LZString._compress(input, 6, function(a){return keyStrBase64.charAt(a);});
	    switch (res.length % 4) { // To produce valid Base64
	    default: // When could this happen ?
	    case 0 : return res;
	    case 1 : return res+"===";
	    case 2 : return res+"==";
	    case 3 : return res+"=";
	    }
	  },

	  decompressFromBase64 : function (input) {
	    if (input == null) return "";
	    if (input == "") return null;
	    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrBase64, input.charAt(index)); });
	  },

	  compressToUTF16 : function (input) {
	    if (input == null) return "";
	    return LZString._compress(input, 15, function(a){return f(a+32);}) + " ";
	  },

	  decompressFromUTF16: function (compressed) {
	    if (compressed == null) return "";
	    if (compressed == "") return null;
	    return LZString._decompress(compressed.length, 16384, function(index) { return compressed.charCodeAt(index) - 32; });
	  },

	  //compress into uint8array (UCS-2 big endian format)
	  compressToUint8Array: function (uncompressed) {
	    var compressed = LZString.compress(uncompressed);
	    var buf=new Uint8Array(compressed.length*2); // 2 bytes per character

	    for (var i=0, TotalLen=compressed.length; i<TotalLen; i++) {
	      var current_value = compressed.charCodeAt(i);
	      buf[i*2] = current_value >>> 8;
	      buf[i*2+1] = current_value % 256;
	    }
	    return buf;
	  },

	  //decompress from uint8array (UCS-2 big endian format)
	  decompressFromUint8Array:function (compressed) {
	    if (compressed===null || compressed===undefined){
	        return LZString.decompress(compressed);
	    } else {
	        var buf=new Array(compressed.length/2); // 2 bytes per character
	        for (var i=0, TotalLen=buf.length; i<TotalLen; i++) {
	          buf[i]=compressed[i*2]*256+compressed[i*2+1];
	        }

	        var result = [];
	        buf.forEach(function (c) {
	          result.push(f(c));
	        });
	        return LZString.decompress(result.join(''));

	    }

	  },


	  //compress into a string that is already URI encoded
	  compressToEncodedURIComponent: function (input) {
	    if (input == null) return "";
	    return LZString._compress(input, 6, function(a){return keyStrUriSafe.charAt(a);});
	  },

	  //decompress from an output of compressToEncodedURIComponent
	  decompressFromEncodedURIComponent:function (input) {
	    if (input == null) return "";
	    if (input == "") return null;
	    input = input.replace(/ /g, "+");
	    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrUriSafe, input.charAt(index)); });
	  },

	  compress: function (uncompressed) {
	    return LZString._compress(uncompressed, 16, function(a){return f(a);});
	  },
	  _compress: function (uncompressed, bitsPerChar, getCharFromInt) {
	    if (uncompressed == null) return "";
	    var i, value,
	        context_dictionary= {},
	        context_dictionaryToCreate= {},
	        context_c="",
	        context_wc="",
	        context_w="",
	        context_enlargeIn= 2, // Compensate for the first entry which should not count
	        context_dictSize= 3,
	        context_numBits= 2,
	        context_data=[],
	        context_data_val=0,
	        context_data_position=0,
	        ii;

	    for (ii = 0; ii < uncompressed.length; ii += 1) {
	      context_c = uncompressed.charAt(ii);
	      if (!Object.prototype.hasOwnProperty.call(context_dictionary,context_c)) {
	        context_dictionary[context_c] = context_dictSize++;
	        context_dictionaryToCreate[context_c] = true;
	      }

	      context_wc = context_w + context_c;
	      if (Object.prototype.hasOwnProperty.call(context_dictionary,context_wc)) {
	        context_w = context_wc;
	      } else {
	        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {
	          if (context_w.charCodeAt(0)<256) {
	            for (i=0 ; i<context_numBits ; i++) {
	              context_data_val = (context_data_val << 1);
	              if (context_data_position == bitsPerChar-1) {
	                context_data_position = 0;
	                context_data.push(getCharFromInt(context_data_val));
	                context_data_val = 0;
	              } else {
	                context_data_position++;
	              }
	            }
	            value = context_w.charCodeAt(0);
	            for (i=0 ; i<8 ; i++) {
	              context_data_val = (context_data_val << 1) | (value&1);
	              if (context_data_position == bitsPerChar-1) {
	                context_data_position = 0;
	                context_data.push(getCharFromInt(context_data_val));
	                context_data_val = 0;
	              } else {
	                context_data_position++;
	              }
	              value = value >> 1;
	            }
	          } else {
	            value = 1;
	            for (i=0 ; i<context_numBits ; i++) {
	              context_data_val = (context_data_val << 1) | value;
	              if (context_data_position ==bitsPerChar-1) {
	                context_data_position = 0;
	                context_data.push(getCharFromInt(context_data_val));
	                context_data_val = 0;
	              } else {
	                context_data_position++;
	              }
	              value = 0;
	            }
	            value = context_w.charCodeAt(0);
	            for (i=0 ; i<16 ; i++) {
	              context_data_val = (context_data_val << 1) | (value&1);
	              if (context_data_position == bitsPerChar-1) {
	                context_data_position = 0;
	                context_data.push(getCharFromInt(context_data_val));
	                context_data_val = 0;
	              } else {
	                context_data_position++;
	              }
	              value = value >> 1;
	            }
	          }
	          context_enlargeIn--;
	          if (context_enlargeIn == 0) {
	            context_enlargeIn = Math.pow(2, context_numBits);
	            context_numBits++;
	          }
	          delete context_dictionaryToCreate[context_w];
	        } else {
	          value = context_dictionary[context_w];
	          for (i=0 ; i<context_numBits ; i++) {
	            context_data_val = (context_data_val << 1) | (value&1);
	            if (context_data_position == bitsPerChar-1) {
	              context_data_position = 0;
	              context_data.push(getCharFromInt(context_data_val));
	              context_data_val = 0;
	            } else {
	              context_data_position++;
	            }
	            value = value >> 1;
	          }


	        }
	        context_enlargeIn--;
	        if (context_enlargeIn == 0) {
	          context_enlargeIn = Math.pow(2, context_numBits);
	          context_numBits++;
	        }
	        // Add wc to the dictionary.
	        context_dictionary[context_wc] = context_dictSize++;
	        context_w = String(context_c);
	      }
	    }

	    // Output the code for w.
	    if (context_w !== "") {
	      if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {
	        if (context_w.charCodeAt(0)<256) {
	          for (i=0 ; i<context_numBits ; i++) {
	            context_data_val = (context_data_val << 1);
	            if (context_data_position == bitsPerChar-1) {
	              context_data_position = 0;
	              context_data.push(getCharFromInt(context_data_val));
	              context_data_val = 0;
	            } else {
	              context_data_position++;
	            }
	          }
	          value = context_w.charCodeAt(0);
	          for (i=0 ; i<8 ; i++) {
	            context_data_val = (context_data_val << 1) | (value&1);
	            if (context_data_position == bitsPerChar-1) {
	              context_data_position = 0;
	              context_data.push(getCharFromInt(context_data_val));
	              context_data_val = 0;
	            } else {
	              context_data_position++;
	            }
	            value = value >> 1;
	          }
	        } else {
	          value = 1;
	          for (i=0 ; i<context_numBits ; i++) {
	            context_data_val = (context_data_val << 1) | value;
	            if (context_data_position == bitsPerChar-1) {
	              context_data_position = 0;
	              context_data.push(getCharFromInt(context_data_val));
	              context_data_val = 0;
	            } else {
	              context_data_position++;
	            }
	            value = 0;
	          }
	          value = context_w.charCodeAt(0);
	          for (i=0 ; i<16 ; i++) {
	            context_data_val = (context_data_val << 1) | (value&1);
	            if (context_data_position == bitsPerChar-1) {
	              context_data_position = 0;
	              context_data.push(getCharFromInt(context_data_val));
	              context_data_val = 0;
	            } else {
	              context_data_position++;
	            }
	            value = value >> 1;
	          }
	        }
	        context_enlargeIn--;
	        if (context_enlargeIn == 0) {
	          context_enlargeIn = Math.pow(2, context_numBits);
	          context_numBits++;
	        }
	        delete context_dictionaryToCreate[context_w];
	      } else {
	        value = context_dictionary[context_w];
	        for (i=0 ; i<context_numBits ; i++) {
	          context_data_val = (context_data_val << 1) | (value&1);
	          if (context_data_position == bitsPerChar-1) {
	            context_data_position = 0;
	            context_data.push(getCharFromInt(context_data_val));
	            context_data_val = 0;
	          } else {
	            context_data_position++;
	          }
	          value = value >> 1;
	        }


	      }
	      context_enlargeIn--;
	      if (context_enlargeIn == 0) {
	        context_enlargeIn = Math.pow(2, context_numBits);
	        context_numBits++;
	      }
	    }

	    // Mark the end of the stream
	    value = 2;
	    for (i=0 ; i<context_numBits ; i++) {
	      context_data_val = (context_data_val << 1) | (value&1);
	      if (context_data_position == bitsPerChar-1) {
	        context_data_position = 0;
	        context_data.push(getCharFromInt(context_data_val));
	        context_data_val = 0;
	      } else {
	        context_data_position++;
	      }
	      value = value >> 1;
	    }

	    // Flush the last char
	    while (true) {
	      context_data_val = (context_data_val << 1);
	      if (context_data_position == bitsPerChar-1) {
	        context_data.push(getCharFromInt(context_data_val));
	        break;
	      }
	      else context_data_position++;
	    }
	    return context_data.join('');
	  },

	  decompress: function (compressed) {
	    if (compressed == null) return "";
	    if (compressed == "") return null;
	    return LZString._decompress(compressed.length, 32768, function(index) { return compressed.charCodeAt(index); });
	  },

	  _decompress: function (length, resetValue, getNextValue) {
	    var dictionary = [],
	        next,
	        enlargeIn = 4,
	        dictSize = 4,
	        numBits = 3,
	        entry = "",
	        result = [],
	        i,
	        w,
	        bits, resb, maxpower, power,
	        c,
	        data = {val:getNextValue(0), position:resetValue, index:1};

	    for (i = 0; i < 3; i += 1) {
	      dictionary[i] = i;
	    }

	    bits = 0;
	    maxpower = Math.pow(2,2);
	    power=1;
	    while (power!=maxpower) {
	      resb = data.val & data.position;
	      data.position >>= 1;
	      if (data.position == 0) {
	        data.position = resetValue;
	        data.val = getNextValue(data.index++);
	      }
	      bits |= (resb>0 ? 1 : 0) * power;
	      power <<= 1;
	    }

	    switch (next = bits) {
	      case 0:
	          bits = 0;
	          maxpower = Math.pow(2,8);
	          power=1;
	          while (power!=maxpower) {
	            resb = data.val & data.position;
	            data.position >>= 1;
	            if (data.position == 0) {
	              data.position = resetValue;
	              data.val = getNextValue(data.index++);
	            }
	            bits |= (resb>0 ? 1 : 0) * power;
	            power <<= 1;
	          }
	        c = f(bits);
	        break;
	      case 1:
	          bits = 0;
	          maxpower = Math.pow(2,16);
	          power=1;
	          while (power!=maxpower) {
	            resb = data.val & data.position;
	            data.position >>= 1;
	            if (data.position == 0) {
	              data.position = resetValue;
	              data.val = getNextValue(data.index++);
	            }
	            bits |= (resb>0 ? 1 : 0) * power;
	            power <<= 1;
	          }
	        c = f(bits);
	        break;
	      case 2:
	        return "";
	    }
	    dictionary[3] = c;
	    w = c;
	    result.push(c);
	    while (true) {
	      if (data.index > length) {
	        return "";
	      }

	      bits = 0;
	      maxpower = Math.pow(2,numBits);
	      power=1;
	      while (power!=maxpower) {
	        resb = data.val & data.position;
	        data.position >>= 1;
	        if (data.position == 0) {
	          data.position = resetValue;
	          data.val = getNextValue(data.index++);
	        }
	        bits |= (resb>0 ? 1 : 0) * power;
	        power <<= 1;
	      }

	      switch (c = bits) {
	        case 0:
	          bits = 0;
	          maxpower = Math.pow(2,8);
	          power=1;
	          while (power!=maxpower) {
	            resb = data.val & data.position;
	            data.position >>= 1;
	            if (data.position == 0) {
	              data.position = resetValue;
	              data.val = getNextValue(data.index++);
	            }
	            bits |= (resb>0 ? 1 : 0) * power;
	            power <<= 1;
	          }

	          dictionary[dictSize++] = f(bits);
	          c = dictSize-1;
	          enlargeIn--;
	          break;
	        case 1:
	          bits = 0;
	          maxpower = Math.pow(2,16);
	          power=1;
	          while (power!=maxpower) {
	            resb = data.val & data.position;
	            data.position >>= 1;
	            if (data.position == 0) {
	              data.position = resetValue;
	              data.val = getNextValue(data.index++);
	            }
	            bits |= (resb>0 ? 1 : 0) * power;
	            power <<= 1;
	          }
	          dictionary[dictSize++] = f(bits);
	          c = dictSize-1;
	          enlargeIn--;
	          break;
	        case 2:
	          return result.join('');
	      }

	      if (enlargeIn == 0) {
	        enlargeIn = Math.pow(2, numBits);
	        numBits++;
	      }

	      if (dictionary[c]) {
	        entry = dictionary[c];
	      } else {
	        if (c === dictSize) {
	          entry = w + w.charAt(0);
	        } else {
	          return null;
	        }
	      }
	      result.push(entry);

	      // Add w+entry[0] to the dictionary.
	      dictionary[dictSize++] = w + entry.charAt(0);
	      enlargeIn--;

	      w = entry;

	      if (enlargeIn == 0) {
	        enlargeIn = Math.pow(2, numBits);
	        numBits++;
	      }

	    }
	  }
	};
	  return LZString;
	})();

	if (true) {
	  !(__WEBPACK_AMD_DEFINE_RESULT__ = function () { return LZString; }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else if( typeof module !== 'undefined' && module != null ) {
	  module.exports = LZString
	}


/***/ },
/* 211 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var immutable_class_1 = __webpack_require__(189);
	var general_1 = __webpack_require__(197);
	var essence_1 = __webpack_require__(209);
	var check;
	var LinkItem = (function () {
	    function LinkItem(parameters) {
	        var name = parameters.name;
	        general_1.verifyUrlSafeName(name);
	        this.name = name;
	        this.title = parameters.title || general_1.makeTitle(name);
	        this.description = parameters.description || '';
	        this.group = parameters.group;
	        this.dataSource = parameters.dataSource;
	        this.essence = parameters.essence;
	    }
	    LinkItem.isLinkItem = function (candidate) {
	        return immutable_class_1.isInstanceOf(candidate, LinkItem);
	    };
	    LinkItem.fromJS = function (parameters, context) {
	        if (!context)
	            throw new Error('must have context');
	        var dataSources = context.dataSources, visualizations = context.visualizations;
	        var dataSourceName = parameters.dataSource;
	        var dataSource = dataSources.find(function (d) { return d.name === dataSourceName; });
	        if (!dataSource)
	            throw new Error("can not find dataSource '" + dataSourceName + "'");
	        var essence = essence_1.Essence.fromJS(parameters.essence, { dataSource: dataSource, visualizations: visualizations }).updateWithTimeRange();
	        return new LinkItem({
	            name: parameters.name,
	            title: parameters.title,
	            description: parameters.description,
	            group: parameters.group,
	            dataSource: dataSource,
	            essence: essence
	        });
	    };
	    LinkItem.prototype.valueOf = function () {
	        return {
	            name: this.name,
	            title: this.title,
	            description: this.description,
	            group: this.group,
	            dataSource: this.dataSource,
	            essence: this.essence
	        };
	    };
	    LinkItem.prototype.toJS = function () {
	        return {
	            name: this.name,
	            title: this.title,
	            description: this.description,
	            group: this.group,
	            dataSource: this.dataSource.name,
	            essence: this.essence.toJS()
	        };
	    };
	    LinkItem.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    LinkItem.prototype.toString = function () {
	        return "[LinkItem: " + this.name + "]";
	    };
	    LinkItem.prototype.equals = function (other) {
	        return LinkItem.isLinkItem(other) &&
	            this.name === other.name &&
	            this.title === other.title &&
	            this.description === other.description &&
	            this.group === other.group &&
	            this.dataSource.equals(other.dataSource) &&
	            this.essence.equals(other.essence);
	    };
	    return LinkItem;
	}());
	exports.LinkItem = LinkItem;
	check = LinkItem;


/***/ },
/* 212 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var immutable_1 = __webpack_require__(178);
	var immutable_class_1 = __webpack_require__(189);
	var general_1 = __webpack_require__(197);
	var link_item_1 = __webpack_require__(211);
	var check;
	var LinkViewConfig = (function () {
	    function LinkViewConfig(parameters) {
	        this.title = parameters.title;
	        this.linkItems = parameters.linkItems;
	    }
	    LinkViewConfig.isLinkViewConfig = function (candidate) {
	        return immutable_class_1.isInstanceOf(candidate, LinkViewConfig);
	    };
	    LinkViewConfig.fromJS = function (parameters, context) {
	        return new LinkViewConfig({
	            title: parameters.title,
	            linkItems: immutable_1.List(parameters.linkItems.map(function (linkItem) { return link_item_1.LinkItem.fromJS(linkItem, context); }))
	        });
	    };
	    LinkViewConfig.prototype.valueOf = function () {
	        return {
	            title: this.title,
	            linkItems: this.linkItems
	        };
	    };
	    LinkViewConfig.prototype.toJS = function () {
	        return {
	            title: this.title,
	            linkItems: this.linkItems.toArray().map(function (linkItem) { return linkItem.toJS(); })
	        };
	    };
	    LinkViewConfig.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    LinkViewConfig.prototype.toString = function () {
	        return "[LinkViewConfig: " + this.title + "]";
	    };
	    LinkViewConfig.prototype.equals = function (other) {
	        return LinkViewConfig.isLinkViewConfig(other) &&
	            this.title === other.title &&
	            general_1.immutableListsEqual(this.linkItems, other.linkItems);
	    };
	    LinkViewConfig.prototype.defaultLinkItem = function () {
	        return this.linkItems.first();
	    };
	    LinkViewConfig.prototype.findByName = function (name) {
	        return this.linkItems.find(function (li) { return li.name === name; });
	    };
	    return LinkViewConfig;
	}());
	exports.LinkViewConfig = LinkViewConfig;
	check = LinkViewConfig;


/***/ },
/* 213 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var immutable_class_1 = __webpack_require__(189);
	var external_view_1 = __webpack_require__(214);
	var check;
	var Customization = (function () {
	    function Customization(parameters) {
	        this.title = parameters.title || null;
	        this.headerBackground = parameters.headerBackground || null;
	        this.customLogoSvg = parameters.customLogoSvg || null;
	        if (parameters.externalViews)
	            this.externalViews = parameters.externalViews;
	    }
	    Customization.isCustomization = function (candidate) {
	        return immutable_class_1.isInstanceOf(candidate, Customization);
	    };
	    Customization.fromJS = function (parameters) {
	        var value = {
	            title: parameters.title,
	            headerBackground: parameters.headerBackground,
	            customLogoSvg: parameters.customLogoSvg
	        };
	        var paramViewsJS = parameters.externalViews;
	        var externalViews = null;
	        if (Array.isArray(paramViewsJS)) {
	            externalViews = paramViewsJS.map(function (view, i) { return external_view_1.ExternalView.fromJS(view); });
	            value.externalViews = externalViews;
	        }
	        return new Customization(value);
	    };
	    Customization.prototype.valueOf = function () {
	        return {
	            title: this.title,
	            headerBackground: this.headerBackground,
	            customLogoSvg: this.customLogoSvg,
	            externalViews: this.externalViews
	        };
	    };
	    Customization.prototype.toJS = function () {
	        var js = {};
	        if (this.title)
	            js.title = this.title;
	        if (this.headerBackground)
	            js.headerBackground = this.headerBackground;
	        if (this.customLogoSvg)
	            js.customLogoSvg = this.customLogoSvg;
	        if (this.externalViews) {
	            js.externalViews = this.externalViews.map(function (view) { return view.toJS(); });
	        }
	        return js;
	    };
	    Customization.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    Customization.prototype.toString = function () {
	        return "[custom: (" + this.headerBackground + ") logo: " + Boolean(this.customLogoSvg) + ", externalViews: " + Boolean(this.externalViews) + "]";
	    };
	    Customization.prototype.equals = function (other) {
	        return Customization.isCustomization(other) &&
	            this.title === other.title &&
	            this.headerBackground === other.headerBackground &&
	            this.customLogoSvg === other.customLogoSvg &&
	            immutable_class_1.immutableArraysEqual(this.externalViews, other.externalViews);
	    };
	    return Customization;
	}());
	exports.Customization = Customization;
	check = Customization;


/***/ },
/* 214 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var immutable_class_1 = __webpack_require__(189);
	var check;
	var ExternalView = (function () {
	    function ExternalView(parameters) {
	        var title = parameters.title, linkGenerator = parameters.linkGenerator;
	        if (!title)
	            throw new Error("External view must have title");
	        if (typeof linkGenerator !== 'string')
	            throw new Error("Must provide link generator function");
	        this.title = title;
	        this.linkGenerator = linkGenerator;
	        var linkGeneratorFnRaw = null;
	        try {
	            linkGeneratorFnRaw = new Function('dataSource', 'timezone', 'filter', 'splits', linkGenerator);
	        }
	        catch (e) {
	            throw new Error("Error constructing link generator function: " + e.message);
	        }
	        this.linkGeneratorFn = function (dataSource, timezone, filter, splits) {
	            try {
	                return linkGeneratorFnRaw(dataSource, timezone, filter, splits);
	            }
	            catch (e) {
	                console.warn("Error with custom link generating function '" + title + "': " + e.message + " [" + linkGenerator + "]");
	                return null;
	            }
	        };
	        this.sameWindow = Boolean(parameters.sameWindow);
	    }
	    ExternalView.isExternalView = function (candidate) {
	        return immutable_class_1.isInstanceOf(candidate, ExternalView);
	    };
	    ExternalView.fromJS = function (parameters) {
	        var value = parameters;
	        return new ExternalView({
	            title: value.title,
	            linkGenerator: value.linkGenerator,
	            linkGeneratorFn: value.linkGeneratorFn,
	            sameWindow: value.sameWindow
	        });
	    };
	    ExternalView.prototype.toJS = function () {
	        var js = {
	            title: this.title,
	            linkGenerator: this.linkGenerator
	        };
	        if (this.sameWindow === true)
	            js.sameWindow = true;
	        return js;
	    };
	    ExternalView.prototype.valueOf = function () {
	        var value = {
	            title: this.title,
	            linkGenerator: this.linkGenerator
	        };
	        if (this.sameWindow === true)
	            value.sameWindow = true;
	        return value;
	    };
	    ExternalView.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    ExternalView.prototype.equals = function (other) {
	        return ExternalView.isExternalView(other) &&
	            this.title === other.title &&
	            this.linkGenerator === other.linkGenerator &&
	            this.sameWindow === other.sameWindow;
	    };
	    ExternalView.prototype.toString = function () {
	        return this.title + ": " + this.linkGenerator;
	    };
	    return ExternalView;
	}());
	exports.ExternalView = ExternalView;
	check = ExternalView;


/***/ },
/* 215 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var immutable_class_1 = __webpack_require__(189);
	var general_1 = __webpack_require__(197);
	var check;
	var DragPosition = (function () {
	    function DragPosition(parameters) {
	        this.insert = general_1.hasOwnProperty(parameters, 'insert') ? parameters.insert : null;
	        this.replace = general_1.hasOwnProperty(parameters, 'replace') ? parameters.replace : null;
	        if (this.insert == null && this.replace == null)
	            throw new Error('invalid drag position');
	    }
	    DragPosition.isDragPosition = function (candidate) {
	        return immutable_class_1.isInstanceOf(candidate, DragPosition);
	    };
	    DragPosition.calculateFromOffset = function (offset, numItems, itemWidth, itemGap) {
	        if (!numItems) {
	            return new DragPosition({
	                replace: 0
	            });
	        }
	        if (offset < 0) {
	            return new DragPosition({
	                insert: 0
	            });
	        }
	        var sectionWidth = itemWidth + itemGap;
	        var sectionNumber = Math.floor(offset / sectionWidth);
	        if (numItems <= sectionNumber) {
	            return new DragPosition({
	                replace: numItems
	            });
	        }
	        var offsetWithinSection = offset - sectionWidth * sectionNumber;
	        if (offsetWithinSection < itemWidth) {
	            return new DragPosition({
	                replace: sectionNumber
	            });
	        }
	        else {
	            return new DragPosition({
	                insert: sectionNumber + 1
	            });
	        }
	    };
	    DragPosition.fromJS = function (parameters) {
	        return new DragPosition(parameters);
	    };
	    DragPosition.prototype.valueOf = function () {
	        return {
	            insert: this.insert,
	            replace: this.replace
	        };
	    };
	    DragPosition.prototype.toJS = function () {
	        var js = {};
	        if (this.insert != null)
	            js.insert = this.insert;
	        if (this.replace != null)
	            js.replace = this.replace;
	        return js;
	    };
	    DragPosition.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    DragPosition.prototype.toString = function () {
	        if (this.insert != null) {
	            return "[insert " + this.insert + "]";
	        }
	        else {
	            return "[replace " + this.replace + "]";
	        }
	    };
	    DragPosition.prototype.equals = function (other) {
	        return DragPosition.isDragPosition(other) &&
	            this.insert === other.insert &&
	            this.replace === other.replace;
	    };
	    DragPosition.prototype.isInsert = function () {
	        return this.insert !== null;
	    };
	    DragPosition.prototype.isReplace = function () {
	        return this.replace !== null;
	    };
	    return DragPosition;
	}());
	exports.DragPosition = DragPosition;
	check = DragPosition;


/***/ },
/* 216 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(217);
	var React = __webpack_require__(5);
	var index_1 = __webpack_require__(192);
	var home_view_1 = __webpack_require__(219);
	var cube_view_1 = __webpack_require__(243);
	var link_view_1 = __webpack_require__(447);
	var index_2 = __webpack_require__(385);
	exports.HOME = "home";
	exports.CUBE = "cube";
	exports.LINK = "link";
	var PivotApplication = (function (_super) {
	    __extends(PivotApplication, _super);
	    function PivotApplication() {
	        _super.call(this);
	        this.hashUpdating = false;
	        this.state = {
	            ReactCSSTransitionGroupAsync: null,
	            SideDrawerAsync: null,
	            drawerOpen: false,
	            selectedDataSource: null,
	            viewType: null,
	            viewHash: null,
	            linkViewConfig: null,
	            showAboutModal: false
	        };
	        this.globalHashChangeListener = this.globalHashChangeListener.bind(this);
	    }
	    PivotApplication.prototype.componentWillMount = function () {
	        var _a = this.props, dataSources = _a.dataSources, linkViewConfig = _a.linkViewConfig;
	        if (!dataSources.size)
	            throw new Error('must have data sources');
	        var hash = window.location.hash;
	        var viewType = this.getViewTypeFromHash(hash);
	        var selectedDataSource = this.getDataSourceFromHash(dataSources, hash);
	        var viewHash = this.getViewHashFromHash(hash);
	        // If datasource does not exit bounce to home
	        if (viewType === exports.CUBE && !selectedDataSource) {
	            this.changeHash('');
	            viewType = exports.HOME;
	        }
	        if (viewType === exports.HOME) {
	            if (linkViewConfig) {
	                viewType = exports.LINK;
	            }
	            else if (dataSources.size === 1) {
	                viewType = exports.CUBE;
	                selectedDataSource = dataSources.first();
	            }
	        }
	        this.setState({
	            viewType: viewType,
	            viewHash: viewHash,
	            selectedDataSource: selectedDataSource,
	            linkViewConfig: linkViewConfig ? index_1.LinkViewConfig.fromJS(linkViewConfig, { dataSources: dataSources, visualizations: index_2.visualizations }) : null
	        });
	    };
	    PivotApplication.prototype.componentDidMount = function () {
	        var _this = this;
	        window.addEventListener('hashchange', this.globalHashChangeListener);
	        __webpack_require__.e/* nsure */(6, function (require) {
	            var Clipboard = __webpack_require__(453);
	            var clipboard = new Clipboard('.clipboard');
	            clipboard.on('success', function (e) {
	                // ToDo: do something here
	            });
	        });
	        __webpack_require__.e/* nsure */(7, function (require) {
	            _this.setState({
	                ReactCSSTransitionGroupAsync: __webpack_require__(462),
	                SideDrawerAsync: __webpack_require__(469).SideDrawer
	            });
	        });
	        __webpack_require__.e/* nsure */(8, function (require) {
	            _this.setState({
	                AboutModalAsync: __webpack_require__(472).AboutModal
	            });
	        });
	    };
	    PivotApplication.prototype.componentWillUnmount = function () {
	        window.removeEventListener('hashchange', this.globalHashChangeListener);
	    };
	    PivotApplication.prototype.globalHashChangeListener = function () {
	        if (this.hashUpdating)
	            return;
	        this.hashToState(window.location.hash);
	    };
	    PivotApplication.prototype.hashToState = function (hash) {
	        var dataSources = this.props.dataSources;
	        var viewType = this.getViewTypeFromHash(hash);
	        var viewHash = this.getViewHashFromHash(hash);
	        var newState = {
	            viewType: viewType,
	            viewHash: viewHash
	        };
	        if (viewType === exports.CUBE) {
	            var dataSource = this.getDataSourceFromHash(dataSources, hash);
	            if (!dataSource)
	                dataSource = dataSources.first();
	            newState.selectedDataSource = dataSource;
	        }
	        else {
	            newState.selectedDataSource = null;
	        }
	        this.setState(newState);
	        this.sideDrawerOpen(false);
	    };
	    PivotApplication.prototype.parseHash = function (hash) {
	        if (hash[0] === '#')
	            hash = hash.substr(1);
	        return hash.split('/');
	    };
	    PivotApplication.prototype.getViewTypeFromHash = function (hash) {
	        var viewType = this.parseHash(hash)[0];
	        if (!viewType || viewType === exports.HOME)
	            return exports.HOME;
	        if (viewType === exports.LINK)
	            return exports.LINK;
	        return exports.CUBE;
	    };
	    PivotApplication.prototype.getDataSourceFromHash = function (dataSources, hash) {
	        // can change header from hash
	        var parts = this.parseHash(hash);
	        var dataSourceName = parts.shift();
	        return dataSources.find(function (ds) { return ds.name === dataSourceName; });
	    };
	    PivotApplication.prototype.getViewHashFromHash = function (hash) {
	        var parts = this.parseHash(hash);
	        if (parts.length < 2)
	            return null;
	        parts.shift();
	        return parts.join('/');
	    };
	    PivotApplication.prototype.sideDrawerOpen = function (drawerOpen) {
	        this.setState({ drawerOpen: drawerOpen });
	    };
	    PivotApplication.prototype.changeHash = function (hash, force) {
	        var _this = this;
	        if (force === void 0) { force = false; }
	        this.hashUpdating = true;
	        window.location.hash = "#" + hash;
	        setTimeout(function () {
	            _this.hashUpdating = false;
	        }, 5);
	        if (force)
	            this.hashToState(hash);
	    };
	    PivotApplication.prototype.updateViewHash = function (viewHash, force) {
	        if (force === void 0) { force = false; }
	        var viewType = this.state.viewType;
	        var newHash;
	        if (viewType === exports.CUBE) {
	            newHash = this.state.selectedDataSource.name + "/" + viewHash;
	        }
	        else if (viewType === exports.LINK) {
	            newHash = viewType + "/" + viewHash;
	        }
	        else {
	            newHash = viewType;
	        }
	        this.changeHash(newHash, force);
	    };
	    PivotApplication.prototype.getUrlPrefix = function (baseOnly) {
	        if (baseOnly === void 0) { baseOnly = false; }
	        var viewType = this.state.viewType;
	        var url = window.location;
	        var urlBase = url.origin + url.pathname;
	        if (baseOnly)
	            return urlBase;
	        var newPrefix;
	        if (viewType === exports.CUBE) {
	            newPrefix = this.state.selectedDataSource.name + "/";
	        }
	        else {
	            newPrefix = viewType;
	        }
	        return urlBase + '#' + newPrefix;
	    };
	    PivotApplication.prototype.openAboutModal = function () {
	        this.setState({
	            showAboutModal: true
	        });
	    };
	    PivotApplication.prototype.onAboutModalClose = function () {
	        this.setState({
	            showAboutModal: false
	        });
	    };
	    PivotApplication.prototype.renderAboutModal = function () {
	        var _a = this.state, AboutModalAsync = _a.AboutModalAsync, showAboutModal = _a.showAboutModal;
	        if (!AboutModalAsync || !showAboutModal)
	            return null;
	        return React.createElement(AboutModalAsync, {onClose: this.onAboutModalClose.bind(this)});
	    };
	    PivotApplication.prototype.render = function () {
	        var _a = this.props, dataSources = _a.dataSources, maxFilters = _a.maxFilters, maxSplits = _a.maxSplits, user = _a.user, customization = _a.customization;
	        var _b = this.state, viewType = _b.viewType, viewHash = _b.viewHash, selectedDataSource = _b.selectedDataSource, ReactCSSTransitionGroupAsync = _b.ReactCSSTransitionGroupAsync, drawerOpen = _b.drawerOpen, SideDrawerAsync = _b.SideDrawerAsync, linkViewConfig = _b.linkViewConfig;
	        var sideDrawer = null;
	        if (drawerOpen && SideDrawerAsync) {
	            var closeSideDrawer = this.sideDrawerOpen.bind(this, false);
	            sideDrawer = React.createElement(SideDrawerAsync, {key: 'drawer', selectedDataSource: selectedDataSource, dataSources: dataSources, onOpenAbout: this.openAboutModal.bind(this), onClose: closeSideDrawer, customization: customization});
	        }
	        if (ReactCSSTransitionGroupAsync) {
	            var sideDrawerTransition = React.createElement(ReactCSSTransitionGroupAsync, {component: "div", className: "side-drawer-container", transitionName: "side-drawer", transitionEnterTimeout: 500, transitionLeaveTimeout: 300}, sideDrawer);
	        }
	        var view = null;
	        switch (viewType) {
	            case exports.HOME:
	                view = React.createElement(home_view_1.HomeView, {user: user, dataSources: dataSources, onNavClick: this.sideDrawerOpen.bind(this, true), onOpenAbout: this.openAboutModal.bind(this), customization: customization});
	                break;
	            case exports.CUBE:
	                view = React.createElement(cube_view_1.CubeView, {user: user, dataSource: selectedDataSource, hash: viewHash, updateViewHash: this.updateViewHash.bind(this), getUrlPrefix: this.getUrlPrefix.bind(this), maxFilters: maxFilters, maxSplits: maxSplits, onNavClick: this.sideDrawerOpen.bind(this, true), customization: customization});
	                break;
	            case exports.LINK:
	                view = React.createElement(link_view_1.LinkView, {user: user, linkViewConfig: linkViewConfig, hash: viewHash, updateViewHash: this.updateViewHash.bind(this), changeHash: this.changeHash.bind(this), getUrlPrefix: this.getUrlPrefix.bind(this), onNavClick: this.sideDrawerOpen.bind(this, true), customization: customization});
	                break;
	            default:
	                throw new Error('unknown view');
	        }
	        return React.createElement("main", {className: 'pivot-application'}, view, sideDrawerTransition, this.renderAboutModal());
	    };
	    return PivotApplication;
	}(React.Component));
	exports.PivotApplication = PivotApplication;


/***/ },
/* 217 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(218);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./pivot-application.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./pivot-application.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 218 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".pivot-application{position:absolute;top:0;left:0;width:100%;height:100%;overflow:hidden;background:#e1e1e1}.pivot-application .not-implemented{display:none}.pivot-application .home-view,.pivot-application .cube-view,.pivot-application .link-view{position:absolute;top:0;bottom:0;left:0;right:0}.pivot-application .side-drawer-container{position:absolute;left:0;top:0;bottom:0;z-index:80}\n", ""]);

	// exports


/***/ },
/* 219 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(220);
	var React = __webpack_require__(5);
	var constants_1 = __webpack_require__(222);
	var home_header_bar_1 = __webpack_require__(223);
	var golden_center_1 = __webpack_require__(230);
	var nav_logo_1 = __webpack_require__(233);
	var nav_list_1 = __webpack_require__(237);
	var HomeView = (function (_super) {
	    __extends(HomeView, _super);
	    function HomeView() {
	        _super.apply(this, arguments);
	    }
	    HomeView.prototype.render = function () {
	        var _a = this.props, user = _a.user, dataSources = _a.dataSources, onNavClick = _a.onNavClick, onOpenAbout = _a.onOpenAbout, customization = _a.customization;
	        var navLinks = dataSources.toArray().map(function (ds) {
	            return {
	                name: ds.name,
	                title: ds.title,
	                href: '#' + ds.name
	            };
	        });
	        var infoAndFeedback = [{
	                name: 'info',
	                title: constants_1.STRINGS.infoAndFeedback,
	                onClick: onOpenAbout
	            }];
	        return React.createElement("div", {className: "home-view"}, React.createElement(home_header_bar_1.HomeHeaderBar, {user: user, onNavClick: onNavClick, customization: customization}), React.createElement("div", {className: "container"}, React.createElement(golden_center_1.GoldenCenter, null, React.createElement("div", {className: "home"}, React.createElement(nav_logo_1.NavLogo, null), React.createElement(nav_list_1.NavList, {title: "Data Cubes", navLinks: navLinks, iconSvg: __webpack_require__(242)}), React.createElement(nav_list_1.NavList, {navLinks: infoAndFeedback})))));
	    };
	    return HomeView;
	}(React.Component));
	exports.HomeView = HomeView;


/***/ },
/* 220 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(221);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./home-view.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./home-view.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 221 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".home-view .home{background:#fff;border-radius:2px;box-shadow:0 3px 10px 0 rgba(0,0,0,0.26),0 0 3px 0 rgba(0,0,0,0.16)}.home-view .home-header-bar{position:absolute;top:0;left:0;right:0;height:42px}.home-view .container{position:absolute;top:42px;bottom:0;left:0;right:0;overflow:scroll}.home-view .golden-center{width:100%;min-height:100%}.home-view .home{width:460px}.home-view .home .items .item .icon svg path{fill:#1ea3e6}\n", ""]);

	// exports


/***/ },
/* 222 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var plywood_1 = __webpack_require__(188);
	exports.TITLE_HEIGHT = 36;
	// Core = filter + split
	exports.DIMENSION_HEIGHT = 27;
	exports.MEASURE_HEIGHT = 27;
	exports.CORE_ITEM_WIDTH = 192;
	exports.CORE_ITEM_GAP = 8;
	exports.BAR_TITLE_WIDTH = 66;
	exports.PIN_TITLE_HEIGHT = 36;
	exports.PIN_ITEM_HEIGHT = 25;
	exports.PIN_PADDING_BOTTOM = 12;
	exports.VIS_H_PADDING = 10;
	exports.SPLIT = 'SPLIT';
	exports.SEGMENT = 'SEGMENT';
	exports.TIME_SEGMENT = 'TIME';
	exports.TIME_SORT_ACTION = new plywood_1.SortAction({
	    expression: plywood_1.$(exports.TIME_SEGMENT),
	    direction: plywood_1.SortAction.ASCENDING
	});
	exports.MAX_SEARCH_LENGTH = 300;
	exports.SEARCH_WAIT = 900;
	exports.STRINGS = {
	    dimensions: 'Dimensions',
	    measures: 'Measures',
	    filter: 'Filter',
	    split: 'Split',
	    subsplit: 'Split',
	    sortBy: 'Sort by',
	    limit: 'Limit',
	    pin: 'Pin',
	    pinboard: 'Pinboard',
	    pinboardPlaceholder: 'Click or drag dimensions to pin them',
	    granularity: 'Granularity',
	    relative: 'Relative',
	    specific: 'Specific',
	    latest: 'Latest',
	    current: 'Current',
	    previous: 'Previous',
	    start: 'Start',
	    end: 'End',
	    ok: 'OK',
	    select: 'Select',
	    cancel: 'Cancel',
	    close: 'Close',
	    queryError: 'Query error',
	    autoUpdate: 'Auto update',
	    download: 'Download',
	    copyUrl: 'Copy URL',
	    viewRawData: 'View raw data',
	    rawData: 'Raw Data',
	    copySpecificUrl: 'Copy URL - fixed time',
	    logout: 'Logout',
	    infoAndFeedback: 'Info & Feedback',
	    copyValue: 'Copy value',
	    goToUrl: 'Go to URL',
	    openIn: 'Open in',
	    exportToCSV: 'Export to CSV',
	    splitDelimiter: 'by'
	};


/***/ },
/* 223 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(224);
	var React = __webpack_require__(5);
	var svg_icon_1 = __webpack_require__(174);
	var HomeHeaderBar = (function (_super) {
	    __extends(HomeHeaderBar, _super);
	    function HomeHeaderBar() {
	        _super.apply(this, arguments);
	    }
	    HomeHeaderBar.prototype.render = function () {
	        var _a = this.props, user = _a.user, onNavClick = _a.onNavClick, customization = _a.customization;
	        // One day
	        //<div className="icon-button" onClick={this.handleSettings.bind(this)}>
	        //  <SvgIcon className="not-implemented" svg={require('../../icons/full-settings.svg')}/>
	        //</div>
	        var userButton = null;
	        if (user) {
	            userButton = React.createElement("div", {className: "icon-button"}, React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(226)}));
	        }
	        var headerStyle = null;
	        if (customization && customization.headerBackground) {
	            headerStyle = {
	                background: customization.headerBackground
	            };
	        }
	        return React.createElement("header", {className: "home-header-bar", style: headerStyle}, React.createElement("div", {className: "left-bar", onClick: onNavClick}, React.createElement("div", {className: "menu-icon"}, React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(227)})), React.createElement("div", {className: "title"}, "Home")), React.createElement("div", {className: "right-bar"}, React.createElement("a", {className: "icon-button help", href: "https://groups.google.com/forum/#!forum/imply-user-group", target: "_blank"}, React.createElement(svg_icon_1.SvgIcon, {className: "help-icon", svg: __webpack_require__(228)})), React.createElement("a", {className: "icon-button github", href: "https://github.com/implydata/pivot", target: "_blank"}, React.createElement(svg_icon_1.SvgIcon, {className: "github-icon", svg: __webpack_require__(229)})), userButton));
	    };
	    return HomeHeaderBar;
	}(React.Component));
	exports.HomeHeaderBar = HomeHeaderBar;


/***/ },
/* 224 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(225);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./home-header-bar.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./home-header-bar.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 225 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".home-header-bar{background:#1ea3e6;color:#fff;font-size:16px;z-index:11}.home-header-bar .left-bar{display:inline-block;height:100%;padding-left:12px;padding-right:12px;cursor:pointer}.home-header-bar .left-bar .menu-icon{display:inline-block;padding:11px 5px}.home-header-bar .left-bar .menu-icon svg path{fill:#fff}.home-header-bar .left-bar .title{display:inline-block;font-size:15px;margin-top:13px;padding:0 7px}.home-header-bar .right-bar{position:absolute;top:0;right:12px}.home-header-bar .right-bar .text-button{display:inline-block;font-size:12px;text-transform:uppercase;height:42px;line-height:42px;padding:0 5px;margin-right:2px;cursor:pointer}.home-header-bar .right-bar .icon-button{display:inline-block;padding:11px 5px;cursor:pointer}.home-header-bar .right-bar .icon-button:not(:first-child){margin-left:3px}.home-header-bar .right-bar .icon-button:active:after{display:none}.home-header-bar .right-bar .icon-button.help:after{content:'Google Groups'}.home-header-bar .right-bar .icon-button.auto-refresh:after{content:'Refresh options'}.home-header-bar .right-bar .icon-button.hiluk:after{content:'Share link'}.home-header-bar .right-bar .icon-button.user:after{content:'User'}.home-header-bar .right-bar .icon-button.github:after{content:'Pivot on Github'}.home-header-bar .right-bar .icon-button:hover:after{opacity:1}.home-header-bar .right-bar .icon-button:after{opacity:0;pointer-events:none;position:absolute;display:block;bottom:-24px;right:0;padding:5px;color:#000;font-size:12px;white-space:nowrap}.home-header-bar .right-bar .icon-button svg path{fill:#fff}.home-header-bar svg{height:19px;width:19px}.home-header-bar .right-bar .icon-button:after{background:#fff;border-radius:2px;box-shadow:0 3px 10px 0 rgba(0,0,0,0.26),0 0 3px 0 rgba(0,0,0,0.16)}\n", ""]);

	// exports


/***/ },
/* 226 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M9.5,10.5 C11.295625,10.5 12.75,9.045625 12.75,7.25 C12.75,5.454375 11.295625,4 9.5,4 C7.704375,4 6.25,5.454375 6.25,7.25 C6.25,9.045625 7.704375,10.5 9.5,10.5 L9.5,10.5 Z M9.5,12.125 C7.330625,12.125 3,13.21375 3,15.375 L3,17 L16,17 L16,15.375 C16,13.21375 11.669375,12.125 9.5,12.125 L9.5,12.125 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 227 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M2,4 L17,4 L17,6 L2,6 L2,4 Z M2,8 L17,8 L17,10 L2,10 L2,8 Z M2,12 L17,12 L17,14 L2,14 L2,12 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 228 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11,18 L13,18 L13,16 L11,16 L11,18 L11,18 Z M12,2 C6.48,2 2,6.48 2,12 C2,17.52 6.48,22 12,22 C17.52,22 22,17.52 22,12 C22,6.48 17.52,2 12,2 L12,2 Z M12,20 C7.59,20 4,16.41 4,12 C4,7.59 7.59,4 12,4 C16.41,4 20,7.59 20,12 C20,16.41 16.41,20 12,20 L12,20 Z M12,6 C9.79,6 8,7.79 8,10 L10,10 C10,8.9 10.9,8 12,8 C13.1,8 14,8.9 14,10 C14,12 11,11.75 11,15 L13,15 C13,12.75 16,12.5 16,10 C16,7.79 14.21,6 12,6 L12,6 Z\" fill=\"#FFFFFF\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 229 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12,2 C6.48,2 2,6.48 2,12 C2,17.52 6.48,22 12,22 C17.52,22 22,17.52 22,12 C22,6.48 17.52,2 12,2 Z M17.6560732,17.6550189 C16.9209142,18.3901407 16.0653619,18.9671065 15.1130037,19.3699185 C14.8711007,19.4722306 14.62544,19.562042 14.3763194,19.6395016 L14.3763194,18.2120804 C14.3763194,17.4617793 14.1190137,16.9099264 13.6043281,16.5564847 C13.9268158,16.5254934 14.2228512,16.4820759 14.4925831,16.4262693 C14.762315,16.3704627 15.0475983,16.2898407 15.3482843,16.1844407 C15.6490447,16.0790406 15.9187765,15.9534758 16.15748,15.8077461 C16.3962578,15.6620165 16.6256601,15.4729065 16.8457614,15.240379 C17.065937,15.0078515 17.2503592,14.7443328 17.3991768,14.4497856 C17.5479944,14.1552383 17.6658579,13.8017965 17.7526186,13.3894602 C17.8394536,12.9771238 17.882834,12.5228953 17.882834,12.0268491 C17.882834,11.0657478 17.5697218,10.2472511 16.9434229,9.57135875 C17.2287062,8.82727077 17.1976778,8.01807509 16.8504119,7.14377171 L16.6178844,7.11586841 C16.456715,7.09726621 16.1667811,7.16546188 15.7482316,7.32049261 C15.3296821,7.47552334 14.8599766,7.729741 14.339115,8.08318279 C13.6012773,7.87855859 12.835462,7.7762465 12.0417805,7.7762465 C11.241886,7.7762465 10.4791958,7.87855859 9.75371,8.08318279 C9.42508355,7.85995639 9.11349671,7.67549698 8.81894948,7.52976735 C8.52440225,7.38403772 8.28878679,7.28485079 8.1120659,7.23213216 C7.935345,7.17941353 7.77101317,7.14685968 7.61910761,7.13447061 C7.46720205,7.12208155 7.3695405,7.11895638 7.32612297,7.12516951 C7.28270544,7.13138265 7.25171417,7.13755858 7.23311197,7.14377171 C6.88588332,8.02428822 6.85485485,8.8334839 7.14010097,9.57135875 C6.51383933,10.2472511 6.2006899,11.0657478 6.2006899,12.0268491 C6.2006899,12.5228953 6.24410743,12.9771238 6.3309053,13.3894602 C6.41770316,13.8017965 6.53552949,14.1552383 6.68434709,14.4497856 C6.83316468,14.7443328 7.01762409,15.0078515 7.23776252,15.240379 C7.45790095,15.4729065 7.68730327,15.6620165 7.9260439,15.8077461 C8.16478453,15.9534758 8.43451642,16.0790406 8.73523958,16.1844407 C9.03596274,16.2898407 9.32120886,16.3704627 9.59094076,16.4262693 C9.86067265,16.4820759 10.1567453,16.5254934 10.4791958,16.5564847 C9.97072326,16.9037133 9.7165056,17.4556034 9.7165056,18.2120804 L9.7165056,19.6673305 C9.4356496,19.5837322 9.15881166,19.4849545 8.88684751,19.3699185 C7.93452651,18.9671065 7.07893694,18.3901407 6.34381522,17.6550189 C5.60873071,16.9199344 5.03172768,16.0643077 4.62895286,15.1119495 C4.212338,14.1268514 4.00105422,13.0794731 4.00105422,11.9989458 C4.00105422,10.9184184 4.212338,9.87104018 4.62902727,8.8858677 C5.0318393,7.9335467 5.60880512,7.07795713 6.34388963,6.34283541 C7.07897415,5.60771369 7.93460091,5.03074787 8.88692192,4.62797305 C9.8720944,4.21128378 10.9194726,4 12,4 C13.0805274,4 14.1279056,4.21128378 15.1131153,4.62797305 C16.0654735,5.03078508 16.9210259,5.6077509 17.6561848,6.34283541 C18.3912693,7.07791993 18.9682351,7.9335467 19.3710099,8.8858677 C19.7876248,9.87104018 19.9989458,10.9184184 19.9989458,11.9989458 C19.9989458,13.0794731 19.7876248,14.1268514 19.3709727,15.1120239 C18.9681979,16.0643077 18.3911577,16.9199716 17.6560732,17.6550189 Z\" fill=\"#FFFFFF\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 230 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(231);
	var React = __webpack_require__(5);
	var ReactDOM = __webpack_require__(36);
	var GoldenCenter = (function (_super) {
	    __extends(GoldenCenter, _super);
	    function GoldenCenter() {
	        _super.call(this);
	        this.state = {
	            top: 0
	        };
	        this.globalResizeListener = this.globalResizeListener.bind(this);
	    }
	    GoldenCenter.prototype.componentDidMount = function () {
	        window.addEventListener('resize', this.globalResizeListener);
	        this.globalResizeListener();
	    };
	    GoldenCenter.prototype.componentWillUnmount = function () {
	        window.removeEventListener('resize', this.globalResizeListener);
	    };
	    GoldenCenter.prototype.globalResizeListener = function () {
	        var myNode = ReactDOM.findDOMNode(this);
	        if (!myNode)
	            return;
	        var childNode = myNode.firstChild;
	        if (!childNode)
	            return;
	        var myRect = myNode.getBoundingClientRect();
	        var childRect = childNode.getBoundingClientRect();
	        var _a = this.props, topRatio = _a.topRatio, minPadding = _a.minPadding;
	        var top = Math.max((myRect.height - childRect.height) * topRatio, minPadding);
	        this.setState({ top: top });
	    };
	    GoldenCenter.prototype.render = function () {
	        var _a = this.props, minPadding = _a.minPadding, children = _a.children;
	        var top = this.state.top;
	        return React.createElement("div", {className: "golden-center", style: { paddingTop: top, paddingBottom: minPadding }}, React.Children.only(children));
	    };
	    GoldenCenter.defaultProps = {
	        topRatio: 0.618 / 1.618,
	        minPadding: 50
	    };
	    return GoldenCenter;
	}(React.Component));
	exports.GoldenCenter = GoldenCenter;


/***/ },
/* 231 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(232);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./golden-center.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./golden-center.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 232 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".golden-center>div{margin:auto}\n", ""]);

	// exports


/***/ },
/* 233 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(234);
	var React = __webpack_require__(5);
	var svg_icon_1 = __webpack_require__(174);
	var NavLogo = (function (_super) {
	    __extends(NavLogo, _super);
	    function NavLogo() {
	        _super.call(this);
	        // this.state = {};
	    }
	    NavLogo.prototype.render = function () {
	        var _a = this.props, onClick = _a.onClick, customLogoSvg = _a.customLogoSvg;
	        var svg = customLogoSvg || __webpack_require__(236);
	        return React.createElement("div", {className: "nav-logo", onClick: onClick}, React.createElement("div", {className: "logo"}, React.createElement(svg_icon_1.SvgIcon, {svg: svg})));
	    };
	    return NavLogo;
	}(React.Component));
	exports.NavLogo = NavLogo;


/***/ },
/* 234 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(235);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./nav-logo.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./nav-logo.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 235 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".nav-logo{padding-left:18px;padding-right:18px}.nav-logo .logo{height:60px;overflow:hidden}.nav-logo .logo svg{width:86px;height:60px}\n", ""]);

	// exports


/***/ },
/* 236 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 191 69\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fill-rule=\"evenodd\"><path d=\"M32,33.6000004 L64,51.0310003 L32,68.4620002 L0,51.0310003 L32,33.6000004 L32,33.6000004 Z\" fill=\"#BE8BDE\"/><path d=\"M64,51.0310003 L32,68.4620002 L0,51.0310003 L32,33.6000004 L64,51.0310003 Z M32.0432389,37.327641 L57.1999998,51.0310003 L32.0432389,64.7343596 L6.886478,51.0310003 L32.0432389,37.327641 Z\" fill=\"#888888\"/><path d=\"M2.58248331,19.4377255 L2.13382541,48.4568149 L31.3212052,64.3824016 L31.9578584,45.2026033 L33.227274,64.2280781 L61.6527653,48.707742 L61.6527654,19.3095811 L64,18.0309984 L32,0.599998474 L0,18.0309984 L2.58248331,19.4377255 Z\" fill=\"#E8E8E8\"/><path d=\"M0,18.0309984 L32,35.4619983 L64,18.0309984 L32,0.599998474 L0,18.0309984 Z M31.9567611,4.3276391 L6.80000019,18.0309984 L31.9567611,31.7343577 L57.113522,18.0309984 L31.9567611,4.3276391 Z\" fill=\"#888888\"/><path d=\"M14.4407777,11.6400614 L13.5836349,13.1246763 L42.023725,29.54457 L42.8808678,28.059955 L14.4407777,11.6400614 Z\" opacity=\".5\" fill=\"#888888\"/><path d=\"M48.9767762,7.21000004 L50.4001775,8.36768558 L23.1390484,24.1069058 L22.2819055,22.6222908 L48.9767762,7.21000004 Z\" opacity=\".4\" fill=\"#888888\" transform=\"matrix(-1 0 0 1 72.682 0)\"/><path fill=\"#888888\" d=\"M30 33H34V66H30zM0 18H4V51H0zM60 18H64V51H60z\"/><path opacity=\".5\" fill=\"#888888\" d=\"M11 24H12.8V56H11zM61.5228839 28.1965524L62.3539861 29.6959005 33.631661 45.6169453 32.8005588 44.1175972 61.5228839 28.1965524zM20 27H21.8V59H20zM61.5228839 38.1965524L62.3539861 39.6959005 33.631661 55.6169453 32.8005588 54.1175972 61.5228839 38.1965524z\"/><path d=\"M106.530784,28.7154738 C106.530784,31.8915565 105.490598,34.3255922 103.410194,36.0176537 C101.329791,37.7097153 98.3687272,38.5557334 94.5269153,38.5557334 L91.3647177,38.5557334 L91.3647177,49.9354839 L86.3925781,49.9354839 L86.3925781,19.5201361 L95.1510333,19.5201361 C98.9512371,19.5201361 101.79788,20.2968084 103.691047,21.8501764 C105.584214,23.4035444 106.530784,25.691954 106.530784,28.7154738 L106.530784,28.7154738 Z M91.3647177,34.3741431 L94.006817,34.3741431 C96.5587787,34.3741431 98.4311138,33.9303304 99.6238785,33.0426915 C100.816643,32.1550527 101.413017,30.7681378 101.413017,28.8819052 C101.413017,27.1343663 100.879054,25.8306663 99.8111139,24.9707661 C98.7431734,24.110866 97.0788756,23.6809224 94.8181704,23.6809224 L91.3647177,23.6809224 L91.3647177,34.3741431 Z M116.974357,49.9354839 L112.085433,49.9354839 L112.085433,26.9263357 L116.974357,26.9263357 L116.974357,49.9354839 Z M111.794178,20.8307838 C111.794178,19.9570143 112.033421,19.2843606 112.511914,18.8128024 C112.990407,18.3412443 113.673462,18.1054688 114.561101,18.1054688 C115.421001,18.1054688 116.090188,18.3412443 116.568681,18.8128024 C117.047174,19.2843606 117.286416,19.9570143 117.286416,20.8307838 C117.286416,21.6629452 117.047174,22.3182625 116.568681,22.7967553 C116.090188,23.2752481 115.421001,23.5144909 114.561101,23.5144909 C113.673462,23.5144909 112.990407,23.2752481 112.511914,22.7967553 C112.033421,22.3182625 111.794178,21.6629452 111.794178,20.8307838 L111.794178,20.8307838 Z M129.207069,49.9354839 L120.469418,26.9263357 L125.628793,26.9263357 L130.309677,40.3032636 C131.1141,42.5500994 131.59952,44.366958 131.765953,45.7538936 L131.932384,45.7538936 C132.057208,44.7552999 132.542628,42.9384414 133.388659,40.3032636 L138.069544,26.9263357 L143.270527,26.9263357 L134.491268,49.9354839 L129.207069,49.9354839 Z M167.174244,38.3893019 C167.174244,42.1478977 166.210338,45.0812227 164.282497,47.1893649 C162.354657,49.2975072 159.670977,50.3515625 156.231376,50.3515625 C154.081626,50.3515625 152.181552,49.8661423 150.531099,48.8952873 C148.880645,47.9244323 147.611618,46.5305828 146.723979,44.7136971 C145.83634,42.8968113 145.392528,40.7887007 145.392528,38.3893019 C145.392528,34.6584449 146.349499,31.7459236 148.26347,29.6516507 C150.177442,27.5573778 152.874991,26.5102571 156.3562,26.5102571 C159.684845,26.5102571 162.319984,27.5816488 164.261694,29.7244645 C166.203404,31.8672801 167.174244,34.7555304 167.174244,38.3893019 L167.174244,38.3893019 Z M150.427079,38.3893019 C150.427079,43.7012656 152.389564,46.3572077 156.314592,46.3572077 C160.198012,46.3572077 162.139693,43.7012656 162.139693,38.3893019 C162.139693,33.1328156 160.184143,30.5046119 156.272984,30.5046119 C154.220319,30.5046119 152.732853,31.1842002 151.810541,32.5433972 C150.888228,33.9025942 150.427079,35.8512096 150.427079,38.3893019 L150.427079,38.3893019 Z M181.362525,46.3988155 C182.55529,46.3988155 183.748037,46.211582 184.940801,45.8371094 L184.940801,49.5194052 C184.399896,49.7551843 183.702972,49.9528197 182.850006,50.1123173 C181.997041,50.2718149 181.112883,50.3515625 180.197505,50.3515625 C175.56514,50.3515625 173.248992,47.9105923 173.248992,43.0285786 L173.248992,30.6294355 L170.107598,30.6294355 L170.107598,28.4658266 L173.477835,26.6766885 L175.14215,21.8085685 L178.15872,21.8085685 L178.15872,26.9263357 L184.711958,26.9263357 L184.711958,30.6294355 L178.15872,30.6294355 L178.15872,42.9453629 C178.15872,44.1242582 178.453439,44.9945473 179.042887,45.5562563 C179.632335,46.1179653 180.40554,46.3988155 181.362525,46.3988155 L181.362525,46.3988155 Z\" fill=\"#777777\"/></g></svg>"

/***/ },
/* 237 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(238);
	var React = __webpack_require__(5);
	var dom_1 = __webpack_require__(240);
	var svg_icon_1 = __webpack_require__(174);
	var NavList = (function (_super) {
	    __extends(NavList, _super);
	    function NavList() {
	        _super.apply(this, arguments);
	    }
	    NavList.prototype.renderIcon = function (iconSvg) {
	        if (!iconSvg)
	            return null;
	        return React.createElement("span", {className: "icon"}, React.createElement(svg_icon_1.SvgIcon, {svg: iconSvg}));
	    };
	    NavList.prototype.renderNavList = function () {
	        var _this = this;
	        var _a = this.props, navLinks = _a.navLinks, iconSvg = _a.iconSvg, selected = _a.selected;
	        return navLinks.map(function (navLink) {
	            return React.createElement(navLink.href ? 'a' : 'div', {
	                className: dom_1.classNames('item', { selected: selected && selected === navLink.name }),
	                key: navLink.name,
	                href: navLink.href,
	                target: navLink.newTab ? '_blank' : null,
	                onClick: navLink.onClick
	            }, _this.renderIcon(iconSvg), navLink.title);
	        });
	    };
	    NavList.prototype.render = function () {
	        var title = this.props.title;
	        var className = "nav-list";
	        var titleSection = null;
	        if (title) {
	            titleSection = React.createElement("div", {className: "group-title"}, title);
	        }
	        else {
	            className += " no-title";
	        }
	        return React.createElement("div", {className: className}, titleSection, React.createElement("div", {className: "items"}, this.renderNavList()));
	    };
	    ;
	    return NavList;
	}(React.Component));
	exports.NavList = NavList;


/***/ },
/* 238 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(239);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./nav-list.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./nav-list.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 239 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".nav-list{border-top:1px solid #ddd;padding-bottom:18px}.nav-list:first-child{border-top:0}.nav-list.no-title{padding-top:8px}.nav-list svg{height:19px;width:19px}.nav-list .group-title{padding-left:18px;text-transform:uppercase;font-size:12px;padding-top:15px;padding-bottom:12px;color:#999}.nav-list .group-title .icons{position:absolute;padding-right:18px;top:1px;right:0;cursor:pointer}.nav-list .group-title .icons .icon{display:inline-block;padding:10px 1px}.nav-list .group-title .icons .icon:not(:first-child){margin-left:4px}.nav-list .group-title .icons .icon:hover svg path{fill:#888}.nav-list .items .item{display:block;line-height:34px;padding-left:18px;padding-right:18px;cursor:pointer}.nav-list .items .item .icon{display:inline-block;top:7px;left:0;margin-right:9px}.nav-list .items .item:hover{background:rgba(30,163,230,0.12)}.nav-list .items .selected{background:rgba(30,163,230,0.14)}.nav-list .items .selected .icon svg path{fill:#1ea3e6}\n", ""]);

	// exports


/***/ },
/* 240 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var d3 = __webpack_require__(241);
	var general_1 = __webpack_require__(197);
	var DRAG_GHOST_OFFSET_X = -12;
	var DRAG_GHOST_OFFSET_Y = -12;
	function convertDOMStringListToArray(list) {
	    var length = list.length;
	    var array = [];
	    for (var i = 0; i < length; i++) {
	        array.push(list.item(i));
	    }
	    return array;
	}
	function isInside(child, parent) {
	    var altParent;
	    while (child) {
	        if (child === parent)
	            return true;
	        var dataset = child.dataset;
	        if (dataset && dataset['parent'] && (altParent = document.getElementById(dataset['parent']))) {
	            child = altParent;
	        }
	        else {
	            child = child.parentElement;
	        }
	    }
	    return false;
	}
	exports.isInside = isInside;
	function findParentWithClass(child, className) {
	    while (child) {
	        if (child.classList.contains(className))
	            return child;
	        child = child.parentNode;
	    }
	    return null;
	}
	exports.findParentWithClass = findParentWithClass;
	function setDragGhost(dataTransfer, text) {
	    // Thanks to http://www.kryogenix.org/code/browser/custom-drag-image.html
	    var dragGhost = d3.select(document.body).append('div')
	        .attr('class', 'drag-ghost')
	        .text(text);
	    // remove <any> when DataTransfer interface in lib.d.ts includes setDragImage
	    dataTransfer.setDragImage(dragGhost.node(), DRAG_GHOST_OFFSET_X, DRAG_GHOST_OFFSET_Y);
	    // Remove the host after a ms because it is no longer needed
	    setTimeout(function () {
	        dragGhost.remove();
	    }, 1);
	}
	exports.setDragGhost = setDragGhost;
	function enterKey(e) {
	    return e.which === 13; // 13 is the code for enter
	}
	exports.enterKey = enterKey;
	function escapeKey(e) {
	    return e.which === 27; // 27 is the code for escape
	}
	exports.escapeKey = escapeKey;
	var lastID = 0;
	function uniqueId(prefix) {
	    lastID++;
	    return prefix + lastID;
	}
	exports.uniqueId = uniqueId;
	function transformStyle(x, y) {
	    var xStr = String(x);
	    var yStr = String(y);
	    if (xStr !== '0')
	        xStr += 'px';
	    if (yStr !== '0')
	        yStr += 'px';
	    var transform = "translate(" + xStr + "," + yStr + ")";
	    return {
	        transform: transform,
	        WebkitTransform: transform,
	        MsTransform: transform
	    };
	}
	exports.transformStyle = transformStyle;
	function getXFromEvent(e) {
	    return e.clientX || e.pageX;
	}
	exports.getXFromEvent = getXFromEvent;
	function getYFromEvent(e) {
	    return e.clientY || e.pageY;
	}
	exports.getYFromEvent = getYFromEvent;
	function roundToPx(n) {
	    return Math.round(n);
	}
	exports.roundToPx = roundToPx;
	function roundToHalfPx(n) {
	    return Math.round(n - 0.5) + 0.5;
	}
	exports.roundToHalfPx = roundToHalfPx;
	function clamp(n, min, max) {
	    return Math.min(Math.max(n, min), max);
	}
	exports.clamp = clamp;
	function classNames() {
	    var args = [];
	    for (var _i = 0; _i < arguments.length; _i++) {
	        args[_i - 0] = arguments[_i];
	    }
	    var classes = [];
	    for (var _a = 0, args_1 = args; _a < args_1.length; _a++) {
	        var arg = args_1[_a];
	        if (!arg)
	            continue;
	        var argType = typeof arg;
	        if (argType === 'string') {
	            classes.push(arg);
	        }
	        else if (argType === 'object') {
	            for (var key in arg) {
	                if (general_1.hasOwnProperty(arg, key) && arg[key])
	                    classes.push(key);
	            }
	        }
	    }
	    return classes.join(' ');
	}
	exports.classNames = classNames;


/***/ },
/* 241 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {
	  var d3 = {
	    version: "3.5.16"
	  };
	  var d3_arraySlice = [].slice, d3_array = function(list) {
	    return d3_arraySlice.call(list);
	  };
	  var d3_document = this.document;
	  function d3_documentElement(node) {
	    return node && (node.ownerDocument || node.document || node).documentElement;
	  }
	  function d3_window(node) {
	    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);
	  }
	  if (d3_document) {
	    try {
	      d3_array(d3_document.documentElement.childNodes)[0].nodeType;
	    } catch (e) {
	      d3_array = function(list) {
	        var i = list.length, array = new Array(i);
	        while (i--) array[i] = list[i];
	        return array;
	      };
	    }
	  }
	  if (!Date.now) Date.now = function() {
	    return +new Date();
	  };
	  if (d3_document) {
	    try {
	      d3_document.createElement("DIV").style.setProperty("opacity", 0, "");
	    } catch (error) {
	      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;
	      d3_element_prototype.setAttribute = function(name, value) {
	        d3_element_setAttribute.call(this, name, value + "");
	      };
	      d3_element_prototype.setAttributeNS = function(space, local, value) {
	        d3_element_setAttributeNS.call(this, space, local, value + "");
	      };
	      d3_style_prototype.setProperty = function(name, value, priority) {
	        d3_style_setProperty.call(this, name, value + "", priority);
	      };
	    }
	  }
	  d3.ascending = d3_ascending;
	  function d3_ascending(a, b) {
	    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
	  }
	  d3.descending = function(a, b) {
	    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
	  };
	  d3.min = function(array, f) {
	    var i = -1, n = array.length, a, b;
	    if (arguments.length === 1) {
	      while (++i < n) if ((b = array[i]) != null && b >= b) {
	        a = b;
	        break;
	      }
	      while (++i < n) if ((b = array[i]) != null && a > b) a = b;
	    } else {
	      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {
	        a = b;
	        break;
	      }
	      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;
	    }
	    return a;
	  };
	  d3.max = function(array, f) {
	    var i = -1, n = array.length, a, b;
	    if (arguments.length === 1) {
	      while (++i < n) if ((b = array[i]) != null && b >= b) {
	        a = b;
	        break;
	      }
	      while (++i < n) if ((b = array[i]) != null && b > a) a = b;
	    } else {
	      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {
	        a = b;
	        break;
	      }
	      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;
	    }
	    return a;
	  };
	  d3.extent = function(array, f) {
	    var i = -1, n = array.length, a, b, c;
	    if (arguments.length === 1) {
	      while (++i < n) if ((b = array[i]) != null && b >= b) {
	        a = c = b;
	        break;
	      }
	      while (++i < n) if ((b = array[i]) != null) {
	        if (a > b) a = b;
	        if (c < b) c = b;
	      }
	    } else {
	      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {
	        a = c = b;
	        break;
	      }
	      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {
	        if (a > b) a = b;
	        if (c < b) c = b;
	      }
	    }
	    return [ a, c ];
	  };
	  function d3_number(x) {
	    return x === null ? NaN : +x;
	  }
	  function d3_numeric(x) {
	    return !isNaN(x);
	  }
	  d3.sum = function(array, f) {
	    var s = 0, n = array.length, a, i = -1;
	    if (arguments.length === 1) {
	      while (++i < n) if (d3_numeric(a = +array[i])) s += a;
	    } else {
	      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;
	    }
	    return s;
	  };
	  d3.mean = function(array, f) {
	    var s = 0, n = array.length, a, i = -1, j = n;
	    if (arguments.length === 1) {
	      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;
	    } else {
	      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;
	    }
	    if (j) return s / j;
	  };
	  d3.quantile = function(values, p) {
	    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;
	    return e ? v + e * (values[h] - v) : v;
	  };
	  d3.median = function(array, f) {
	    var numbers = [], n = array.length, a, i = -1;
	    if (arguments.length === 1) {
	      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);
	    } else {
	      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);
	    }
	    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);
	  };
	  d3.variance = function(array, f) {
	    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;
	    if (arguments.length === 1) {
	      while (++i < n) {
	        if (d3_numeric(a = d3_number(array[i]))) {
	          d = a - m;
	          m += d / ++j;
	          s += d * (a - m);
	        }
	      }
	    } else {
	      while (++i < n) {
	        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {
	          d = a - m;
	          m += d / ++j;
	          s += d * (a - m);
	        }
	      }
	    }
	    if (j > 1) return s / (j - 1);
	  };
	  d3.deviation = function() {
	    var v = d3.variance.apply(this, arguments);
	    return v ? Math.sqrt(v) : v;
	  };
	  function d3_bisector(compare) {
	    return {
	      left: function(a, x, lo, hi) {
	        if (arguments.length < 3) lo = 0;
	        if (arguments.length < 4) hi = a.length;
	        while (lo < hi) {
	          var mid = lo + hi >>> 1;
	          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;
	        }
	        return lo;
	      },
	      right: function(a, x, lo, hi) {
	        if (arguments.length < 3) lo = 0;
	        if (arguments.length < 4) hi = a.length;
	        while (lo < hi) {
	          var mid = lo + hi >>> 1;
	          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;
	        }
	        return lo;
	      }
	    };
	  }
	  var d3_bisect = d3_bisector(d3_ascending);
	  d3.bisectLeft = d3_bisect.left;
	  d3.bisect = d3.bisectRight = d3_bisect.right;
	  d3.bisector = function(f) {
	    return d3_bisector(f.length === 1 ? function(d, x) {
	      return d3_ascending(f(d), x);
	    } : f);
	  };
	  d3.shuffle = function(array, i0, i1) {
	    if ((m = arguments.length) < 3) {
	      i1 = array.length;
	      if (m < 2) i0 = 0;
	    }
	    var m = i1 - i0, t, i;
	    while (m) {
	      i = Math.random() * m-- | 0;
	      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;
	    }
	    return array;
	  };
	  d3.permute = function(array, indexes) {
	    var i = indexes.length, permutes = new Array(i);
	    while (i--) permutes[i] = array[indexes[i]];
	    return permutes;
	  };
	  d3.pairs = function(array) {
	    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);
	    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];
	    return pairs;
	  };
	  d3.transpose = function(matrix) {
	    if (!(n = matrix.length)) return [];
	    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {
	      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {
	        row[j] = matrix[j][i];
	      }
	    }
	    return transpose;
	  };
	  function d3_transposeLength(d) {
	    return d.length;
	  }
	  d3.zip = function() {
	    return d3.transpose(arguments);
	  };
	  d3.keys = function(map) {
	    var keys = [];
	    for (var key in map) keys.push(key);
	    return keys;
	  };
	  d3.values = function(map) {
	    var values = [];
	    for (var key in map) values.push(map[key]);
	    return values;
	  };
	  d3.entries = function(map) {
	    var entries = [];
	    for (var key in map) entries.push({
	      key: key,
	      value: map[key]
	    });
	    return entries;
	  };
	  d3.merge = function(arrays) {
	    var n = arrays.length, m, i = -1, j = 0, merged, array;
	    while (++i < n) j += arrays[i].length;
	    merged = new Array(j);
	    while (--n >= 0) {
	      array = arrays[n];
	      m = array.length;
	      while (--m >= 0) {
	        merged[--j] = array[m];
	      }
	    }
	    return merged;
	  };
	  var abs = Math.abs;
	  d3.range = function(start, stop, step) {
	    if (arguments.length < 3) {
	      step = 1;
	      if (arguments.length < 2) {
	        stop = start;
	        start = 0;
	      }
	    }
	    if ((stop - start) / step === Infinity) throw new Error("infinite range");
	    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;
	    start *= k, stop *= k, step *= k;
	    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);
	    return range;
	  };
	  function d3_range_integerScale(x) {
	    var k = 1;
	    while (x * k % 1) k *= 10;
	    return k;
	  }
	  function d3_class(ctor, properties) {
	    for (var key in properties) {
	      Object.defineProperty(ctor.prototype, key, {
	        value: properties[key],
	        enumerable: false
	      });
	    }
	  }
	  d3.map = function(object, f) {
	    var map = new d3_Map();
	    if (object instanceof d3_Map) {
	      object.forEach(function(key, value) {
	        map.set(key, value);
	      });
	    } else if (Array.isArray(object)) {
	      var i = -1, n = object.length, o;
	      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);
	    } else {
	      for (var key in object) map.set(key, object[key]);
	    }
	    return map;
	  };
	  function d3_Map() {
	    this._ = Object.create(null);
	  }
	  var d3_map_proto = "__proto__", d3_map_zero = "\x00";
	  d3_class(d3_Map, {
	    has: d3_map_has,
	    get: function(key) {
	      return this._[d3_map_escape(key)];
	    },
	    set: function(key, value) {
	      return this._[d3_map_escape(key)] = value;
	    },
	    remove: d3_map_remove,
	    keys: d3_map_keys,
	    values: function() {
	      var values = [];
	      for (var key in this._) values.push(this._[key]);
	      return values;
	    },
	    entries: function() {
	      var entries = [];
	      for (var key in this._) entries.push({
	        key: d3_map_unescape(key),
	        value: this._[key]
	      });
	      return entries;
	    },
	    size: d3_map_size,
	    empty: d3_map_empty,
	    forEach: function(f) {
	      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);
	    }
	  });
	  function d3_map_escape(key) {
	    return (key += "") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;
	  }
	  function d3_map_unescape(key) {
	    return (key += "")[0] === d3_map_zero ? key.slice(1) : key;
	  }
	  function d3_map_has(key) {
	    return d3_map_escape(key) in this._;
	  }
	  function d3_map_remove(key) {
	    return (key = d3_map_escape(key)) in this._ && delete this._[key];
	  }
	  function d3_map_keys() {
	    var keys = [];
	    for (var key in this._) keys.push(d3_map_unescape(key));
	    return keys;
	  }
	  function d3_map_size() {
	    var size = 0;
	    for (var key in this._) ++size;
	    return size;
	  }
	  function d3_map_empty() {
	    for (var key in this._) return false;
	    return true;
	  }
	  d3.nest = function() {
	    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;
	    function map(mapType, array, depth) {
	      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;
	      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;
	      while (++i < n) {
	        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {
	          values.push(object);
	        } else {
	          valuesByKey.set(keyValue, [ object ]);
	        }
	      }
	      if (mapType) {
	        object = mapType();
	        setter = function(keyValue, values) {
	          object.set(keyValue, map(mapType, values, depth));
	        };
	      } else {
	        object = {};
	        setter = function(keyValue, values) {
	          object[keyValue] = map(mapType, values, depth);
	        };
	      }
	      valuesByKey.forEach(setter);
	      return object;
	    }
	    function entries(map, depth) {
	      if (depth >= keys.length) return map;
	      var array = [], sortKey = sortKeys[depth++];
	      map.forEach(function(key, keyMap) {
	        array.push({
	          key: key,
	          values: entries(keyMap, depth)
	        });
	      });
	      return sortKey ? array.sort(function(a, b) {
	        return sortKey(a.key, b.key);
	      }) : array;
	    }
	    nest.map = function(array, mapType) {
	      return map(mapType, array, 0);
	    };
	    nest.entries = function(array) {
	      return entries(map(d3.map, array, 0), 0);
	    };
	    nest.key = function(d) {
	      keys.push(d);
	      return nest;
	    };
	    nest.sortKeys = function(order) {
	      sortKeys[keys.length - 1] = order;
	      return nest;
	    };
	    nest.sortValues = function(order) {
	      sortValues = order;
	      return nest;
	    };
	    nest.rollup = function(f) {
	      rollup = f;
	      return nest;
	    };
	    return nest;
	  };
	  d3.set = function(array) {
	    var set = new d3_Set();
	    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);
	    return set;
	  };
	  function d3_Set() {
	    this._ = Object.create(null);
	  }
	  d3_class(d3_Set, {
	    has: d3_map_has,
	    add: function(key) {
	      this._[d3_map_escape(key += "")] = true;
	      return key;
	    },
	    remove: d3_map_remove,
	    values: d3_map_keys,
	    size: d3_map_size,
	    empty: d3_map_empty,
	    forEach: function(f) {
	      for (var key in this._) f.call(this, d3_map_unescape(key));
	    }
	  });
	  d3.behavior = {};
	  function d3_identity(d) {
	    return d;
	  }
	  d3.rebind = function(target, source) {
	    var i = 1, n = arguments.length, method;
	    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);
	    return target;
	  };
	  function d3_rebind(target, source, method) {
	    return function() {
	      var value = method.apply(source, arguments);
	      return value === source ? target : value;
	    };
	  }
	  function d3_vendorSymbol(object, name) {
	    if (name in object) return name;
	    name = name.charAt(0).toUpperCase() + name.slice(1);
	    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {
	      var prefixName = d3_vendorPrefixes[i] + name;
	      if (prefixName in object) return prefixName;
	    }
	  }
	  var d3_vendorPrefixes = [ "webkit", "ms", "moz", "Moz", "o", "O" ];
	  function d3_noop() {}
	  d3.dispatch = function() {
	    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;
	    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);
	    return dispatch;
	  };
	  function d3_dispatch() {}
	  d3_dispatch.prototype.on = function(type, listener) {
	    var i = type.indexOf("."), name = "";
	    if (i >= 0) {
	      name = type.slice(i + 1);
	      type = type.slice(0, i);
	    }
	    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);
	    if (arguments.length === 2) {
	      if (listener == null) for (type in this) {
	        if (this.hasOwnProperty(type)) this[type].on(name, null);
	      }
	      return this;
	    }
	  };
	  function d3_dispatch_event(dispatch) {
	    var listeners = [], listenerByName = new d3_Map();
	    function event() {
	      var z = listeners, i = -1, n = z.length, l;
	      while (++i < n) if (l = z[i].on) l.apply(this, arguments);
	      return dispatch;
	    }
	    event.on = function(name, listener) {
	      var l = listenerByName.get(name), i;
	      if (arguments.length < 2) return l && l.on;
	      if (l) {
	        l.on = null;
	        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));
	        listenerByName.remove(name);
	      }
	      if (listener) listeners.push(listenerByName.set(name, {
	        on: listener
	      }));
	      return dispatch;
	    };
	    return event;
	  }
	  d3.event = null;
	  function d3_eventPreventDefault() {
	    d3.event.preventDefault();
	  }
	  function d3_eventSource() {
	    var e = d3.event, s;
	    while (s = e.sourceEvent) e = s;
	    return e;
	  }
	  function d3_eventDispatch(target) {
	    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;
	    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);
	    dispatch.of = function(thiz, argumentz) {
	      return function(e1) {
	        try {
	          var e0 = e1.sourceEvent = d3.event;
	          e1.target = target;
	          d3.event = e1;
	          dispatch[e1.type].apply(thiz, argumentz);
	        } finally {
	          d3.event = e0;
	        }
	      };
	    };
	    return dispatch;
	  }
	  d3.requote = function(s) {
	    return s.replace(d3_requote_re, "\\$&");
	  };
	  var d3_requote_re = /[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g;
	  var d3_subclass = {}.__proto__ ? function(object, prototype) {
	    object.__proto__ = prototype;
	  } : function(object, prototype) {
	    for (var property in prototype) object[property] = prototype[property];
	  };
	  function d3_selection(groups) {
	    d3_subclass(groups, d3_selectionPrototype);
	    return groups;
	  }
	  var d3_select = function(s, n) {
	    return n.querySelector(s);
	  }, d3_selectAll = function(s, n) {
	    return n.querySelectorAll(s);
	  }, d3_selectMatches = function(n, s) {
	    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, "matchesSelector")];
	    d3_selectMatches = function(n, s) {
	      return d3_selectMatcher.call(n, s);
	    };
	    return d3_selectMatches(n, s);
	  };
	  if (typeof Sizzle === "function") {
	    d3_select = function(s, n) {
	      return Sizzle(s, n)[0] || null;
	    };
	    d3_selectAll = Sizzle;
	    d3_selectMatches = Sizzle.matchesSelector;
	  }
	  d3.selection = function() {
	    return d3.select(d3_document.documentElement);
	  };
	  var d3_selectionPrototype = d3.selection.prototype = [];
	  d3_selectionPrototype.select = function(selector) {
	    var subgroups = [], subgroup, subnode, group, node;
	    selector = d3_selection_selector(selector);
	    for (var j = -1, m = this.length; ++j < m; ) {
	      subgroups.push(subgroup = []);
	      subgroup.parentNode = (group = this[j]).parentNode;
	      for (var i = -1, n = group.length; ++i < n; ) {
	        if (node = group[i]) {
	          subgroup.push(subnode = selector.call(node, node.__data__, i, j));
	          if (subnode && "__data__" in node) subnode.__data__ = node.__data__;
	        } else {
	          subgroup.push(null);
	        }
	      }
	    }
	    return d3_selection(subgroups);
	  };
	  function d3_selection_selector(selector) {
	    return typeof selector === "function" ? selector : function() {
	      return d3_select(selector, this);
	    };
	  }
	  d3_selectionPrototype.selectAll = function(selector) {
	    var subgroups = [], subgroup, node;
	    selector = d3_selection_selectorAll(selector);
	    for (var j = -1, m = this.length; ++j < m; ) {
	      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
	        if (node = group[i]) {
	          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));
	          subgroup.parentNode = node;
	        }
	      }
	    }
	    return d3_selection(subgroups);
	  };
	  function d3_selection_selectorAll(selector) {
	    return typeof selector === "function" ? selector : function() {
	      return d3_selectAll(selector, this);
	    };
	  }
	  var d3_nsXhtml = "http://www.w3.org/1999/xhtml";
	  var d3_nsPrefix = {
	    svg: "http://www.w3.org/2000/svg",
	    xhtml: d3_nsXhtml,
	    xlink: "http://www.w3.org/1999/xlink",
	    xml: "http://www.w3.org/XML/1998/namespace",
	    xmlns: "http://www.w3.org/2000/xmlns/"
	  };
	  d3.ns = {
	    prefix: d3_nsPrefix,
	    qualify: function(name) {
	      var i = name.indexOf(":"), prefix = name;
	      if (i >= 0 && (prefix = name.slice(0, i)) !== "xmlns") name = name.slice(i + 1);
	      return d3_nsPrefix.hasOwnProperty(prefix) ? {
	        space: d3_nsPrefix[prefix],
	        local: name
	      } : name;
	    }
	  };
	  d3_selectionPrototype.attr = function(name, value) {
	    if (arguments.length < 2) {
	      if (typeof name === "string") {
	        var node = this.node();
	        name = d3.ns.qualify(name);
	        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);
	      }
	      for (value in name) this.each(d3_selection_attr(value, name[value]));
	      return this;
	    }
	    return this.each(d3_selection_attr(name, value));
	  };
	  function d3_selection_attr(name, value) {
	    name = d3.ns.qualify(name);
	    function attrNull() {
	      this.removeAttribute(name);
	    }
	    function attrNullNS() {
	      this.removeAttributeNS(name.space, name.local);
	    }
	    function attrConstant() {
	      this.setAttribute(name, value);
	    }
	    function attrConstantNS() {
	      this.setAttributeNS(name.space, name.local, value);
	    }
	    function attrFunction() {
	      var x = value.apply(this, arguments);
	      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);
	    }
	    function attrFunctionNS() {
	      var x = value.apply(this, arguments);
	      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);
	    }
	    return value == null ? name.local ? attrNullNS : attrNull : typeof value === "function" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;
	  }
	  function d3_collapse(s) {
	    return s.trim().replace(/\s+/g, " ");
	  }
	  d3_selectionPrototype.classed = function(name, value) {
	    if (arguments.length < 2) {
	      if (typeof name === "string") {
	        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;
	        if (value = node.classList) {
	          while (++i < n) if (!value.contains(name[i])) return false;
	        } else {
	          value = node.getAttribute("class");
	          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;
	        }
	        return true;
	      }
	      for (value in name) this.each(d3_selection_classed(value, name[value]));
	      return this;
	    }
	    return this.each(d3_selection_classed(name, value));
	  };
	  function d3_selection_classedRe(name) {
	    return new RegExp("(?:^|\\s+)" + d3.requote(name) + "(?:\\s+|$)", "g");
	  }
	  function d3_selection_classes(name) {
	    return (name + "").trim().split(/^|\s+/);
	  }
	  function d3_selection_classed(name, value) {
	    name = d3_selection_classes(name).map(d3_selection_classedName);
	    var n = name.length;
	    function classedConstant() {
	      var i = -1;
	      while (++i < n) name[i](this, value);
	    }
	    function classedFunction() {
	      var i = -1, x = value.apply(this, arguments);
	      while (++i < n) name[i](this, x);
	    }
	    return typeof value === "function" ? classedFunction : classedConstant;
	  }
	  function d3_selection_classedName(name) {
	    var re = d3_selection_classedRe(name);
	    return function(node, value) {
	      if (c = node.classList) return value ? c.add(name) : c.remove(name);
	      var c = node.getAttribute("class") || "";
	      if (value) {
	        re.lastIndex = 0;
	        if (!re.test(c)) node.setAttribute("class", d3_collapse(c + " " + name));
	      } else {
	        node.setAttribute("class", d3_collapse(c.replace(re, " ")));
	      }
	    };
	  }
	  d3_selectionPrototype.style = function(name, value, priority) {
	    var n = arguments.length;
	    if (n < 3) {
	      if (typeof name !== "string") {
	        if (n < 2) value = "";
	        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));
	        return this;
	      }
	      if (n < 2) {
	        var node = this.node();
	        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);
	      }
	      priority = "";
	    }
	    return this.each(d3_selection_style(name, value, priority));
	  };
	  function d3_selection_style(name, value, priority) {
	    function styleNull() {
	      this.style.removeProperty(name);
	    }
	    function styleConstant() {
	      this.style.setProperty(name, value, priority);
	    }
	    function styleFunction() {
	      var x = value.apply(this, arguments);
	      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);
	    }
	    return value == null ? styleNull : typeof value === "function" ? styleFunction : styleConstant;
	  }
	  d3_selectionPrototype.property = function(name, value) {
	    if (arguments.length < 2) {
	      if (typeof name === "string") return this.node()[name];
	      for (value in name) this.each(d3_selection_property(value, name[value]));
	      return this;
	    }
	    return this.each(d3_selection_property(name, value));
	  };
	  function d3_selection_property(name, value) {
	    function propertyNull() {
	      delete this[name];
	    }
	    function propertyConstant() {
	      this[name] = value;
	    }
	    function propertyFunction() {
	      var x = value.apply(this, arguments);
	      if (x == null) delete this[name]; else this[name] = x;
	    }
	    return value == null ? propertyNull : typeof value === "function" ? propertyFunction : propertyConstant;
	  }
	  d3_selectionPrototype.text = function(value) {
	    return arguments.length ? this.each(typeof value === "function" ? function() {
	      var v = value.apply(this, arguments);
	      this.textContent = v == null ? "" : v;
	    } : value == null ? function() {
	      this.textContent = "";
	    } : function() {
	      this.textContent = value;
	    }) : this.node().textContent;
	  };
	  d3_selectionPrototype.html = function(value) {
	    return arguments.length ? this.each(typeof value === "function" ? function() {
	      var v = value.apply(this, arguments);
	      this.innerHTML = v == null ? "" : v;
	    } : value == null ? function() {
	      this.innerHTML = "";
	    } : function() {
	      this.innerHTML = value;
	    }) : this.node().innerHTML;
	  };
	  d3_selectionPrototype.append = function(name) {
	    name = d3_selection_creator(name);
	    return this.select(function() {
	      return this.appendChild(name.apply(this, arguments));
	    });
	  };
	  function d3_selection_creator(name) {
	    function create() {
	      var document = this.ownerDocument, namespace = this.namespaceURI;
	      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);
	    }
	    function createNS() {
	      return this.ownerDocument.createElementNS(name.space, name.local);
	    }
	    return typeof name === "function" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;
	  }
	  d3_selectionPrototype.insert = function(name, before) {
	    name = d3_selection_creator(name);
	    before = d3_selection_selector(before);
	    return this.select(function() {
	      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);
	    });
	  };
	  d3_selectionPrototype.remove = function() {
	    return this.each(d3_selectionRemove);
	  };
	  function d3_selectionRemove() {
	    var parent = this.parentNode;
	    if (parent) parent.removeChild(this);
	  }
	  d3_selectionPrototype.data = function(value, key) {
	    var i = -1, n = this.length, group, node;
	    if (!arguments.length) {
	      value = new Array(n = (group = this[0]).length);
	      while (++i < n) {
	        if (node = group[i]) {
	          value[i] = node.__data__;
	        }
	      }
	      return value;
	    }
	    function bind(group, groupData) {
	      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;
	      if (key) {
	        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;
	        for (i = -1; ++i < n; ) {
	          if (node = group[i]) {
	            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {
	              exitNodes[i] = node;
	            } else {
	              nodeByKeyValue.set(keyValue, node);
	            }
	            keyValues[i] = keyValue;
	          }
	        }
	        for (i = -1; ++i < m; ) {
	          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {
	            enterNodes[i] = d3_selection_dataNode(nodeData);
	          } else if (node !== true) {
	            updateNodes[i] = node;
	            node.__data__ = nodeData;
	          }
	          nodeByKeyValue.set(keyValue, true);
	        }
	        for (i = -1; ++i < n; ) {
	          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {
	            exitNodes[i] = group[i];
	          }
	        }
	      } else {
	        for (i = -1; ++i < n0; ) {
	          node = group[i];
	          nodeData = groupData[i];
	          if (node) {
	            node.__data__ = nodeData;
	            updateNodes[i] = node;
	          } else {
	            enterNodes[i] = d3_selection_dataNode(nodeData);
	          }
	        }
	        for (;i < m; ++i) {
	          enterNodes[i] = d3_selection_dataNode(groupData[i]);
	        }
	        for (;i < n; ++i) {
	          exitNodes[i] = group[i];
	        }
	      }
	      enterNodes.update = updateNodes;
	      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;
	      enter.push(enterNodes);
	      update.push(updateNodes);
	      exit.push(exitNodes);
	    }
	    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);
	    if (typeof value === "function") {
	      while (++i < n) {
	        bind(group = this[i], value.call(group, group.parentNode.__data__, i));
	      }
	    } else {
	      while (++i < n) {
	        bind(group = this[i], value);
	      }
	    }
	    update.enter = function() {
	      return enter;
	    };
	    update.exit = function() {
	      return exit;
	    };
	    return update;
	  };
	  function d3_selection_dataNode(data) {
	    return {
	      __data__: data
	    };
	  }
	  d3_selectionPrototype.datum = function(value) {
	    return arguments.length ? this.property("__data__", value) : this.property("__data__");
	  };
	  d3_selectionPrototype.filter = function(filter) {
	    var subgroups = [], subgroup, group, node;
	    if (typeof filter !== "function") filter = d3_selection_filter(filter);
	    for (var j = 0, m = this.length; j < m; j++) {
	      subgroups.push(subgroup = []);
	      subgroup.parentNode = (group = this[j]).parentNode;
	      for (var i = 0, n = group.length; i < n; i++) {
	        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {
	          subgroup.push(node);
	        }
	      }
	    }
	    return d3_selection(subgroups);
	  };
	  function d3_selection_filter(selector) {
	    return function() {
	      return d3_selectMatches(this, selector);
	    };
	  }
	  d3_selectionPrototype.order = function() {
	    for (var j = -1, m = this.length; ++j < m; ) {
	      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {
	        if (node = group[i]) {
	          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);
	          next = node;
	        }
	      }
	    }
	    return this;
	  };
	  d3_selectionPrototype.sort = function(comparator) {
	    comparator = d3_selection_sortComparator.apply(this, arguments);
	    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);
	    return this.order();
	  };
	  function d3_selection_sortComparator(comparator) {
	    if (!arguments.length) comparator = d3_ascending;
	    return function(a, b) {
	      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;
	    };
	  }
	  d3_selectionPrototype.each = function(callback) {
	    return d3_selection_each(this, function(node, i, j) {
	      callback.call(node, node.__data__, i, j);
	    });
	  };
	  function d3_selection_each(groups, callback) {
	    for (var j = 0, m = groups.length; j < m; j++) {
	      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {
	        if (node = group[i]) callback(node, i, j);
	      }
	    }
	    return groups;
	  }
	  d3_selectionPrototype.call = function(callback) {
	    var args = d3_array(arguments);
	    callback.apply(args[0] = this, args);
	    return this;
	  };
	  d3_selectionPrototype.empty = function() {
	    return !this.node();
	  };
	  d3_selectionPrototype.node = function() {
	    for (var j = 0, m = this.length; j < m; j++) {
	      for (var group = this[j], i = 0, n = group.length; i < n; i++) {
	        var node = group[i];
	        if (node) return node;
	      }
	    }
	    return null;
	  };
	  d3_selectionPrototype.size = function() {
	    var n = 0;
	    d3_selection_each(this, function() {
	      ++n;
	    });
	    return n;
	  };
	  function d3_selection_enter(selection) {
	    d3_subclass(selection, d3_selection_enterPrototype);
	    return selection;
	  }
	  var d3_selection_enterPrototype = [];
	  d3.selection.enter = d3_selection_enter;
	  d3.selection.enter.prototype = d3_selection_enterPrototype;
	  d3_selection_enterPrototype.append = d3_selectionPrototype.append;
	  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;
	  d3_selection_enterPrototype.node = d3_selectionPrototype.node;
	  d3_selection_enterPrototype.call = d3_selectionPrototype.call;
	  d3_selection_enterPrototype.size = d3_selectionPrototype.size;
	  d3_selection_enterPrototype.select = function(selector) {
	    var subgroups = [], subgroup, subnode, upgroup, group, node;
	    for (var j = -1, m = this.length; ++j < m; ) {
	      upgroup = (group = this[j]).update;
	      subgroups.push(subgroup = []);
	      subgroup.parentNode = group.parentNode;
	      for (var i = -1, n = group.length; ++i < n; ) {
	        if (node = group[i]) {
	          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));
	          subnode.__data__ = node.__data__;
	        } else {
	          subgroup.push(null);
	        }
	      }
	    }
	    return d3_selection(subgroups);
	  };
	  d3_selection_enterPrototype.insert = function(name, before) {
	    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);
	    return d3_selectionPrototype.insert.call(this, name, before);
	  };
	  function d3_selection_enterInsertBefore(enter) {
	    var i0, j0;
	    return function(d, i, j) {
	      var group = enter[j].update, n = group.length, node;
	      if (j != j0) j0 = j, i0 = 0;
	      if (i >= i0) i0 = i + 1;
	      while (!(node = group[i0]) && ++i0 < n) ;
	      return node;
	    };
	  }
	  d3.select = function(node) {
	    var group;
	    if (typeof node === "string") {
	      group = [ d3_select(node, d3_document) ];
	      group.parentNode = d3_document.documentElement;
	    } else {
	      group = [ node ];
	      group.parentNode = d3_documentElement(node);
	    }
	    return d3_selection([ group ]);
	  };
	  d3.selectAll = function(nodes) {
	    var group;
	    if (typeof nodes === "string") {
	      group = d3_array(d3_selectAll(nodes, d3_document));
	      group.parentNode = d3_document.documentElement;
	    } else {
	      group = d3_array(nodes);
	      group.parentNode = null;
	    }
	    return d3_selection([ group ]);
	  };
	  d3_selectionPrototype.on = function(type, listener, capture) {
	    var n = arguments.length;
	    if (n < 3) {
	      if (typeof type !== "string") {
	        if (n < 2) listener = false;
	        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));
	        return this;
	      }
	      if (n < 2) return (n = this.node()["__on" + type]) && n._;
	      capture = false;
	    }
	    return this.each(d3_selection_on(type, listener, capture));
	  };
	  function d3_selection_on(type, listener, capture) {
	    var name = "__on" + type, i = type.indexOf("."), wrap = d3_selection_onListener;
	    if (i > 0) type = type.slice(0, i);
	    var filter = d3_selection_onFilters.get(type);
	    if (filter) type = filter, wrap = d3_selection_onFilter;
	    function onRemove() {
	      var l = this[name];
	      if (l) {
	        this.removeEventListener(type, l, l.$);
	        delete this[name];
	      }
	    }
	    function onAdd() {
	      var l = wrap(listener, d3_array(arguments));
	      onRemove.call(this);
	      this.addEventListener(type, this[name] = l, l.$ = capture);
	      l._ = listener;
	    }
	    function removeAll() {
	      var re = new RegExp("^__on([^.]+)" + d3.requote(type) + "$"), match;
	      for (var name in this) {
	        if (match = name.match(re)) {
	          var l = this[name];
	          this.removeEventListener(match[1], l, l.$);
	          delete this[name];
	        }
	      }
	    }
	    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;
	  }
	  var d3_selection_onFilters = d3.map({
	    mouseenter: "mouseover",
	    mouseleave: "mouseout"
	  });
	  if (d3_document) {
	    d3_selection_onFilters.forEach(function(k) {
	      if ("on" + k in d3_document) d3_selection_onFilters.remove(k);
	    });
	  }
	  function d3_selection_onListener(listener, argumentz) {
	    return function(e) {
	      var o = d3.event;
	      d3.event = e;
	      argumentz[0] = this.__data__;
	      try {
	        listener.apply(this, argumentz);
	      } finally {
	        d3.event = o;
	      }
	    };
	  }
	  function d3_selection_onFilter(listener, argumentz) {
	    var l = d3_selection_onListener(listener, argumentz);
	    return function(e) {
	      var target = this, related = e.relatedTarget;
	      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {
	        l.call(target, e);
	      }
	    };
	  }
	  var d3_event_dragSelect, d3_event_dragId = 0;
	  function d3_event_dragSuppress(node) {
	    var name = ".dragsuppress-" + ++d3_event_dragId, click = "click" + name, w = d3.select(d3_window(node)).on("touchmove" + name, d3_eventPreventDefault).on("dragstart" + name, d3_eventPreventDefault).on("selectstart" + name, d3_eventPreventDefault);
	    if (d3_event_dragSelect == null) {
	      d3_event_dragSelect = "onselectstart" in node ? false : d3_vendorSymbol(node.style, "userSelect");
	    }
	    if (d3_event_dragSelect) {
	      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];
	      style[d3_event_dragSelect] = "none";
	    }
	    return function(suppressClick) {
	      w.on(name, null);
	      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;
	      if (suppressClick) {
	        var off = function() {
	          w.on(click, null);
	        };
	        w.on(click, function() {
	          d3_eventPreventDefault();
	          off();
	        }, true);
	        setTimeout(off, 0);
	      }
	    };
	  }
	  d3.mouse = function(container) {
	    return d3_mousePoint(container, d3_eventSource());
	  };
	  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;
	  function d3_mousePoint(container, e) {
	    if (e.changedTouches) e = e.changedTouches[0];
	    var svg = container.ownerSVGElement || container;
	    if (svg.createSVGPoint) {
	      var point = svg.createSVGPoint();
	      if (d3_mouse_bug44083 < 0) {
	        var window = d3_window(container);
	        if (window.scrollX || window.scrollY) {
	          svg = d3.select("body").append("svg").style({
	            position: "absolute",
	            top: 0,
	            left: 0,
	            margin: 0,
	            padding: 0,
	            border: "none"
	          }, "important");
	          var ctm = svg[0][0].getScreenCTM();
	          d3_mouse_bug44083 = !(ctm.f || ctm.e);
	          svg.remove();
	        }
	      }
	      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, 
	      point.y = e.clientY;
	      point = point.matrixTransform(container.getScreenCTM().inverse());
	      return [ point.x, point.y ];
	    }
	    var rect = container.getBoundingClientRect();
	    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];
	  }
	  d3.touch = function(container, touches, identifier) {
	    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;
	    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {
	      if ((touch = touches[i]).identifier === identifier) {
	        return d3_mousePoint(container, touch);
	      }
	    }
	  };
	  d3.behavior.drag = function() {
	    var event = d3_eventDispatch(drag, "drag", "dragstart", "dragend"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, "mousemove", "mouseup"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, "touchmove", "touchend");
	    function drag() {
	      this.on("mousedown.drag", mousedown).on("touchstart.drag", touchstart);
	    }
	    function dragstart(id, position, subject, move, end) {
	      return function() {
	        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = ".drag" + (dragId == null ? "" : "-" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);
	        if (origin) {
	          dragOffset = origin.apply(that, arguments);
	          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];
	        } else {
	          dragOffset = [ 0, 0 ];
	        }
	        dispatch({
	          type: "dragstart"
	        });
	        function moved() {
	          var position1 = position(parent, dragId), dx, dy;
	          if (!position1) return;
	          dx = position1[0] - position0[0];
	          dy = position1[1] - position0[1];
	          dragged |= dx | dy;
	          position0 = position1;
	          dispatch({
	            type: "drag",
	            x: position1[0] + dragOffset[0],
	            y: position1[1] + dragOffset[1],
	            dx: dx,
	            dy: dy
	          });
	        }
	        function ended() {
	          if (!position(parent, dragId)) return;
	          dragSubject.on(move + dragName, null).on(end + dragName, null);
	          dragRestore(dragged);
	          dispatch({
	            type: "dragend"
	          });
	        }
	      };
	    }
	    drag.origin = function(x) {
	      if (!arguments.length) return origin;
	      origin = x;
	      return drag;
	    };
	    return d3.rebind(drag, event, "on");
	  };
	  function d3_behavior_dragTouchId() {
	    return d3.event.changedTouches[0].identifier;
	  }
	  d3.touches = function(container, touches) {
	    if (arguments.length < 2) touches = d3_eventSource().touches;
	    return touches ? d3_array(touches).map(function(touch) {
	      var point = d3_mousePoint(container, touch);
	      point.identifier = touch.identifier;
	      return point;
	    }) : [];
	  };
	  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;
	  function d3_sgn(x) {
	    return x > 0 ? 1 : x < 0 ? -1 : 0;
	  }
	  function d3_cross2d(a, b, c) {
	    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);
	  }
	  function d3_acos(x) {
	    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);
	  }
	  function d3_asin(x) {
	    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);
	  }
	  function d3_sinh(x) {
	    return ((x = Math.exp(x)) - 1 / x) / 2;
	  }
	  function d3_cosh(x) {
	    return ((x = Math.exp(x)) + 1 / x) / 2;
	  }
	  function d3_tanh(x) {
	    return ((x = Math.exp(2 * x)) - 1) / (x + 1);
	  }
	  function d3_haversin(x) {
	    return (x = Math.sin(x / 2)) * x;
	  }
	  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;
	  d3.interpolateZoom = function(p0, p1) {
	    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;
	    if (d2 < ε2) {
	      S = Math.log(w1 / w0) / ρ;
	      i = function(t) {
	        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];
	      };
	    } else {
	      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);
	      S = (r1 - r0) / ρ;
	      i = function(t) {
	        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));
	        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];
	      };
	    }
	    i.duration = S * 1e3;
	    return i;
	  };
	  d3.behavior.zoom = function() {
	    var view = {
	      x: 0,
	      y: 0,
	      k: 1
	    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = "mousedown.zoom", mousemove = "mousemove.zoom", mouseup = "mouseup.zoom", mousewheelTimer, touchstart = "touchstart.zoom", touchtime, event = d3_eventDispatch(zoom, "zoomstart", "zoom", "zoomend"), x0, x1, y0, y1;
	    if (!d3_behavior_zoomWheel) {
	      d3_behavior_zoomWheel = "onwheel" in d3_document ? (d3_behavior_zoomDelta = function() {
	        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);
	      }, "wheel") : "onmousewheel" in d3_document ? (d3_behavior_zoomDelta = function() {
	        return d3.event.wheelDelta;
	      }, "mousewheel") : (d3_behavior_zoomDelta = function() {
	        return -d3.event.detail;
	      }, "MozMousePixelScroll");
	    }
	    function zoom(g) {
	      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + ".zoom", mousewheeled).on("dblclick.zoom", dblclicked).on(touchstart, touchstarted);
	    }
	    zoom.event = function(g) {
	      g.each(function() {
	        var dispatch = event.of(this, arguments), view1 = view;
	        if (d3_transitionInheritId) {
	          d3.select(this).transition().each("start.zoom", function() {
	            view = this.__chart__ || {
	              x: 0,
	              y: 0,
	              k: 1
	            };
	            zoomstarted(dispatch);
	          }).tween("zoom:zoom", function() {
	            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);
	            return function(t) {
	              var l = i(t), k = dx / l[2];
	              this.__chart__ = view = {
	                x: cx - l[0] * k,
	                y: cy - l[1] * k,
	                k: k
	              };
	              zoomed(dispatch);
	            };
	          }).each("interrupt.zoom", function() {
	            zoomended(dispatch);
	          }).each("end.zoom", function() {
	            zoomended(dispatch);
	          });
	        } else {
	          this.__chart__ = view;
	          zoomstarted(dispatch);
	          zoomed(dispatch);
	          zoomended(dispatch);
	        }
	      });
	    };
	    zoom.translate = function(_) {
	      if (!arguments.length) return [ view.x, view.y ];
	      view = {
	        x: +_[0],
	        y: +_[1],
	        k: view.k
	      };
	      rescale();
	      return zoom;
	    };
	    zoom.scale = function(_) {
	      if (!arguments.length) return view.k;
	      view = {
	        x: view.x,
	        y: view.y,
	        k: null
	      };
	      scaleTo(+_);
	      rescale();
	      return zoom;
	    };
	    zoom.scaleExtent = function(_) {
	      if (!arguments.length) return scaleExtent;
	      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];
	      return zoom;
	    };
	    zoom.center = function(_) {
	      if (!arguments.length) return center;
	      center = _ && [ +_[0], +_[1] ];
	      return zoom;
	    };
	    zoom.size = function(_) {
	      if (!arguments.length) return size;
	      size = _ && [ +_[0], +_[1] ];
	      return zoom;
	    };
	    zoom.duration = function(_) {
	      if (!arguments.length) return duration;
	      duration = +_;
	      return zoom;
	    };
	    zoom.x = function(z) {
	      if (!arguments.length) return x1;
	      x1 = z;
	      x0 = z.copy();
	      view = {
	        x: 0,
	        y: 0,
	        k: 1
	      };
	      return zoom;
	    };
	    zoom.y = function(z) {
	      if (!arguments.length) return y1;
	      y1 = z;
	      y0 = z.copy();
	      view = {
	        x: 0,
	        y: 0,
	        k: 1
	      };
	      return zoom;
	    };
	    function location(p) {
	      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];
	    }
	    function point(l) {
	      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];
	    }
	    function scaleTo(s) {
	      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));
	    }
	    function translateTo(p, l) {
	      l = point(l);
	      view.x += p[0] - l[0];
	      view.y += p[1] - l[1];
	    }
	    function zoomTo(that, p, l, k) {
	      that.__chart__ = {
	        x: view.x,
	        y: view.y,
	        k: view.k
	      };
	      scaleTo(Math.pow(2, k));
	      translateTo(center0 = p, l);
	      that = d3.select(that);
	      if (duration > 0) that = that.transition().duration(duration);
	      that.call(zoom.event);
	    }
	    function rescale() {
	      if (x1) x1.domain(x0.range().map(function(x) {
	        return (x - view.x) / view.k;
	      }).map(x0.invert));
	      if (y1) y1.domain(y0.range().map(function(y) {
	        return (y - view.y) / view.k;
	      }).map(y0.invert));
	    }
	    function zoomstarted(dispatch) {
	      if (!zooming++) dispatch({
	        type: "zoomstart"
	      });
	    }
	    function zoomed(dispatch) {
	      rescale();
	      dispatch({
	        type: "zoom",
	        scale: view.k,
	        translate: [ view.x, view.y ]
	      });
	    }
	    function zoomended(dispatch) {
	      if (!--zooming) dispatch({
	        type: "zoomend"
	      }), center0 = null;
	    }
	    function mousedowned() {
	      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);
	      d3_selection_interrupt.call(that);
	      zoomstarted(dispatch);
	      function moved() {
	        dragged = 1;
	        translateTo(d3.mouse(that), location0);
	        zoomed(dispatch);
	      }
	      function ended() {
	        subject.on(mousemove, null).on(mouseup, null);
	        dragRestore(dragged);
	        zoomended(dispatch);
	      }
	    }
	    function touchstarted() {
	      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = ".zoom-" + d3.event.changedTouches[0].identifier, touchmove = "touchmove" + zoomName, touchend = "touchend" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);
	      started();
	      zoomstarted(dispatch);
	      subject.on(mousedown, null).on(touchstart, started);
	      function relocate() {
	        var touches = d3.touches(that);
	        scale0 = view.k;
	        touches.forEach(function(t) {
	          if (t.identifier in locations0) locations0[t.identifier] = location(t);
	        });
	        return touches;
	      }
	      function started() {
	        var target = d3.event.target;
	        d3.select(target).on(touchmove, moved).on(touchend, ended);
	        targets.push(target);
	        var changed = d3.event.changedTouches;
	        for (var i = 0, n = changed.length; i < n; ++i) {
	          locations0[changed[i].identifier] = null;
	        }
	        var touches = relocate(), now = Date.now();
	        if (touches.length === 1) {
	          if (now - touchtime < 500) {
	            var p = touches[0];
	            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);
	            d3_eventPreventDefault();
	          }
	          touchtime = now;
	        } else if (touches.length > 1) {
	          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];
	          distance0 = dx * dx + dy * dy;
	        }
	      }
	      function moved() {
	        var touches = d3.touches(that), p0, l0, p1, l1;
	        d3_selection_interrupt.call(that);
	        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {
	          p1 = touches[i];
	          if (l1 = locations0[p1.identifier]) {
	            if (l0) break;
	            p0 = p1, l0 = l1;
	          }
	        }
	        if (l1) {
	          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);
	          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];
	          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];
	          scaleTo(scale1 * scale0);
	        }
	        touchtime = null;
	        translateTo(p0, l0);
	        zoomed(dispatch);
	      }
	      function ended() {
	        if (d3.event.touches.length) {
	          var changed = d3.event.changedTouches;
	          for (var i = 0, n = changed.length; i < n; ++i) {
	            delete locations0[changed[i].identifier];
	          }
	          for (var identifier in locations0) {
	            return void relocate();
	          }
	        }
	        d3.selectAll(targets).on(zoomName, null);
	        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);
	        dragRestore();
	        zoomended(dispatch);
	      }
	    }
	    function mousewheeled() {
	      var dispatch = event.of(this, arguments);
	      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), 
	      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);
	      mousewheelTimer = setTimeout(function() {
	        mousewheelTimer = null;
	        zoomended(dispatch);
	      }, 50);
	      d3_eventPreventDefault();
	      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);
	      translateTo(center0, translate0);
	      zoomed(dispatch);
	    }
	    function dblclicked() {
	      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;
	      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);
	    }
	    return d3.rebind(zoom, event, "on");
	  };
	  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;
	  d3.color = d3_color;
	  function d3_color() {}
	  d3_color.prototype.toString = function() {
	    return this.rgb() + "";
	  };
	  d3.hsl = d3_hsl;
	  function d3_hsl(h, s, l) {
	    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse("" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);
	  }
	  var d3_hslPrototype = d3_hsl.prototype = new d3_color();
	  d3_hslPrototype.brighter = function(k) {
	    k = Math.pow(.7, arguments.length ? k : 1);
	    return new d3_hsl(this.h, this.s, this.l / k);
	  };
	  d3_hslPrototype.darker = function(k) {
	    k = Math.pow(.7, arguments.length ? k : 1);
	    return new d3_hsl(this.h, this.s, k * this.l);
	  };
	  d3_hslPrototype.rgb = function() {
	    return d3_hsl_rgb(this.h, this.s, this.l);
	  };
	  function d3_hsl_rgb(h, s, l) {
	    var m1, m2;
	    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;
	    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;
	    l = l < 0 ? 0 : l > 1 ? 1 : l;
	    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;
	    m1 = 2 * l - m2;
	    function v(h) {
	      if (h > 360) h -= 360; else if (h < 0) h += 360;
	      if (h < 60) return m1 + (m2 - m1) * h / 60;
	      if (h < 180) return m2;
	      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;
	      return m1;
	    }
	    function vv(h) {
	      return Math.round(v(h) * 255);
	    }
	    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));
	  }
	  d3.hcl = d3_hcl;
	  function d3_hcl(h, c, l) {
	    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);
	  }
	  var d3_hclPrototype = d3_hcl.prototype = new d3_color();
	  d3_hclPrototype.brighter = function(k) {
	    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));
	  };
	  d3_hclPrototype.darker = function(k) {
	    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));
	  };
	  d3_hclPrototype.rgb = function() {
	    return d3_hcl_lab(this.h, this.c, this.l).rgb();
	  };
	  function d3_hcl_lab(h, c, l) {
	    if (isNaN(h)) h = 0;
	    if (isNaN(c)) c = 0;
	    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);
	  }
	  d3.lab = d3_lab;
	  function d3_lab(l, a, b) {
	    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);
	  }
	  var d3_lab_K = 18;
	  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;
	  var d3_labPrototype = d3_lab.prototype = new d3_color();
	  d3_labPrototype.brighter = function(k) {
	    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);
	  };
	  d3_labPrototype.darker = function(k) {
	    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);
	  };
	  d3_labPrototype.rgb = function() {
	    return d3_lab_rgb(this.l, this.a, this.b);
	  };
	  function d3_lab_rgb(l, a, b) {
	    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;
	    x = d3_lab_xyz(x) * d3_lab_X;
	    y = d3_lab_xyz(y) * d3_lab_Y;
	    z = d3_lab_xyz(z) * d3_lab_Z;
	    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));
	  }
	  function d3_lab_hcl(l, a, b) {
	    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);
	  }
	  function d3_lab_xyz(x) {
	    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;
	  }
	  function d3_xyz_lab(x) {
	    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;
	  }
	  function d3_xyz_rgb(r) {
	    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));
	  }
	  d3.rgb = d3_rgb;
	  function d3_rgb(r, g, b) {
	    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse("" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);
	  }
	  function d3_rgbNumber(value) {
	    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);
	  }
	  function d3_rgbString(value) {
	    return d3_rgbNumber(value) + "";
	  }
	  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();
	  d3_rgbPrototype.brighter = function(k) {
	    k = Math.pow(.7, arguments.length ? k : 1);
	    var r = this.r, g = this.g, b = this.b, i = 30;
	    if (!r && !g && !b) return new d3_rgb(i, i, i);
	    if (r && r < i) r = i;
	    if (g && g < i) g = i;
	    if (b && b < i) b = i;
	    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));
	  };
	  d3_rgbPrototype.darker = function(k) {
	    k = Math.pow(.7, arguments.length ? k : 1);
	    return new d3_rgb(k * this.r, k * this.g, k * this.b);
	  };
	  d3_rgbPrototype.hsl = function() {
	    return d3_rgb_hsl(this.r, this.g, this.b);
	  };
	  d3_rgbPrototype.toString = function() {
	    return "#" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);
	  };
	  function d3_rgb_hex(v) {
	    return v < 16 ? "0" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);
	  }
	  function d3_rgb_parse(format, rgb, hsl) {
	    var r = 0, g = 0, b = 0, m1, m2, color;
	    m1 = /([a-z]+)\((.*)\)/.exec(format = format.toLowerCase());
	    if (m1) {
	      m2 = m1[2].split(",");
	      switch (m1[1]) {
	       case "hsl":
	        {
	          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);
	        }

	       case "rgb":
	        {
	          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));
	        }
	      }
	    }
	    if (color = d3_rgb_names.get(format)) {
	      return rgb(color.r, color.g, color.b);
	    }
	    if (format != null && format.charAt(0) === "#" && !isNaN(color = parseInt(format.slice(1), 16))) {
	      if (format.length === 4) {
	        r = (color & 3840) >> 4;
	        r = r >> 4 | r;
	        g = color & 240;
	        g = g >> 4 | g;
	        b = color & 15;
	        b = b << 4 | b;
	      } else if (format.length === 7) {
	        r = (color & 16711680) >> 16;
	        g = (color & 65280) >> 8;
	        b = color & 255;
	      }
	    }
	    return rgb(r, g, b);
	  }
	  function d3_rgb_hsl(r, g, b) {
	    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;
	    if (d) {
	      s = l < .5 ? d / (max + min) : d / (2 - max - min);
	      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;
	      h *= 60;
	    } else {
	      h = NaN;
	      s = l > 0 && l < 1 ? 0 : h;
	    }
	    return new d3_hsl(h, s, l);
	  }
	  function d3_rgb_lab(r, g, b) {
	    r = d3_rgb_xyz(r);
	    g = d3_rgb_xyz(g);
	    b = d3_rgb_xyz(b);
	    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);
	    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));
	  }
	  function d3_rgb_xyz(r) {
	    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);
	  }
	  function d3_rgb_parseNumber(c) {
	    var f = parseFloat(c);
	    return c.charAt(c.length - 1) === "%" ? Math.round(f * 2.55) : f;
	  }
	  var d3_rgb_names = d3.map({
	    aliceblue: 15792383,
	    antiquewhite: 16444375,
	    aqua: 65535,
	    aquamarine: 8388564,
	    azure: 15794175,
	    beige: 16119260,
	    bisque: 16770244,
	    black: 0,
	    blanchedalmond: 16772045,
	    blue: 255,
	    blueviolet: 9055202,
	    brown: 10824234,
	    burlywood: 14596231,
	    cadetblue: 6266528,
	    chartreuse: 8388352,
	    chocolate: 13789470,
	    coral: 16744272,
	    cornflowerblue: 6591981,
	    cornsilk: 16775388,
	    crimson: 14423100,
	    cyan: 65535,
	    darkblue: 139,
	    darkcyan: 35723,
	    darkgoldenrod: 12092939,
	    darkgray: 11119017,
	    darkgreen: 25600,
	    darkgrey: 11119017,
	    darkkhaki: 12433259,
	    darkmagenta: 9109643,
	    darkolivegreen: 5597999,
	    darkorange: 16747520,
	    darkorchid: 10040012,
	    darkred: 9109504,
	    darksalmon: 15308410,
	    darkseagreen: 9419919,
	    darkslateblue: 4734347,
	    darkslategray: 3100495,
	    darkslategrey: 3100495,
	    darkturquoise: 52945,
	    darkviolet: 9699539,
	    deeppink: 16716947,
	    deepskyblue: 49151,
	    dimgray: 6908265,
	    dimgrey: 6908265,
	    dodgerblue: 2003199,
	    firebrick: 11674146,
	    floralwhite: 16775920,
	    forestgreen: 2263842,
	    fuchsia: 16711935,
	    gainsboro: 14474460,
	    ghostwhite: 16316671,
	    gold: 16766720,
	    goldenrod: 14329120,
	    gray: 8421504,
	    green: 32768,
	    greenyellow: 11403055,
	    grey: 8421504,
	    honeydew: 15794160,
	    hotpink: 16738740,
	    indianred: 13458524,
	    indigo: 4915330,
	    ivory: 16777200,
	    khaki: 15787660,
	    lavender: 15132410,
	    lavenderblush: 16773365,
	    lawngreen: 8190976,
	    lemonchiffon: 16775885,
	    lightblue: 11393254,
	    lightcoral: 15761536,
	    lightcyan: 14745599,
	    lightgoldenrodyellow: 16448210,
	    lightgray: 13882323,
	    lightgreen: 9498256,
	    lightgrey: 13882323,
	    lightpink: 16758465,
	    lightsalmon: 16752762,
	    lightseagreen: 2142890,
	    lightskyblue: 8900346,
	    lightslategray: 7833753,
	    lightslategrey: 7833753,
	    lightsteelblue: 11584734,
	    lightyellow: 16777184,
	    lime: 65280,
	    limegreen: 3329330,
	    linen: 16445670,
	    magenta: 16711935,
	    maroon: 8388608,
	    mediumaquamarine: 6737322,
	    mediumblue: 205,
	    mediumorchid: 12211667,
	    mediumpurple: 9662683,
	    mediumseagreen: 3978097,
	    mediumslateblue: 8087790,
	    mediumspringgreen: 64154,
	    mediumturquoise: 4772300,
	    mediumvioletred: 13047173,
	    midnightblue: 1644912,
	    mintcream: 16121850,
	    mistyrose: 16770273,
	    moccasin: 16770229,
	    navajowhite: 16768685,
	    navy: 128,
	    oldlace: 16643558,
	    olive: 8421376,
	    olivedrab: 7048739,
	    orange: 16753920,
	    orangered: 16729344,
	    orchid: 14315734,
	    palegoldenrod: 15657130,
	    palegreen: 10025880,
	    paleturquoise: 11529966,
	    palevioletred: 14381203,
	    papayawhip: 16773077,
	    peachpuff: 16767673,
	    peru: 13468991,
	    pink: 16761035,
	    plum: 14524637,
	    powderblue: 11591910,
	    purple: 8388736,
	    rebeccapurple: 6697881,
	    red: 16711680,
	    rosybrown: 12357519,
	    royalblue: 4286945,
	    saddlebrown: 9127187,
	    salmon: 16416882,
	    sandybrown: 16032864,
	    seagreen: 3050327,
	    seashell: 16774638,
	    sienna: 10506797,
	    silver: 12632256,
	    skyblue: 8900331,
	    slateblue: 6970061,
	    slategray: 7372944,
	    slategrey: 7372944,
	    snow: 16775930,
	    springgreen: 65407,
	    steelblue: 4620980,
	    tan: 13808780,
	    teal: 32896,
	    thistle: 14204888,
	    tomato: 16737095,
	    turquoise: 4251856,
	    violet: 15631086,
	    wheat: 16113331,
	    white: 16777215,
	    whitesmoke: 16119285,
	    yellow: 16776960,
	    yellowgreen: 10145074
	  });
	  d3_rgb_names.forEach(function(key, value) {
	    d3_rgb_names.set(key, d3_rgbNumber(value));
	  });
	  function d3_functor(v) {
	    return typeof v === "function" ? v : function() {
	      return v;
	    };
	  }
	  d3.functor = d3_functor;
	  d3.xhr = d3_xhrType(d3_identity);
	  function d3_xhrType(response) {
	    return function(url, mimeType, callback) {
	      if (arguments.length === 2 && typeof mimeType === "function") callback = mimeType, 
	      mimeType = null;
	      return d3_xhr(url, mimeType, response, callback);
	    };
	  }
	  function d3_xhr(url, mimeType, response, callback) {
	    var xhr = {}, dispatch = d3.dispatch("beforesend", "progress", "load", "error"), headers = {}, request = new XMLHttpRequest(), responseType = null;
	    if (this.XDomainRequest && !("withCredentials" in request) && /^(http(s)?:)?\/\//.test(url)) request = new XDomainRequest();
	    "onload" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {
	      request.readyState > 3 && respond();
	    };
	    function respond() {
	      var status = request.status, result;
	      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {
	        try {
	          result = response.call(xhr, request);
	        } catch (e) {
	          dispatch.error.call(xhr, e);
	          return;
	        }
	        dispatch.load.call(xhr, result);
	      } else {
	        dispatch.error.call(xhr, request);
	      }
	    }
	    request.onprogress = function(event) {
	      var o = d3.event;
	      d3.event = event;
	      try {
	        dispatch.progress.call(xhr, request);
	      } finally {
	        d3.event = o;
	      }
	    };
	    xhr.header = function(name, value) {
	      name = (name + "").toLowerCase();
	      if (arguments.length < 2) return headers[name];
	      if (value == null) delete headers[name]; else headers[name] = value + "";
	      return xhr;
	    };
	    xhr.mimeType = function(value) {
	      if (!arguments.length) return mimeType;
	      mimeType = value == null ? null : value + "";
	      return xhr;
	    };
	    xhr.responseType = function(value) {
	      if (!arguments.length) return responseType;
	      responseType = value;
	      return xhr;
	    };
	    xhr.response = function(value) {
	      response = value;
	      return xhr;
	    };
	    [ "get", "post" ].forEach(function(method) {
	      xhr[method] = function() {
	        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));
	      };
	    });
	    xhr.send = function(method, data, callback) {
	      if (arguments.length === 2 && typeof data === "function") callback = data, data = null;
	      request.open(method, url, true);
	      if (mimeType != null && !("accept" in headers)) headers["accept"] = mimeType + ",*/*";
	      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);
	      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);
	      if (responseType != null) request.responseType = responseType;
	      if (callback != null) xhr.on("error", callback).on("load", function(request) {
	        callback(null, request);
	      });
	      dispatch.beforesend.call(xhr, request);
	      request.send(data == null ? null : data);
	      return xhr;
	    };
	    xhr.abort = function() {
	      request.abort();
	      return xhr;
	    };
	    d3.rebind(xhr, dispatch, "on");
	    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));
	  }
	  function d3_xhr_fixCallback(callback) {
	    return callback.length === 1 ? function(error, request) {
	      callback(error == null ? request : null);
	    } : callback;
	  }
	  function d3_xhrHasResponse(request) {
	    var type = request.responseType;
	    return type && type !== "text" ? request.response : request.responseText;
	  }
	  d3.dsv = function(delimiter, mimeType) {
	    var reFormat = new RegExp('["' + delimiter + "\n]"), delimiterCode = delimiter.charCodeAt(0);
	    function dsv(url, row, callback) {
	      if (arguments.length < 3) callback = row, row = null;
	      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);
	      xhr.row = function(_) {
	        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;
	      };
	      return xhr;
	    }
	    function response(request) {
	      return dsv.parse(request.responseText);
	    }
	    function typedResponse(f) {
	      return function(request) {
	        return dsv.parse(request.responseText, f);
	      };
	    }
	    dsv.parse = function(text, f) {
	      var o;
	      return dsv.parseRows(text, function(row, i) {
	        if (o) return o(row, i - 1);
	        var a = new Function("d", "return {" + row.map(function(name, i) {
	          return JSON.stringify(name) + ": d[" + i + "]";
	        }).join(",") + "}");
	        o = f ? function(row, i) {
	          return f(a(row), i);
	        } : a;
	      });
	    };
	    dsv.parseRows = function(text, f) {
	      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;
	      function token() {
	        if (I >= N) return EOF;
	        if (eol) return eol = false, EOL;
	        var j = I;
	        if (text.charCodeAt(j) === 34) {
	          var i = j;
	          while (i++ < N) {
	            if (text.charCodeAt(i) === 34) {
	              if (text.charCodeAt(i + 1) !== 34) break;
	              ++i;
	            }
	          }
	          I = i + 2;
	          var c = text.charCodeAt(i + 1);
	          if (c === 13) {
	            eol = true;
	            if (text.charCodeAt(i + 2) === 10) ++I;
	          } else if (c === 10) {
	            eol = true;
	          }
	          return text.slice(j + 1, i).replace(/""/g, '"');
	        }
	        while (I < N) {
	          var c = text.charCodeAt(I++), k = 1;
	          if (c === 10) eol = true; else if (c === 13) {
	            eol = true;
	            if (text.charCodeAt(I) === 10) ++I, ++k;
	          } else if (c !== delimiterCode) continue;
	          return text.slice(j, I - k);
	        }
	        return text.slice(j);
	      }
	      while ((t = token()) !== EOF) {
	        var a = [];
	        while (t !== EOL && t !== EOF) {
	          a.push(t);
	          t = token();
	        }
	        if (f && (a = f(a, n++)) == null) continue;
	        rows.push(a);
	      }
	      return rows;
	    };
	    dsv.format = function(rows) {
	      if (Array.isArray(rows[0])) return dsv.formatRows(rows);
	      var fieldSet = new d3_Set(), fields = [];
	      rows.forEach(function(row) {
	        for (var field in row) {
	          if (!fieldSet.has(field)) {
	            fields.push(fieldSet.add(field));
	          }
	        }
	      });
	      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {
	        return fields.map(function(field) {
	          return formatValue(row[field]);
	        }).join(delimiter);
	      })).join("\n");
	    };
	    dsv.formatRows = function(rows) {
	      return rows.map(formatRow).join("\n");
	    };
	    function formatRow(row) {
	      return row.map(formatValue).join(delimiter);
	    }
	    function formatValue(text) {
	      return reFormat.test(text) ? '"' + text.replace(/\"/g, '""') + '"' : text;
	    }
	    return dsv;
	  };
	  d3.csv = d3.dsv(",", "text/csv");
	  d3.tsv = d3.dsv("	", "text/tab-separated-values");
	  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, "requestAnimationFrame")] || function(callback) {
	    setTimeout(callback, 17);
	  };
	  d3.timer = function() {
	    d3_timer.apply(this, arguments);
	  };
	  function d3_timer(callback, delay, then) {
	    var n = arguments.length;
	    if (n < 2) delay = 0;
	    if (n < 3) then = Date.now();
	    var time = then + delay, timer = {
	      c: callback,
	      t: time,
	      n: null
	    };
	    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;
	    d3_timer_queueTail = timer;
	    if (!d3_timer_interval) {
	      d3_timer_timeout = clearTimeout(d3_timer_timeout);
	      d3_timer_interval = 1;
	      d3_timer_frame(d3_timer_step);
	    }
	    return timer;
	  }
	  function d3_timer_step() {
	    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;
	    if (delay > 24) {
	      if (isFinite(delay)) {
	        clearTimeout(d3_timer_timeout);
	        d3_timer_timeout = setTimeout(d3_timer_step, delay);
	      }
	      d3_timer_interval = 0;
	    } else {
	      d3_timer_interval = 1;
	      d3_timer_frame(d3_timer_step);
	    }
	  }
	  d3.timer.flush = function() {
	    d3_timer_mark();
	    d3_timer_sweep();
	  };
	  function d3_timer_mark() {
	    var now = Date.now(), timer = d3_timer_queueHead;
	    while (timer) {
	      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;
	      timer = timer.n;
	    }
	    return now;
	  }
	  function d3_timer_sweep() {
	    var t0, t1 = d3_timer_queueHead, time = Infinity;
	    while (t1) {
	      if (t1.c) {
	        if (t1.t < time) time = t1.t;
	        t1 = (t0 = t1).n;
	      } else {
	        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;
	      }
	    }
	    d3_timer_queueTail = t0;
	    return time;
	  }
	  function d3_format_precision(x, p) {
	    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);
	  }
	  d3.round = function(x, n) {
	    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);
	  };
	  var d3_formatPrefixes = [ "y", "z", "a", "f", "p", "n", "µ", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y" ].map(d3_formatPrefix);
	  d3.formatPrefix = function(value, precision) {
	    var i = 0;
	    if (value = +value) {
	      if (value < 0) value *= -1;
	      if (precision) value = d3.round(value, d3_format_precision(value, precision));
	      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);
	      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));
	    }
	    return d3_formatPrefixes[8 + i / 3];
	  };
	  function d3_formatPrefix(d, i) {
	    var k = Math.pow(10, abs(8 - i) * 3);
	    return {
	      scale: i > 8 ? function(d) {
	        return d / k;
	      } : function(d) {
	        return d * k;
	      },
	      symbol: d
	    };
	  }
	  function d3_locale_numberFormat(locale) {
	    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {
	      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;
	      while (i > 0 && g > 0) {
	        if (length + g + 1 > width) g = Math.max(1, width - length);
	        t.push(value.substring(i -= g, i + g));
	        if ((length += g + 1) > width) break;
	        g = locale_grouping[j = (j + 1) % locale_grouping.length];
	      }
	      return t.reverse().join(locale_thousands);
	    } : d3_identity;
	    return function(specifier) {
	      var match = d3_format_re.exec(specifier), fill = match[1] || " ", align = match[2] || ">", sign = match[3] || "-", symbol = match[4] || "", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = "", suffix = "", integer = false, exponent = true;
	      if (precision) precision = +precision.substring(1);
	      if (zfill || fill === "0" && align === "=") {
	        zfill = fill = "0";
	        align = "=";
	      }
	      switch (type) {
	       case "n":
	        comma = true;
	        type = "g";
	        break;

	       case "%":
	        scale = 100;
	        suffix = "%";
	        type = "f";
	        break;

	       case "p":
	        scale = 100;
	        suffix = "%";
	        type = "r";
	        break;

	       case "b":
	       case "o":
	       case "x":
	       case "X":
	        if (symbol === "#") prefix = "0" + type.toLowerCase();

	       case "c":
	        exponent = false;

	       case "d":
	        integer = true;
	        precision = 0;
	        break;

	       case "s":
	        scale = -1;
	        type = "r";
	        break;
	      }
	      if (symbol === "$") prefix = locale_currency[0], suffix = locale_currency[1];
	      if (type == "r" && !precision) type = "g";
	      if (precision != null) {
	        if (type == "g") precision = Math.max(1, Math.min(21, precision)); else if (type == "e" || type == "f") precision = Math.max(0, Math.min(20, precision));
	      }
	      type = d3_format_types.get(type) || d3_format_typeDefault;
	      var zcomma = zfill && comma;
	      return function(value) {
	        var fullSuffix = suffix;
	        if (integer && value % 1) return "";
	        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, "-") : sign === "-" ? "" : sign;
	        if (scale < 0) {
	          var unit = d3.formatPrefix(value, precision);
	          value = unit.scale(value);
	          fullSuffix = unit.symbol + suffix;
	        } else {
	          value *= scale;
	        }
	        value = type(value, precision);
	        var i = value.lastIndexOf("."), before, after;
	        if (i < 0) {
	          var j = exponent ? value.lastIndexOf("e") : -1;
	          if (j < 0) before = value, after = ""; else before = value.substring(0, j), after = value.substring(j);
	        } else {
	          before = value.substring(0, i);
	          after = locale_decimal + value.substring(i + 1);
	        }
	        if (!zfill && comma) before = formatGroup(before, Infinity);
	        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : "";
	        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);
	        negative += prefix;
	        value = before + after;
	        return (align === "<" ? negative + value + padding : align === ">" ? padding + negative + value : align === "^" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;
	      };
	    };
	  }
	  var d3_format_re = /(?:([^{])?([<>=^]))?([+\- ])?([$#])?(0)?(\d+)?(,)?(\.-?\d+)?([a-z%])?/i;
	  var d3_format_types = d3.map({
	    b: function(x) {
	      return x.toString(2);
	    },
	    c: function(x) {
	      return String.fromCharCode(x);
	    },
	    o: function(x) {
	      return x.toString(8);
	    },
	    x: function(x) {
	      return x.toString(16);
	    },
	    X: function(x) {
	      return x.toString(16).toUpperCase();
	    },
	    g: function(x, p) {
	      return x.toPrecision(p);
	    },
	    e: function(x, p) {
	      return x.toExponential(p);
	    },
	    f: function(x, p) {
	      return x.toFixed(p);
	    },
	    r: function(x, p) {
	      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));
	    }
	  });
	  function d3_format_typeDefault(x) {
	    return x + "";
	  }
	  var d3_time = d3.time = {}, d3_date = Date;
	  function d3_date_utc() {
	    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);
	  }
	  d3_date_utc.prototype = {
	    getDate: function() {
	      return this._.getUTCDate();
	    },
	    getDay: function() {
	      return this._.getUTCDay();
	    },
	    getFullYear: function() {
	      return this._.getUTCFullYear();
	    },
	    getHours: function() {
	      return this._.getUTCHours();
	    },
	    getMilliseconds: function() {
	      return this._.getUTCMilliseconds();
	    },
	    getMinutes: function() {
	      return this._.getUTCMinutes();
	    },
	    getMonth: function() {
	      return this._.getUTCMonth();
	    },
	    getSeconds: function() {
	      return this._.getUTCSeconds();
	    },
	    getTime: function() {
	      return this._.getTime();
	    },
	    getTimezoneOffset: function() {
	      return 0;
	    },
	    valueOf: function() {
	      return this._.valueOf();
	    },
	    setDate: function() {
	      d3_time_prototype.setUTCDate.apply(this._, arguments);
	    },
	    setDay: function() {
	      d3_time_prototype.setUTCDay.apply(this._, arguments);
	    },
	    setFullYear: function() {
	      d3_time_prototype.setUTCFullYear.apply(this._, arguments);
	    },
	    setHours: function() {
	      d3_time_prototype.setUTCHours.apply(this._, arguments);
	    },
	    setMilliseconds: function() {
	      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);
	    },
	    setMinutes: function() {
	      d3_time_prototype.setUTCMinutes.apply(this._, arguments);
	    },
	    setMonth: function() {
	      d3_time_prototype.setUTCMonth.apply(this._, arguments);
	    },
	    setSeconds: function() {
	      d3_time_prototype.setUTCSeconds.apply(this._, arguments);
	    },
	    setTime: function() {
	      d3_time_prototype.setTime.apply(this._, arguments);
	    }
	  };
	  var d3_time_prototype = Date.prototype;
	  function d3_time_interval(local, step, number) {
	    function round(date) {
	      var d0 = local(date), d1 = offset(d0, 1);
	      return date - d0 < d1 - date ? d0 : d1;
	    }
	    function ceil(date) {
	      step(date = local(new d3_date(date - 1)), 1);
	      return date;
	    }
	    function offset(date, k) {
	      step(date = new d3_date(+date), k);
	      return date;
	    }
	    function range(t0, t1, dt) {
	      var time = ceil(t0), times = [];
	      if (dt > 1) {
	        while (time < t1) {
	          if (!(number(time) % dt)) times.push(new Date(+time));
	          step(time, 1);
	        }
	      } else {
	        while (time < t1) times.push(new Date(+time)), step(time, 1);
	      }
	      return times;
	    }
	    function range_utc(t0, t1, dt) {
	      try {
	        d3_date = d3_date_utc;
	        var utc = new d3_date_utc();
	        utc._ = t0;
	        return range(utc, t1, dt);
	      } finally {
	        d3_date = Date;
	      }
	    }
	    local.floor = local;
	    local.round = round;
	    local.ceil = ceil;
	    local.offset = offset;
	    local.range = range;
	    var utc = local.utc = d3_time_interval_utc(local);
	    utc.floor = utc;
	    utc.round = d3_time_interval_utc(round);
	    utc.ceil = d3_time_interval_utc(ceil);
	    utc.offset = d3_time_interval_utc(offset);
	    utc.range = range_utc;
	    return local;
	  }
	  function d3_time_interval_utc(method) {
	    return function(date, k) {
	      try {
	        d3_date = d3_date_utc;
	        var utc = new d3_date_utc();
	        utc._ = date;
	        return method(utc, k)._;
	      } finally {
	        d3_date = Date;
	      }
	    };
	  }
	  d3_time.year = d3_time_interval(function(date) {
	    date = d3_time.day(date);
	    date.setMonth(0, 1);
	    return date;
	  }, function(date, offset) {
	    date.setFullYear(date.getFullYear() + offset);
	  }, function(date) {
	    return date.getFullYear();
	  });
	  d3_time.years = d3_time.year.range;
	  d3_time.years.utc = d3_time.year.utc.range;
	  d3_time.day = d3_time_interval(function(date) {
	    var day = new d3_date(2e3, 0);
	    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());
	    return day;
	  }, function(date, offset) {
	    date.setDate(date.getDate() + offset);
	  }, function(date) {
	    return date.getDate() - 1;
	  });
	  d3_time.days = d3_time.day.range;
	  d3_time.days.utc = d3_time.day.utc.range;
	  d3_time.dayOfYear = function(date) {
	    var year = d3_time.year(date);
	    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);
	  };
	  [ "sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday" ].forEach(function(day, i) {
	    i = 7 - i;
	    var interval = d3_time[day] = d3_time_interval(function(date) {
	      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);
	      return date;
	    }, function(date, offset) {
	      date.setDate(date.getDate() + Math.floor(offset) * 7);
	    }, function(date) {
	      var day = d3_time.year(date).getDay();
	      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);
	    });
	    d3_time[day + "s"] = interval.range;
	    d3_time[day + "s"].utc = interval.utc.range;
	    d3_time[day + "OfYear"] = function(date) {
	      var day = d3_time.year(date).getDay();
	      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);
	    };
	  });
	  d3_time.week = d3_time.sunday;
	  d3_time.weeks = d3_time.sunday.range;
	  d3_time.weeks.utc = d3_time.sunday.utc.range;
	  d3_time.weekOfYear = d3_time.sundayOfYear;
	  function d3_locale_timeFormat(locale) {
	    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;
	    function d3_time_format(template) {
	      var n = template.length;
	      function format(date) {
	        var string = [], i = -1, j = 0, c, p, f;
	        while (++i < n) {
	          if (template.charCodeAt(i) === 37) {
	            string.push(template.slice(j, i));
	            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);
	            if (f = d3_time_formats[c]) c = f(date, p == null ? c === "e" ? " " : "0" : p);
	            string.push(c);
	            j = i + 1;
	          }
	        }
	        string.push(template.slice(j, i));
	        return string.join("");
	      }
	      format.parse = function(string) {
	        var d = {
	          y: 1900,
	          m: 0,
	          d: 1,
	          H: 0,
	          M: 0,
	          S: 0,
	          L: 0,
	          Z: null
	        }, i = d3_time_parse(d, template, string, 0);
	        if (i != string.length) return null;
	        if ("p" in d) d.H = d.H % 12 + d.p * 12;
	        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();
	        if ("j" in d) date.setFullYear(d.y, 0, d.j); else if ("W" in d || "U" in d) {
	          if (!("w" in d)) d.w = "W" in d ? 1 : 0;
	          date.setFullYear(d.y, 0, 1);
	          date.setFullYear(d.y, 0, "W" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);
	        } else date.setFullYear(d.y, d.m, d.d);
	        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);
	        return localZ ? date._ : date;
	      };
	      format.toString = function() {
	        return template;
	      };
	      return format;
	    }
	    function d3_time_parse(date, template, string, j) {
	      var c, p, t, i = 0, n = template.length, m = string.length;
	      while (i < n) {
	        if (j >= m) return -1;
	        c = template.charCodeAt(i++);
	        if (c === 37) {
	          t = template.charAt(i++);
	          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];
	          if (!p || (j = p(date, string, j)) < 0) return -1;
	        } else if (c != string.charCodeAt(j++)) {
	          return -1;
	        }
	      }
	      return j;
	    }
	    d3_time_format.utc = function(template) {
	      var local = d3_time_format(template);
	      function format(date) {
	        try {
	          d3_date = d3_date_utc;
	          var utc = new d3_date();
	          utc._ = date;
	          return local(utc);
	        } finally {
	          d3_date = Date;
	        }
	      }
	      format.parse = function(string) {
	        try {
	          d3_date = d3_date_utc;
	          var date = local.parse(string);
	          return date && date._;
	        } finally {
	          d3_date = Date;
	        }
	      };
	      format.toString = local.toString;
	      return format;
	    };
	    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;
	    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);
	    locale_periods.forEach(function(p, i) {
	      d3_time_periodLookup.set(p.toLowerCase(), i);
	    });
	    var d3_time_formats = {
	      a: function(d) {
	        return locale_shortDays[d.getDay()];
	      },
	      A: function(d) {
	        return locale_days[d.getDay()];
	      },
	      b: function(d) {
	        return locale_shortMonths[d.getMonth()];
	      },
	      B: function(d) {
	        return locale_months[d.getMonth()];
	      },
	      c: d3_time_format(locale_dateTime),
	      d: function(d, p) {
	        return d3_time_formatPad(d.getDate(), p, 2);
	      },
	      e: function(d, p) {
	        return d3_time_formatPad(d.getDate(), p, 2);
	      },
	      H: function(d, p) {
	        return d3_time_formatPad(d.getHours(), p, 2);
	      },
	      I: function(d, p) {
	        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);
	      },
	      j: function(d, p) {
	        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);
	      },
	      L: function(d, p) {
	        return d3_time_formatPad(d.getMilliseconds(), p, 3);
	      },
	      m: function(d, p) {
	        return d3_time_formatPad(d.getMonth() + 1, p, 2);
	      },
	      M: function(d, p) {
	        return d3_time_formatPad(d.getMinutes(), p, 2);
	      },
	      p: function(d) {
	        return locale_periods[+(d.getHours() >= 12)];
	      },
	      S: function(d, p) {
	        return d3_time_formatPad(d.getSeconds(), p, 2);
	      },
	      U: function(d, p) {
	        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);
	      },
	      w: function(d) {
	        return d.getDay();
	      },
	      W: function(d, p) {
	        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);
	      },
	      x: d3_time_format(locale_date),
	      X: d3_time_format(locale_time),
	      y: function(d, p) {
	        return d3_time_formatPad(d.getFullYear() % 100, p, 2);
	      },
	      Y: function(d, p) {
	        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);
	      },
	      Z: d3_time_zone,
	      "%": function() {
	        return "%";
	      }
	    };
	    var d3_time_parsers = {
	      a: d3_time_parseWeekdayAbbrev,
	      A: d3_time_parseWeekday,
	      b: d3_time_parseMonthAbbrev,
	      B: d3_time_parseMonth,
	      c: d3_time_parseLocaleFull,
	      d: d3_time_parseDay,
	      e: d3_time_parseDay,
	      H: d3_time_parseHour24,
	      I: d3_time_parseHour24,
	      j: d3_time_parseDayOfYear,
	      L: d3_time_parseMilliseconds,
	      m: d3_time_parseMonthNumber,
	      M: d3_time_parseMinutes,
	      p: d3_time_parseAmPm,
	      S: d3_time_parseSeconds,
	      U: d3_time_parseWeekNumberSunday,
	      w: d3_time_parseWeekdayNumber,
	      W: d3_time_parseWeekNumberMonday,
	      x: d3_time_parseLocaleDate,
	      X: d3_time_parseLocaleTime,
	      y: d3_time_parseYear,
	      Y: d3_time_parseFullYear,
	      Z: d3_time_parseZone,
	      "%": d3_time_parseLiteralPercent
	    };
	    function d3_time_parseWeekdayAbbrev(date, string, i) {
	      d3_time_dayAbbrevRe.lastIndex = 0;
	      var n = d3_time_dayAbbrevRe.exec(string.slice(i));
	      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
	    }
	    function d3_time_parseWeekday(date, string, i) {
	      d3_time_dayRe.lastIndex = 0;
	      var n = d3_time_dayRe.exec(string.slice(i));
	      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
	    }
	    function d3_time_parseMonthAbbrev(date, string, i) {
	      d3_time_monthAbbrevRe.lastIndex = 0;
	      var n = d3_time_monthAbbrevRe.exec(string.slice(i));
	      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
	    }
	    function d3_time_parseMonth(date, string, i) {
	      d3_time_monthRe.lastIndex = 0;
	      var n = d3_time_monthRe.exec(string.slice(i));
	      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
	    }
	    function d3_time_parseLocaleFull(date, string, i) {
	      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);
	    }
	    function d3_time_parseLocaleDate(date, string, i) {
	      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);
	    }
	    function d3_time_parseLocaleTime(date, string, i) {
	      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);
	    }
	    function d3_time_parseAmPm(date, string, i) {
	      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());
	      return n == null ? -1 : (date.p = n, i);
	    }
	    return d3_time_format;
	  }
	  var d3_time_formatPads = {
	    "-": "",
	    _: " ",
	    "0": "0"
	  }, d3_time_numberRe = /^\s*\d+/, d3_time_percentRe = /^%/;
	  function d3_time_formatPad(value, fill, width) {
	    var sign = value < 0 ? "-" : "", string = (sign ? -value : value) + "", length = string.length;
	    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);
	  }
	  function d3_time_formatRe(names) {
	    return new RegExp("^(?:" + names.map(d3.requote).join("|") + ")", "i");
	  }
	  function d3_time_formatLookup(names) {
	    var map = new d3_Map(), i = -1, n = names.length;
	    while (++i < n) map.set(names[i].toLowerCase(), i);
	    return map;
	  }
	  function d3_time_parseWeekdayNumber(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 1));
	    return n ? (date.w = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseWeekNumberSunday(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i));
	    return n ? (date.U = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseWeekNumberMonday(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i));
	    return n ? (date.W = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseFullYear(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 4));
	    return n ? (date.y = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseYear(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
	    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;
	  }
	  function d3_time_parseZone(date, string, i) {
	    return /^[+-]\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, 
	    i + 5) : -1;
	  }
	  function d3_time_expandYear(d) {
	    return d + (d > 68 ? 1900 : 2e3);
	  }
	  function d3_time_parseMonthNumber(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
	    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;
	  }
	  function d3_time_parseDay(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
	    return n ? (date.d = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseDayOfYear(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 3));
	    return n ? (date.j = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseHour24(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
	    return n ? (date.H = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseMinutes(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
	    return n ? (date.M = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseSeconds(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
	    return n ? (date.S = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseMilliseconds(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 3));
	    return n ? (date.L = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_zone(d) {
	    var z = d.getTimezoneOffset(), zs = z > 0 ? "-" : "+", zh = abs(z) / 60 | 0, zm = abs(z) % 60;
	    return zs + d3_time_formatPad(zh, "0", 2) + d3_time_formatPad(zm, "0", 2);
	  }
	  function d3_time_parseLiteralPercent(date, string, i) {
	    d3_time_percentRe.lastIndex = 0;
	    var n = d3_time_percentRe.exec(string.slice(i, i + 1));
	    return n ? i + n[0].length : -1;
	  }
	  function d3_time_formatMulti(formats) {
	    var n = formats.length, i = -1;
	    while (++i < n) formats[i][0] = this(formats[i][0]);
	    return function(date) {
	      var i = 0, f = formats[i];
	      while (!f[1](date)) f = formats[++i];
	      return f[0](date);
	    };
	  }
	  d3.locale = function(locale) {
	    return {
	      numberFormat: d3_locale_numberFormat(locale),
	      timeFormat: d3_locale_timeFormat(locale)
	    };
	  };
	  var d3_locale_enUS = d3.locale({
	    decimal: ".",
	    thousands: ",",
	    grouping: [ 3 ],
	    currency: [ "$", "" ],
	    dateTime: "%a %b %e %X %Y",
	    date: "%m/%d/%Y",
	    time: "%H:%M:%S",
	    periods: [ "AM", "PM" ],
	    days: [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ],
	    shortDays: [ "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" ],
	    months: [ "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ],
	    shortMonths: [ "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" ]
	  });
	  d3.format = d3_locale_enUS.numberFormat;
	  d3.geo = {};
	  function d3_adder() {}
	  d3_adder.prototype = {
	    s: 0,
	    t: 0,
	    add: function(y) {
	      d3_adderSum(y, this.t, d3_adderTemp);
	      d3_adderSum(d3_adderTemp.s, this.s, this);
	      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;
	    },
	    reset: function() {
	      this.s = this.t = 0;
	    },
	    valueOf: function() {
	      return this.s;
	    }
	  };
	  var d3_adderTemp = new d3_adder();
	  function d3_adderSum(a, b, o) {
	    var x = o.s = a + b, bv = x - a, av = x - bv;
	    o.t = a - av + (b - bv);
	  }
	  d3.geo.stream = function(object, listener) {
	    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {
	      d3_geo_streamObjectType[object.type](object, listener);
	    } else {
	      d3_geo_streamGeometry(object, listener);
	    }
	  };
	  function d3_geo_streamGeometry(geometry, listener) {
	    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {
	      d3_geo_streamGeometryType[geometry.type](geometry, listener);
	    }
	  }
	  var d3_geo_streamObjectType = {
	    Feature: function(feature, listener) {
	      d3_geo_streamGeometry(feature.geometry, listener);
	    },
	    FeatureCollection: function(object, listener) {
	      var features = object.features, i = -1, n = features.length;
	      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);
	    }
	  };
	  var d3_geo_streamGeometryType = {
	    Sphere: function(object, listener) {
	      listener.sphere();
	    },
	    Point: function(object, listener) {
	      object = object.coordinates;
	      listener.point(object[0], object[1], object[2]);
	    },
	    MultiPoint: function(object, listener) {
	      var coordinates = object.coordinates, i = -1, n = coordinates.length;
	      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);
	    },
	    LineString: function(object, listener) {
	      d3_geo_streamLine(object.coordinates, listener, 0);
	    },
	    MultiLineString: function(object, listener) {
	      var coordinates = object.coordinates, i = -1, n = coordinates.length;
	      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);
	    },
	    Polygon: function(object, listener) {
	      d3_geo_streamPolygon(object.coordinates, listener);
	    },
	    MultiPolygon: function(object, listener) {
	      var coordinates = object.coordinates, i = -1, n = coordinates.length;
	      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);
	    },
	    GeometryCollection: function(object, listener) {
	      var geometries = object.geometries, i = -1, n = geometries.length;
	      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);
	    }
	  };
	  function d3_geo_streamLine(coordinates, listener, closed) {
	    var i = -1, n = coordinates.length - closed, coordinate;
	    listener.lineStart();
	    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);
	    listener.lineEnd();
	  }
	  function d3_geo_streamPolygon(coordinates, listener) {
	    var i = -1, n = coordinates.length;
	    listener.polygonStart();
	    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);
	    listener.polygonEnd();
	  }
	  d3.geo.area = function(object) {
	    d3_geo_areaSum = 0;
	    d3.geo.stream(object, d3_geo_area);
	    return d3_geo_areaSum;
	  };
	  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();
	  var d3_geo_area = {
	    sphere: function() {
	      d3_geo_areaSum += 4 * π;
	    },
	    point: d3_noop,
	    lineStart: d3_noop,
	    lineEnd: d3_noop,
	    polygonStart: function() {
	      d3_geo_areaRingSum.reset();
	      d3_geo_area.lineStart = d3_geo_areaRingStart;
	    },
	    polygonEnd: function() {
	      var area = 2 * d3_geo_areaRingSum;
	      d3_geo_areaSum += area < 0 ? 4 * π + area : area;
	      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;
	    }
	  };
	  function d3_geo_areaRingStart() {
	    var λ00, φ00, λ0, cosφ0, sinφ0;
	    d3_geo_area.point = function(λ, φ) {
	      d3_geo_area.point = nextPoint;
	      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), 
	      sinφ0 = Math.sin(φ);
	    };
	    function nextPoint(λ, φ) {
	      λ *= d3_radians;
	      φ = φ * d3_radians / 2 + π / 4;
	      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);
	      d3_geo_areaRingSum.add(Math.atan2(v, u));
	      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;
	    }
	    d3_geo_area.lineEnd = function() {
	      nextPoint(λ00, φ00);
	    };
	  }
	  function d3_geo_cartesian(spherical) {
	    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);
	    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];
	  }
	  function d3_geo_cartesianDot(a, b) {
	    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
	  }
	  function d3_geo_cartesianCross(a, b) {
	    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];
	  }
	  function d3_geo_cartesianAdd(a, b) {
	    a[0] += b[0];
	    a[1] += b[1];
	    a[2] += b[2];
	  }
	  function d3_geo_cartesianScale(vector, k) {
	    return [ vector[0] * k, vector[1] * k, vector[2] * k ];
	  }
	  function d3_geo_cartesianNormalize(d) {
	    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);
	    d[0] /= l;
	    d[1] /= l;
	    d[2] /= l;
	  }
	  function d3_geo_spherical(cartesian) {
	    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];
	  }
	  function d3_geo_sphericalEqual(a, b) {
	    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;
	  }
	  d3.geo.bounds = function() {
	    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;
	    var bound = {
	      point: point,
	      lineStart: lineStart,
	      lineEnd: lineEnd,
	      polygonStart: function() {
	        bound.point = ringPoint;
	        bound.lineStart = ringStart;
	        bound.lineEnd = ringEnd;
	        dλSum = 0;
	        d3_geo_area.polygonStart();
	      },
	      polygonEnd: function() {
	        d3_geo_area.polygonEnd();
	        bound.point = point;
	        bound.lineStart = lineStart;
	        bound.lineEnd = lineEnd;
	        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;
	        range[0] = λ0, range[1] = λ1;
	      }
	    };
	    function point(λ, φ) {
	      ranges.push(range = [ λ0 = λ, λ1 = λ ]);
	      if (φ < φ0) φ0 = φ;
	      if (φ > φ1) φ1 = φ;
	    }
	    function linePoint(λ, φ) {
	      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);
	      if (p0) {
	        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);
	        d3_geo_cartesianNormalize(inflection);
	        inflection = d3_geo_spherical(inflection);
	        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;
	        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {
	          var φi = inflection[1] * d3_degrees;
	          if (φi > φ1) φ1 = φi;
	        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {
	          var φi = -inflection[1] * d3_degrees;
	          if (φi < φ0) φ0 = φi;
	        } else {
	          if (φ < φ0) φ0 = φ;
	          if (φ > φ1) φ1 = φ;
	        }
	        if (antimeridian) {
	          if (λ < λ_) {
	            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;
	          } else {
	            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;
	          }
	        } else {
	          if (λ1 >= λ0) {
	            if (λ < λ0) λ0 = λ;
	            if (λ > λ1) λ1 = λ;
	          } else {
	            if (λ > λ_) {
	              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;
	            } else {
	              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;
	            }
	          }
	        }
	      } else {
	        point(λ, φ);
	      }
	      p0 = p, λ_ = λ;
	    }
	    function lineStart() {
	      bound.point = linePoint;
	    }
	    function lineEnd() {
	      range[0] = λ0, range[1] = λ1;
	      bound.point = point;
	      p0 = null;
	    }
	    function ringPoint(λ, φ) {
	      if (p0) {
	        var dλ = λ - λ_;
	        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;
	      } else λ__ = λ, φ__ = φ;
	      d3_geo_area.point(λ, φ);
	      linePoint(λ, φ);
	    }
	    function ringStart() {
	      d3_geo_area.lineStart();
	    }
	    function ringEnd() {
	      ringPoint(λ__, φ__);
	      d3_geo_area.lineEnd();
	      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);
	      range[0] = λ0, range[1] = λ1;
	      p0 = null;
	    }
	    function angle(λ0, λ1) {
	      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;
	    }
	    function compareRanges(a, b) {
	      return a[0] - b[0];
	    }
	    function withinRange(x, range) {
	      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;
	    }
	    return function(feature) {
	      φ1 = λ1 = -(λ0 = φ0 = Infinity);
	      ranges = [];
	      d3.geo.stream(feature, bound);
	      var n = ranges.length;
	      if (n) {
	        ranges.sort(compareRanges);
	        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {
	          b = ranges[i];
	          if (withinRange(b[0], a) || withinRange(b[1], a)) {
	            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];
	            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];
	          } else {
	            merged.push(a = b);
	          }
	        }
	        var best = -Infinity, dλ;
	        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {
	          b = merged[i];
	          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];
	        }
	      }
	      ranges = range = null;
	      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];
	    };
	  }();
	  d3.geo.centroid = function(object) {
	    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;
	    d3.geo.stream(object, d3_geo_centroid);
	    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;
	    if (m < ε2) {
	      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;
	      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;
	      m = x * x + y * y + z * z;
	      if (m < ε2) return [ NaN, NaN ];
	    }
	    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];
	  };
	  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;
	  var d3_geo_centroid = {
	    sphere: d3_noop,
	    point: d3_geo_centroidPoint,
	    lineStart: d3_geo_centroidLineStart,
	    lineEnd: d3_geo_centroidLineEnd,
	    polygonStart: function() {
	      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;
	    },
	    polygonEnd: function() {
	      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;
	    }
	  };
	  function d3_geo_centroidPoint(λ, φ) {
	    λ *= d3_radians;
	    var cosφ = Math.cos(φ *= d3_radians);
	    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));
	  }
	  function d3_geo_centroidPointXYZ(x, y, z) {
	    ++d3_geo_centroidW0;
	    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;
	    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;
	    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;
	  }
	  function d3_geo_centroidLineStart() {
	    var x0, y0, z0;
	    d3_geo_centroid.point = function(λ, φ) {
	      λ *= d3_radians;
	      var cosφ = Math.cos(φ *= d3_radians);
	      x0 = cosφ * Math.cos(λ);
	      y0 = cosφ * Math.sin(λ);
	      z0 = Math.sin(φ);
	      d3_geo_centroid.point = nextPoint;
	      d3_geo_centroidPointXYZ(x0, y0, z0);
	    };
	    function nextPoint(λ, φ) {
	      λ *= d3_radians;
	      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);
	      d3_geo_centroidW1 += w;
	      d3_geo_centroidX1 += w * (x0 + (x0 = x));
	      d3_geo_centroidY1 += w * (y0 + (y0 = y));
	      d3_geo_centroidZ1 += w * (z0 + (z0 = z));
	      d3_geo_centroidPointXYZ(x0, y0, z0);
	    }
	  }
	  function d3_geo_centroidLineEnd() {
	    d3_geo_centroid.point = d3_geo_centroidPoint;
	  }
	  function d3_geo_centroidRingStart() {
	    var λ00, φ00, x0, y0, z0;
	    d3_geo_centroid.point = function(λ, φ) {
	      λ00 = λ, φ00 = φ;
	      d3_geo_centroid.point = nextPoint;
	      λ *= d3_radians;
	      var cosφ = Math.cos(φ *= d3_radians);
	      x0 = cosφ * Math.cos(λ);
	      y0 = cosφ * Math.sin(λ);
	      z0 = Math.sin(φ);
	      d3_geo_centroidPointXYZ(x0, y0, z0);
	    };
	    d3_geo_centroid.lineEnd = function() {
	      nextPoint(λ00, φ00);
	      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;
	      d3_geo_centroid.point = d3_geo_centroidPoint;
	    };
	    function nextPoint(λ, φ) {
	      λ *= d3_radians;
	      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);
	      d3_geo_centroidX2 += v * cx;
	      d3_geo_centroidY2 += v * cy;
	      d3_geo_centroidZ2 += v * cz;
	      d3_geo_centroidW1 += w;
	      d3_geo_centroidX1 += w * (x0 + (x0 = x));
	      d3_geo_centroidY1 += w * (y0 + (y0 = y));
	      d3_geo_centroidZ1 += w * (z0 + (z0 = z));
	      d3_geo_centroidPointXYZ(x0, y0, z0);
	    }
	  }
	  function d3_geo_compose(a, b) {
	    function compose(x, y) {
	      return x = a(x, y), b(x[0], x[1]);
	    }
	    if (a.invert && b.invert) compose.invert = function(x, y) {
	      return x = b.invert(x, y), x && a.invert(x[0], x[1]);
	    };
	    return compose;
	  }
	  function d3_true() {
	    return true;
	  }
	  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {
	    var subject = [], clip = [];
	    segments.forEach(function(segment) {
	      if ((n = segment.length - 1) <= 0) return;
	      var n, p0 = segment[0], p1 = segment[n];
	      if (d3_geo_sphericalEqual(p0, p1)) {
	        listener.lineStart();
	        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);
	        listener.lineEnd();
	        return;
	      }
	      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);
	      a.o = b;
	      subject.push(a);
	      clip.push(b);
	      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);
	      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);
	      a.o = b;
	      subject.push(a);
	      clip.push(b);
	    });
	    clip.sort(compare);
	    d3_geo_clipPolygonLinkCircular(subject);
	    d3_geo_clipPolygonLinkCircular(clip);
	    if (!subject.length) return;
	    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {
	      clip[i].e = entry = !entry;
	    }
	    var start = subject[0], points, point;
	    while (1) {
	      var current = start, isSubject = true;
	      while (current.v) if ((current = current.n) === start) return;
	      points = current.z;
	      listener.lineStart();
	      do {
	        current.v = current.o.v = true;
	        if (current.e) {
	          if (isSubject) {
	            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);
	          } else {
	            interpolate(current.x, current.n.x, 1, listener);
	          }
	          current = current.n;
	        } else {
	          if (isSubject) {
	            points = current.p.z;
	            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);
	          } else {
	            interpolate(current.x, current.p.x, -1, listener);
	          }
	          current = current.p;
	        }
	        current = current.o;
	        points = current.z;
	        isSubject = !isSubject;
	      } while (!current.v);
	      listener.lineEnd();
	    }
	  }
	  function d3_geo_clipPolygonLinkCircular(array) {
	    if (!(n = array.length)) return;
	    var n, i = 0, a = array[0], b;
	    while (++i < n) {
	      a.n = b = array[i];
	      b.p = a;
	      a = b;
	    }
	    a.n = b = array[0];
	    b.p = a;
	  }
	  function d3_geo_clipPolygonIntersection(point, points, other, entry) {
	    this.x = point;
	    this.z = points;
	    this.o = other;
	    this.e = entry;
	    this.v = false;
	    this.n = this.p = null;
	  }
	  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {
	    return function(rotate, listener) {
	      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);
	      var clip = {
	        point: point,
	        lineStart: lineStart,
	        lineEnd: lineEnd,
	        polygonStart: function() {
	          clip.point = pointRing;
	          clip.lineStart = ringStart;
	          clip.lineEnd = ringEnd;
	          segments = [];
	          polygon = [];
	        },
	        polygonEnd: function() {
	          clip.point = point;
	          clip.lineStart = lineStart;
	          clip.lineEnd = lineEnd;
	          segments = d3.merge(segments);
	          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);
	          if (segments.length) {
	            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;
	            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);
	          } else if (clipStartInside) {
	            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;
	            listener.lineStart();
	            interpolate(null, null, 1, listener);
	            listener.lineEnd();
	          }
	          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;
	          segments = polygon = null;
	        },
	        sphere: function() {
	          listener.polygonStart();
	          listener.lineStart();
	          interpolate(null, null, 1, listener);
	          listener.lineEnd();
	          listener.polygonEnd();
	        }
	      };
	      function point(λ, φ) {
	        var point = rotate(λ, φ);
	        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);
	      }
	      function pointLine(λ, φ) {
	        var point = rotate(λ, φ);
	        line.point(point[0], point[1]);
	      }
	      function lineStart() {
	        clip.point = pointLine;
	        line.lineStart();
	      }
	      function lineEnd() {
	        clip.point = point;
	        line.lineEnd();
	      }
	      var segments;
	      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;
	      function pointRing(λ, φ) {
	        ring.push([ λ, φ ]);
	        var point = rotate(λ, φ);
	        ringListener.point(point[0], point[1]);
	      }
	      function ringStart() {
	        ringListener.lineStart();
	        ring = [];
	      }
	      function ringEnd() {
	        pointRing(ring[0][0], ring[0][1]);
	        ringListener.lineEnd();
	        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;
	        ring.pop();
	        polygon.push(ring);
	        ring = null;
	        if (!n) return;
	        if (clean & 1) {
	          segment = ringSegments[0];
	          var n = segment.length - 1, i = -1, point;
	          if (n > 0) {
	            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;
	            listener.lineStart();
	            while (++i < n) listener.point((point = segment[i])[0], point[1]);
	            listener.lineEnd();
	          }
	          return;
	        }
	        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));
	        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));
	      }
	      return clip;
	    };
	  }
	  function d3_geo_clipSegmentLength1(segment) {
	    return segment.length > 1;
	  }
	  function d3_geo_clipBufferListener() {
	    var lines = [], line;
	    return {
	      lineStart: function() {
	        lines.push(line = []);
	      },
	      point: function(λ, φ) {
	        line.push([ λ, φ ]);
	      },
	      lineEnd: d3_noop,
	      buffer: function() {
	        var buffer = lines;
	        lines = [];
	        line = null;
	        return buffer;
	      },
	      rejoin: function() {
	        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));
	      }
	    };
	  }
	  function d3_geo_clipSort(a, b) {
	    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);
	  }
	  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);
	  function d3_geo_clipAntimeridianLine(listener) {
	    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;
	    return {
	      lineStart: function() {
	        listener.lineStart();
	        clean = 1;
	      },
	      point: function(λ1, φ1) {
	        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);
	        if (abs(dλ - π) < ε) {
	          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);
	          listener.point(sλ0, φ0);
	          listener.lineEnd();
	          listener.lineStart();
	          listener.point(sλ1, φ0);
	          listener.point(λ1, φ0);
	          clean = 0;
	        } else if (sλ0 !== sλ1 && dλ >= π) {
	          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;
	          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;
	          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);
	          listener.point(sλ0, φ0);
	          listener.lineEnd();
	          listener.lineStart();
	          listener.point(sλ1, φ0);
	          clean = 0;
	        }
	        listener.point(λ0 = λ1, φ0 = φ1);
	        sλ0 = sλ1;
	      },
	      lineEnd: function() {
	        listener.lineEnd();
	        λ0 = φ0 = NaN;
	      },
	      clean: function() {
	        return 2 - clean;
	      }
	    };
	  }
	  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {
	    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);
	    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;
	  }
	  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {
	    var φ;
	    if (from == null) {
	      φ = direction * halfπ;
	      listener.point(-π, φ);
	      listener.point(0, φ);
	      listener.point(π, φ);
	      listener.point(π, 0);
	      listener.point(π, -φ);
	      listener.point(0, -φ);
	      listener.point(-π, -φ);
	      listener.point(-π, 0);
	      listener.point(-π, φ);
	    } else if (abs(from[0] - to[0]) > ε) {
	      var s = from[0] < to[0] ? π : -π;
	      φ = direction * s / 2;
	      listener.point(-s, φ);
	      listener.point(0, φ);
	      listener.point(s, φ);
	    } else {
	      listener.point(to[0], to[1]);
	    }
	  }
	  function d3_geo_pointInPolygon(point, polygon) {
	    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;
	    d3_geo_areaRingSum.reset();
	    for (var i = 0, n = polygon.length; i < n; ++i) {
	      var ring = polygon[i], m = ring.length;
	      if (!m) continue;
	      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;
	      while (true) {
	        if (j === m) j = 0;
	        point = ring[j];
	        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;
	        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));
	        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;
	        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {
	          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));
	          d3_geo_cartesianNormalize(arc);
	          var intersection = d3_geo_cartesianCross(meridianNormal, arc);
	          d3_geo_cartesianNormalize(intersection);
	          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);
	          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {
	            winding += antimeridian ^ dλ >= 0 ? 1 : -1;
	          }
	        }
	        if (!j++) break;
	        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;
	      }
	    }
	    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;
	  }
	  function d3_geo_clipCircle(radius) {
	    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);
	    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);
	    function visible(λ, φ) {
	      return Math.cos(λ) * Math.cos(φ) > cr;
	    }
	    function clipLine(listener) {
	      var point0, c0, v0, v00, clean;
	      return {
	        lineStart: function() {
	          v00 = v0 = false;
	          clean = 1;
	        },
	        point: function(λ, φ) {
	          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;
	          if (!point0 && (v00 = v0 = v)) listener.lineStart();
	          if (v !== v0) {
	            point2 = intersect(point0, point1);
	            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {
	              point1[0] += ε;
	              point1[1] += ε;
	              v = visible(point1[0], point1[1]);
	            }
	          }
	          if (v !== v0) {
	            clean = 0;
	            if (v) {
	              listener.lineStart();
	              point2 = intersect(point1, point0);
	              listener.point(point2[0], point2[1]);
	            } else {
	              point2 = intersect(point0, point1);
	              listener.point(point2[0], point2[1]);
	              listener.lineEnd();
	            }
	            point0 = point2;
	          } else if (notHemisphere && point0 && smallRadius ^ v) {
	            var t;
	            if (!(c & c0) && (t = intersect(point1, point0, true))) {
	              clean = 0;
	              if (smallRadius) {
	                listener.lineStart();
	                listener.point(t[0][0], t[0][1]);
	                listener.point(t[1][0], t[1][1]);
	                listener.lineEnd();
	              } else {
	                listener.point(t[1][0], t[1][1]);
	                listener.lineEnd();
	                listener.lineStart();
	                listener.point(t[0][0], t[0][1]);
	              }
	            }
	          }
	          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {
	            listener.point(point1[0], point1[1]);
	          }
	          point0 = point1, v0 = v, c0 = c;
	        },
	        lineEnd: function() {
	          if (v0) listener.lineEnd();
	          point0 = null;
	        },
	        clean: function() {
	          return clean | (v00 && v0) << 1;
	        }
	      };
	    }
	    function intersect(a, b, two) {
	      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);
	      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;
	      if (!determinant) return !two && a;
	      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);
	      d3_geo_cartesianAdd(A, B);
	      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);
	      if (t2 < 0) return;
	      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);
	      d3_geo_cartesianAdd(q, A);
	      q = d3_geo_spherical(q);
	      if (!two) return q;
	      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;
	      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;
	      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;
	      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;
	      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {
	        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);
	        d3_geo_cartesianAdd(q1, A);
	        return [ q, d3_geo_spherical(q1) ];
	      }
	    }
	    function code(λ, φ) {
	      var r = smallRadius ? radius : π - radius, code = 0;
	      if (λ < -r) code |= 1; else if (λ > r) code |= 2;
	      if (φ < -r) code |= 4; else if (φ > r) code |= 8;
	      return code;
	    }
	  }
	  function d3_geom_clipLine(x0, y0, x1, y1) {
	    return function(line) {
	      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;
	      r = x0 - ax;
	      if (!dx && r > 0) return;
	      r /= dx;
	      if (dx < 0) {
	        if (r < t0) return;
	        if (r < t1) t1 = r;
	      } else if (dx > 0) {
	        if (r > t1) return;
	        if (r > t0) t0 = r;
	      }
	      r = x1 - ax;
	      if (!dx && r < 0) return;
	      r /= dx;
	      if (dx < 0) {
	        if (r > t1) return;
	        if (r > t0) t0 = r;
	      } else if (dx > 0) {
	        if (r < t0) return;
	        if (r < t1) t1 = r;
	      }
	      r = y0 - ay;
	      if (!dy && r > 0) return;
	      r /= dy;
	      if (dy < 0) {
	        if (r < t0) return;
	        if (r < t1) t1 = r;
	      } else if (dy > 0) {
	        if (r > t1) return;
	        if (r > t0) t0 = r;
	      }
	      r = y1 - ay;
	      if (!dy && r < 0) return;
	      r /= dy;
	      if (dy < 0) {
	        if (r > t1) return;
	        if (r > t0) t0 = r;
	      } else if (dy > 0) {
	        if (r < t0) return;
	        if (r < t1) t1 = r;
	      }
	      if (t0 > 0) line.a = {
	        x: ax + t0 * dx,
	        y: ay + t0 * dy
	      };
	      if (t1 < 1) line.b = {
	        x: ax + t1 * dx,
	        y: ay + t1 * dy
	      };
	      return line;
	    };
	  }
	  var d3_geo_clipExtentMAX = 1e9;
	  d3.geo.clipExtent = function() {
	    var x0, y0, x1, y1, stream, clip, clipExtent = {
	      stream: function(output) {
	        if (stream) stream.valid = false;
	        stream = clip(output);
	        stream.valid = true;
	        return stream;
	      },
	      extent: function(_) {
	        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];
	        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);
	        if (stream) stream.valid = false, stream = null;
	        return clipExtent;
	      }
	    };
	    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);
	  };
	  function d3_geo_clipExtent(x0, y0, x1, y1) {
	    return function(listener) {
	      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;
	      var clip = {
	        point: point,
	        lineStart: lineStart,
	        lineEnd: lineEnd,
	        polygonStart: function() {
	          listener = bufferListener;
	          segments = [];
	          polygon = [];
	          clean = true;
	        },
	        polygonEnd: function() {
	          listener = listener_;
	          segments = d3.merge(segments);
	          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;
	          if (inside || visible) {
	            listener.polygonStart();
	            if (inside) {
	              listener.lineStart();
	              interpolate(null, null, 1, listener);
	              listener.lineEnd();
	            }
	            if (visible) {
	              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);
	            }
	            listener.polygonEnd();
	          }
	          segments = polygon = ring = null;
	        }
	      };
	      function insidePolygon(p) {
	        var wn = 0, n = polygon.length, y = p[1];
	        for (var i = 0; i < n; ++i) {
	          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {
	            b = v[j];
	            if (a[1] <= y) {
	              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;
	            } else {
	              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;
	            }
	            a = b;
	          }
	        }
	        return wn !== 0;
	      }
	      function interpolate(from, to, direction, listener) {
	        var a = 0, a1 = 0;
	        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {
	          do {
	            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);
	          } while ((a = (a + direction + 4) % 4) !== a1);
	        } else {
	          listener.point(to[0], to[1]);
	        }
	      }
	      function pointVisible(x, y) {
	        return x0 <= x && x <= x1 && y0 <= y && y <= y1;
	      }
	      function point(x, y) {
	        if (pointVisible(x, y)) listener.point(x, y);
	      }
	      var x__, y__, v__, x_, y_, v_, first, clean;
	      function lineStart() {
	        clip.point = linePoint;
	        if (polygon) polygon.push(ring = []);
	        first = true;
	        v_ = false;
	        x_ = y_ = NaN;
	      }
	      function lineEnd() {
	        if (segments) {
	          linePoint(x__, y__);
	          if (v__ && v_) bufferListener.rejoin();
	          segments.push(bufferListener.buffer());
	        }
	        clip.point = point;
	        if (v_) listener.lineEnd();
	      }
	      function linePoint(x, y) {
	        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));
	        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));
	        var v = pointVisible(x, y);
	        if (polygon) ring.push([ x, y ]);
	        if (first) {
	          x__ = x, y__ = y, v__ = v;
	          first = false;
	          if (v) {
	            listener.lineStart();
	            listener.point(x, y);
	          }
	        } else {
	          if (v && v_) listener.point(x, y); else {
	            var l = {
	              a: {
	                x: x_,
	                y: y_
	              },
	              b: {
	                x: x,
	                y: y
	              }
	            };
	            if (clipLine(l)) {
	              if (!v_) {
	                listener.lineStart();
	                listener.point(l.a.x, l.a.y);
	              }
	              listener.point(l.b.x, l.b.y);
	              if (!v) listener.lineEnd();
	              clean = false;
	            } else if (v) {
	              listener.lineStart();
	              listener.point(x, y);
	              clean = false;
	            }
	          }
	        }
	        x_ = x, y_ = y, v_ = v;
	      }
	      return clip;
	    };
	    function corner(p, direction) {
	      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;
	    }
	    function compare(a, b) {
	      return comparePoints(a.x, b.x);
	    }
	    function comparePoints(a, b) {
	      var ca = corner(a, 1), cb = corner(b, 1);
	      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];
	    }
	  }
	  function d3_geo_conic(projectAt) {
	    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);
	    p.parallels = function(_) {
	      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];
	      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);
	    };
	    return p;
	  }
	  function d3_geo_conicEqualArea(φ0, φ1) {
	    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;
	    function forward(λ, φ) {
	      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;
	      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];
	    }
	    forward.invert = function(x, y) {
	      var ρ0_y = ρ0 - y;
	      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];
	    };
	    return forward;
	  }
	  (d3.geo.conicEqualArea = function() {
	    return d3_geo_conic(d3_geo_conicEqualArea);
	  }).raw = d3_geo_conicEqualArea;
	  d3.geo.albers = function() {
	    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);
	  };
	  d3.geo.albersUsa = function() {
	    var lower48 = d3.geo.albers();
	    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);
	    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);
	    var point, pointStream = {
	      point: function(x, y) {
	        point = [ x, y ];
	      }
	    }, lower48Point, alaskaPoint, hawaiiPoint;
	    function albersUsa(coordinates) {
	      var x = coordinates[0], y = coordinates[1];
	      point = null;
	      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);
	      return point;
	    }
	    albersUsa.invert = function(coordinates) {
	      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;
	      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);
	    };
	    albersUsa.stream = function(stream) {
	      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);
	      return {
	        point: function(x, y) {
	          lower48Stream.point(x, y);
	          alaskaStream.point(x, y);
	          hawaiiStream.point(x, y);
	        },
	        sphere: function() {
	          lower48Stream.sphere();
	          alaskaStream.sphere();
	          hawaiiStream.sphere();
	        },
	        lineStart: function() {
	          lower48Stream.lineStart();
	          alaskaStream.lineStart();
	          hawaiiStream.lineStart();
	        },
	        lineEnd: function() {
	          lower48Stream.lineEnd();
	          alaskaStream.lineEnd();
	          hawaiiStream.lineEnd();
	        },
	        polygonStart: function() {
	          lower48Stream.polygonStart();
	          alaskaStream.polygonStart();
	          hawaiiStream.polygonStart();
	        },
	        polygonEnd: function() {
	          lower48Stream.polygonEnd();
	          alaskaStream.polygonEnd();
	          hawaiiStream.polygonEnd();
	        }
	      };
	    };
	    albersUsa.precision = function(_) {
	      if (!arguments.length) return lower48.precision();
	      lower48.precision(_);
	      alaska.precision(_);
	      hawaii.precision(_);
	      return albersUsa;
	    };
	    albersUsa.scale = function(_) {
	      if (!arguments.length) return lower48.scale();
	      lower48.scale(_);
	      alaska.scale(_ * .35);
	      hawaii.scale(_);
	      return albersUsa.translate(lower48.translate());
	    };
	    albersUsa.translate = function(_) {
	      if (!arguments.length) return lower48.translate();
	      var k = lower48.scale(), x = +_[0], y = +_[1];
	      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;
	      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;
	      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;
	      return albersUsa;
	    };
	    return albersUsa.scale(1070);
	  };
	  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {
	    point: d3_noop,
	    lineStart: d3_noop,
	    lineEnd: d3_noop,
	    polygonStart: function() {
	      d3_geo_pathAreaPolygon = 0;
	      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;
	    },
	    polygonEnd: function() {
	      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;
	      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);
	    }
	  };
	  function d3_geo_pathAreaRingStart() {
	    var x00, y00, x0, y0;
	    d3_geo_pathArea.point = function(x, y) {
	      d3_geo_pathArea.point = nextPoint;
	      x00 = x0 = x, y00 = y0 = y;
	    };
	    function nextPoint(x, y) {
	      d3_geo_pathAreaPolygon += y0 * x - x0 * y;
	      x0 = x, y0 = y;
	    }
	    d3_geo_pathArea.lineEnd = function() {
	      nextPoint(x00, y00);
	    };
	  }
	  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;
	  var d3_geo_pathBounds = {
	    point: d3_geo_pathBoundsPoint,
	    lineStart: d3_noop,
	    lineEnd: d3_noop,
	    polygonStart: d3_noop,
	    polygonEnd: d3_noop
	  };
	  function d3_geo_pathBoundsPoint(x, y) {
	    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;
	    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;
	    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;
	    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;
	  }
	  function d3_geo_pathBuffer() {
	    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];
	    var stream = {
	      point: point,
	      lineStart: function() {
	        stream.point = pointLineStart;
	      },
	      lineEnd: lineEnd,
	      polygonStart: function() {
	        stream.lineEnd = lineEndPolygon;
	      },
	      polygonEnd: function() {
	        stream.lineEnd = lineEnd;
	        stream.point = point;
	      },
	      pointRadius: function(_) {
	        pointCircle = d3_geo_pathBufferCircle(_);
	        return stream;
	      },
	      result: function() {
	        if (buffer.length) {
	          var result = buffer.join("");
	          buffer = [];
	          return result;
	        }
	      }
	    };
	    function point(x, y) {
	      buffer.push("M", x, ",", y, pointCircle);
	    }
	    function pointLineStart(x, y) {
	      buffer.push("M", x, ",", y);
	      stream.point = pointLine;
	    }
	    function pointLine(x, y) {
	      buffer.push("L", x, ",", y);
	    }
	    function lineEnd() {
	      stream.point = point;
	    }
	    function lineEndPolygon() {
	      buffer.push("Z");
	    }
	    return stream;
	  }
	  function d3_geo_pathBufferCircle(radius) {
	    return "m0," + radius + "a" + radius + "," + radius + " 0 1,1 0," + -2 * radius + "a" + radius + "," + radius + " 0 1,1 0," + 2 * radius + "z";
	  }
	  var d3_geo_pathCentroid = {
	    point: d3_geo_pathCentroidPoint,
	    lineStart: d3_geo_pathCentroidLineStart,
	    lineEnd: d3_geo_pathCentroidLineEnd,
	    polygonStart: function() {
	      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;
	    },
	    polygonEnd: function() {
	      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;
	      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;
	      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;
	    }
	  };
	  function d3_geo_pathCentroidPoint(x, y) {
	    d3_geo_centroidX0 += x;
	    d3_geo_centroidY0 += y;
	    ++d3_geo_centroidZ0;
	  }
	  function d3_geo_pathCentroidLineStart() {
	    var x0, y0;
	    d3_geo_pathCentroid.point = function(x, y) {
	      d3_geo_pathCentroid.point = nextPoint;
	      d3_geo_pathCentroidPoint(x0 = x, y0 = y);
	    };
	    function nextPoint(x, y) {
	      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);
	      d3_geo_centroidX1 += z * (x0 + x) / 2;
	      d3_geo_centroidY1 += z * (y0 + y) / 2;
	      d3_geo_centroidZ1 += z;
	      d3_geo_pathCentroidPoint(x0 = x, y0 = y);
	    }
	  }
	  function d3_geo_pathCentroidLineEnd() {
	    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;
	  }
	  function d3_geo_pathCentroidRingStart() {
	    var x00, y00, x0, y0;
	    d3_geo_pathCentroid.point = function(x, y) {
	      d3_geo_pathCentroid.point = nextPoint;
	      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);
	    };
	    function nextPoint(x, y) {
	      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);
	      d3_geo_centroidX1 += z * (x0 + x) / 2;
	      d3_geo_centroidY1 += z * (y0 + y) / 2;
	      d3_geo_centroidZ1 += z;
	      z = y0 * x - x0 * y;
	      d3_geo_centroidX2 += z * (x0 + x);
	      d3_geo_centroidY2 += z * (y0 + y);
	      d3_geo_centroidZ2 += z * 3;
	      d3_geo_pathCentroidPoint(x0 = x, y0 = y);
	    }
	    d3_geo_pathCentroid.lineEnd = function() {
	      nextPoint(x00, y00);
	    };
	  }
	  function d3_geo_pathContext(context) {
	    var pointRadius = 4.5;
	    var stream = {
	      point: point,
	      lineStart: function() {
	        stream.point = pointLineStart;
	      },
	      lineEnd: lineEnd,
	      polygonStart: function() {
	        stream.lineEnd = lineEndPolygon;
	      },
	      polygonEnd: function() {
	        stream.lineEnd = lineEnd;
	        stream.point = point;
	      },
	      pointRadius: function(_) {
	        pointRadius = _;
	        return stream;
	      },
	      result: d3_noop
	    };
	    function point(x, y) {
	      context.moveTo(x + pointRadius, y);
	      context.arc(x, y, pointRadius, 0, τ);
	    }
	    function pointLineStart(x, y) {
	      context.moveTo(x, y);
	      stream.point = pointLine;
	    }
	    function pointLine(x, y) {
	      context.lineTo(x, y);
	    }
	    function lineEnd() {
	      stream.point = point;
	    }
	    function lineEndPolygon() {
	      context.closePath();
	    }
	    return stream;
	  }
	  function d3_geo_resample(project) {
	    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;
	    function resample(stream) {
	      return (maxDepth ? resampleRecursive : resampleNone)(stream);
	    }
	    function resampleNone(stream) {
	      return d3_geo_transformPoint(stream, function(x, y) {
	        x = project(x, y);
	        stream.point(x[0], x[1]);
	      });
	    }
	    function resampleRecursive(stream) {
	      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;
	      var resample = {
	        point: point,
	        lineStart: lineStart,
	        lineEnd: lineEnd,
	        polygonStart: function() {
	          stream.polygonStart();
	          resample.lineStart = ringStart;
	        },
	        polygonEnd: function() {
	          stream.polygonEnd();
	          resample.lineStart = lineStart;
	        }
	      };
	      function point(x, y) {
	        x = project(x, y);
	        stream.point(x[0], x[1]);
	      }
	      function lineStart() {
	        x0 = NaN;
	        resample.point = linePoint;
	        stream.lineStart();
	      }
	      function linePoint(λ, φ) {
	        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);
	        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);
	        stream.point(x0, y0);
	      }
	      function lineEnd() {
	        resample.point = point;
	        stream.lineEnd();
	      }
	      function ringStart() {
	        lineStart();
	        resample.point = ringPoint;
	        resample.lineEnd = ringEnd;
	      }
	      function ringPoint(λ, φ) {
	        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;
	        resample.point = linePoint;
	      }
	      function ringEnd() {
	        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);
	        resample.lineEnd = lineEnd;
	        lineEnd();
	      }
	      return resample;
	    }
	    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {
	      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;
	      if (d2 > 4 * δ2 && depth--) {
	        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;
	        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {
	          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);
	          stream.point(x2, y2);
	          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);
	        }
	      }
	    }
	    resample.precision = function(_) {
	      if (!arguments.length) return Math.sqrt(δ2);
	      maxDepth = (δ2 = _ * _) > 0 && 16;
	      return resample;
	    };
	    return resample;
	  }
	  d3.geo.path = function() {
	    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;
	    function path(object) {
	      if (object) {
	        if (typeof pointRadius === "function") contextStream.pointRadius(+pointRadius.apply(this, arguments));
	        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);
	        d3.geo.stream(object, cacheStream);
	      }
	      return contextStream.result();
	    }
	    path.area = function(object) {
	      d3_geo_pathAreaSum = 0;
	      d3.geo.stream(object, projectStream(d3_geo_pathArea));
	      return d3_geo_pathAreaSum;
	    };
	    path.centroid = function(object) {
	      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;
	      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));
	      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];
	    };
	    path.bounds = function(object) {
	      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);
	      d3.geo.stream(object, projectStream(d3_geo_pathBounds));
	      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];
	    };
	    path.projection = function(_) {
	      if (!arguments.length) return projection;
	      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;
	      return reset();
	    };
	    path.context = function(_) {
	      if (!arguments.length) return context;
	      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);
	      if (typeof pointRadius !== "function") contextStream.pointRadius(pointRadius);
	      return reset();
	    };
	    path.pointRadius = function(_) {
	      if (!arguments.length) return pointRadius;
	      pointRadius = typeof _ === "function" ? _ : (contextStream.pointRadius(+_), +_);
	      return path;
	    };
	    function reset() {
	      cacheStream = null;
	      return path;
	    }
	    return path.projection(d3.geo.albersUsa()).context(null);
	  };
	  function d3_geo_pathProjectStream(project) {
	    var resample = d3_geo_resample(function(x, y) {
	      return project([ x * d3_degrees, y * d3_degrees ]);
	    });
	    return function(stream) {
	      return d3_geo_projectionRadians(resample(stream));
	    };
	  }
	  d3.geo.transform = function(methods) {
	    return {
	      stream: function(stream) {
	        var transform = new d3_geo_transform(stream);
	        for (var k in methods) transform[k] = methods[k];
	        return transform;
	      }
	    };
	  };
	  function d3_geo_transform(stream) {
	    this.stream = stream;
	  }
	  d3_geo_transform.prototype = {
	    point: function(x, y) {
	      this.stream.point(x, y);
	    },
	    sphere: function() {
	      this.stream.sphere();
	    },
	    lineStart: function() {
	      this.stream.lineStart();
	    },
	    lineEnd: function() {
	      this.stream.lineEnd();
	    },
	    polygonStart: function() {
	      this.stream.polygonStart();
	    },
	    polygonEnd: function() {
	      this.stream.polygonEnd();
	    }
	  };
	  function d3_geo_transformPoint(stream, point) {
	    return {
	      point: point,
	      sphere: function() {
	        stream.sphere();
	      },
	      lineStart: function() {
	        stream.lineStart();
	      },
	      lineEnd: function() {
	        stream.lineEnd();
	      },
	      polygonStart: function() {
	        stream.polygonStart();
	      },
	      polygonEnd: function() {
	        stream.polygonEnd();
	      }
	    };
	  }
	  d3.geo.projection = d3_geo_projection;
	  d3.geo.projectionMutator = d3_geo_projectionMutator;
	  function d3_geo_projection(project) {
	    return d3_geo_projectionMutator(function() {
	      return project;
	    })();
	  }
	  function d3_geo_projectionMutator(projectAt) {
	    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {
	      x = project(x, y);
	      return [ x[0] * k + δx, δy - x[1] * k ];
	    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;
	    function projection(point) {
	      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);
	      return [ point[0] * k + δx, δy - point[1] * k ];
	    }
	    function invert(point) {
	      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);
	      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];
	    }
	    projection.stream = function(output) {
	      if (stream) stream.valid = false;
	      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));
	      stream.valid = true;
	      return stream;
	    };
	    projection.clipAngle = function(_) {
	      if (!arguments.length) return clipAngle;
	      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);
	      return invalidate();
	    };
	    projection.clipExtent = function(_) {
	      if (!arguments.length) return clipExtent;
	      clipExtent = _;
	      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;
	      return invalidate();
	    };
	    projection.scale = function(_) {
	      if (!arguments.length) return k;
	      k = +_;
	      return reset();
	    };
	    projection.translate = function(_) {
	      if (!arguments.length) return [ x, y ];
	      x = +_[0];
	      y = +_[1];
	      return reset();
	    };
	    projection.center = function(_) {
	      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];
	      λ = _[0] % 360 * d3_radians;
	      φ = _[1] % 360 * d3_radians;
	      return reset();
	    };
	    projection.rotate = function(_) {
	      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];
	      δλ = _[0] % 360 * d3_radians;
	      δφ = _[1] % 360 * d3_radians;
	      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;
	      return reset();
	    };
	    d3.rebind(projection, projectResample, "precision");
	    function reset() {
	      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);
	      var center = project(λ, φ);
	      δx = x - center[0] * k;
	      δy = y + center[1] * k;
	      return invalidate();
	    }
	    function invalidate() {
	      if (stream) stream.valid = false, stream = null;
	      return projection;
	    }
	    return function() {
	      project = projectAt.apply(this, arguments);
	      projection.invert = project.invert && invert;
	      return reset();
	    };
	  }
	  function d3_geo_projectionRadians(stream) {
	    return d3_geo_transformPoint(stream, function(x, y) {
	      stream.point(x * d3_radians, y * d3_radians);
	    });
	  }
	  function d3_geo_equirectangular(λ, φ) {
	    return [ λ, φ ];
	  }
	  (d3.geo.equirectangular = function() {
	    return d3_geo_projection(d3_geo_equirectangular);
	  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;
	  d3.geo.rotation = function(rotate) {
	    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);
	    function forward(coordinates) {
	      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);
	      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;
	    }
	    forward.invert = function(coordinates) {
	      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);
	      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;
	    };
	    return forward;
	  };
	  function d3_geo_identityRotation(λ, φ) {
	    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];
	  }
	  d3_geo_identityRotation.invert = d3_geo_equirectangular;
	  function d3_geo_rotation(δλ, δφ, δγ) {
	    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;
	  }
	  function d3_geo_forwardRotationλ(δλ) {
	    return function(λ, φ) {
	      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];
	    };
	  }
	  function d3_geo_rotationλ(δλ) {
	    var rotation = d3_geo_forwardRotationλ(δλ);
	    rotation.invert = d3_geo_forwardRotationλ(-δλ);
	    return rotation;
	  }
	  function d3_geo_rotationφγ(δφ, δγ) {
	    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);
	    function rotation(λ, φ) {
	      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;
	      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];
	    }
	    rotation.invert = function(λ, φ) {
	      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;
	      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];
	    };
	    return rotation;
	  }
	  d3.geo.circle = function() {
	    var origin = [ 0, 0 ], angle, precision = 6, interpolate;
	    function circle() {
	      var center = typeof origin === "function" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];
	      interpolate(null, null, 1, {
	        point: function(x, y) {
	          ring.push(x = rotate(x, y));
	          x[0] *= d3_degrees, x[1] *= d3_degrees;
	        }
	      });
	      return {
	        type: "Polygon",
	        coordinates: [ ring ]
	      };
	    }
	    circle.origin = function(x) {
	      if (!arguments.length) return origin;
	      origin = x;
	      return circle;
	    };
	    circle.angle = function(x) {
	      if (!arguments.length) return angle;
	      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);
	      return circle;
	    };
	    circle.precision = function(_) {
	      if (!arguments.length) return precision;
	      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);
	      return circle;
	    };
	    return circle.angle(90);
	  };
	  function d3_geo_circleInterpolate(radius, precision) {
	    var cr = Math.cos(radius), sr = Math.sin(radius);
	    return function(from, to, direction, listener) {
	      var step = direction * precision;
	      if (from != null) {
	        from = d3_geo_circleAngle(cr, from);
	        to = d3_geo_circleAngle(cr, to);
	        if (direction > 0 ? from < to : from > to) from += direction * τ;
	      } else {
	        from = radius + direction * τ;
	        to = radius - .5 * step;
	      }
	      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {
	        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);
	      }
	    };
	  }
	  function d3_geo_circleAngle(cr, point) {
	    var a = d3_geo_cartesian(point);
	    a[0] -= cr;
	    d3_geo_cartesianNormalize(a);
	    var angle = d3_acos(-a[1]);
	    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);
	  }
	  d3.geo.distance = function(a, b) {
	    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;
	    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);
	  };
	  d3.geo.graticule = function() {
	    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;
	    function graticule() {
	      return {
	        type: "MultiLineString",
	        coordinates: lines()
	      };
	    }
	    function lines() {
	      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {
	        return abs(x % DX) > ε;
	      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {
	        return abs(y % DY) > ε;
	      }).map(y));
	    }
	    graticule.lines = function() {
	      return lines().map(function(coordinates) {
	        return {
	          type: "LineString",
	          coordinates: coordinates
	        };
	      });
	    };
	    graticule.outline = function() {
	      return {
	        type: "Polygon",
	        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]
	      };
	    };
	    graticule.extent = function(_) {
	      if (!arguments.length) return graticule.minorExtent();
	      return graticule.majorExtent(_).minorExtent(_);
	    };
	    graticule.majorExtent = function(_) {
	      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];
	      X0 = +_[0][0], X1 = +_[1][0];
	      Y0 = +_[0][1], Y1 = +_[1][1];
	      if (X0 > X1) _ = X0, X0 = X1, X1 = _;
	      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;
	      return graticule.precision(precision);
	    };
	    graticule.minorExtent = function(_) {
	      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];
	      x0 = +_[0][0], x1 = +_[1][0];
	      y0 = +_[0][1], y1 = +_[1][1];
	      if (x0 > x1) _ = x0, x0 = x1, x1 = _;
	      if (y0 > y1) _ = y0, y0 = y1, y1 = _;
	      return graticule.precision(precision);
	    };
	    graticule.step = function(_) {
	      if (!arguments.length) return graticule.minorStep();
	      return graticule.majorStep(_).minorStep(_);
	    };
	    graticule.majorStep = function(_) {
	      if (!arguments.length) return [ DX, DY ];
	      DX = +_[0], DY = +_[1];
	      return graticule;
	    };
	    graticule.minorStep = function(_) {
	      if (!arguments.length) return [ dx, dy ];
	      dx = +_[0], dy = +_[1];
	      return graticule;
	    };
	    graticule.precision = function(_) {
	      if (!arguments.length) return precision;
	      precision = +_;
	      x = d3_geo_graticuleX(y0, y1, 90);
	      y = d3_geo_graticuleY(x0, x1, precision);
	      X = d3_geo_graticuleX(Y0, Y1, 90);
	      Y = d3_geo_graticuleY(X0, X1, precision);
	      return graticule;
	    };
	    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);
	  };
	  function d3_geo_graticuleX(y0, y1, dy) {
	    var y = d3.range(y0, y1 - ε, dy).concat(y1);
	    return function(x) {
	      return y.map(function(y) {
	        return [ x, y ];
	      });
	    };
	  }
	  function d3_geo_graticuleY(x0, x1, dx) {
	    var x = d3.range(x0, x1 - ε, dx).concat(x1);
	    return function(y) {
	      return x.map(function(x) {
	        return [ x, y ];
	      });
	    };
	  }
	  function d3_source(d) {
	    return d.source;
	  }
	  function d3_target(d) {
	    return d.target;
	  }
	  d3.geo.greatArc = function() {
	    var source = d3_source, source_, target = d3_target, target_;
	    function greatArc() {
	      return {
	        type: "LineString",
	        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]
	      };
	    }
	    greatArc.distance = function() {
	      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));
	    };
	    greatArc.source = function(_) {
	      if (!arguments.length) return source;
	      source = _, source_ = typeof _ === "function" ? null : _;
	      return greatArc;
	    };
	    greatArc.target = function(_) {
	      if (!arguments.length) return target;
	      target = _, target_ = typeof _ === "function" ? null : _;
	      return greatArc;
	    };
	    greatArc.precision = function() {
	      return arguments.length ? greatArc : 0;
	    };
	    return greatArc;
	  };
	  d3.geo.interpolate = function(source, target) {
	    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);
	  };
	  function d3_geo_interpolate(x0, y0, x1, y1) {
	    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);
	    var interpolate = d ? function(t) {
	      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;
	      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];
	    } : function() {
	      return [ x0 * d3_degrees, y0 * d3_degrees ];
	    };
	    interpolate.distance = d;
	    return interpolate;
	  }
	  d3.geo.length = function(object) {
	    d3_geo_lengthSum = 0;
	    d3.geo.stream(object, d3_geo_length);
	    return d3_geo_lengthSum;
	  };
	  var d3_geo_lengthSum;
	  var d3_geo_length = {
	    sphere: d3_noop,
	    point: d3_noop,
	    lineStart: d3_geo_lengthLineStart,
	    lineEnd: d3_noop,
	    polygonStart: d3_noop,
	    polygonEnd: d3_noop
	  };
	  function d3_geo_lengthLineStart() {
	    var λ0, sinφ0, cosφ0;
	    d3_geo_length.point = function(λ, φ) {
	      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);
	      d3_geo_length.point = nextPoint;
	    };
	    d3_geo_length.lineEnd = function() {
	      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;
	    };
	    function nextPoint(λ, φ) {
	      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);
	      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);
	      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;
	    }
	  }
	  function d3_geo_azimuthal(scale, angle) {
	    function azimuthal(λ, φ) {
	      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);
	      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];
	    }
	    azimuthal.invert = function(x, y) {
	      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);
	      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];
	    };
	    return azimuthal;
	  }
	  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {
	    return Math.sqrt(2 / (1 + cosλcosφ));
	  }, function(ρ) {
	    return 2 * Math.asin(ρ / 2);
	  });
	  (d3.geo.azimuthalEqualArea = function() {
	    return d3_geo_projection(d3_geo_azimuthalEqualArea);
	  }).raw = d3_geo_azimuthalEqualArea;
	  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {
	    var c = Math.acos(cosλcosφ);
	    return c && c / Math.sin(c);
	  }, d3_identity);
	  (d3.geo.azimuthalEquidistant = function() {
	    return d3_geo_projection(d3_geo_azimuthalEquidistant);
	  }).raw = d3_geo_azimuthalEquidistant;
	  function d3_geo_conicConformal(φ0, φ1) {
	    var cosφ0 = Math.cos(φ0), t = function(φ) {
	      return Math.tan(π / 4 + φ / 2);
	    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;
	    if (!n) return d3_geo_mercator;
	    function forward(λ, φ) {
	      if (F > 0) {
	        if (φ < -halfπ + ε) φ = -halfπ + ε;
	      } else {
	        if (φ > halfπ - ε) φ = halfπ - ε;
	      }
	      var ρ = F / Math.pow(t(φ), n);
	      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];
	    }
	    forward.invert = function(x, y) {
	      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);
	      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];
	    };
	    return forward;
	  }
	  (d3.geo.conicConformal = function() {
	    return d3_geo_conic(d3_geo_conicConformal);
	  }).raw = d3_geo_conicConformal;
	  function d3_geo_conicEquidistant(φ0, φ1) {
	    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;
	    if (abs(n) < ε) return d3_geo_equirectangular;
	    function forward(λ, φ) {
	      var ρ = G - φ;
	      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];
	    }
	    forward.invert = function(x, y) {
	      var ρ0_y = G - y;
	      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];
	    };
	    return forward;
	  }
	  (d3.geo.conicEquidistant = function() {
	    return d3_geo_conic(d3_geo_conicEquidistant);
	  }).raw = d3_geo_conicEquidistant;
	  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {
	    return 1 / cosλcosφ;
	  }, Math.atan);
	  (d3.geo.gnomonic = function() {
	    return d3_geo_projection(d3_geo_gnomonic);
	  }).raw = d3_geo_gnomonic;
	  function d3_geo_mercator(λ, φ) {
	    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];
	  }
	  d3_geo_mercator.invert = function(x, y) {
	    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];
	  };
	  function d3_geo_mercatorProjection(project) {
	    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;
	    m.scale = function() {
	      var v = scale.apply(m, arguments);
	      return v === m ? clipAuto ? m.clipExtent(null) : m : v;
	    };
	    m.translate = function() {
	      var v = translate.apply(m, arguments);
	      return v === m ? clipAuto ? m.clipExtent(null) : m : v;
	    };
	    m.clipExtent = function(_) {
	      var v = clipExtent.apply(m, arguments);
	      if (v === m) {
	        if (clipAuto = _ == null) {
	          var k = π * scale(), t = translate();
	          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);
	        }
	      } else if (clipAuto) {
	        v = null;
	      }
	      return v;
	    };
	    return m.clipExtent(null);
	  }
	  (d3.geo.mercator = function() {
	    return d3_geo_mercatorProjection(d3_geo_mercator);
	  }).raw = d3_geo_mercator;
	  var d3_geo_orthographic = d3_geo_azimuthal(function() {
	    return 1;
	  }, Math.asin);
	  (d3.geo.orthographic = function() {
	    return d3_geo_projection(d3_geo_orthographic);
	  }).raw = d3_geo_orthographic;
	  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {
	    return 1 / (1 + cosλcosφ);
	  }, function(ρ) {
	    return 2 * Math.atan(ρ);
	  });
	  (d3.geo.stereographic = function() {
	    return d3_geo_projection(d3_geo_stereographic);
	  }).raw = d3_geo_stereographic;
	  function d3_geo_transverseMercator(λ, φ) {
	    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];
	  }
	  d3_geo_transverseMercator.invert = function(x, y) {
	    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];
	  };
	  (d3.geo.transverseMercator = function() {
	    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;
	    projection.center = function(_) {
	      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);
	    };
	    projection.rotate = function(_) {
	      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), 
	      [ _[0], _[1], _[2] - 90 ]);
	    };
	    return rotate([ 0, 0, 90 ]);
	  }).raw = d3_geo_transverseMercator;
	  d3.geom = {};
	  function d3_geom_pointX(d) {
	    return d[0];
	  }
	  function d3_geom_pointY(d) {
	    return d[1];
	  }
	  d3.geom.hull = function(vertices) {
	    var x = d3_geom_pointX, y = d3_geom_pointY;
	    if (arguments.length) return hull(vertices);
	    function hull(data) {
	      if (data.length < 3) return [];
	      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];
	      for (i = 0; i < n; i++) {
	        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);
	      }
	      points.sort(d3_geom_hullOrder);
	      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);
	      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);
	      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];
	      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);
	      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);
	      return polygon;
	    }
	    hull.x = function(_) {
	      return arguments.length ? (x = _, hull) : x;
	    };
	    hull.y = function(_) {
	      return arguments.length ? (y = _, hull) : y;
	    };
	    return hull;
	  };
	  function d3_geom_hullUpper(points) {
	    var n = points.length, hull = [ 0, 1 ], hs = 2;
	    for (var i = 2; i < n; i++) {
	      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;
	      hull[hs++] = i;
	    }
	    return hull.slice(0, hs);
	  }
	  function d3_geom_hullOrder(a, b) {
	    return a[0] - b[0] || a[1] - b[1];
	  }
	  d3.geom.polygon = function(coordinates) {
	    d3_subclass(coordinates, d3_geom_polygonPrototype);
	    return coordinates;
	  };
	  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];
	  d3_geom_polygonPrototype.area = function() {
	    var i = -1, n = this.length, a, b = this[n - 1], area = 0;
	    while (++i < n) {
	      a = b;
	      b = this[i];
	      area += a[1] * b[0] - a[0] * b[1];
	    }
	    return area * .5;
	  };
	  d3_geom_polygonPrototype.centroid = function(k) {
	    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;
	    if (!arguments.length) k = -1 / (6 * this.area());
	    while (++i < n) {
	      a = b;
	      b = this[i];
	      c = a[0] * b[1] - b[0] * a[1];
	      x += (a[0] + b[0]) * c;
	      y += (a[1] + b[1]) * c;
	    }
	    return [ x * k, y * k ];
	  };
	  d3_geom_polygonPrototype.clip = function(subject) {
	    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;
	    while (++i < n) {
	      input = subject.slice();
	      subject.length = 0;
	      b = this[i];
	      c = input[(m = input.length - closed) - 1];
	      j = -1;
	      while (++j < m) {
	        d = input[j];
	        if (d3_geom_polygonInside(d, a, b)) {
	          if (!d3_geom_polygonInside(c, a, b)) {
	            subject.push(d3_geom_polygonIntersect(c, d, a, b));
	          }
	          subject.push(d);
	        } else if (d3_geom_polygonInside(c, a, b)) {
	          subject.push(d3_geom_polygonIntersect(c, d, a, b));
	        }
	        c = d;
	      }
	      if (closed) subject.push(subject[0]);
	      a = b;
	    }
	    return subject;
	  };
	  function d3_geom_polygonInside(p, a, b) {
	    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);
	  }
	  function d3_geom_polygonIntersect(c, d, a, b) {
	    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);
	    return [ x1 + ua * x21, y1 + ua * y21 ];
	  }
	  function d3_geom_polygonClosed(coordinates) {
	    var a = coordinates[0], b = coordinates[coordinates.length - 1];
	    return !(a[0] - b[0] || a[1] - b[1]);
	  }
	  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];
	  function d3_geom_voronoiBeach() {
	    d3_geom_voronoiRedBlackNode(this);
	    this.edge = this.site = this.circle = null;
	  }
	  function d3_geom_voronoiCreateBeach(site) {
	    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();
	    beach.site = site;
	    return beach;
	  }
	  function d3_geom_voronoiDetachBeach(beach) {
	    d3_geom_voronoiDetachCircle(beach);
	    d3_geom_voronoiBeaches.remove(beach);
	    d3_geom_voronoiBeachPool.push(beach);
	    d3_geom_voronoiRedBlackNode(beach);
	  }
	  function d3_geom_voronoiRemoveBeach(beach) {
	    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {
	      x: x,
	      y: y
	    }, previous = beach.P, next = beach.N, disappearing = [ beach ];
	    d3_geom_voronoiDetachBeach(beach);
	    var lArc = previous;
	    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {
	      previous = lArc.P;
	      disappearing.unshift(lArc);
	      d3_geom_voronoiDetachBeach(lArc);
	      lArc = previous;
	    }
	    disappearing.unshift(lArc);
	    d3_geom_voronoiDetachCircle(lArc);
	    var rArc = next;
	    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {
	      next = rArc.N;
	      disappearing.push(rArc);
	      d3_geom_voronoiDetachBeach(rArc);
	      rArc = next;
	    }
	    disappearing.push(rArc);
	    d3_geom_voronoiDetachCircle(rArc);
	    var nArcs = disappearing.length, iArc;
	    for (iArc = 1; iArc < nArcs; ++iArc) {
	      rArc = disappearing[iArc];
	      lArc = disappearing[iArc - 1];
	      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);
	    }
	    lArc = disappearing[0];
	    rArc = disappearing[nArcs - 1];
	    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);
	    d3_geom_voronoiAttachCircle(lArc);
	    d3_geom_voronoiAttachCircle(rArc);
	  }
	  function d3_geom_voronoiAddBeach(site) {
	    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;
	    while (node) {
	      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;
	      if (dxl > ε) node = node.L; else {
	        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);
	        if (dxr > ε) {
	          if (!node.R) {
	            lArc = node;
	            break;
	          }
	          node = node.R;
	        } else {
	          if (dxl > -ε) {
	            lArc = node.P;
	            rArc = node;
	          } else if (dxr > -ε) {
	            lArc = node;
	            rArc = node.N;
	          } else {
	            lArc = rArc = node;
	          }
	          break;
	        }
	      }
	    }
	    var newArc = d3_geom_voronoiCreateBeach(site);
	    d3_geom_voronoiBeaches.insert(lArc, newArc);
	    if (!lArc && !rArc) return;
	    if (lArc === rArc) {
	      d3_geom_voronoiDetachCircle(lArc);
	      rArc = d3_geom_voronoiCreateBeach(lArc.site);
	      d3_geom_voronoiBeaches.insert(newArc, rArc);
	      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);
	      d3_geom_voronoiAttachCircle(lArc);
	      d3_geom_voronoiAttachCircle(rArc);
	      return;
	    }
	    if (!rArc) {
	      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);
	      return;
	    }
	    d3_geom_voronoiDetachCircle(lArc);
	    d3_geom_voronoiDetachCircle(rArc);
	    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {
	      x: (cy * hb - by * hc) / d + ax,
	      y: (bx * hc - cx * hb) / d + ay
	    };
	    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);
	    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);
	    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);
	    d3_geom_voronoiAttachCircle(lArc);
	    d3_geom_voronoiAttachCircle(rArc);
	  }
	  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {
	    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;
	    if (!pby2) return rfocx;
	    var lArc = arc.P;
	    if (!lArc) return -Infinity;
	    site = lArc.site;
	    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;
	    if (!plby2) return lfocx;
	    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;
	    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;
	    return (rfocx + lfocx) / 2;
	  }
	  function d3_geom_voronoiRightBreakPoint(arc, directrix) {
	    var rArc = arc.N;
	    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);
	    var site = arc.site;
	    return site.y === directrix ? site.x : Infinity;
	  }
	  function d3_geom_voronoiCell(site) {
	    this.site = site;
	    this.edges = [];
	  }
	  d3_geom_voronoiCell.prototype.prepare = function() {
	    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;
	    while (iHalfEdge--) {
	      edge = halfEdges[iHalfEdge].edge;
	      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);
	    }
	    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);
	    return halfEdges.length;
	  };
	  function d3_geom_voronoiCloseCells(extent) {
	    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;
	    while (iCell--) {
	      cell = cells[iCell];
	      if (!cell || !cell.prepare()) continue;
	      halfEdges = cell.edges;
	      nHalfEdges = halfEdges.length;
	      iHalfEdge = 0;
	      while (iHalfEdge < nHalfEdges) {
	        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;
	        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;
	        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {
	          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {
	            x: x0,
	            y: abs(x2 - x0) < ε ? y2 : y1
	          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {
	            x: abs(y2 - y1) < ε ? x2 : x1,
	            y: y1
	          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {
	            x: x1,
	            y: abs(x2 - x1) < ε ? y2 : y0
	          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {
	            x: abs(y2 - y0) < ε ? x2 : x0,
	            y: y0
	          } : null), cell.site, null));
	          ++nHalfEdges;
	        }
	      }
	    }
	  }
	  function d3_geom_voronoiHalfEdgeOrder(a, b) {
	    return b.angle - a.angle;
	  }
	  function d3_geom_voronoiCircle() {
	    d3_geom_voronoiRedBlackNode(this);
	    this.x = this.y = this.arc = this.site = this.cy = null;
	  }
	  function d3_geom_voronoiAttachCircle(arc) {
	    var lArc = arc.P, rArc = arc.N;
	    if (!lArc || !rArc) return;
	    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;
	    if (lSite === rSite) return;
	    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;
	    var d = 2 * (ax * cy - ay * cx);
	    if (d >= -ε2) return;
	    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;
	    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();
	    circle.arc = arc;
	    circle.site = cSite;
	    circle.x = x + bx;
	    circle.y = cy + Math.sqrt(x * x + y * y);
	    circle.cy = cy;
	    arc.circle = circle;
	    var before = null, node = d3_geom_voronoiCircles._;
	    while (node) {
	      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {
	        if (node.L) node = node.L; else {
	          before = node.P;
	          break;
	        }
	      } else {
	        if (node.R) node = node.R; else {
	          before = node;
	          break;
	        }
	      }
	    }
	    d3_geom_voronoiCircles.insert(before, circle);
	    if (!before) d3_geom_voronoiFirstCircle = circle;
	  }
	  function d3_geom_voronoiDetachCircle(arc) {
	    var circle = arc.circle;
	    if (circle) {
	      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;
	      d3_geom_voronoiCircles.remove(circle);
	      d3_geom_voronoiCirclePool.push(circle);
	      d3_geom_voronoiRedBlackNode(circle);
	      arc.circle = null;
	    }
	  }
	  function d3_geom_voronoiClipEdges(extent) {
	    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;
	    while (i--) {
	      e = edges[i];
	      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {
	        e.a = e.b = null;
	        edges.splice(i, 1);
	      }
	    }
	  }
	  function d3_geom_voronoiConnectEdge(edge, extent) {
	    var vb = edge.b;
	    if (vb) return true;
	    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;
	    if (ry === ly) {
	      if (fx < x0 || fx >= x1) return;
	      if (lx > rx) {
	        if (!va) va = {
	          x: fx,
	          y: y0
	        }; else if (va.y >= y1) return;
	        vb = {
	          x: fx,
	          y: y1
	        };
	      } else {
	        if (!va) va = {
	          x: fx,
	          y: y1
	        }; else if (va.y < y0) return;
	        vb = {
	          x: fx,
	          y: y0
	        };
	      }
	    } else {
	      fm = (lx - rx) / (ry - ly);
	      fb = fy - fm * fx;
	      if (fm < -1 || fm > 1) {
	        if (lx > rx) {
	          if (!va) va = {
	            x: (y0 - fb) / fm,
	            y: y0
	          }; else if (va.y >= y1) return;
	          vb = {
	            x: (y1 - fb) / fm,
	            y: y1
	          };
	        } else {
	          if (!va) va = {
	            x: (y1 - fb) / fm,
	            y: y1
	          }; else if (va.y < y0) return;
	          vb = {
	            x: (y0 - fb) / fm,
	            y: y0
	          };
	        }
	      } else {
	        if (ly < ry) {
	          if (!va) va = {
	            x: x0,
	            y: fm * x0 + fb
	          }; else if (va.x >= x1) return;
	          vb = {
	            x: x1,
	            y: fm * x1 + fb
	          };
	        } else {
	          if (!va) va = {
	            x: x1,
	            y: fm * x1 + fb
	          }; else if (va.x < x0) return;
	          vb = {
	            x: x0,
	            y: fm * x0 + fb
	          };
	        }
	      }
	    }
	    edge.a = va;
	    edge.b = vb;
	    return true;
	  }
	  function d3_geom_voronoiEdge(lSite, rSite) {
	    this.l = lSite;
	    this.r = rSite;
	    this.a = this.b = null;
	  }
	  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {
	    var edge = new d3_geom_voronoiEdge(lSite, rSite);
	    d3_geom_voronoiEdges.push(edge);
	    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);
	    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);
	    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));
	    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));
	    return edge;
	  }
	  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {
	    var edge = new d3_geom_voronoiEdge(lSite, null);
	    edge.a = va;
	    edge.b = vb;
	    d3_geom_voronoiEdges.push(edge);
	    return edge;
	  }
	  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {
	    if (!edge.a && !edge.b) {
	      edge.a = vertex;
	      edge.l = lSite;
	      edge.r = rSite;
	    } else if (edge.l === rSite) {
	      edge.b = vertex;
	    } else {
	      edge.a = vertex;
	    }
	  }
	  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {
	    var va = edge.a, vb = edge.b;
	    this.edge = edge;
	    this.site = lSite;
	    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);
	  }
	  d3_geom_voronoiHalfEdge.prototype = {
	    start: function() {
	      return this.edge.l === this.site ? this.edge.a : this.edge.b;
	    },
	    end: function() {
	      return this.edge.l === this.site ? this.edge.b : this.edge.a;
	    }
	  };
	  function d3_geom_voronoiRedBlackTree() {
	    this._ = null;
	  }
	  function d3_geom_voronoiRedBlackNode(node) {
	    node.U = node.C = node.L = node.R = node.P = node.N = null;
	  }
	  d3_geom_voronoiRedBlackTree.prototype = {
	    insert: function(after, node) {
	      var parent, grandpa, uncle;
	      if (after) {
	        node.P = after;
	        node.N = after.N;
	        if (after.N) after.N.P = node;
	        after.N = node;
	        if (after.R) {
	          after = after.R;
	          while (after.L) after = after.L;
	          after.L = node;
	        } else {
	          after.R = node;
	        }
	        parent = after;
	      } else if (this._) {
	        after = d3_geom_voronoiRedBlackFirst(this._);
	        node.P = null;
	        node.N = after;
	        after.P = after.L = node;
	        parent = after;
	      } else {
	        node.P = node.N = null;
	        this._ = node;
	        parent = null;
	      }
	      node.L = node.R = null;
	      node.U = parent;
	      node.C = true;
	      after = node;
	      while (parent && parent.C) {
	        grandpa = parent.U;
	        if (parent === grandpa.L) {
	          uncle = grandpa.R;
	          if (uncle && uncle.C) {
	            parent.C = uncle.C = false;
	            grandpa.C = true;
	            after = grandpa;
	          } else {
	            if (after === parent.R) {
	              d3_geom_voronoiRedBlackRotateLeft(this, parent);
	              after = parent;
	              parent = after.U;
	            }
	            parent.C = false;
	            grandpa.C = true;
	            d3_geom_voronoiRedBlackRotateRight(this, grandpa);
	          }
	        } else {
	          uncle = grandpa.L;
	          if (uncle && uncle.C) {
	            parent.C = uncle.C = false;
	            grandpa.C = true;
	            after = grandpa;
	          } else {
	            if (after === parent.L) {
	              d3_geom_voronoiRedBlackRotateRight(this, parent);
	              after = parent;
	              parent = after.U;
	            }
	            parent.C = false;
	            grandpa.C = true;
	            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);
	          }
	        }
	        parent = after.U;
	      }
	      this._.C = false;
	    },
	    remove: function(node) {
	      if (node.N) node.N.P = node.P;
	      if (node.P) node.P.N = node.N;
	      node.N = node.P = null;
	      var parent = node.U, sibling, left = node.L, right = node.R, next, red;
	      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);
	      if (parent) {
	        if (parent.L === node) parent.L = next; else parent.R = next;
	      } else {
	        this._ = next;
	      }
	      if (left && right) {
	        red = next.C;
	        next.C = node.C;
	        next.L = left;
	        left.U = next;
	        if (next !== right) {
	          parent = next.U;
	          next.U = node.U;
	          node = next.R;
	          parent.L = node;
	          next.R = right;
	          right.U = next;
	        } else {
	          next.U = parent;
	          parent = next;
	          node = next.R;
	        }
	      } else {
	        red = node.C;
	        node = next;
	      }
	      if (node) node.U = parent;
	      if (red) return;
	      if (node && node.C) {
	        node.C = false;
	        return;
	      }
	      do {
	        if (node === this._) break;
	        if (node === parent.L) {
	          sibling = parent.R;
	          if (sibling.C) {
	            sibling.C = false;
	            parent.C = true;
	            d3_geom_voronoiRedBlackRotateLeft(this, parent);
	            sibling = parent.R;
	          }
	          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
	            if (!sibling.R || !sibling.R.C) {
	              sibling.L.C = false;
	              sibling.C = true;
	              d3_geom_voronoiRedBlackRotateRight(this, sibling);
	              sibling = parent.R;
	            }
	            sibling.C = parent.C;
	            parent.C = sibling.R.C = false;
	            d3_geom_voronoiRedBlackRotateLeft(this, parent);
	            node = this._;
	            break;
	          }
	        } else {
	          sibling = parent.L;
	          if (sibling.C) {
	            sibling.C = false;
	            parent.C = true;
	            d3_geom_voronoiRedBlackRotateRight(this, parent);
	            sibling = parent.L;
	          }
	          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
	            if (!sibling.L || !sibling.L.C) {
	              sibling.R.C = false;
	              sibling.C = true;
	              d3_geom_voronoiRedBlackRotateLeft(this, sibling);
	              sibling = parent.L;
	            }
	            sibling.C = parent.C;
	            parent.C = sibling.L.C = false;
	            d3_geom_voronoiRedBlackRotateRight(this, parent);
	            node = this._;
	            break;
	          }
	        }
	        sibling.C = true;
	        node = parent;
	        parent = parent.U;
	      } while (!node.C);
	      if (node) node.C = false;
	    }
	  };
	  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {
	    var p = node, q = node.R, parent = p.U;
	    if (parent) {
	      if (parent.L === p) parent.L = q; else parent.R = q;
	    } else {
	      tree._ = q;
	    }
	    q.U = parent;
	    p.U = q;
	    p.R = q.L;
	    if (p.R) p.R.U = p;
	    q.L = p;
	  }
	  function d3_geom_voronoiRedBlackRotateRight(tree, node) {
	    var p = node, q = node.L, parent = p.U;
	    if (parent) {
	      if (parent.L === p) parent.L = q; else parent.R = q;
	    } else {
	      tree._ = q;
	    }
	    q.U = parent;
	    p.U = q;
	    p.L = q.R;
	    if (p.L) p.L.U = p;
	    q.R = p;
	  }
	  function d3_geom_voronoiRedBlackFirst(node) {
	    while (node.L) node = node.L;
	    return node;
	  }
	  function d3_geom_voronoi(sites, bbox) {
	    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;
	    d3_geom_voronoiEdges = [];
	    d3_geom_voronoiCells = new Array(sites.length);
	    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();
	    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();
	    while (true) {
	      circle = d3_geom_voronoiFirstCircle;
	      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {
	        if (site.x !== x0 || site.y !== y0) {
	          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);
	          d3_geom_voronoiAddBeach(site);
	          x0 = site.x, y0 = site.y;
	        }
	        site = sites.pop();
	      } else if (circle) {
	        d3_geom_voronoiRemoveBeach(circle.arc);
	      } else {
	        break;
	      }
	    }
	    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);
	    var diagram = {
	      cells: d3_geom_voronoiCells,
	      edges: d3_geom_voronoiEdges
	    };
	    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;
	    return diagram;
	  }
	  function d3_geom_voronoiVertexOrder(a, b) {
	    return b.y - a.y || b.x - a.x;
	  }
	  d3.geom.voronoi = function(points) {
	    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;
	    if (points) return voronoi(points);
	    function voronoi(data) {
	      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];
	      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {
	        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {
	          var s = e.start();
	          return [ s.x, s.y ];
	        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];
	        polygon.point = data[i];
	      });
	      return polygons;
	    }
	    function sites(data) {
	      return data.map(function(d, i) {
	        return {
	          x: Math.round(fx(d, i) / ε) * ε,
	          y: Math.round(fy(d, i) / ε) * ε,
	          i: i
	        };
	      });
	    }
	    voronoi.links = function(data) {
	      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {
	        return edge.l && edge.r;
	      }).map(function(edge) {
	        return {
	          source: data[edge.l.i],
	          target: data[edge.r.i]
	        };
	      });
	    };
	    voronoi.triangles = function(data) {
	      var triangles = [];
	      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {
	        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;
	        while (++j < m) {
	          e0 = e1;
	          s0 = s1;
	          e1 = edges[j].edge;
	          s1 = e1.l === site ? e1.r : e1.l;
	          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {
	            triangles.push([ data[i], data[s0.i], data[s1.i] ]);
	          }
	        }
	      });
	      return triangles;
	    };
	    voronoi.x = function(_) {
	      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;
	    };
	    voronoi.y = function(_) {
	      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;
	    };
	    voronoi.clipExtent = function(_) {
	      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;
	      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;
	      return voronoi;
	    };
	    voronoi.size = function(_) {
	      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];
	      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);
	    };
	    return voronoi;
	  };
	  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];
	  function d3_geom_voronoiTriangleArea(a, b, c) {
	    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);
	  }
	  d3.geom.delaunay = function(vertices) {
	    return d3.geom.voronoi().triangles(vertices);
	  };
	  d3.geom.quadtree = function(points, x1, y1, x2, y2) {
	    var x = d3_geom_pointX, y = d3_geom_pointY, compat;
	    if (compat = arguments.length) {
	      x = d3_geom_quadtreeCompatX;
	      y = d3_geom_quadtreeCompatY;
	      if (compat === 3) {
	        y2 = y1;
	        x2 = x1;
	        y1 = x1 = 0;
	      }
	      return quadtree(points);
	    }
	    function quadtree(data) {
	      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;
	      if (x1 != null) {
	        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;
	      } else {
	        x2_ = y2_ = -(x1_ = y1_ = Infinity);
	        xs = [], ys = [];
	        n = data.length;
	        if (compat) for (i = 0; i < n; ++i) {
	          d = data[i];
	          if (d.x < x1_) x1_ = d.x;
	          if (d.y < y1_) y1_ = d.y;
	          if (d.x > x2_) x2_ = d.x;
	          if (d.y > y2_) y2_ = d.y;
	          xs.push(d.x);
	          ys.push(d.y);
	        } else for (i = 0; i < n; ++i) {
	          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);
	          if (x_ < x1_) x1_ = x_;
	          if (y_ < y1_) y1_ = y_;
	          if (x_ > x2_) x2_ = x_;
	          if (y_ > y2_) y2_ = y_;
	          xs.push(x_);
	          ys.push(y_);
	        }
	      }
	      var dx = x2_ - x1_, dy = y2_ - y1_;
	      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;
	      function insert(n, d, x, y, x1, y1, x2, y2) {
	        if (isNaN(x) || isNaN(y)) return;
	        if (n.leaf) {
	          var nx = n.x, ny = n.y;
	          if (nx != null) {
	            if (abs(nx - x) + abs(ny - y) < .01) {
	              insertChild(n, d, x, y, x1, y1, x2, y2);
	            } else {
	              var nPoint = n.point;
	              n.x = n.y = n.point = null;
	              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);
	              insertChild(n, d, x, y, x1, y1, x2, y2);
	            }
	          } else {
	            n.x = x, n.y = y, n.point = d;
	          }
	        } else {
	          insertChild(n, d, x, y, x1, y1, x2, y2);
	        }
	      }
	      function insertChild(n, d, x, y, x1, y1, x2, y2) {
	        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;
	        n.leaf = false;
	        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());
	        if (right) x1 = xm; else x2 = xm;
	        if (below) y1 = ym; else y2 = ym;
	        insert(n, d, x, y, x1, y1, x2, y2);
	      }
	      var root = d3_geom_quadtreeNode();
	      root.add = function(d) {
	        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);
	      };
	      root.visit = function(f) {
	        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);
	      };
	      root.find = function(point) {
	        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);
	      };
	      i = -1;
	      if (x1 == null) {
	        while (++i < n) {
	          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);
	        }
	        --i;
	      } else data.forEach(root.add);
	      xs = ys = data = d = null;
	      return root;
	    }
	    quadtree.x = function(_) {
	      return arguments.length ? (x = _, quadtree) : x;
	    };
	    quadtree.y = function(_) {
	      return arguments.length ? (y = _, quadtree) : y;
	    };
	    quadtree.extent = function(_) {
	      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];
	      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], 
	      y2 = +_[1][1];
	      return quadtree;
	    };
	    quadtree.size = function(_) {
	      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];
	      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];
	      return quadtree;
	    };
	    return quadtree;
	  };
	  function d3_geom_quadtreeCompatX(d) {
	    return d.x;
	  }
	  function d3_geom_quadtreeCompatY(d) {
	    return d.y;
	  }
	  function d3_geom_quadtreeNode() {
	    return {
	      leaf: true,
	      nodes: [],
	      point: null,
	      x: null,
	      y: null
	    };
	  }
	  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {
	    if (!f(node, x1, y1, x2, y2)) {
	      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;
	      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);
	      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);
	      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);
	      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);
	    }
	  }
	  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {
	    var minDistance2 = Infinity, closestPoint;
	    (function find(node, x1, y1, x2, y2) {
	      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;
	      if (point = node.point) {
	        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;
	        if (distance2 < minDistance2) {
	          var distance = Math.sqrt(minDistance2 = distance2);
	          x0 = x - distance, y0 = y - distance;
	          x3 = x + distance, y3 = y + distance;
	          closestPoint = point;
	        }
	      }
	      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;
	      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {
	        if (node = children[i & 3]) switch (i & 3) {
	         case 0:
	          find(node, x1, y1, xm, ym);
	          break;

	         case 1:
	          find(node, xm, y1, x2, ym);
	          break;

	         case 2:
	          find(node, x1, ym, xm, y2);
	          break;

	         case 3:
	          find(node, xm, ym, x2, y2);
	          break;
	        }
	      }
	    })(root, x0, y0, x3, y3);
	    return closestPoint;
	  }
	  d3.interpolateRgb = d3_interpolateRgb;
	  function d3_interpolateRgb(a, b) {
	    a = d3.rgb(a);
	    b = d3.rgb(b);
	    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;
	    return function(t) {
	      return "#" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));
	    };
	  }
	  d3.interpolateObject = d3_interpolateObject;
	  function d3_interpolateObject(a, b) {
	    var i = {}, c = {}, k;
	    for (k in a) {
	      if (k in b) {
	        i[k] = d3_interpolate(a[k], b[k]);
	      } else {
	        c[k] = a[k];
	      }
	    }
	    for (k in b) {
	      if (!(k in a)) {
	        c[k] = b[k];
	      }
	    }
	    return function(t) {
	      for (k in i) c[k] = i[k](t);
	      return c;
	    };
	  }
	  d3.interpolateNumber = d3_interpolateNumber;
	  function d3_interpolateNumber(a, b) {
	    a = +a, b = +b;
	    return function(t) {
	      return a * (1 - t) + b * t;
	    };
	  }
	  d3.interpolateString = d3_interpolateString;
	  function d3_interpolateString(a, b) {
	    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];
	    a = a + "", b = b + "";
	    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {
	      if ((bs = bm.index) > bi) {
	        bs = b.slice(bi, bs);
	        if (s[i]) s[i] += bs; else s[++i] = bs;
	      }
	      if ((am = am[0]) === (bm = bm[0])) {
	        if (s[i]) s[i] += bm; else s[++i] = bm;
	      } else {
	        s[++i] = null;
	        q.push({
	          i: i,
	          x: d3_interpolateNumber(am, bm)
	        });
	      }
	      bi = d3_interpolate_numberB.lastIndex;
	    }
	    if (bi < b.length) {
	      bs = b.slice(bi);
	      if (s[i]) s[i] += bs; else s[++i] = bs;
	    }
	    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {
	      return b(t) + "";
	    }) : function() {
	      return b;
	    } : (b = q.length, function(t) {
	      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);
	      return s.join("");
	    });
	  }
	  var d3_interpolate_numberA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, "g");
	  d3.interpolate = d3_interpolate;
	  function d3_interpolate(a, b) {
	    var i = d3.interpolators.length, f;
	    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;
	    return f;
	  }
	  d3.interpolators = [ function(a, b) {
	    var t = typeof b;
	    return (t === "string" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\(|hsl\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === "object" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);
	  } ];
	  d3.interpolateArray = d3_interpolateArray;
	  function d3_interpolateArray(a, b) {
	    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;
	    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));
	    for (;i < na; ++i) c[i] = a[i];
	    for (;i < nb; ++i) c[i] = b[i];
	    return function(t) {
	      for (i = 0; i < n0; ++i) c[i] = x[i](t);
	      return c;
	    };
	  }
	  var d3_ease_default = function() {
	    return d3_identity;
	  };
	  var d3_ease = d3.map({
	    linear: d3_ease_default,
	    poly: d3_ease_poly,
	    quad: function() {
	      return d3_ease_quad;
	    },
	    cubic: function() {
	      return d3_ease_cubic;
	    },
	    sin: function() {
	      return d3_ease_sin;
	    },
	    exp: function() {
	      return d3_ease_exp;
	    },
	    circle: function() {
	      return d3_ease_circle;
	    },
	    elastic: d3_ease_elastic,
	    back: d3_ease_back,
	    bounce: function() {
	      return d3_ease_bounce;
	    }
	  });
	  var d3_ease_mode = d3.map({
	    "in": d3_identity,
	    out: d3_ease_reverse,
	    "in-out": d3_ease_reflect,
	    "out-in": function(f) {
	      return d3_ease_reflect(d3_ease_reverse(f));
	    }
	  });
	  d3.ease = function(name) {
	    var i = name.indexOf("-"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : "in";
	    t = d3_ease.get(t) || d3_ease_default;
	    m = d3_ease_mode.get(m) || d3_identity;
	    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));
	  };
	  function d3_ease_clamp(f) {
	    return function(t) {
	      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);
	    };
	  }
	  function d3_ease_reverse(f) {
	    return function(t) {
	      return 1 - f(1 - t);
	    };
	  }
	  function d3_ease_reflect(f) {
	    return function(t) {
	      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));
	    };
	  }
	  function d3_ease_quad(t) {
	    return t * t;
	  }
	  function d3_ease_cubic(t) {
	    return t * t * t;
	  }
	  function d3_ease_cubicInOut(t) {
	    if (t <= 0) return 0;
	    if (t >= 1) return 1;
	    var t2 = t * t, t3 = t2 * t;
	    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);
	  }
	  function d3_ease_poly(e) {
	    return function(t) {
	      return Math.pow(t, e);
	    };
	  }
	  function d3_ease_sin(t) {
	    return 1 - Math.cos(t * halfπ);
	  }
	  function d3_ease_exp(t) {
	    return Math.pow(2, 10 * (t - 1));
	  }
	  function d3_ease_circle(t) {
	    return 1 - Math.sqrt(1 - t * t);
	  }
	  function d3_ease_elastic(a, p) {
	    var s;
	    if (arguments.length < 2) p = .45;
	    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;
	    return function(t) {
	      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);
	    };
	  }
	  function d3_ease_back(s) {
	    if (!s) s = 1.70158;
	    return function(t) {
	      return t * t * ((s + 1) * t - s);
	    };
	  }
	  function d3_ease_bounce(t) {
	    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;
	  }
	  d3.interpolateHcl = d3_interpolateHcl;
	  function d3_interpolateHcl(a, b) {
	    a = d3.hcl(a);
	    b = d3.hcl(b);
	    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;
	    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;
	    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;
	    return function(t) {
	      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + "";
	    };
	  }
	  d3.interpolateHsl = d3_interpolateHsl;
	  function d3_interpolateHsl(a, b) {
	    a = d3.hsl(a);
	    b = d3.hsl(b);
	    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;
	    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;
	    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;
	    return function(t) {
	      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + "";
	    };
	  }
	  d3.interpolateLab = d3_interpolateLab;
	  function d3_interpolateLab(a, b) {
	    a = d3.lab(a);
	    b = d3.lab(b);
	    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;
	    return function(t) {
	      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + "";
	    };
	  }
	  d3.interpolateRound = d3_interpolateRound;
	  function d3_interpolateRound(a, b) {
	    b -= a;
	    return function(t) {
	      return Math.round(a + b * t);
	    };
	  }
	  d3.transform = function(string) {
	    var g = d3_document.createElementNS(d3.ns.prefix.svg, "g");
	    return (d3.transform = function(string) {
	      if (string != null) {
	        g.setAttribute("transform", string);
	        var t = g.transform.baseVal.consolidate();
	      }
	      return new d3_transform(t ? t.matrix : d3_transformIdentity);
	    })(string);
	  };
	  function d3_transform(m) {
	    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;
	    if (r0[0] * r1[1] < r1[0] * r0[1]) {
	      r0[0] *= -1;
	      r0[1] *= -1;
	      kx *= -1;
	      kz *= -1;
	    }
	    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;
	    this.translate = [ m.e, m.f ];
	    this.scale = [ kx, ky ];
	    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;
	  }
	  d3_transform.prototype.toString = function() {
	    return "translate(" + this.translate + ")rotate(" + this.rotate + ")skewX(" + this.skew + ")scale(" + this.scale + ")";
	  };
	  function d3_transformDot(a, b) {
	    return a[0] * b[0] + a[1] * b[1];
	  }
	  function d3_transformNormalize(a) {
	    var k = Math.sqrt(d3_transformDot(a, a));
	    if (k) {
	      a[0] /= k;
	      a[1] /= k;
	    }
	    return k;
	  }
	  function d3_transformCombine(a, b, k) {
	    a[0] += k * b[0];
	    a[1] += k * b[1];
	    return a;
	  }
	  var d3_transformIdentity = {
	    a: 1,
	    b: 0,
	    c: 0,
	    d: 1,
	    e: 0,
	    f: 0
	  };
	  d3.interpolateTransform = d3_interpolateTransform;
	  function d3_interpolateTransformPop(s) {
	    return s.length ? s.pop() + "," : "";
	  }
	  function d3_interpolateTranslate(ta, tb, s, q) {
	    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {
	      var i = s.push("translate(", null, ",", null, ")");
	      q.push({
	        i: i - 4,
	        x: d3_interpolateNumber(ta[0], tb[0])
	      }, {
	        i: i - 2,
	        x: d3_interpolateNumber(ta[1], tb[1])
	      });
	    } else if (tb[0] || tb[1]) {
	      s.push("translate(" + tb + ")");
	    }
	  }
	  function d3_interpolateRotate(ra, rb, s, q) {
	    if (ra !== rb) {
	      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;
	      q.push({
	        i: s.push(d3_interpolateTransformPop(s) + "rotate(", null, ")") - 2,
	        x: d3_interpolateNumber(ra, rb)
	      });
	    } else if (rb) {
	      s.push(d3_interpolateTransformPop(s) + "rotate(" + rb + ")");
	    }
	  }
	  function d3_interpolateSkew(wa, wb, s, q) {
	    if (wa !== wb) {
	      q.push({
	        i: s.push(d3_interpolateTransformPop(s) + "skewX(", null, ")") - 2,
	        x: d3_interpolateNumber(wa, wb)
	      });
	    } else if (wb) {
	      s.push(d3_interpolateTransformPop(s) + "skewX(" + wb + ")");
	    }
	  }
	  function d3_interpolateScale(ka, kb, s, q) {
	    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {
	      var i = s.push(d3_interpolateTransformPop(s) + "scale(", null, ",", null, ")");
	      q.push({
	        i: i - 4,
	        x: d3_interpolateNumber(ka[0], kb[0])
	      }, {
	        i: i - 2,
	        x: d3_interpolateNumber(ka[1], kb[1])
	      });
	    } else if (kb[0] !== 1 || kb[1] !== 1) {
	      s.push(d3_interpolateTransformPop(s) + "scale(" + kb + ")");
	    }
	  }
	  function d3_interpolateTransform(a, b) {
	    var s = [], q = [];
	    a = d3.transform(a), b = d3.transform(b);
	    d3_interpolateTranslate(a.translate, b.translate, s, q);
	    d3_interpolateRotate(a.rotate, b.rotate, s, q);
	    d3_interpolateSkew(a.skew, b.skew, s, q);
	    d3_interpolateScale(a.scale, b.scale, s, q);
	    a = b = null;
	    return function(t) {
	      var i = -1, n = q.length, o;
	      while (++i < n) s[(o = q[i]).i] = o.x(t);
	      return s.join("");
	    };
	  }
	  function d3_uninterpolateNumber(a, b) {
	    b = (b -= a = +a) || 1 / b;
	    return function(x) {
	      return (x - a) / b;
	    };
	  }
	  function d3_uninterpolateClamp(a, b) {
	    b = (b -= a = +a) || 1 / b;
	    return function(x) {
	      return Math.max(0, Math.min(1, (x - a) / b));
	    };
	  }
	  d3.layout = {};
	  d3.layout.bundle = function() {
	    return function(links) {
	      var paths = [], i = -1, n = links.length;
	      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));
	      return paths;
	    };
	  };
	  function d3_layout_bundlePath(link) {
	    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];
	    while (start !== lca) {
	      start = start.parent;
	      points.push(start);
	    }
	    var k = points.length;
	    while (end !== lca) {
	      points.splice(k, 0, end);
	      end = end.parent;
	    }
	    return points;
	  }
	  function d3_layout_bundleAncestors(node) {
	    var ancestors = [], parent = node.parent;
	    while (parent != null) {
	      ancestors.push(node);
	      node = parent;
	      parent = parent.parent;
	    }
	    ancestors.push(node);
	    return ancestors;
	  }
	  function d3_layout_bundleLeastCommonAncestor(a, b) {
	    if (a === b) return a;
	    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;
	    while (aNode === bNode) {
	      sharedNode = aNode;
	      aNode = aNodes.pop();
	      bNode = bNodes.pop();
	    }
	    return sharedNode;
	  }
	  d3.layout.chord = function() {
	    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;
	    function relayout() {
	      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;
	      chords = [];
	      groups = [];
	      k = 0, i = -1;
	      while (++i < n) {
	        x = 0, j = -1;
	        while (++j < n) {
	          x += matrix[i][j];
	        }
	        groupSums.push(x);
	        subgroupIndex.push(d3.range(n));
	        k += x;
	      }
	      if (sortGroups) {
	        groupIndex.sort(function(a, b) {
	          return sortGroups(groupSums[a], groupSums[b]);
	        });
	      }
	      if (sortSubgroups) {
	        subgroupIndex.forEach(function(d, i) {
	          d.sort(function(a, b) {
	            return sortSubgroups(matrix[i][a], matrix[i][b]);
	          });
	        });
	      }
	      k = (τ - padding * n) / k;
	      x = 0, i = -1;
	      while (++i < n) {
	        x0 = x, j = -1;
	        while (++j < n) {
	          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;
	          subgroups[di + "-" + dj] = {
	            index: di,
	            subindex: dj,
	            startAngle: a0,
	            endAngle: a1,
	            value: v
	          };
	        }
	        groups[di] = {
	          index: di,
	          startAngle: x0,
	          endAngle: x,
	          value: groupSums[di]
	        };
	        x += padding;
	      }
	      i = -1;
	      while (++i < n) {
	        j = i - 1;
	        while (++j < n) {
	          var source = subgroups[i + "-" + j], target = subgroups[j + "-" + i];
	          if (source.value || target.value) {
	            chords.push(source.value < target.value ? {
	              source: target,
	              target: source
	            } : {
	              source: source,
	              target: target
	            });
	          }
	        }
	      }
	      if (sortChords) resort();
	    }
	    function resort() {
	      chords.sort(function(a, b) {
	        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);
	      });
	    }
	    chord.matrix = function(x) {
	      if (!arguments.length) return matrix;
	      n = (matrix = x) && matrix.length;
	      chords = groups = null;
	      return chord;
	    };
	    chord.padding = function(x) {
	      if (!arguments.length) return padding;
	      padding = x;
	      chords = groups = null;
	      return chord;
	    };
	    chord.sortGroups = function(x) {
	      if (!arguments.length) return sortGroups;
	      sortGroups = x;
	      chords = groups = null;
	      return chord;
	    };
	    chord.sortSubgroups = function(x) {
	      if (!arguments.length) return sortSubgroups;
	      sortSubgroups = x;
	      chords = null;
	      return chord;
	    };
	    chord.sortChords = function(x) {
	      if (!arguments.length) return sortChords;
	      sortChords = x;
	      if (chords) resort();
	      return chord;
	    };
	    chord.chords = function() {
	      if (!chords) relayout();
	      return chords;
	    };
	    chord.groups = function() {
	      if (!groups) relayout();
	      return groups;
	    };
	    return chord;
	  };
	  d3.layout.force = function() {
	    var force = {}, event = d3.dispatch("start", "tick", "end"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;
	    function repulse(node) {
	      return function(quad, x1, _, x2) {
	        if (quad.point !== node) {
	          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;
	          if (dw * dw / theta2 < dn) {
	            if (dn < chargeDistance2) {
	              var k = quad.charge / dn;
	              node.px -= dx * k;
	              node.py -= dy * k;
	            }
	            return true;
	          }
	          if (quad.point && dn && dn < chargeDistance2) {
	            var k = quad.pointCharge / dn;
	            node.px -= dx * k;
	            node.py -= dy * k;
	          }
	        }
	        return !quad.charge;
	      };
	    }
	    force.tick = function() {
	      if ((alpha *= .99) < .005) {
	        timer = null;
	        event.end({
	          type: "end",
	          alpha: alpha = 0
	        });
	        return true;
	      }
	      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;
	      for (i = 0; i < m; ++i) {
	        o = links[i];
	        s = o.source;
	        t = o.target;
	        x = t.x - s.x;
	        y = t.y - s.y;
	        if (l = x * x + y * y) {
	          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;
	          x *= l;
	          y *= l;
	          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);
	          t.y -= y * k;
	          s.x += x * (k = 1 - k);
	          s.y += y * k;
	        }
	      }
	      if (k = alpha * gravity) {
	        x = size[0] / 2;
	        y = size[1] / 2;
	        i = -1;
	        if (k) while (++i < n) {
	          o = nodes[i];
	          o.x += (x - o.x) * k;
	          o.y += (y - o.y) * k;
	        }
	      }
	      if (charge) {
	        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);
	        i = -1;
	        while (++i < n) {
	          if (!(o = nodes[i]).fixed) {
	            q.visit(repulse(o));
	          }
	        }
	      }
	      i = -1;
	      while (++i < n) {
	        o = nodes[i];
	        if (o.fixed) {
	          o.x = o.px;
	          o.y = o.py;
	        } else {
	          o.x -= (o.px - (o.px = o.x)) * friction;
	          o.y -= (o.py - (o.py = o.y)) * friction;
	        }
	      }
	      event.tick({
	        type: "tick",
	        alpha: alpha
	      });
	    };
	    force.nodes = function(x) {
	      if (!arguments.length) return nodes;
	      nodes = x;
	      return force;
	    };
	    force.links = function(x) {
	      if (!arguments.length) return links;
	      links = x;
	      return force;
	    };
	    force.size = function(x) {
	      if (!arguments.length) return size;
	      size = x;
	      return force;
	    };
	    force.linkDistance = function(x) {
	      if (!arguments.length) return linkDistance;
	      linkDistance = typeof x === "function" ? x : +x;
	      return force;
	    };
	    force.distance = force.linkDistance;
	    force.linkStrength = function(x) {
	      if (!arguments.length) return linkStrength;
	      linkStrength = typeof x === "function" ? x : +x;
	      return force;
	    };
	    force.friction = function(x) {
	      if (!arguments.length) return friction;
	      friction = +x;
	      return force;
	    };
	    force.charge = function(x) {
	      if (!arguments.length) return charge;
	      charge = typeof x === "function" ? x : +x;
	      return force;
	    };
	    force.chargeDistance = function(x) {
	      if (!arguments.length) return Math.sqrt(chargeDistance2);
	      chargeDistance2 = x * x;
	      return force;
	    };
	    force.gravity = function(x) {
	      if (!arguments.length) return gravity;
	      gravity = +x;
	      return force;
	    };
	    force.theta = function(x) {
	      if (!arguments.length) return Math.sqrt(theta2);
	      theta2 = x * x;
	      return force;
	    };
	    force.alpha = function(x) {
	      if (!arguments.length) return alpha;
	      x = +x;
	      if (alpha) {
	        if (x > 0) {
	          alpha = x;
	        } else {
	          timer.c = null, timer.t = NaN, timer = null;
	          event.end({
	            type: "end",
	            alpha: alpha = 0
	          });
	        }
	      } else if (x > 0) {
	        event.start({
	          type: "start",
	          alpha: alpha = x
	        });
	        timer = d3_timer(force.tick);
	      }
	      return force;
	    };
	    force.start = function() {
	      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;
	      for (i = 0; i < n; ++i) {
	        (o = nodes[i]).index = i;
	        o.weight = 0;
	      }
	      for (i = 0; i < m; ++i) {
	        o = links[i];
	        if (typeof o.source == "number") o.source = nodes[o.source];
	        if (typeof o.target == "number") o.target = nodes[o.target];
	        ++o.source.weight;
	        ++o.target.weight;
	      }
	      for (i = 0; i < n; ++i) {
	        o = nodes[i];
	        if (isNaN(o.x)) o.x = position("x", w);
	        if (isNaN(o.y)) o.y = position("y", h);
	        if (isNaN(o.px)) o.px = o.x;
	        if (isNaN(o.py)) o.py = o.y;
	      }
	      distances = [];
	      if (typeof linkDistance === "function") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;
	      strengths = [];
	      if (typeof linkStrength === "function") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;
	      charges = [];
	      if (typeof charge === "function") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;
	      function position(dimension, size) {
	        if (!neighbors) {
	          neighbors = new Array(n);
	          for (j = 0; j < n; ++j) {
	            neighbors[j] = [];
	          }
	          for (j = 0; j < m; ++j) {
	            var o = links[j];
	            neighbors[o.source.index].push(o.target);
	            neighbors[o.target.index].push(o.source);
	          }
	        }
	        var candidates = neighbors[i], j = -1, l = candidates.length, x;
	        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;
	        return Math.random() * size;
	      }
	      return force.resume();
	    };
	    force.resume = function() {
	      return force.alpha(.1);
	    };
	    force.stop = function() {
	      return force.alpha(0);
	    };
	    force.drag = function() {
	      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on("dragstart.force", d3_layout_forceDragstart).on("drag.force", dragmove).on("dragend.force", d3_layout_forceDragend);
	      if (!arguments.length) return drag;
	      this.on("mouseover.force", d3_layout_forceMouseover).on("mouseout.force", d3_layout_forceMouseout).call(drag);
	    };
	    function dragmove(d) {
	      d.px = d3.event.x, d.py = d3.event.y;
	      force.resume();
	    }
	    return d3.rebind(force, event, "on");
	  };
	  function d3_layout_forceDragstart(d) {
	    d.fixed |= 2;
	  }
	  function d3_layout_forceDragend(d) {
	    d.fixed &= ~6;
	  }
	  function d3_layout_forceMouseover(d) {
	    d.fixed |= 4;
	    d.px = d.x, d.py = d.y;
	  }
	  function d3_layout_forceMouseout(d) {
	    d.fixed &= ~4;
	  }
	  function d3_layout_forceAccumulate(quad, alpha, charges) {
	    var cx = 0, cy = 0;
	    quad.charge = 0;
	    if (!quad.leaf) {
	      var nodes = quad.nodes, n = nodes.length, i = -1, c;
	      while (++i < n) {
	        c = nodes[i];
	        if (c == null) continue;
	        d3_layout_forceAccumulate(c, alpha, charges);
	        quad.charge += c.charge;
	        cx += c.charge * c.cx;
	        cy += c.charge * c.cy;
	      }
	    }
	    if (quad.point) {
	      if (!quad.leaf) {
	        quad.point.x += Math.random() - .5;
	        quad.point.y += Math.random() - .5;
	      }
	      var k = alpha * charges[quad.point.index];
	      quad.charge += quad.pointCharge = k;
	      cx += k * quad.point.x;
	      cy += k * quad.point.y;
	    }
	    quad.cx = cx / quad.charge;
	    quad.cy = cy / quad.charge;
	  }
	  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;
	  d3.layout.hierarchy = function() {
	    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;
	    function hierarchy(root) {
	      var stack = [ root ], nodes = [], node;
	      root.depth = 0;
	      while ((node = stack.pop()) != null) {
	        nodes.push(node);
	        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {
	          var n, childs, child;
	          while (--n >= 0) {
	            stack.push(child = childs[n]);
	            child.parent = node;
	            child.depth = node.depth + 1;
	          }
	          if (value) node.value = 0;
	          node.children = childs;
	        } else {
	          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;
	          delete node.children;
	        }
	      }
	      d3_layout_hierarchyVisitAfter(root, function(node) {
	        var childs, parent;
	        if (sort && (childs = node.children)) childs.sort(sort);
	        if (value && (parent = node.parent)) parent.value += node.value;
	      });
	      return nodes;
	    }
	    hierarchy.sort = function(x) {
	      if (!arguments.length) return sort;
	      sort = x;
	      return hierarchy;
	    };
	    hierarchy.children = function(x) {
	      if (!arguments.length) return children;
	      children = x;
	      return hierarchy;
	    };
	    hierarchy.value = function(x) {
	      if (!arguments.length) return value;
	      value = x;
	      return hierarchy;
	    };
	    hierarchy.revalue = function(root) {
	      if (value) {
	        d3_layout_hierarchyVisitBefore(root, function(node) {
	          if (node.children) node.value = 0;
	        });
	        d3_layout_hierarchyVisitAfter(root, function(node) {
	          var parent;
	          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;
	          if (parent = node.parent) parent.value += node.value;
	        });
	      }
	      return root;
	    };
	    return hierarchy;
	  };
	  function d3_layout_hierarchyRebind(object, hierarchy) {
	    d3.rebind(object, hierarchy, "sort", "children", "value");
	    object.nodes = object;
	    object.links = d3_layout_hierarchyLinks;
	    return object;
	  }
	  function d3_layout_hierarchyVisitBefore(node, callback) {
	    var nodes = [ node ];
	    while ((node = nodes.pop()) != null) {
	      callback(node);
	      if ((children = node.children) && (n = children.length)) {
	        var n, children;
	        while (--n >= 0) nodes.push(children[n]);
	      }
	    }
	  }
	  function d3_layout_hierarchyVisitAfter(node, callback) {
	    var nodes = [ node ], nodes2 = [];
	    while ((node = nodes.pop()) != null) {
	      nodes2.push(node);
	      if ((children = node.children) && (n = children.length)) {
	        var i = -1, n, children;
	        while (++i < n) nodes.push(children[i]);
	      }
	    }
	    while ((node = nodes2.pop()) != null) {
	      callback(node);
	    }
	  }
	  function d3_layout_hierarchyChildren(d) {
	    return d.children;
	  }
	  function d3_layout_hierarchyValue(d) {
	    return d.value;
	  }
	  function d3_layout_hierarchySort(a, b) {
	    return b.value - a.value;
	  }
	  function d3_layout_hierarchyLinks(nodes) {
	    return d3.merge(nodes.map(function(parent) {
	      return (parent.children || []).map(function(child) {
	        return {
	          source: parent,
	          target: child
	        };
	      });
	    }));
	  }
	  d3.layout.partition = function() {
	    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];
	    function position(node, x, dx, dy) {
	      var children = node.children;
	      node.x = x;
	      node.y = node.depth * dy;
	      node.dx = dx;
	      node.dy = dy;
	      if (children && (n = children.length)) {
	        var i = -1, n, c, d;
	        dx = node.value ? dx / node.value : 0;
	        while (++i < n) {
	          position(c = children[i], x, d = c.value * dx, dy);
	          x += d;
	        }
	      }
	    }
	    function depth(node) {
	      var children = node.children, d = 0;
	      if (children && (n = children.length)) {
	        var i = -1, n;
	        while (++i < n) d = Math.max(d, depth(children[i]));
	      }
	      return 1 + d;
	    }
	    function partition(d, i) {
	      var nodes = hierarchy.call(this, d, i);
	      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));
	      return nodes;
	    }
	    partition.size = function(x) {
	      if (!arguments.length) return size;
	      size = x;
	      return partition;
	    };
	    return d3_layout_hierarchyRebind(partition, hierarchy);
	  };
	  d3.layout.pie = function() {
	    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;
	    function pie(data) {
	      var n = data.length, values = data.map(function(d, i) {
	        return +value.call(pie, d, i);
	      }), a = +(typeof startAngle === "function" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === "function" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === "function" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;
	      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {
	        return values[j] - values[i];
	      } : function(i, j) {
	        return sort(data[i], data[j]);
	      });
	      index.forEach(function(i) {
	        arcs[i] = {
	          data: data[i],
	          value: v = values[i],
	          startAngle: a,
	          endAngle: a += v * k + pa,
	          padAngle: p
	        };
	      });
	      return arcs;
	    }
	    pie.value = function(_) {
	      if (!arguments.length) return value;
	      value = _;
	      return pie;
	    };
	    pie.sort = function(_) {
	      if (!arguments.length) return sort;
	      sort = _;
	      return pie;
	    };
	    pie.startAngle = function(_) {
	      if (!arguments.length) return startAngle;
	      startAngle = _;
	      return pie;
	    };
	    pie.endAngle = function(_) {
	      if (!arguments.length) return endAngle;
	      endAngle = _;
	      return pie;
	    };
	    pie.padAngle = function(_) {
	      if (!arguments.length) return padAngle;
	      padAngle = _;
	      return pie;
	    };
	    return pie;
	  };
	  var d3_layout_pieSortByValue = {};
	  d3.layout.stack = function() {
	    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;
	    function stack(data, index) {
	      if (!(n = data.length)) return data;
	      var series = data.map(function(d, i) {
	        return values.call(stack, d, i);
	      });
	      var points = series.map(function(d) {
	        return d.map(function(v, i) {
	          return [ x.call(stack, v, i), y.call(stack, v, i) ];
	        });
	      });
	      var orders = order.call(stack, points, index);
	      series = d3.permute(series, orders);
	      points = d3.permute(points, orders);
	      var offsets = offset.call(stack, points, index);
	      var m = series[0].length, n, i, j, o;
	      for (j = 0; j < m; ++j) {
	        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);
	        for (i = 1; i < n; ++i) {
	          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);
	        }
	      }
	      return data;
	    }
	    stack.values = function(x) {
	      if (!arguments.length) return values;
	      values = x;
	      return stack;
	    };
	    stack.order = function(x) {
	      if (!arguments.length) return order;
	      order = typeof x === "function" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;
	      return stack;
	    };
	    stack.offset = function(x) {
	      if (!arguments.length) return offset;
	      offset = typeof x === "function" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;
	      return stack;
	    };
	    stack.x = function(z) {
	      if (!arguments.length) return x;
	      x = z;
	      return stack;
	    };
	    stack.y = function(z) {
	      if (!arguments.length) return y;
	      y = z;
	      return stack;
	    };
	    stack.out = function(z) {
	      if (!arguments.length) return out;
	      out = z;
	      return stack;
	    };
	    return stack;
	  };
	  function d3_layout_stackX(d) {
	    return d.x;
	  }
	  function d3_layout_stackY(d) {
	    return d.y;
	  }
	  function d3_layout_stackOut(d, y0, y) {
	    d.y0 = y0;
	    d.y = y;
	  }
	  var d3_layout_stackOrders = d3.map({
	    "inside-out": function(data) {
	      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {
	        return max[a] - max[b];
	      }), top = 0, bottom = 0, tops = [], bottoms = [];
	      for (i = 0; i < n; ++i) {
	        j = index[i];
	        if (top < bottom) {
	          top += sums[j];
	          tops.push(j);
	        } else {
	          bottom += sums[j];
	          bottoms.push(j);
	        }
	      }
	      return bottoms.reverse().concat(tops);
	    },
	    reverse: function(data) {
	      return d3.range(data.length).reverse();
	    },
	    "default": d3_layout_stackOrderDefault
	  });
	  var d3_layout_stackOffsets = d3.map({
	    silhouette: function(data) {
	      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];
	      for (j = 0; j < m; ++j) {
	        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];
	        if (o > max) max = o;
	        sums.push(o);
	      }
	      for (j = 0; j < m; ++j) {
	        y0[j] = (max - sums[j]) / 2;
	      }
	      return y0;
	    },
	    wiggle: function(data) {
	      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];
	      y0[0] = o = o0 = 0;
	      for (j = 1; j < m; ++j) {
	        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];
	        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {
	          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {
	            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;
	          }
	          s2 += s3 * data[i][j][1];
	        }
	        y0[j] = o -= s1 ? s2 / s1 * dx : 0;
	        if (o < o0) o0 = o;
	      }
	      for (j = 0; j < m; ++j) y0[j] -= o0;
	      return y0;
	    },
	    expand: function(data) {
	      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];
	      for (j = 0; j < m; ++j) {
	        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];
	        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;
	      }
	      for (j = 0; j < m; ++j) y0[j] = 0;
	      return y0;
	    },
	    zero: d3_layout_stackOffsetZero
	  });
	  function d3_layout_stackOrderDefault(data) {
	    return d3.range(data.length);
	  }
	  function d3_layout_stackOffsetZero(data) {
	    var j = -1, m = data[0].length, y0 = [];
	    while (++j < m) y0[j] = 0;
	    return y0;
	  }
	  function d3_layout_stackMaxIndex(array) {
	    var i = 1, j = 0, v = array[0][1], k, n = array.length;
	    for (;i < n; ++i) {
	      if ((k = array[i][1]) > v) {
	        j = i;
	        v = k;
	      }
	    }
	    return j;
	  }
	  function d3_layout_stackReduceSum(d) {
	    return d.reduce(d3_layout_stackSum, 0);
	  }
	  function d3_layout_stackSum(p, d) {
	    return p + d[1];
	  }
	  d3.layout.histogram = function() {
	    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;
	    function histogram(data, i) {
	      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;
	      while (++i < m) {
	        bin = bins[i] = [];
	        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);
	        bin.y = 0;
	      }
	      if (m > 0) {
	        i = -1;
	        while (++i < n) {
	          x = values[i];
	          if (x >= range[0] && x <= range[1]) {
	            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];
	            bin.y += k;
	            bin.push(data[i]);
	          }
	        }
	      }
	      return bins;
	    }
	    histogram.value = function(x) {
	      if (!arguments.length) return valuer;
	      valuer = x;
	      return histogram;
	    };
	    histogram.range = function(x) {
	      if (!arguments.length) return ranger;
	      ranger = d3_functor(x);
	      return histogram;
	    };
	    histogram.bins = function(x) {
	      if (!arguments.length) return binner;
	      binner = typeof x === "number" ? function(range) {
	        return d3_layout_histogramBinFixed(range, x);
	      } : d3_functor(x);
	      return histogram;
	    };
	    histogram.frequency = function(x) {
	      if (!arguments.length) return frequency;
	      frequency = !!x;
	      return histogram;
	    };
	    return histogram;
	  };
	  function d3_layout_histogramBinSturges(range, values) {
	    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));
	  }
	  function d3_layout_histogramBinFixed(range, n) {
	    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];
	    while (++x <= n) f[x] = m * x + b;
	    return f;
	  }
	  function d3_layout_histogramRange(values) {
	    return [ d3.min(values), d3.max(values) ];
	  }
	  d3.layout.pack = function() {
	    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;
	    function pack(d, i) {
	      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === "function" ? radius : function() {
	        return radius;
	      };
	      root.x = root.y = 0;
	      d3_layout_hierarchyVisitAfter(root, function(d) {
	        d.r = +r(d.value);
	      });
	      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);
	      if (padding) {
	        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;
	        d3_layout_hierarchyVisitAfter(root, function(d) {
	          d.r += dr;
	        });
	        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);
	        d3_layout_hierarchyVisitAfter(root, function(d) {
	          d.r -= dr;
	        });
	      }
	      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));
	      return nodes;
	    }
	    pack.size = function(_) {
	      if (!arguments.length) return size;
	      size = _;
	      return pack;
	    };
	    pack.radius = function(_) {
	      if (!arguments.length) return radius;
	      radius = _ == null || typeof _ === "function" ? _ : +_;
	      return pack;
	    };
	    pack.padding = function(_) {
	      if (!arguments.length) return padding;
	      padding = +_;
	      return pack;
	    };
	    return d3_layout_hierarchyRebind(pack, hierarchy);
	  };
	  function d3_layout_packSort(a, b) {
	    return a.value - b.value;
	  }
	  function d3_layout_packInsert(a, b) {
	    var c = a._pack_next;
	    a._pack_next = b;
	    b._pack_prev = a;
	    b._pack_next = c;
	    c._pack_prev = b;
	  }
	  function d3_layout_packSplice(a, b) {
	    a._pack_next = b;
	    b._pack_prev = a;
	  }
	  function d3_layout_packIntersects(a, b) {
	    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;
	    return .999 * dr * dr > dx * dx + dy * dy;
	  }
	  function d3_layout_packSiblings(node) {
	    if (!(nodes = node.children) || !(n = nodes.length)) return;
	    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;
	    function bound(node) {
	      xMin = Math.min(node.x - node.r, xMin);
	      xMax = Math.max(node.x + node.r, xMax);
	      yMin = Math.min(node.y - node.r, yMin);
	      yMax = Math.max(node.y + node.r, yMax);
	    }
	    nodes.forEach(d3_layout_packLink);
	    a = nodes[0];
	    a.x = -a.r;
	    a.y = 0;
	    bound(a);
	    if (n > 1) {
	      b = nodes[1];
	      b.x = b.r;
	      b.y = 0;
	      bound(b);
	      if (n > 2) {
	        c = nodes[2];
	        d3_layout_packPlace(a, b, c);
	        bound(c);
	        d3_layout_packInsert(a, c);
	        a._pack_prev = c;
	        d3_layout_packInsert(c, b);
	        b = a._pack_next;
	        for (i = 3; i < n; i++) {
	          d3_layout_packPlace(a, b, c = nodes[i]);
	          var isect = 0, s1 = 1, s2 = 1;
	          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {
	            if (d3_layout_packIntersects(j, c)) {
	              isect = 1;
	              break;
	            }
	          }
	          if (isect == 1) {
	            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {
	              if (d3_layout_packIntersects(k, c)) {
	                break;
	              }
	            }
	          }
	          if (isect) {
	            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);
	            i--;
	          } else {
	            d3_layout_packInsert(a, c);
	            b = c;
	            bound(c);
	          }
	        }
	      }
	    }
	    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;
	    for (i = 0; i < n; i++) {
	      c = nodes[i];
	      c.x -= cx;
	      c.y -= cy;
	      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));
	    }
	    node.r = cr;
	    nodes.forEach(d3_layout_packUnlink);
	  }
	  function d3_layout_packLink(node) {
	    node._pack_next = node._pack_prev = node;
	  }
	  function d3_layout_packUnlink(node) {
	    delete node._pack_next;
	    delete node._pack_prev;
	  }
	  function d3_layout_packTransform(node, x, y, k) {
	    var children = node.children;
	    node.x = x += k * node.x;
	    node.y = y += k * node.y;
	    node.r *= k;
	    if (children) {
	      var i = -1, n = children.length;
	      while (++i < n) d3_layout_packTransform(children[i], x, y, k);
	    }
	  }
	  function d3_layout_packPlace(a, b, c) {
	    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;
	    if (db && (dx || dy)) {
	      var da = b.r + c.r, dc = dx * dx + dy * dy;
	      da *= da;
	      db *= db;
	      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);
	      c.x = a.x + x * dx + y * dy;
	      c.y = a.y + x * dy - y * dx;
	    } else {
	      c.x = a.x + db;
	      c.y = a.y;
	    }
	  }
	  d3.layout.tree = function() {
	    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;
	    function tree(d, i) {
	      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);
	      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;
	      d3_layout_hierarchyVisitBefore(root1, secondWalk);
	      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {
	        var left = root0, right = root0, bottom = root0;
	        d3_layout_hierarchyVisitBefore(root0, function(node) {
	          if (node.x < left.x) left = node;
	          if (node.x > right.x) right = node;
	          if (node.depth > bottom.depth) bottom = node;
	        });
	        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);
	        d3_layout_hierarchyVisitBefore(root0, function(node) {
	          node.x = (node.x + tx) * kx;
	          node.y = node.depth * ky;
	        });
	      }
	      return nodes;
	    }
	    function wrapTree(root0) {
	      var root1 = {
	        A: null,
	        children: [ root0 ]
	      }, queue = [ root1 ], node1;
	      while ((node1 = queue.pop()) != null) {
	        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {
	          queue.push((children[i] = child = {
	            _: children[i],
	            parent: node1,
	            children: (child = children[i].children) && child.slice() || [],
	            A: null,
	            a: null,
	            z: 0,
	            m: 0,
	            c: 0,
	            s: 0,
	            t: null,
	            i: i
	          }).a = child);
	        }
	      }
	      return root1.children[0];
	    }
	    function firstWalk(v) {
	      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;
	      if (children.length) {
	        d3_layout_treeShift(v);
	        var midpoint = (children[0].z + children[children.length - 1].z) / 2;
	        if (w) {
	          v.z = w.z + separation(v._, w._);
	          v.m = v.z - midpoint;
	        } else {
	          v.z = midpoint;
	        }
	      } else if (w) {
	        v.z = w.z + separation(v._, w._);
	      }
	      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);
	    }
	    function secondWalk(v) {
	      v._.x = v.z + v.parent.m;
	      v.m += v.parent.m;
	    }
	    function apportion(v, w, ancestor) {
	      if (w) {
	        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;
	        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {
	          vom = d3_layout_treeLeft(vom);
	          vop = d3_layout_treeRight(vop);
	          vop.a = v;
	          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);
	          if (shift > 0) {
	            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);
	            sip += shift;
	            sop += shift;
	          }
	          sim += vim.m;
	          sip += vip.m;
	          som += vom.m;
	          sop += vop.m;
	        }
	        if (vim && !d3_layout_treeRight(vop)) {
	          vop.t = vim;
	          vop.m += sim - sop;
	        }
	        if (vip && !d3_layout_treeLeft(vom)) {
	          vom.t = vip;
	          vom.m += sip - som;
	          ancestor = v;
	        }
	      }
	      return ancestor;
	    }
	    function sizeNode(node) {
	      node.x *= size[0];
	      node.y = node.depth * size[1];
	    }
	    tree.separation = function(x) {
	      if (!arguments.length) return separation;
	      separation = x;
	      return tree;
	    };
	    tree.size = function(x) {
	      if (!arguments.length) return nodeSize ? null : size;
	      nodeSize = (size = x) == null ? sizeNode : null;
	      return tree;
	    };
	    tree.nodeSize = function(x) {
	      if (!arguments.length) return nodeSize ? size : null;
	      nodeSize = (size = x) == null ? null : sizeNode;
	      return tree;
	    };
	    return d3_layout_hierarchyRebind(tree, hierarchy);
	  };
	  function d3_layout_treeSeparation(a, b) {
	    return a.parent == b.parent ? 1 : 2;
	  }
	  function d3_layout_treeLeft(v) {
	    var children = v.children;
	    return children.length ? children[0] : v.t;
	  }
	  function d3_layout_treeRight(v) {
	    var children = v.children, n;
	    return (n = children.length) ? children[n - 1] : v.t;
	  }
	  function d3_layout_treeMove(wm, wp, shift) {
	    var change = shift / (wp.i - wm.i);
	    wp.c -= change;
	    wp.s += shift;
	    wm.c += change;
	    wp.z += shift;
	    wp.m += shift;
	  }
	  function d3_layout_treeShift(v) {
	    var shift = 0, change = 0, children = v.children, i = children.length, w;
	    while (--i >= 0) {
	      w = children[i];
	      w.z += shift;
	      w.m += shift;
	      shift += w.s + (change += w.c);
	    }
	  }
	  function d3_layout_treeAncestor(vim, v, ancestor) {
	    return vim.a.parent === v.parent ? vim.a : ancestor;
	  }
	  d3.layout.cluster = function() {
	    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;
	    function cluster(d, i) {
	      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;
	      d3_layout_hierarchyVisitAfter(root, function(node) {
	        var children = node.children;
	        if (children && children.length) {
	          node.x = d3_layout_clusterX(children);
	          node.y = d3_layout_clusterY(children);
	        } else {
	          node.x = previousNode ? x += separation(node, previousNode) : 0;
	          node.y = 0;
	          previousNode = node;
	        }
	      });
	      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;
	      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {
	        node.x = (node.x - root.x) * size[0];
	        node.y = (root.y - node.y) * size[1];
	      } : function(node) {
	        node.x = (node.x - x0) / (x1 - x0) * size[0];
	        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];
	      });
	      return nodes;
	    }
	    cluster.separation = function(x) {
	      if (!arguments.length) return separation;
	      separation = x;
	      return cluster;
	    };
	    cluster.size = function(x) {
	      if (!arguments.length) return nodeSize ? null : size;
	      nodeSize = (size = x) == null;
	      return cluster;
	    };
	    cluster.nodeSize = function(x) {
	      if (!arguments.length) return nodeSize ? size : null;
	      nodeSize = (size = x) != null;
	      return cluster;
	    };
	    return d3_layout_hierarchyRebind(cluster, hierarchy);
	  };
	  function d3_layout_clusterY(children) {
	    return 1 + d3.max(children, function(child) {
	      return child.y;
	    });
	  }
	  function d3_layout_clusterX(children) {
	    return children.reduce(function(x, child) {
	      return x + child.x;
	    }, 0) / children.length;
	  }
	  function d3_layout_clusterLeft(node) {
	    var children = node.children;
	    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;
	  }
	  function d3_layout_clusterRight(node) {
	    var children = node.children, n;
	    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;
	  }
	  d3.layout.treemap = function() {
	    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = "squarify", ratio = .5 * (1 + Math.sqrt(5));
	    function scale(children, k) {
	      var i = -1, n = children.length, child, area;
	      while (++i < n) {
	        area = (child = children[i]).value * (k < 0 ? 0 : k);
	        child.area = isNaN(area) || area <= 0 ? 0 : area;
	      }
	    }
	    function squarify(node) {
	      var children = node.children;
	      if (children && children.length) {
	        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === "slice" ? rect.dx : mode === "dice" ? rect.dy : mode === "slice-dice" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;
	        scale(remaining, rect.dx * rect.dy / node.value);
	        row.area = 0;
	        while ((n = remaining.length) > 0) {
	          row.push(child = remaining[n - 1]);
	          row.area += child.area;
	          if (mode !== "squarify" || (score = worst(row, u)) <= best) {
	            remaining.pop();
	            best = score;
	          } else {
	            row.area -= row.pop().area;
	            position(row, u, rect, false);
	            u = Math.min(rect.dx, rect.dy);
	            row.length = row.area = 0;
	            best = Infinity;
	          }
	        }
	        if (row.length) {
	          position(row, u, rect, true);
	          row.length = row.area = 0;
	        }
	        children.forEach(squarify);
	      }
	    }
	    function stickify(node) {
	      var children = node.children;
	      if (children && children.length) {
	        var rect = pad(node), remaining = children.slice(), child, row = [];
	        scale(remaining, rect.dx * rect.dy / node.value);
	        row.area = 0;
	        while (child = remaining.pop()) {
	          row.push(child);
	          row.area += child.area;
	          if (child.z != null) {
	            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);
	            row.length = row.area = 0;
	          }
	        }
	        children.forEach(stickify);
	      }
	    }
	    function worst(row, u) {
	      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;
	      while (++i < n) {
	        if (!(r = row[i].area)) continue;
	        if (r < rmin) rmin = r;
	        if (r > rmax) rmax = r;
	      }
	      s *= s;
	      u *= u;
	      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;
	    }
	    function position(row, u, rect, flush) {
	      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;
	      if (u == rect.dx) {
	        if (flush || v > rect.dy) v = rect.dy;
	        while (++i < n) {
	          o = row[i];
	          o.x = x;
	          o.y = y;
	          o.dy = v;
	          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);
	        }
	        o.z = true;
	        o.dx += rect.x + rect.dx - x;
	        rect.y += v;
	        rect.dy -= v;
	      } else {
	        if (flush || v > rect.dx) v = rect.dx;
	        while (++i < n) {
	          o = row[i];
	          o.x = x;
	          o.y = y;
	          o.dx = v;
	          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);
	        }
	        o.z = false;
	        o.dy += rect.y + rect.dy - y;
	        rect.x += v;
	        rect.dx -= v;
	      }
	    }
	    function treemap(d) {
	      var nodes = stickies || hierarchy(d), root = nodes[0];
	      root.x = root.y = 0;
	      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;
	      if (stickies) hierarchy.revalue(root);
	      scale([ root ], root.dx * root.dy / root.value);
	      (stickies ? stickify : squarify)(root);
	      if (sticky) stickies = nodes;
	      return nodes;
	    }
	    treemap.size = function(x) {
	      if (!arguments.length) return size;
	      size = x;
	      return treemap;
	    };
	    treemap.padding = function(x) {
	      if (!arguments.length) return padding;
	      function padFunction(node) {
	        var p = x.call(treemap, node, node.depth);
	        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === "number" ? [ p, p, p, p ] : p);
	      }
	      function padConstant(node) {
	        return d3_layout_treemapPad(node, x);
	      }
	      var type;
	      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === "function" ? padFunction : type === "number" ? (x = [ x, x, x, x ], 
	      padConstant) : padConstant;
	      return treemap;
	    };
	    treemap.round = function(x) {
	      if (!arguments.length) return round != Number;
	      round = x ? Math.round : Number;
	      return treemap;
	    };
	    treemap.sticky = function(x) {
	      if (!arguments.length) return sticky;
	      sticky = x;
	      stickies = null;
	      return treemap;
	    };
	    treemap.ratio = function(x) {
	      if (!arguments.length) return ratio;
	      ratio = x;
	      return treemap;
	    };
	    treemap.mode = function(x) {
	      if (!arguments.length) return mode;
	      mode = x + "";
	      return treemap;
	    };
	    return d3_layout_hierarchyRebind(treemap, hierarchy);
	  };
	  function d3_layout_treemapPadNull(node) {
	    return {
	      x: node.x,
	      y: node.y,
	      dx: node.dx,
	      dy: node.dy
	    };
	  }
	  function d3_layout_treemapPad(node, padding) {
	    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];
	    if (dx < 0) {
	      x += dx / 2;
	      dx = 0;
	    }
	    if (dy < 0) {
	      y += dy / 2;
	      dy = 0;
	    }
	    return {
	      x: x,
	      y: y,
	      dx: dx,
	      dy: dy
	    };
	  }
	  d3.random = {
	    normal: function(µ, σ) {
	      var n = arguments.length;
	      if (n < 2) σ = 1;
	      if (n < 1) µ = 0;
	      return function() {
	        var x, y, r;
	        do {
	          x = Math.random() * 2 - 1;
	          y = Math.random() * 2 - 1;
	          r = x * x + y * y;
	        } while (!r || r > 1);
	        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);
	      };
	    },
	    logNormal: function() {
	      var random = d3.random.normal.apply(d3, arguments);
	      return function() {
	        return Math.exp(random());
	      };
	    },
	    bates: function(m) {
	      var random = d3.random.irwinHall(m);
	      return function() {
	        return random() / m;
	      };
	    },
	    irwinHall: function(m) {
	      return function() {
	        for (var s = 0, j = 0; j < m; j++) s += Math.random();
	        return s;
	      };
	    }
	  };
	  d3.scale = {};
	  function d3_scaleExtent(domain) {
	    var start = domain[0], stop = domain[domain.length - 1];
	    return start < stop ? [ start, stop ] : [ stop, start ];
	  }
	  function d3_scaleRange(scale) {
	    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());
	  }
	  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {
	    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);
	    return function(x) {
	      return i(u(x));
	    };
	  }
	  function d3_scale_nice(domain, nice) {
	    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;
	    if (x1 < x0) {
	      dx = i0, i0 = i1, i1 = dx;
	      dx = x0, x0 = x1, x1 = dx;
	    }
	    domain[i0] = nice.floor(x0);
	    domain[i1] = nice.ceil(x1);
	    return domain;
	  }
	  function d3_scale_niceStep(step) {
	    return step ? {
	      floor: function(x) {
	        return Math.floor(x / step) * step;
	      },
	      ceil: function(x) {
	        return Math.ceil(x / step) * step;
	      }
	    } : d3_scale_niceIdentity;
	  }
	  var d3_scale_niceIdentity = {
	    floor: d3_identity,
	    ceil: d3_identity
	  };
	  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {
	    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;
	    if (domain[k] < domain[0]) {
	      domain = domain.slice().reverse();
	      range = range.slice().reverse();
	    }
	    while (++j <= k) {
	      u.push(uninterpolate(domain[j - 1], domain[j]));
	      i.push(interpolate(range[j - 1], range[j]));
	    }
	    return function(x) {
	      var j = d3.bisect(domain, x, 1, k) - 1;
	      return i[j](u[j](x));
	    };
	  }
	  d3.scale.linear = function() {
	    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);
	  };
	  function d3_scale_linear(domain, range, interpolate, clamp) {
	    var output, input;
	    function rescale() {
	      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;
	      output = linear(domain, range, uninterpolate, interpolate);
	      input = linear(range, domain, uninterpolate, d3_interpolate);
	      return scale;
	    }
	    function scale(x) {
	      return output(x);
	    }
	    scale.invert = function(y) {
	      return input(y);
	    };
	    scale.domain = function(x) {
	      if (!arguments.length) return domain;
	      domain = x.map(Number);
	      return rescale();
	    };
	    scale.range = function(x) {
	      if (!arguments.length) return range;
	      range = x;
	      return rescale();
	    };
	    scale.rangeRound = function(x) {
	      return scale.range(x).interpolate(d3_interpolateRound);
	    };
	    scale.clamp = function(x) {
	      if (!arguments.length) return clamp;
	      clamp = x;
	      return rescale();
	    };
	    scale.interpolate = function(x) {
	      if (!arguments.length) return interpolate;
	      interpolate = x;
	      return rescale();
	    };
	    scale.ticks = function(m) {
	      return d3_scale_linearTicks(domain, m);
	    };
	    scale.tickFormat = function(m, format) {
	      return d3_scale_linearTickFormat(domain, m, format);
	    };
	    scale.nice = function(m) {
	      d3_scale_linearNice(domain, m);
	      return rescale();
	    };
	    scale.copy = function() {
	      return d3_scale_linear(domain, range, interpolate, clamp);
	    };
	    return rescale();
	  }
	  function d3_scale_linearRebind(scale, linear) {
	    return d3.rebind(scale, linear, "range", "rangeRound", "interpolate", "clamp");
	  }
	  function d3_scale_linearNice(domain, m) {
	    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));
	    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));
	    return domain;
	  }
	  function d3_scale_linearTickRange(domain, m) {
	    if (m == null) m = 10;
	    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;
	    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;
	    extent[0] = Math.ceil(extent[0] / step) * step;
	    extent[1] = Math.floor(extent[1] / step) * step + step * .5;
	    extent[2] = step;
	    return extent;
	  }
	  function d3_scale_linearTicks(domain, m) {
	    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));
	  }
	  function d3_scale_linearTickFormat(domain, m, format) {
	    var range = d3_scale_linearTickRange(domain, m);
	    if (format) {
	      var match = d3_format_re.exec(format);
	      match.shift();
	      if (match[8] === "s") {
	        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));
	        if (!match[7]) match[7] = "." + d3_scale_linearPrecision(prefix.scale(range[2]));
	        match[8] = "f";
	        format = d3.format(match.join(""));
	        return function(d) {
	          return format(prefix.scale(d)) + prefix.symbol;
	        };
	      }
	      if (!match[7]) match[7] = "." + d3_scale_linearFormatPrecision(match[8], range);
	      format = match.join("");
	    } else {
	      format = ",." + d3_scale_linearPrecision(range[2]) + "f";
	    }
	    return d3.format(format);
	  }
	  var d3_scale_linearFormatSignificant = {
	    s: 1,
	    g: 1,
	    p: 1,
	    r: 1,
	    e: 1
	  };
	  function d3_scale_linearPrecision(value) {
	    return -Math.floor(Math.log(value) / Math.LN10 + .01);
	  }
	  function d3_scale_linearFormatPrecision(type, range) {
	    var p = d3_scale_linearPrecision(range[2]);
	    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== "e") : p - (type === "%") * 2;
	  }
	  d3.scale.log = function() {
	    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);
	  };
	  function d3_scale_log(linear, base, positive, domain) {
	    function log(x) {
	      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);
	    }
	    function pow(x) {
	      return positive ? Math.pow(base, x) : -Math.pow(base, -x);
	    }
	    function scale(x) {
	      return linear(log(x));
	    }
	    scale.invert = function(x) {
	      return pow(linear.invert(x));
	    };
	    scale.domain = function(x) {
	      if (!arguments.length) return domain;
	      positive = x[0] >= 0;
	      linear.domain((domain = x.map(Number)).map(log));
	      return scale;
	    };
	    scale.base = function(_) {
	      if (!arguments.length) return base;
	      base = +_;
	      linear.domain(domain.map(log));
	      return scale;
	    };
	    scale.nice = function() {
	      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);
	      linear.domain(niced);
	      domain = niced.map(pow);
	      return scale;
	    };
	    scale.ticks = function() {
	      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;
	      if (isFinite(j - i)) {
	        if (positive) {
	          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);
	          ticks.push(pow(i));
	        } else {
	          ticks.push(pow(i));
	          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);
	        }
	        for (i = 0; ticks[i] < u; i++) {}
	        for (j = ticks.length; ticks[j - 1] > v; j--) {}
	        ticks = ticks.slice(i, j);
	      }
	      return ticks;
	    };
	    scale.tickFormat = function(n, format) {
	      if (!arguments.length) return d3_scale_logFormat;
	      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== "function") format = d3.format(format);
	      var k = Math.max(1, base * n / scale.ticks().length);
	      return function(d) {
	        var i = d / pow(Math.round(log(d)));
	        if (i * base < base - .5) i *= base;
	        return i <= k ? format(d) : "";
	      };
	    };
	    scale.copy = function() {
	      return d3_scale_log(linear.copy(), base, positive, domain);
	    };
	    return d3_scale_linearRebind(scale, linear);
	  }
	  var d3_scale_logFormat = d3.format(".0e"), d3_scale_logNiceNegative = {
	    floor: function(x) {
	      return -Math.ceil(-x);
	    },
	    ceil: function(x) {
	      return -Math.floor(-x);
	    }
	  };
	  d3.scale.pow = function() {
	    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);
	  };
	  function d3_scale_pow(linear, exponent, domain) {
	    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);
	    function scale(x) {
	      return linear(powp(x));
	    }
	    scale.invert = function(x) {
	      return powb(linear.invert(x));
	    };
	    scale.domain = function(x) {
	      if (!arguments.length) return domain;
	      linear.domain((domain = x.map(Number)).map(powp));
	      return scale;
	    };
	    scale.ticks = function(m) {
	      return d3_scale_linearTicks(domain, m);
	    };
	    scale.tickFormat = function(m, format) {
	      return d3_scale_linearTickFormat(domain, m, format);
	    };
	    scale.nice = function(m) {
	      return scale.domain(d3_scale_linearNice(domain, m));
	    };
	    scale.exponent = function(x) {
	      if (!arguments.length) return exponent;
	      powp = d3_scale_powPow(exponent = x);
	      powb = d3_scale_powPow(1 / exponent);
	      linear.domain(domain.map(powp));
	      return scale;
	    };
	    scale.copy = function() {
	      return d3_scale_pow(linear.copy(), exponent, domain);
	    };
	    return d3_scale_linearRebind(scale, linear);
	  }
	  function d3_scale_powPow(e) {
	    return function(x) {
	      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);
	    };
	  }
	  d3.scale.sqrt = function() {
	    return d3.scale.pow().exponent(.5);
	  };
	  d3.scale.ordinal = function() {
	    return d3_scale_ordinal([], {
	      t: "range",
	      a: [ [] ]
	    });
	  };
	  function d3_scale_ordinal(domain, ranger) {
	    var index, range, rangeBand;
	    function scale(x) {
	      return range[((index.get(x) || (ranger.t === "range" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];
	    }
	    function steps(start, step) {
	      return d3.range(domain.length).map(function(i) {
	        return start + step * i;
	      });
	    }
	    scale.domain = function(x) {
	      if (!arguments.length) return domain;
	      domain = [];
	      index = new d3_Map();
	      var i = -1, n = x.length, xi;
	      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));
	      return scale[ranger.t].apply(scale, ranger.a);
	    };
	    scale.range = function(x) {
	      if (!arguments.length) return range;
	      range = x;
	      rangeBand = 0;
	      ranger = {
	        t: "range",
	        a: arguments
	      };
	      return scale;
	    };
	    scale.rangePoints = function(x, padding) {
	      if (arguments.length < 2) padding = 0;
	      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, 
	      0) : (stop - start) / (domain.length - 1 + padding);
	      range = steps(start + step * padding / 2, step);
	      rangeBand = 0;
	      ranger = {
	        t: "rangePoints",
	        a: arguments
	      };
	      return scale;
	    };
	    scale.rangeRoundPoints = function(x, padding) {
	      if (arguments.length < 2) padding = 0;
	      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), 
	      0) : (stop - start) / (domain.length - 1 + padding) | 0;
	      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);
	      rangeBand = 0;
	      ranger = {
	        t: "rangeRoundPoints",
	        a: arguments
	      };
	      return scale;
	    };
	    scale.rangeBands = function(x, padding, outerPadding) {
	      if (arguments.length < 2) padding = 0;
	      if (arguments.length < 3) outerPadding = padding;
	      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);
	      range = steps(start + step * outerPadding, step);
	      if (reverse) range.reverse();
	      rangeBand = step * (1 - padding);
	      ranger = {
	        t: "rangeBands",
	        a: arguments
	      };
	      return scale;
	    };
	    scale.rangeRoundBands = function(x, padding, outerPadding) {
	      if (arguments.length < 2) padding = 0;
	      if (arguments.length < 3) outerPadding = padding;
	      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));
	      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);
	      if (reverse) range.reverse();
	      rangeBand = Math.round(step * (1 - padding));
	      ranger = {
	        t: "rangeRoundBands",
	        a: arguments
	      };
	      return scale;
	    };
	    scale.rangeBand = function() {
	      return rangeBand;
	    };
	    scale.rangeExtent = function() {
	      return d3_scaleExtent(ranger.a[0]);
	    };
	    scale.copy = function() {
	      return d3_scale_ordinal(domain, ranger);
	    };
	    return scale.domain(domain);
	  }
	  d3.scale.category10 = function() {
	    return d3.scale.ordinal().range(d3_category10);
	  };
	  d3.scale.category20 = function() {
	    return d3.scale.ordinal().range(d3_category20);
	  };
	  d3.scale.category20b = function() {
	    return d3.scale.ordinal().range(d3_category20b);
	  };
	  d3.scale.category20c = function() {
	    return d3.scale.ordinal().range(d3_category20c);
	  };
	  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);
	  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);
	  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);
	  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);
	  d3.scale.quantile = function() {
	    return d3_scale_quantile([], []);
	  };
	  function d3_scale_quantile(domain, range) {
	    var thresholds;
	    function rescale() {
	      var k = 0, q = range.length;
	      thresholds = [];
	      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);
	      return scale;
	    }
	    function scale(x) {
	      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];
	    }
	    scale.domain = function(x) {
	      if (!arguments.length) return domain;
	      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);
	      return rescale();
	    };
	    scale.range = function(x) {
	      if (!arguments.length) return range;
	      range = x;
	      return rescale();
	    };
	    scale.quantiles = function() {
	      return thresholds;
	    };
	    scale.invertExtent = function(y) {
	      y = range.indexOf(y);
	      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];
	    };
	    scale.copy = function() {
	      return d3_scale_quantile(domain, range);
	    };
	    return rescale();
	  }
	  d3.scale.quantize = function() {
	    return d3_scale_quantize(0, 1, [ 0, 1 ]);
	  };
	  function d3_scale_quantize(x0, x1, range) {
	    var kx, i;
	    function scale(x) {
	      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];
	    }
	    function rescale() {
	      kx = range.length / (x1 - x0);
	      i = range.length - 1;
	      return scale;
	    }
	    scale.domain = function(x) {
	      if (!arguments.length) return [ x0, x1 ];
	      x0 = +x[0];
	      x1 = +x[x.length - 1];
	      return rescale();
	    };
	    scale.range = function(x) {
	      if (!arguments.length) return range;
	      range = x;
	      return rescale();
	    };
	    scale.invertExtent = function(y) {
	      y = range.indexOf(y);
	      y = y < 0 ? NaN : y / kx + x0;
	      return [ y, y + 1 / kx ];
	    };
	    scale.copy = function() {
	      return d3_scale_quantize(x0, x1, range);
	    };
	    return rescale();
	  }
	  d3.scale.threshold = function() {
	    return d3_scale_threshold([ .5 ], [ 0, 1 ]);
	  };
	  function d3_scale_threshold(domain, range) {
	    function scale(x) {
	      if (x <= x) return range[d3.bisect(domain, x)];
	    }
	    scale.domain = function(_) {
	      if (!arguments.length) return domain;
	      domain = _;
	      return scale;
	    };
	    scale.range = function(_) {
	      if (!arguments.length) return range;
	      range = _;
	      return scale;
	    };
	    scale.invertExtent = function(y) {
	      y = range.indexOf(y);
	      return [ domain[y - 1], domain[y] ];
	    };
	    scale.copy = function() {
	      return d3_scale_threshold(domain, range);
	    };
	    return scale;
	  }
	  d3.scale.identity = function() {
	    return d3_scale_identity([ 0, 1 ]);
	  };
	  function d3_scale_identity(domain) {
	    function identity(x) {
	      return +x;
	    }
	    identity.invert = identity;
	    identity.domain = identity.range = function(x) {
	      if (!arguments.length) return domain;
	      domain = x.map(identity);
	      return identity;
	    };
	    identity.ticks = function(m) {
	      return d3_scale_linearTicks(domain, m);
	    };
	    identity.tickFormat = function(m, format) {
	      return d3_scale_linearTickFormat(domain, m, format);
	    };
	    identity.copy = function() {
	      return d3_scale_identity(domain);
	    };
	    return identity;
	  }
	  d3.svg = {};
	  function d3_zero() {
	    return 0;
	  }
	  d3.svg.arc = function() {
	    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;
	    function arc() {
	      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;
	      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;
	      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : "") + "Z";
	      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];
	      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {
	        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);
	        if (!cw) p1 *= -1;
	        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));
	        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));
	      }
	      if (r1) {
	        x0 = r1 * Math.cos(a0 + p1);
	        y0 = r1 * Math.sin(a0 + p1);
	        x1 = r1 * Math.cos(a1 - p1);
	        y1 = r1 * Math.sin(a1 - p1);
	        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;
	        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {
	          var h1 = (a0 + a1) / 2;
	          x0 = r1 * Math.cos(h1);
	          y0 = r1 * Math.sin(h1);
	          x1 = y1 = null;
	        }
	      } else {
	        x0 = y0 = 0;
	      }
	      if (r0) {
	        x2 = r0 * Math.cos(a1 - p0);
	        y2 = r0 * Math.sin(a1 - p0);
	        x3 = r0 * Math.cos(a0 + p0);
	        y3 = r0 * Math.sin(a0 + p0);
	        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;
	        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {
	          var h0 = (a0 + a1) / 2;
	          x2 = r0 * Math.cos(h0);
	          y2 = r0 * Math.sin(h0);
	          x3 = y3 = null;
	        }
	      } else {
	        x2 = y2 = 0;
	      }
	      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {
	        cr = r0 < r1 ^ cw ? 0 : 1;
	        var rc1 = rc, rc0 = rc;
	        if (da < π) {
	          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);
	          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));
	          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));
	        }
	        if (x1 != null) {
	          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);
	          if (rc === rc1) {
	            path.push("M", t30[0], "A", rc1, ",", rc1, " 0 0,", cr, " ", t30[1], "A", r1, ",", r1, " 0 ", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), ",", cw, " ", t12[1], "A", rc1, ",", rc1, " 0 0,", cr, " ", t12[0]);
	          } else {
	            path.push("M", t30[0], "A", rc1, ",", rc1, " 0 1,", cr, " ", t12[0]);
	          }
	        } else {
	          path.push("M", x0, ",", y0);
	        }
	        if (x3 != null) {
	          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);
	          if (rc === rc0) {
	            path.push("L", t21[0], "A", rc0, ",", rc0, " 0 0,", cr, " ", t21[1], "A", r0, ",", r0, " 0 ", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), ",", 1 - cw, " ", t03[1], "A", rc0, ",", rc0, " 0 0,", cr, " ", t03[0]);
	          } else {
	            path.push("L", t21[0], "A", rc0, ",", rc0, " 0 0,", cr, " ", t03[0]);
	          }
	        } else {
	          path.push("L", x2, ",", y2);
	        }
	      } else {
	        path.push("M", x0, ",", y0);
	        if (x1 != null) path.push("A", r1, ",", r1, " 0 ", l1, ",", cw, " ", x1, ",", y1);
	        path.push("L", x2, ",", y2);
	        if (x3 != null) path.push("A", r0, ",", r0, " 0 ", l0, ",", 1 - cw, " ", x3, ",", y3);
	      }
	      path.push("Z");
	      return path.join("");
	    }
	    function circleSegment(r1, cw) {
	      return "M0," + r1 + "A" + r1 + "," + r1 + " 0 1," + cw + " 0," + -r1 + "A" + r1 + "," + r1 + " 0 1," + cw + " 0," + r1;
	    }
	    arc.innerRadius = function(v) {
	      if (!arguments.length) return innerRadius;
	      innerRadius = d3_functor(v);
	      return arc;
	    };
	    arc.outerRadius = function(v) {
	      if (!arguments.length) return outerRadius;
	      outerRadius = d3_functor(v);
	      return arc;
	    };
	    arc.cornerRadius = function(v) {
	      if (!arguments.length) return cornerRadius;
	      cornerRadius = d3_functor(v);
	      return arc;
	    };
	    arc.padRadius = function(v) {
	      if (!arguments.length) return padRadius;
	      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);
	      return arc;
	    };
	    arc.startAngle = function(v) {
	      if (!arguments.length) return startAngle;
	      startAngle = d3_functor(v);
	      return arc;
	    };
	    arc.endAngle = function(v) {
	      if (!arguments.length) return endAngle;
	      endAngle = d3_functor(v);
	      return arc;
	    };
	    arc.padAngle = function(v) {
	      if (!arguments.length) return padAngle;
	      padAngle = d3_functor(v);
	      return arc;
	    };
	    arc.centroid = function() {
	      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;
	      return [ Math.cos(a) * r, Math.sin(a) * r ];
	    };
	    return arc;
	  };
	  var d3_svg_arcAuto = "auto";
	  function d3_svg_arcInnerRadius(d) {
	    return d.innerRadius;
	  }
	  function d3_svg_arcOuterRadius(d) {
	    return d.outerRadius;
	  }
	  function d3_svg_arcStartAngle(d) {
	    return d.startAngle;
	  }
	  function d3_svg_arcEndAngle(d) {
	    return d.endAngle;
	  }
	  function d3_svg_arcPadAngle(d) {
	    return d && d.padAngle;
	  }
	  function d3_svg_arcSweep(x0, y0, x1, y1) {
	    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;
	  }
	  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {
	    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;
	    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;
	    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];
	  }
	  function d3_svg_line(projection) {
	    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;
	    function line(data) {
	      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);
	      function segment() {
	        segments.push("M", interpolate(projection(points), tension));
	      }
	      while (++i < n) {
	        if (defined.call(this, d = data[i], i)) {
	          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);
	        } else if (points.length) {
	          segment();
	          points = [];
	        }
	      }
	      if (points.length) segment();
	      return segments.length ? segments.join("") : null;
	    }
	    line.x = function(_) {
	      if (!arguments.length) return x;
	      x = _;
	      return line;
	    };
	    line.y = function(_) {
	      if (!arguments.length) return y;
	      y = _;
	      return line;
	    };
	    line.defined = function(_) {
	      if (!arguments.length) return defined;
	      defined = _;
	      return line;
	    };
	    line.interpolate = function(_) {
	      if (!arguments.length) return interpolateKey;
	      if (typeof _ === "function") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;
	      return line;
	    };
	    line.tension = function(_) {
	      if (!arguments.length) return tension;
	      tension = _;
	      return line;
	    };
	    return line;
	  }
	  d3.svg.line = function() {
	    return d3_svg_line(d3_identity);
	  };
	  var d3_svg_lineInterpolators = d3.map({
	    linear: d3_svg_lineLinear,
	    "linear-closed": d3_svg_lineLinearClosed,
	    step: d3_svg_lineStep,
	    "step-before": d3_svg_lineStepBefore,
	    "step-after": d3_svg_lineStepAfter,
	    basis: d3_svg_lineBasis,
	    "basis-open": d3_svg_lineBasisOpen,
	    "basis-closed": d3_svg_lineBasisClosed,
	    bundle: d3_svg_lineBundle,
	    cardinal: d3_svg_lineCardinal,
	    "cardinal-open": d3_svg_lineCardinalOpen,
	    "cardinal-closed": d3_svg_lineCardinalClosed,
	    monotone: d3_svg_lineMonotone
	  });
	  d3_svg_lineInterpolators.forEach(function(key, value) {
	    value.key = key;
	    value.closed = /-closed$/.test(key);
	  });
	  function d3_svg_lineLinear(points) {
	    return points.length > 1 ? points.join("L") : points + "Z";
	  }
	  function d3_svg_lineLinearClosed(points) {
	    return points.join("L") + "Z";
	  }
	  function d3_svg_lineStep(points) {
	    var i = 0, n = points.length, p = points[0], path = [ p[0], ",", p[1] ];
	    while (++i < n) path.push("H", (p[0] + (p = points[i])[0]) / 2, "V", p[1]);
	    if (n > 1) path.push("H", p[0]);
	    return path.join("");
	  }
	  function d3_svg_lineStepBefore(points) {
	    var i = 0, n = points.length, p = points[0], path = [ p[0], ",", p[1] ];
	    while (++i < n) path.push("V", (p = points[i])[1], "H", p[0]);
	    return path.join("");
	  }
	  function d3_svg_lineStepAfter(points) {
	    var i = 0, n = points.length, p = points[0], path = [ p[0], ",", p[1] ];
	    while (++i < n) path.push("H", (p = points[i])[0], "V", p[1]);
	    return path.join("");
	  }
	  function d3_svg_lineCardinalOpen(points, tension) {
	    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));
	  }
	  function d3_svg_lineCardinalClosed(points, tension) {
	    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), 
	    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));
	  }
	  function d3_svg_lineCardinal(points, tension) {
	    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));
	  }
	  function d3_svg_lineHermite(points, tangents) {
	    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {
	      return d3_svg_lineLinear(points);
	    }
	    var quad = points.length != tangents.length, path = "", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;
	    if (quad) {
	      path += "Q" + (p[0] - t0[0] * 2 / 3) + "," + (p[1] - t0[1] * 2 / 3) + "," + p[0] + "," + p[1];
	      p0 = points[1];
	      pi = 2;
	    }
	    if (tangents.length > 1) {
	      t = tangents[1];
	      p = points[pi];
	      pi++;
	      path += "C" + (p0[0] + t0[0]) + "," + (p0[1] + t0[1]) + "," + (p[0] - t[0]) + "," + (p[1] - t[1]) + "," + p[0] + "," + p[1];
	      for (var i = 2; i < tangents.length; i++, pi++) {
	        p = points[pi];
	        t = tangents[i];
	        path += "S" + (p[0] - t[0]) + "," + (p[1] - t[1]) + "," + p[0] + "," + p[1];
	      }
	    }
	    if (quad) {
	      var lp = points[pi];
	      path += "Q" + (p[0] + t[0] * 2 / 3) + "," + (p[1] + t[1] * 2 / 3) + "," + lp[0] + "," + lp[1];
	    }
	    return path;
	  }
	  function d3_svg_lineCardinalTangents(points, tension) {
	    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;
	    while (++i < n) {
	      p0 = p1;
	      p1 = p2;
	      p2 = points[i];
	      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);
	    }
	    return tangents;
	  }
	  function d3_svg_lineBasis(points) {
	    if (points.length < 3) return d3_svg_lineLinear(points);
	    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, ",", y0, "L", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];
	    points.push(points[n - 1]);
	    while (++i <= n) {
	      pi = points[i];
	      px.shift();
	      px.push(pi[0]);
	      py.shift();
	      py.push(pi[1]);
	      d3_svg_lineBasisBezier(path, px, py);
	    }
	    points.pop();
	    path.push("L", pi);
	    return path.join("");
	  }
	  function d3_svg_lineBasisOpen(points) {
	    if (points.length < 4) return d3_svg_lineLinear(points);
	    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];
	    while (++i < 3) {
	      pi = points[i];
	      px.push(pi[0]);
	      py.push(pi[1]);
	    }
	    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + "," + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));
	    --i;
	    while (++i < n) {
	      pi = points[i];
	      px.shift();
	      px.push(pi[0]);
	      py.shift();
	      py.push(pi[1]);
	      d3_svg_lineBasisBezier(path, px, py);
	    }
	    return path.join("");
	  }
	  function d3_svg_lineBasisClosed(points) {
	    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];
	    while (++i < 4) {
	      pi = points[i % n];
	      px.push(pi[0]);
	      py.push(pi[1]);
	    }
	    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];
	    --i;
	    while (++i < m) {
	      pi = points[i % n];
	      px.shift();
	      px.push(pi[0]);
	      py.shift();
	      py.push(pi[1]);
	      d3_svg_lineBasisBezier(path, px, py);
	    }
	    return path.join("");
	  }
	  function d3_svg_lineBundle(points, tension) {
	    var n = points.length - 1;
	    if (n) {
	      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;
	      while (++i <= n) {
	        p = points[i];
	        t = i / n;
	        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);
	        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);
	      }
	    }
	    return d3_svg_lineBasis(points);
	  }
	  function d3_svg_lineDot4(a, b) {
	    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];
	  }
	  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];
	  function d3_svg_lineBasisBezier(path, x, y) {
	    path.push("C", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));
	  }
	  function d3_svg_lineSlope(p0, p1) {
	    return (p1[1] - p0[1]) / (p1[0] - p0[0]);
	  }
	  function d3_svg_lineFiniteDifferences(points) {
	    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);
	    while (++i < j) {
	      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;
	    }
	    m[i] = d;
	    return m;
	  }
	  function d3_svg_lineMonotoneTangents(points) {
	    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;
	    while (++i < j) {
	      d = d3_svg_lineSlope(points[i], points[i + 1]);
	      if (abs(d) < ε) {
	        m[i] = m[i + 1] = 0;
	      } else {
	        a = m[i] / d;
	        b = m[i + 1] / d;
	        s = a * a + b * b;
	        if (s > 9) {
	          s = d * 3 / Math.sqrt(s);
	          m[i] = s * a;
	          m[i + 1] = s * b;
	        }
	      }
	    }
	    i = -1;
	    while (++i <= j) {
	      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));
	      tangents.push([ s || 0, m[i] * s || 0 ]);
	    }
	    return tangents;
	  }
	  function d3_svg_lineMonotone(points) {
	    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));
	  }
	  d3.svg.line.radial = function() {
	    var line = d3_svg_line(d3_svg_lineRadial);
	    line.radius = line.x, delete line.x;
	    line.angle = line.y, delete line.y;
	    return line;
	  };
	  function d3_svg_lineRadial(points) {
	    var point, i = -1, n = points.length, r, a;
	    while (++i < n) {
	      point = points[i];
	      r = point[0];
	      a = point[1] - halfπ;
	      point[0] = r * Math.cos(a);
	      point[1] = r * Math.sin(a);
	    }
	    return points;
	  }
	  function d3_svg_area(projection) {
	    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = "L", tension = .7;
	    function area(data) {
	      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {
	        return x;
	      } : d3_functor(x1), fy1 = y0 === y1 ? function() {
	        return y;
	      } : d3_functor(y1), x, y;
	      function segment() {
	        segments.push("M", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), "Z");
	      }
	      while (++i < n) {
	        if (defined.call(this, d = data[i], i)) {
	          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);
	          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);
	        } else if (points0.length) {
	          segment();
	          points0 = [];
	          points1 = [];
	        }
	      }
	      if (points0.length) segment();
	      return segments.length ? segments.join("") : null;
	    }
	    area.x = function(_) {
	      if (!arguments.length) return x1;
	      x0 = x1 = _;
	      return area;
	    };
	    area.x0 = function(_) {
	      if (!arguments.length) return x0;
	      x0 = _;
	      return area;
	    };
	    area.x1 = function(_) {
	      if (!arguments.length) return x1;
	      x1 = _;
	      return area;
	    };
	    area.y = function(_) {
	      if (!arguments.length) return y1;
	      y0 = y1 = _;
	      return area;
	    };
	    area.y0 = function(_) {
	      if (!arguments.length) return y0;
	      y0 = _;
	      return area;
	    };
	    area.y1 = function(_) {
	      if (!arguments.length) return y1;
	      y1 = _;
	      return area;
	    };
	    area.defined = function(_) {
	      if (!arguments.length) return defined;
	      defined = _;
	      return area;
	    };
	    area.interpolate = function(_) {
	      if (!arguments.length) return interpolateKey;
	      if (typeof _ === "function") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;
	      interpolateReverse = interpolate.reverse || interpolate;
	      L = interpolate.closed ? "M" : "L";
	      return area;
	    };
	    area.tension = function(_) {
	      if (!arguments.length) return tension;
	      tension = _;
	      return area;
	    };
	    return area;
	  }
	  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;
	  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;
	  d3.svg.area = function() {
	    return d3_svg_area(d3_identity);
	  };
	  d3.svg.area.radial = function() {
	    var area = d3_svg_area(d3_svg_lineRadial);
	    area.radius = area.x, delete area.x;
	    area.innerRadius = area.x0, delete area.x0;
	    area.outerRadius = area.x1, delete area.x1;
	    area.angle = area.y, delete area.y;
	    area.startAngle = area.y0, delete area.y0;
	    area.endAngle = area.y1, delete area.y1;
	    return area;
	  };
	  d3.svg.chord = function() {
	    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;
	    function chord(d, i) {
	      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);
	      return "M" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + "Z";
	    }
	    function subgroup(self, f, d, i) {
	      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;
	      return {
	        r: r,
	        a0: a0,
	        a1: a1,
	        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],
	        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]
	      };
	    }
	    function equals(a, b) {
	      return a.a0 == b.a0 && a.a1 == b.a1;
	    }
	    function arc(r, p, a) {
	      return "A" + r + "," + r + " 0 " + +(a > π) + ",1 " + p;
	    }
	    function curve(r0, p0, r1, p1) {
	      return "Q 0,0 " + p1;
	    }
	    chord.radius = function(v) {
	      if (!arguments.length) return radius;
	      radius = d3_functor(v);
	      return chord;
	    };
	    chord.source = function(v) {
	      if (!arguments.length) return source;
	      source = d3_functor(v);
	      return chord;
	    };
	    chord.target = function(v) {
	      if (!arguments.length) return target;
	      target = d3_functor(v);
	      return chord;
	    };
	    chord.startAngle = function(v) {
	      if (!arguments.length) return startAngle;
	      startAngle = d3_functor(v);
	      return chord;
	    };
	    chord.endAngle = function(v) {
	      if (!arguments.length) return endAngle;
	      endAngle = d3_functor(v);
	      return chord;
	    };
	    return chord;
	  };
	  function d3_svg_chordRadius(d) {
	    return d.radius;
	  }
	  d3.svg.diagonal = function() {
	    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;
	    function diagonal(d, i) {
	      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {
	        x: p0.x,
	        y: m
	      }, {
	        x: p3.x,
	        y: m
	      }, p3 ];
	      p = p.map(projection);
	      return "M" + p[0] + "C" + p[1] + " " + p[2] + " " + p[3];
	    }
	    diagonal.source = function(x) {
	      if (!arguments.length) return source;
	      source = d3_functor(x);
	      return diagonal;
	    };
	    diagonal.target = function(x) {
	      if (!arguments.length) return target;
	      target = d3_functor(x);
	      return diagonal;
	    };
	    diagonal.projection = function(x) {
	      if (!arguments.length) return projection;
	      projection = x;
	      return diagonal;
	    };
	    return diagonal;
	  };
	  function d3_svg_diagonalProjection(d) {
	    return [ d.x, d.y ];
	  }
	  d3.svg.diagonal.radial = function() {
	    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;
	    diagonal.projection = function(x) {
	      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;
	    };
	    return diagonal;
	  };
	  function d3_svg_diagonalRadialProjection(projection) {
	    return function() {
	      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;
	      return [ r * Math.cos(a), r * Math.sin(a) ];
	    };
	  }
	  d3.svg.symbol = function() {
	    var type = d3_svg_symbolType, size = d3_svg_symbolSize;
	    function symbol(d, i) {
	      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));
	    }
	    symbol.type = function(x) {
	      if (!arguments.length) return type;
	      type = d3_functor(x);
	      return symbol;
	    };
	    symbol.size = function(x) {
	      if (!arguments.length) return size;
	      size = d3_functor(x);
	      return symbol;
	    };
	    return symbol;
	  };
	  function d3_svg_symbolSize() {
	    return 64;
	  }
	  function d3_svg_symbolType() {
	    return "circle";
	  }
	  function d3_svg_symbolCircle(size) {
	    var r = Math.sqrt(size / π);
	    return "M0," + r + "A" + r + "," + r + " 0 1,1 0," + -r + "A" + r + "," + r + " 0 1,1 0," + r + "Z";
	  }
	  var d3_svg_symbols = d3.map({
	    circle: d3_svg_symbolCircle,
	    cross: function(size) {
	      var r = Math.sqrt(size / 5) / 2;
	      return "M" + -3 * r + "," + -r + "H" + -r + "V" + -3 * r + "H" + r + "V" + -r + "H" + 3 * r + "V" + r + "H" + r + "V" + 3 * r + "H" + -r + "V" + r + "H" + -3 * r + "Z";
	    },
	    diamond: function(size) {
	      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;
	      return "M0," + -ry + "L" + rx + ",0" + " 0," + ry + " " + -rx + ",0" + "Z";
	    },
	    square: function(size) {
	      var r = Math.sqrt(size) / 2;
	      return "M" + -r + "," + -r + "L" + r + "," + -r + " " + r + "," + r + " " + -r + "," + r + "Z";
	    },
	    "triangle-down": function(size) {
	      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;
	      return "M0," + ry + "L" + rx + "," + -ry + " " + -rx + "," + -ry + "Z";
	    },
	    "triangle-up": function(size) {
	      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;
	      return "M0," + -ry + "L" + rx + "," + ry + " " + -rx + "," + ry + "Z";
	    }
	  });
	  d3.svg.symbolTypes = d3_svg_symbols.keys();
	  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);
	  d3_selectionPrototype.transition = function(name) {
	    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {
	      time: Date.now(),
	      ease: d3_ease_cubicInOut,
	      delay: 0,
	      duration: 250
	    };
	    for (var j = -1, m = this.length; ++j < m; ) {
	      subgroups.push(subgroup = []);
	      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
	        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);
	        subgroup.push(node);
	      }
	    }
	    return d3_transition(subgroups, ns, id);
	  };
	  d3_selectionPrototype.interrupt = function(name) {
	    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));
	  };
	  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());
	  function d3_selection_interruptNS(ns) {
	    return function() {
	      var lock, activeId, active;
	      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {
	        active.timer.c = null;
	        active.timer.t = NaN;
	        if (--lock.count) delete lock[activeId]; else delete this[ns];
	        lock.active += .5;
	        active.event && active.event.interrupt.call(this, this.__data__, active.index);
	      }
	    };
	  }
	  function d3_transition(groups, ns, id) {
	    d3_subclass(groups, d3_transitionPrototype);
	    groups.namespace = ns;
	    groups.id = id;
	    return groups;
	  }
	  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;
	  d3_transitionPrototype.call = d3_selectionPrototype.call;
	  d3_transitionPrototype.empty = d3_selectionPrototype.empty;
	  d3_transitionPrototype.node = d3_selectionPrototype.node;
	  d3_transitionPrototype.size = d3_selectionPrototype.size;
	  d3.transition = function(selection, name) {
	    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);
	  };
	  d3.transition.prototype = d3_transitionPrototype;
	  d3_transitionPrototype.select = function(selector) {
	    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;
	    selector = d3_selection_selector(selector);
	    for (var j = -1, m = this.length; ++j < m; ) {
	      subgroups.push(subgroup = []);
	      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
	        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {
	          if ("__data__" in node) subnode.__data__ = node.__data__;
	          d3_transitionNode(subnode, i, ns, id, node[ns][id]);
	          subgroup.push(subnode);
	        } else {
	          subgroup.push(null);
	        }
	      }
	    }
	    return d3_transition(subgroups, ns, id);
	  };
	  d3_transitionPrototype.selectAll = function(selector) {
	    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;
	    selector = d3_selection_selectorAll(selector);
	    for (var j = -1, m = this.length; ++j < m; ) {
	      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
	        if (node = group[i]) {
	          transition = node[ns][id];
	          subnodes = selector.call(node, node.__data__, i, j);
	          subgroups.push(subgroup = []);
	          for (var k = -1, o = subnodes.length; ++k < o; ) {
	            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);
	            subgroup.push(subnode);
	          }
	        }
	      }
	    }
	    return d3_transition(subgroups, ns, id);
	  };
	  d3_transitionPrototype.filter = function(filter) {
	    var subgroups = [], subgroup, group, node;
	    if (typeof filter !== "function") filter = d3_selection_filter(filter);
	    for (var j = 0, m = this.length; j < m; j++) {
	      subgroups.push(subgroup = []);
	      for (var group = this[j], i = 0, n = group.length; i < n; i++) {
	        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {
	          subgroup.push(node);
	        }
	      }
	    }
	    return d3_transition(subgroups, this.namespace, this.id);
	  };
	  d3_transitionPrototype.tween = function(name, tween) {
	    var id = this.id, ns = this.namespace;
	    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);
	    return d3_selection_each(this, tween == null ? function(node) {
	      node[ns][id].tween.remove(name);
	    } : function(node) {
	      node[ns][id].tween.set(name, tween);
	    });
	  };
	  function d3_transition_tween(groups, name, value, tween) {
	    var id = groups.id, ns = groups.namespace;
	    return d3_selection_each(groups, typeof value === "function" ? function(node, i, j) {
	      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));
	    } : (value = tween(value), function(node) {
	      node[ns][id].tween.set(name, value);
	    }));
	  }
	  d3_transitionPrototype.attr = function(nameNS, value) {
	    if (arguments.length < 2) {
	      for (value in nameNS) this.attr(value, nameNS[value]);
	      return this;
	    }
	    var interpolate = nameNS == "transform" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);
	    function attrNull() {
	      this.removeAttribute(name);
	    }
	    function attrNullNS() {
	      this.removeAttributeNS(name.space, name.local);
	    }
	    function attrTween(b) {
	      return b == null ? attrNull : (b += "", function() {
	        var a = this.getAttribute(name), i;
	        return a !== b && (i = interpolate(a, b), function(t) {
	          this.setAttribute(name, i(t));
	        });
	      });
	    }
	    function attrTweenNS(b) {
	      return b == null ? attrNullNS : (b += "", function() {
	        var a = this.getAttributeNS(name.space, name.local), i;
	        return a !== b && (i = interpolate(a, b), function(t) {
	          this.setAttributeNS(name.space, name.local, i(t));
	        });
	      });
	    }
	    return d3_transition_tween(this, "attr." + nameNS, value, name.local ? attrTweenNS : attrTween);
	  };
	  d3_transitionPrototype.attrTween = function(nameNS, tween) {
	    var name = d3.ns.qualify(nameNS);
	    function attrTween(d, i) {
	      var f = tween.call(this, d, i, this.getAttribute(name));
	      return f && function(t) {
	        this.setAttribute(name, f(t));
	      };
	    }
	    function attrTweenNS(d, i) {
	      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));
	      return f && function(t) {
	        this.setAttributeNS(name.space, name.local, f(t));
	      };
	    }
	    return this.tween("attr." + nameNS, name.local ? attrTweenNS : attrTween);
	  };
	  d3_transitionPrototype.style = function(name, value, priority) {
	    var n = arguments.length;
	    if (n < 3) {
	      if (typeof name !== "string") {
	        if (n < 2) value = "";
	        for (priority in name) this.style(priority, name[priority], value);
	        return this;
	      }
	      priority = "";
	    }
	    function styleNull() {
	      this.style.removeProperty(name);
	    }
	    function styleString(b) {
	      return b == null ? styleNull : (b += "", function() {
	        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;
	        return a !== b && (i = d3_interpolate(a, b), function(t) {
	          this.style.setProperty(name, i(t), priority);
	        });
	      });
	    }
	    return d3_transition_tween(this, "style." + name, value, styleString);
	  };
	  d3_transitionPrototype.styleTween = function(name, tween, priority) {
	    if (arguments.length < 3) priority = "";
	    function styleTween(d, i) {
	      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));
	      return f && function(t) {
	        this.style.setProperty(name, f(t), priority);
	      };
	    }
	    return this.tween("style." + name, styleTween);
	  };
	  d3_transitionPrototype.text = function(value) {
	    return d3_transition_tween(this, "text", value, d3_transition_text);
	  };
	  function d3_transition_text(b) {
	    if (b == null) b = "";
	    return function() {
	      this.textContent = b;
	    };
	  }
	  d3_transitionPrototype.remove = function() {
	    var ns = this.namespace;
	    return this.each("end.transition", function() {
	      var p;
	      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);
	    });
	  };
	  d3_transitionPrototype.ease = function(value) {
	    var id = this.id, ns = this.namespace;
	    if (arguments.length < 1) return this.node()[ns][id].ease;
	    if (typeof value !== "function") value = d3.ease.apply(d3, arguments);
	    return d3_selection_each(this, function(node) {
	      node[ns][id].ease = value;
	    });
	  };
	  d3_transitionPrototype.delay = function(value) {
	    var id = this.id, ns = this.namespace;
	    if (arguments.length < 1) return this.node()[ns][id].delay;
	    return d3_selection_each(this, typeof value === "function" ? function(node, i, j) {
	      node[ns][id].delay = +value.call(node, node.__data__, i, j);
	    } : (value = +value, function(node) {
	      node[ns][id].delay = value;
	    }));
	  };
	  d3_transitionPrototype.duration = function(value) {
	    var id = this.id, ns = this.namespace;
	    if (arguments.length < 1) return this.node()[ns][id].duration;
	    return d3_selection_each(this, typeof value === "function" ? function(node, i, j) {
	      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));
	    } : (value = Math.max(1, value), function(node) {
	      node[ns][id].duration = value;
	    }));
	  };
	  d3_transitionPrototype.each = function(type, listener) {
	    var id = this.id, ns = this.namespace;
	    if (arguments.length < 2) {
	      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;
	      try {
	        d3_transitionInheritId = id;
	        d3_selection_each(this, function(node, i, j) {
	          d3_transitionInherit = node[ns][id];
	          type.call(node, node.__data__, i, j);
	        });
	      } finally {
	        d3_transitionInherit = inherit;
	        d3_transitionInheritId = inheritId;
	      }
	    } else {
	      d3_selection_each(this, function(node) {
	        var transition = node[ns][id];
	        (transition.event || (transition.event = d3.dispatch("start", "end", "interrupt"))).on(type, listener);
	      });
	    }
	    return this;
	  };
	  d3_transitionPrototype.transition = function() {
	    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;
	    for (var j = 0, m = this.length; j < m; j++) {
	      subgroups.push(subgroup = []);
	      for (var group = this[j], i = 0, n = group.length; i < n; i++) {
	        if (node = group[i]) {
	          transition = node[ns][id0];
	          d3_transitionNode(node, i, ns, id1, {
	            time: transition.time,
	            ease: transition.ease,
	            delay: transition.delay + transition.duration,
	            duration: transition.duration
	          });
	        }
	        subgroup.push(node);
	      }
	    }
	    return d3_transition(subgroups, ns, id1);
	  };
	  function d3_transitionNamespace(name) {
	    return name == null ? "__transition__" : "__transition_" + name + "__";
	  }
	  function d3_transitionNode(node, i, ns, id, inherit) {
	    var lock = node[ns] || (node[ns] = {
	      active: 0,
	      count: 0
	    }), transition = lock[id], time, timer, duration, ease, tweens;
	    function schedule(elapsed) {
	      var delay = transition.delay;
	      timer.t = delay + time;
	      if (delay <= elapsed) return start(elapsed - delay);
	      timer.c = start;
	    }
	    function start(elapsed) {
	      var activeId = lock.active, active = lock[activeId];
	      if (active) {
	        active.timer.c = null;
	        active.timer.t = NaN;
	        --lock.count;
	        delete lock[activeId];
	        active.event && active.event.interrupt.call(node, node.__data__, active.index);
	      }
	      for (var cancelId in lock) {
	        if (+cancelId < id) {
	          var cancel = lock[cancelId];
	          cancel.timer.c = null;
	          cancel.timer.t = NaN;
	          --lock.count;
	          delete lock[cancelId];
	        }
	      }
	      timer.c = tick;
	      d3_timer(function() {
	        if (timer.c && tick(elapsed || 1)) {
	          timer.c = null;
	          timer.t = NaN;
	        }
	        return 1;
	      }, 0, time);
	      lock.active = id;
	      transition.event && transition.event.start.call(node, node.__data__, i);
	      tweens = [];
	      transition.tween.forEach(function(key, value) {
	        if (value = value.call(node, node.__data__, i)) {
	          tweens.push(value);
	        }
	      });
	      ease = transition.ease;
	      duration = transition.duration;
	    }
	    function tick(elapsed) {
	      var t = elapsed / duration, e = ease(t), n = tweens.length;
	      while (n > 0) {
	        tweens[--n].call(node, e);
	      }
	      if (t >= 1) {
	        transition.event && transition.event.end.call(node, node.__data__, i);
	        if (--lock.count) delete lock[id]; else delete node[ns];
	        return 1;
	      }
	    }
	    if (!transition) {
	      time = inherit.time;
	      timer = d3_timer(schedule, 0, time);
	      transition = lock[id] = {
	        tween: new d3_Map(),
	        time: time,
	        timer: timer,
	        delay: inherit.delay,
	        duration: inherit.duration,
	        ease: inherit.ease,
	        index: i
	      };
	      inherit = null;
	      ++lock.count;
	    }
	  }
	  d3.svg.axis = function() {
	    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;
	    function axis(g) {
	      g.each(function() {
	        var g = d3.select(this);
	        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();
	        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(".tick").data(ticks, scale1), tickEnter = tick.enter().insert("g", ".domain").attr("class", "tick").style("opacity", ε), tickExit = d3.transition(tick.exit()).style("opacity", ε).remove(), tickUpdate = d3.transition(tick.order()).style("opacity", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;
	        var range = d3_scaleRange(scale1), path = g.selectAll(".domain").data([ 0 ]), pathUpdate = (path.enter().append("path").attr("class", "domain"), 
	        d3.transition(path));
	        tickEnter.append("line");
	        tickEnter.append("text");
	        var lineEnter = tickEnter.select("line"), lineUpdate = tickUpdate.select("line"), text = tick.select("text").text(tickFormat), textEnter = tickEnter.select("text"), textUpdate = tickUpdate.select("text"), sign = orient === "top" || orient === "left" ? -1 : 1, x1, x2, y1, y2;
	        if (orient === "bottom" || orient === "top") {
	          tickTransform = d3_svg_axisX, x1 = "x", y1 = "y", x2 = "x2", y2 = "y2";
	          text.attr("dy", sign < 0 ? "0em" : ".71em").style("text-anchor", "middle");
	          pathUpdate.attr("d", "M" + range[0] + "," + sign * outerTickSize + "V0H" + range[1] + "V" + sign * outerTickSize);
	        } else {
	          tickTransform = d3_svg_axisY, x1 = "y", y1 = "x", x2 = "y2", y2 = "x2";
	          text.attr("dy", ".32em").style("text-anchor", sign < 0 ? "end" : "start");
	          pathUpdate.attr("d", "M" + sign * outerTickSize + "," + range[0] + "H0V" + range[1] + "H" + sign * outerTickSize);
	        }
	        lineEnter.attr(y2, sign * innerTickSize);
	        textEnter.attr(y1, sign * tickSpacing);
	        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);
	        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);
	        if (scale1.rangeBand) {
	          var x = scale1, dx = x.rangeBand() / 2;
	          scale0 = scale1 = function(d) {
	            return x(d) + dx;
	          };
	        } else if (scale0.rangeBand) {
	          scale0 = scale1;
	        } else {
	          tickExit.call(tickTransform, scale1, scale0);
	        }
	        tickEnter.call(tickTransform, scale0, scale1);
	        tickUpdate.call(tickTransform, scale1, scale1);
	      });
	    }
	    axis.scale = function(x) {
	      if (!arguments.length) return scale;
	      scale = x;
	      return axis;
	    };
	    axis.orient = function(x) {
	      if (!arguments.length) return orient;
	      orient = x in d3_svg_axisOrients ? x + "" : d3_svg_axisDefaultOrient;
	      return axis;
	    };
	    axis.ticks = function() {
	      if (!arguments.length) return tickArguments_;
	      tickArguments_ = d3_array(arguments);
	      return axis;
	    };
	    axis.tickValues = function(x) {
	      if (!arguments.length) return tickValues;
	      tickValues = x;
	      return axis;
	    };
	    axis.tickFormat = function(x) {
	      if (!arguments.length) return tickFormat_;
	      tickFormat_ = x;
	      return axis;
	    };
	    axis.tickSize = function(x) {
	      var n = arguments.length;
	      if (!n) return innerTickSize;
	      innerTickSize = +x;
	      outerTickSize = +arguments[n - 1];
	      return axis;
	    };
	    axis.innerTickSize = function(x) {
	      if (!arguments.length) return innerTickSize;
	      innerTickSize = +x;
	      return axis;
	    };
	    axis.outerTickSize = function(x) {
	      if (!arguments.length) return outerTickSize;
	      outerTickSize = +x;
	      return axis;
	    };
	    axis.tickPadding = function(x) {
	      if (!arguments.length) return tickPadding;
	      tickPadding = +x;
	      return axis;
	    };
	    axis.tickSubdivide = function() {
	      return arguments.length && axis;
	    };
	    return axis;
	  };
	  var d3_svg_axisDefaultOrient = "bottom", d3_svg_axisOrients = {
	    top: 1,
	    right: 1,
	    bottom: 1,
	    left: 1
	  };
	  function d3_svg_axisX(selection, x0, x1) {
	    selection.attr("transform", function(d) {
	      var v0 = x0(d);
	      return "translate(" + (isFinite(v0) ? v0 : x1(d)) + ",0)";
	    });
	  }
	  function d3_svg_axisY(selection, y0, y1) {
	    selection.attr("transform", function(d) {
	      var v0 = y0(d);
	      return "translate(0," + (isFinite(v0) ? v0 : y1(d)) + ")";
	    });
	  }
	  d3.svg.brush = function() {
	    var event = d3_eventDispatch(brush, "brushstart", "brush", "brushend"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];
	    function brush(g) {
	      g.each(function() {
	        var g = d3.select(this).style("pointer-events", "all").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)").on("mousedown.brush", brushstart).on("touchstart.brush", brushstart);
	        var background = g.selectAll(".background").data([ 0 ]);
	        background.enter().append("rect").attr("class", "background").style("visibility", "hidden").style("cursor", "crosshair");
	        g.selectAll(".extent").data([ 0 ]).enter().append("rect").attr("class", "extent").style("cursor", "move");
	        var resize = g.selectAll(".resize").data(resizes, d3_identity);
	        resize.exit().remove();
	        resize.enter().append("g").attr("class", function(d) {
	          return "resize " + d;
	        }).style("cursor", function(d) {
	          return d3_svg_brushCursor[d];
	        }).append("rect").attr("x", function(d) {
	          return /[ew]$/.test(d) ? -3 : null;
	        }).attr("y", function(d) {
	          return /^[ns]/.test(d) ? -3 : null;
	        }).attr("width", 6).attr("height", 6).style("visibility", "hidden");
	        resize.style("display", brush.empty() ? "none" : null);
	        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;
	        if (x) {
	          range = d3_scaleRange(x);
	          backgroundUpdate.attr("x", range[0]).attr("width", range[1] - range[0]);
	          redrawX(gUpdate);
	        }
	        if (y) {
	          range = d3_scaleRange(y);
	          backgroundUpdate.attr("y", range[0]).attr("height", range[1] - range[0]);
	          redrawY(gUpdate);
	        }
	        redraw(gUpdate);
	      });
	    }
	    brush.event = function(g) {
	      g.each(function() {
	        var event_ = event.of(this, arguments), extent1 = {
	          x: xExtent,
	          y: yExtent,
	          i: xExtentDomain,
	          j: yExtentDomain
	        }, extent0 = this.__chart__ || extent1;
	        this.__chart__ = extent1;
	        if (d3_transitionInheritId) {
	          d3.select(this).transition().each("start.brush", function() {
	            xExtentDomain = extent0.i;
	            yExtentDomain = extent0.j;
	            xExtent = extent0.x;
	            yExtent = extent0.y;
	            event_({
	              type: "brushstart"
	            });
	          }).tween("brush:brush", function() {
	            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);
	            xExtentDomain = yExtentDomain = null;
	            return function(t) {
	              xExtent = extent1.x = xi(t);
	              yExtent = extent1.y = yi(t);
	              event_({
	                type: "brush",
	                mode: "resize"
	              });
	            };
	          }).each("end.brush", function() {
	            xExtentDomain = extent1.i;
	            yExtentDomain = extent1.j;
	            event_({
	              type: "brush",
	              mode: "resize"
	            });
	            event_({
	              type: "brushend"
	            });
	          });
	        } else {
	          event_({
	            type: "brushstart"
	          });
	          event_({
	            type: "brush",
	            mode: "resize"
	          });
	          event_({
	            type: "brushend"
	          });
	        }
	      });
	    };
	    function redraw(g) {
	      g.selectAll(".resize").attr("transform", function(d) {
	        return "translate(" + xExtent[+/e$/.test(d)] + "," + yExtent[+/^s/.test(d)] + ")";
	      });
	    }
	    function redrawX(g) {
	      g.select(".extent").attr("x", xExtent[0]);
	      g.selectAll(".extent,.n>rect,.s>rect").attr("width", xExtent[1] - xExtent[0]);
	    }
	    function redrawY(g) {
	      g.select(".extent").attr("y", yExtent[0]);
	      g.selectAll(".extent,.e>rect,.w>rect").attr("height", yExtent[1] - yExtent[0]);
	    }
	    function brushstart() {
	      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed("extent"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;
	      var w = d3.select(d3_window(target)).on("keydown.brush", keydown).on("keyup.brush", keyup);
	      if (d3.event.changedTouches) {
	        w.on("touchmove.brush", brushmove).on("touchend.brush", brushend);
	      } else {
	        w.on("mousemove.brush", brushmove).on("mouseup.brush", brushend);
	      }
	      g.interrupt().selectAll("*").interrupt();
	      if (dragging) {
	        origin[0] = xExtent[0] - origin[0];
	        origin[1] = yExtent[0] - origin[1];
	      } else if (resizing) {
	        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);
	        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];
	        origin[0] = xExtent[ex];
	        origin[1] = yExtent[ey];
	      } else if (d3.event.altKey) center = origin.slice();
	      g.style("pointer-events", "none").selectAll(".resize").style("display", null);
	      d3.select("body").style("cursor", eventTarget.style("cursor"));
	      event_({
	        type: "brushstart"
	      });
	      brushmove();
	      function keydown() {
	        if (d3.event.keyCode == 32) {
	          if (!dragging) {
	            center = null;
	            origin[0] -= xExtent[1];
	            origin[1] -= yExtent[1];
	            dragging = 2;
	          }
	          d3_eventPreventDefault();
	        }
	      }
	      function keyup() {
	        if (d3.event.keyCode == 32 && dragging == 2) {
	          origin[0] += xExtent[1];
	          origin[1] += yExtent[1];
	          dragging = 0;
	          d3_eventPreventDefault();
	        }
	      }
	      function brushmove() {
	        var point = d3.mouse(target), moved = false;
	        if (offset) {
	          point[0] += offset[0];
	          point[1] += offset[1];
	        }
	        if (!dragging) {
	          if (d3.event.altKey) {
	            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];
	            origin[0] = xExtent[+(point[0] < center[0])];
	            origin[1] = yExtent[+(point[1] < center[1])];
	          } else center = null;
	        }
	        if (resizingX && move1(point, x, 0)) {
	          redrawX(g);
	          moved = true;
	        }
	        if (resizingY && move1(point, y, 1)) {
	          redrawY(g);
	          moved = true;
	        }
	        if (moved) {
	          redraw(g);
	          event_({
	            type: "brush",
	            mode: dragging ? "move" : "resize"
	          });
	        }
	      }
	      function move1(point, scale, i) {
	        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;
	        if (dragging) {
	          r0 -= position;
	          r1 -= size + position;
	        }
	        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];
	        if (dragging) {
	          max = (min += position) + size;
	        } else {
	          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));
	          if (position < min) {
	            max = min;
	            min = position;
	          } else {
	            max = position;
	          }
	        }
	        if (extent[0] != min || extent[1] != max) {
	          if (i) yExtentDomain = null; else xExtentDomain = null;
	          extent[0] = min;
	          extent[1] = max;
	          return true;
	        }
	      }
	      function brushend() {
	        brushmove();
	        g.style("pointer-events", "all").selectAll(".resize").style("display", brush.empty() ? "none" : null);
	        d3.select("body").style("cursor", null);
	        w.on("mousemove.brush", null).on("mouseup.brush", null).on("touchmove.brush", null).on("touchend.brush", null).on("keydown.brush", null).on("keyup.brush", null);
	        dragRestore();
	        event_({
	          type: "brushend"
	        });
	      }
	    }
	    brush.x = function(z) {
	      if (!arguments.length) return x;
	      x = z;
	      resizes = d3_svg_brushResizes[!x << 1 | !y];
	      return brush;
	    };
	    brush.y = function(z) {
	      if (!arguments.length) return y;
	      y = z;
	      resizes = d3_svg_brushResizes[!x << 1 | !y];
	      return brush;
	    };
	    brush.clamp = function(z) {
	      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;
	      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;
	      return brush;
	    };
	    brush.extent = function(z) {
	      var x0, x1, y0, y1, t;
	      if (!arguments.length) {
	        if (x) {
	          if (xExtentDomain) {
	            x0 = xExtentDomain[0], x1 = xExtentDomain[1];
	          } else {
	            x0 = xExtent[0], x1 = xExtent[1];
	            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);
	            if (x1 < x0) t = x0, x0 = x1, x1 = t;
	          }
	        }
	        if (y) {
	          if (yExtentDomain) {
	            y0 = yExtentDomain[0], y1 = yExtentDomain[1];
	          } else {
	            y0 = yExtent[0], y1 = yExtent[1];
	            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);
	            if (y1 < y0) t = y0, y0 = y1, y1 = t;
	          }
	        }
	        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];
	      }
	      if (x) {
	        x0 = z[0], x1 = z[1];
	        if (y) x0 = x0[0], x1 = x1[0];
	        xExtentDomain = [ x0, x1 ];
	        if (x.invert) x0 = x(x0), x1 = x(x1);
	        if (x1 < x0) t = x0, x0 = x1, x1 = t;
	        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];
	      }
	      if (y) {
	        y0 = z[0], y1 = z[1];
	        if (x) y0 = y0[1], y1 = y1[1];
	        yExtentDomain = [ y0, y1 ];
	        if (y.invert) y0 = y(y0), y1 = y(y1);
	        if (y1 < y0) t = y0, y0 = y1, y1 = t;
	        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];
	      }
	      return brush;
	    };
	    brush.clear = function() {
	      if (!brush.empty()) {
	        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];
	        xExtentDomain = yExtentDomain = null;
	      }
	      return brush;
	    };
	    brush.empty = function() {
	      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];
	    };
	    return d3.rebind(brush, event, "on");
	  };
	  var d3_svg_brushCursor = {
	    n: "ns-resize",
	    e: "ew-resize",
	    s: "ns-resize",
	    w: "ew-resize",
	    nw: "nwse-resize",
	    ne: "nesw-resize",
	    se: "nwse-resize",
	    sw: "nesw-resize"
	  };
	  var d3_svg_brushResizes = [ [ "n", "e", "s", "w", "nw", "ne", "se", "sw" ], [ "e", "w" ], [ "n", "s" ], [] ];
	  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;
	  var d3_time_formatUtc = d3_time_format.utc;
	  var d3_time_formatIso = d3_time_formatUtc("%Y-%m-%dT%H:%M:%S.%LZ");
	  d3_time_format.iso = Date.prototype.toISOString && +new Date("2000-01-01T00:00:00.000Z") ? d3_time_formatIsoNative : d3_time_formatIso;
	  function d3_time_formatIsoNative(date) {
	    return date.toISOString();
	  }
	  d3_time_formatIsoNative.parse = function(string) {
	    var date = new Date(string);
	    return isNaN(date) ? null : date;
	  };
	  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;
	  d3_time.second = d3_time_interval(function(date) {
	    return new d3_date(Math.floor(date / 1e3) * 1e3);
	  }, function(date, offset) {
	    date.setTime(date.getTime() + Math.floor(offset) * 1e3);
	  }, function(date) {
	    return date.getSeconds();
	  });
	  d3_time.seconds = d3_time.second.range;
	  d3_time.seconds.utc = d3_time.second.utc.range;
	  d3_time.minute = d3_time_interval(function(date) {
	    return new d3_date(Math.floor(date / 6e4) * 6e4);
	  }, function(date, offset) {
	    date.setTime(date.getTime() + Math.floor(offset) * 6e4);
	  }, function(date) {
	    return date.getMinutes();
	  });
	  d3_time.minutes = d3_time.minute.range;
	  d3_time.minutes.utc = d3_time.minute.utc.range;
	  d3_time.hour = d3_time_interval(function(date) {
	    var timezone = date.getTimezoneOffset() / 60;
	    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);
	  }, function(date, offset) {
	    date.setTime(date.getTime() + Math.floor(offset) * 36e5);
	  }, function(date) {
	    return date.getHours();
	  });
	  d3_time.hours = d3_time.hour.range;
	  d3_time.hours.utc = d3_time.hour.utc.range;
	  d3_time.month = d3_time_interval(function(date) {
	    date = d3_time.day(date);
	    date.setDate(1);
	    return date;
	  }, function(date, offset) {
	    date.setMonth(date.getMonth() + offset);
	  }, function(date) {
	    return date.getMonth();
	  });
	  d3_time.months = d3_time.month.range;
	  d3_time.months.utc = d3_time.month.utc.range;
	  function d3_time_scale(linear, methods, format) {
	    function scale(x) {
	      return linear(x);
	    }
	    scale.invert = function(x) {
	      return d3_time_scaleDate(linear.invert(x));
	    };
	    scale.domain = function(x) {
	      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);
	      linear.domain(x);
	      return scale;
	    };
	    function tickMethod(extent, count) {
	      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);
	      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {
	        return d / 31536e6;
	      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];
	    }
	    scale.nice = function(interval, skip) {
	      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === "number" && tickMethod(extent, interval);
	      if (method) interval = method[0], skip = method[1];
	      function skipped(date) {
	        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;
	      }
	      return scale.domain(d3_scale_nice(domain, skip > 1 ? {
	        floor: function(date) {
	          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);
	          return date;
	        },
	        ceil: function(date) {
	          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);
	          return date;
	        }
	      } : interval));
	    };
	    scale.ticks = function(interval, skip) {
	      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === "number" ? tickMethod(extent, interval) : !interval.range && [ {
	        range: interval
	      }, skip ];
	      if (method) interval = method[0], skip = method[1];
	      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);
	    };
	    scale.tickFormat = function() {
	      return format;
	    };
	    scale.copy = function() {
	      return d3_time_scale(linear.copy(), methods, format);
	    };
	    return d3_scale_linearRebind(scale, linear);
	  }
	  function d3_time_scaleDate(t) {
	    return new Date(t);
	  }
	  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];
	  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];
	  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ ".%L", function(d) {
	    return d.getMilliseconds();
	  } ], [ ":%S", function(d) {
	    return d.getSeconds();
	  } ], [ "%I:%M", function(d) {
	    return d.getMinutes();
	  } ], [ "%I %p", function(d) {
	    return d.getHours();
	  } ], [ "%a %d", function(d) {
	    return d.getDay() && d.getDate() != 1;
	  } ], [ "%b %d", function(d) {
	    return d.getDate() != 1;
	  } ], [ "%B", function(d) {
	    return d.getMonth();
	  } ], [ "%Y", d3_true ] ]);
	  var d3_time_scaleMilliseconds = {
	    range: function(start, stop, step) {
	      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);
	    },
	    floor: d3_identity,
	    ceil: d3_identity
	  };
	  d3_time_scaleLocalMethods.year = d3_time.year;
	  d3_time.scale = function() {
	    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);
	  };
	  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {
	    return [ m[0].utc, m[1] ];
	  });
	  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ ".%L", function(d) {
	    return d.getUTCMilliseconds();
	  } ], [ ":%S", function(d) {
	    return d.getUTCSeconds();
	  } ], [ "%I:%M", function(d) {
	    return d.getUTCMinutes();
	  } ], [ "%I %p", function(d) {
	    return d.getUTCHours();
	  } ], [ "%a %d", function(d) {
	    return d.getUTCDay() && d.getUTCDate() != 1;
	  } ], [ "%b %d", function(d) {
	    return d.getUTCDate() != 1;
	  } ], [ "%B", function(d) {
	    return d.getUTCMonth();
	  } ], [ "%Y", d3_true ] ]);
	  d3_time_scaleUtcMethods.year = d3_time.year.utc;
	  d3_time.scale.utc = function() {
	    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);
	  };
	  d3.text = d3_xhrType(function(request) {
	    return request.responseText;
	  });
	  d3.json = function(url, callback) {
	    return d3_xhr(url, "application/json", d3_json, callback);
	  };
	  function d3_json(request) {
	    return JSON.parse(request.responseText);
	  }
	  d3.html = function(url, callback) {
	    return d3_xhr(url, "text/html", d3_html, callback);
	  };
	  function d3_html(request) {
	    var range = d3_document.createRange();
	    range.selectNode(d3_document.body);
	    return range.createContextualFragment(request.responseText);
	  }
	  d3.xml = d3_xhrType(function(request) {
	    return request.responseXML;
	  });
	  if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === "object" && module.exports) module.exports = d3; else this.d3 = d3;
	}();

/***/ },
/* 242 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10,17.5960697 L17,14.0697019 L17,6.34777241 L10,10.007318 L10,17.5960697 Z M9,17.5960697 L2,14.0697019 L2,6.34777241 L9,10.007318 L9,17.5960697 Z M2,5.29999995 L9.5,1.3499999 L17,5.29999995 L9.5,9.25 L2,5.29999995 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 243 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(244);
	var React = __webpack_require__(5);
	var ReactDOM = __webpack_require__(36);
	var drag_manager_1 = __webpack_require__(246);
	var index_1 = __webpack_require__(192);
	var cube_header_bar_1 = __webpack_require__(247);
	var dimension_measure_panel_1 = __webpack_require__(278);
	var filter_tile_1 = __webpack_require__(320);
	var split_tile_1 = __webpack_require__(344);
	var vis_selector_1 = __webpack_require__(351);
	var manual_fallback_1 = __webpack_require__(367);
	var drop_indicator_1 = __webpack_require__(370);
	var pinboard_panel_1 = __webpack_require__(374);
	var index_2 = __webpack_require__(385);
	var CubeView = (function (_super) {
	    __extends(CubeView, _super);
	    function CubeView() {
	        var _this = this;
	        _super.call(this);
	        this.state = {
	            essence: null,
	            dragOver: false,
	            showRawDataModal: false,
	            downloadableDataset: null
	        };
	        var clicker = {
	            changeFilter: function (filter, colors) {
	                var essence = _this.state.essence;
	                essence = essence.changeFilter(filter);
	                if (colors)
	                    essence = essence.changeColors(colors);
	                _this.setState({ essence: essence });
	            },
	            changeTimeSelection: function (selection) {
	                var essence = _this.state.essence;
	                _this.setState({ essence: essence.changeTimeSelection(selection) });
	            },
	            changeSplits: function (splits, strategy, colors) {
	                var essence = _this.state.essence;
	                if (colors)
	                    essence = essence.changeColors(colors);
	                _this.setState({ essence: essence.changeSplits(splits, strategy) });
	            },
	            changeSplit: function (split, strategy) {
	                var essence = _this.state.essence;
	                _this.setState({ essence: essence.changeSplit(split, strategy) });
	            },
	            addSplit: function (split, strategy) {
	                var essence = _this.state.essence;
	                _this.setState({ essence: essence.addSplit(split, strategy) });
	            },
	            removeSplit: function (split, strategy) {
	                var essence = _this.state.essence;
	                _this.setState({ essence: essence.removeSplit(split, strategy) });
	            },
	            changeColors: function (colors) {
	                var essence = _this.state.essence;
	                _this.setState({ essence: essence.changeColors(colors) });
	            },
	            changeVisualization: function (visualization) {
	                var essence = _this.state.essence;
	                _this.setState({ essence: essence.changeVisualization(visualization) });
	            },
	            pin: function (dimension) {
	                var essence = _this.state.essence;
	                _this.setState({ essence: essence.pin(dimension) });
	            },
	            unpin: function (dimension) {
	                var essence = _this.state.essence;
	                _this.setState({ essence: essence.unpin(dimension) });
	            },
	            changePinnedSortMeasure: function (measure) {
	                var essence = _this.state.essence;
	                _this.setState({ essence: essence.changePinnedSortMeasure(measure) });
	            },
	            toggleMultiMeasureMode: function () {
	                var essence = _this.state.essence;
	                _this.setState({ essence: essence.toggleMultiMeasureMode() });
	            },
	            toggleEffectiveMeasure: function (measure) {
	                var essence = _this.state.essence;
	                _this.setState({ essence: essence.toggleEffectiveMeasure(measure) });
	            },
	            changeHighlight: function (owner, measure, delta) {
	                var essence = _this.state.essence;
	                _this.setState({ essence: essence.changeHighlight(owner, measure, delta) });
	            },
	            acceptHighlight: function () {
	                var essence = _this.state.essence;
	                _this.setState({ essence: essence.acceptHighlight() });
	            },
	            dropHighlight: function () {
	                var essence = _this.state.essence;
	                _this.setState({ essence: essence.dropHighlight() });
	            }
	        };
	        this.clicker = clicker;
	        this.globalResizeListener = this.globalResizeListener.bind(this);
	        this.globalKeyDownListener = this.globalKeyDownListener.bind(this);
	    }
	    CubeView.prototype.refreshMaxTime = function () {
	        var _this = this;
	        var essence = this.state.essence;
	        var dataSource = essence.dataSource;
	        index_1.DataSource.updateMaxTime(dataSource)
	            .then(function (updatedDataSource) {
	            if (!_this.mounted)
	                return;
	            _this.setState({ essence: essence.updateDataSource(updatedDataSource) });
	        });
	    };
	    CubeView.prototype.componentWillMount = function () {
	        var _a = this.props, hash = _a.hash, dataSource = _a.dataSource, updateViewHash = _a.updateViewHash;
	        var essence = this.getEssenceFromHash(hash);
	        if (!essence) {
	            if (!dataSource)
	                throw new Error('must have data source');
	            essence = this.getEssenceFromDataSource(dataSource);
	            updateViewHash(essence.toHash(), true);
	        }
	        this.setState({ essence: essence });
	    };
	    CubeView.prototype.componentDidMount = function () {
	        var _this = this;
	        this.mounted = true;
	        drag_manager_1.DragManager.init();
	        window.addEventListener('resize', this.globalResizeListener);
	        window.addEventListener('keydown', this.globalKeyDownListener);
	        this.globalResizeListener();
	        __webpack_require__.e/* nsure */(5, function (require) {
	            _this.setState({
	                RawDataModalAsync: __webpack_require__(441).RawDataModal
	            });
	        });
	    };
	    CubeView.prototype.componentWillReceiveProps = function (nextProps) {
	        var _a = this.props, hash = _a.hash, dataSource = _a.dataSource, updateViewHash = _a.updateViewHash;
	        if (!nextProps.dataSource)
	            throw new Error('must have data source');
	        if (hash !== nextProps.hash) {
	            var hashEssence = this.getEssenceFromHash(nextProps.hash);
	            if (!hashEssence) {
	                hashEssence = this.getEssenceFromDataSource(nextProps.dataSource);
	                updateViewHash(hashEssence.toHash(), true);
	            }
	            this.setState({ essence: hashEssence });
	        }
	        else if (!dataSource.equals(nextProps.dataSource)) {
	            var newEssence = this.getEssenceFromDataSource(nextProps.dataSource);
	            this.setState({ essence: newEssence });
	        }
	    };
	    CubeView.prototype.componentWillUpdate = function (nextProps, nextState) {
	        var updateViewHash = this.props.updateViewHash;
	        var essence = this.state.essence;
	        if (updateViewHash && !nextState.essence.equals(essence)) {
	            updateViewHash(nextState.essence.toHash());
	        }
	    };
	    CubeView.prototype.componentWillUnmount = function () {
	        this.mounted = false;
	        window.removeEventListener('resize', this.globalResizeListener);
	        window.removeEventListener('keydown', this.globalKeyDownListener);
	    };
	    CubeView.prototype.getEssenceFromDataSource = function (dataSource) {
	        return index_1.Essence.fromDataSource(dataSource, { dataSource: dataSource, visualizations: index_2.visualizations });
	    };
	    CubeView.prototype.getEssenceFromHash = function (hash) {
	        if (!hash)
	            return null;
	        var dataSource = this.props.dataSource;
	        return index_1.Essence.fromHash(hash, { dataSource: dataSource, visualizations: index_2.visualizations });
	    };
	    CubeView.prototype.globalKeyDownListener = function (e) {
	        // Shortcuts will go here one day
	    };
	    CubeView.prototype.globalResizeListener = function () {
	        var _a = this.refs, container = _a.container, visualization = _a.visualization;
	        var containerDOM = ReactDOM.findDOMNode(container);
	        var visualizationDOM = ReactDOM.findDOMNode(visualization);
	        if (!containerDOM || !visualizationDOM)
	            return;
	        this.setState({
	            menuStage: index_1.Stage.fromClientRect(containerDOM.getBoundingClientRect()),
	            visualizationStage: index_1.Stage.fromClientRect(visualizationDOM.getBoundingClientRect())
	        });
	    };
	    CubeView.prototype.canDrop = function (e) {
	        return Boolean(drag_manager_1.DragManager.getDragDimension());
	    };
	    CubeView.prototype.dragEnter = function (e) {
	        if (!this.canDrop(e))
	            return;
	        this.setState({ dragOver: true });
	    };
	    CubeView.prototype.dragOver = function (e) {
	        if (!this.canDrop(e))
	            return;
	        e.dataTransfer.dropEffect = 'move';
	        e.preventDefault();
	    };
	    CubeView.prototype.dragLeave = function (e) {
	        this.setState({ dragOver: false });
	    };
	    CubeView.prototype.drop = function (e) {
	        if (!this.canDrop(e))
	            return;
	        e.preventDefault();
	        var essence = this.state.essence;
	        var dimension = drag_manager_1.DragManager.getDragDimension();
	        if (dimension) {
	            this.clicker.changeSplit(index_1.SplitCombine.fromExpression(dimension.expression), index_1.VisStrategy.FairGame);
	        }
	        this.setState({ dragOver: false });
	    };
	    CubeView.prototype.openRawDataModal = function () {
	        this.setState({
	            showRawDataModal: true
	        });
	    };
	    CubeView.prototype.onRawDataModalClose = function () {
	        this.setState({
	            showRawDataModal: false
	        });
	    };
	    CubeView.prototype.renderRawDataModal = function () {
	        var _a = this.state, RawDataModalAsync = _a.RawDataModalAsync, showRawDataModal = _a.showRawDataModal, essence = _a.essence, visualizationStage = _a.visualizationStage;
	        if (!RawDataModalAsync || !showRawDataModal)
	            return null;
	        return React.createElement(RawDataModalAsync, {stage: visualizationStage, essence: essence, onClose: this.onRawDataModalClose.bind(this)});
	    };
	    CubeView.prototype.triggerFilterMenu = function (dimension) {
	        if (!dimension)
	            return;
	        this.refs['filterTile'].filterMenuRequest(dimension);
	    };
	    CubeView.prototype.triggerSplitMenu = function (dimension) {
	        if (!dimension)
	            return;
	        this.refs['splitTile'].splitMenuRequest(dimension);
	    };
	    CubeView.prototype.registerDownloadableDataset = function (newDownloadableDataset) {
	        var downloadableDataset = this.state.downloadableDataset;
	        if (downloadableDataset === newDownloadableDataset)
	            return;
	        this.setState({
	            downloadableDataset: newDownloadableDataset
	        });
	    };
	    CubeView.prototype.render = function () {
	        var clicker = this.clicker;
	        var _a = this.props, getUrlPrefix = _a.getUrlPrefix, onNavClick = _a.onNavClick, user = _a.user, customization = _a.customization;
	        var _b = this.state, essence = _b.essence, menuStage = _b.menuStage, visualizationStage = _b.visualizationStage, dragOver = _b.dragOver, downloadableDataset = _b.downloadableDataset;
	        if (!essence)
	            return null;
	        var visualization = essence.visualization;
	        var visElement = null;
	        if (essence.visResolve.isReady() && visualizationStage) {
	            var visProps = {
	                clicker: clicker,
	                essence: essence,
	                stage: visualizationStage,
	                openRawDataModal: this.openRawDataModal.bind(this),
	                registerDownloadableDataset: this.registerDownloadableDataset.bind(this)
	            };
	            visElement = React.createElement(visualization, visProps);
	        }
	        var manualFallback = null;
	        if (essence.visResolve.isManual()) {
	            manualFallback = React.createElement(manual_fallback_1.ManualFallback, {
	                clicker: clicker,
	                essence: essence
	            });
	        }
	        return React.createElement("div", {className: 'cube-view'}, React.createElement(cube_header_bar_1.CubeHeaderBar, {clicker: clicker, essence: essence, user: user, onNavClick: onNavClick, getUrlPrefix: getUrlPrefix, refreshMaxTime: this.refreshMaxTime.bind(this), openRawDataModal: this.openRawDataModal.bind(this), customization: customization, downloadableDataset: downloadableDataset}), React.createElement("div", {className: "container", ref: 'container'}, React.createElement(dimension_measure_panel_1.DimensionMeasurePanel, {clicker: clicker, essence: essence, menuStage: menuStage, triggerFilterMenu: this.triggerFilterMenu.bind(this), triggerSplitMenu: this.triggerSplitMenu.bind(this), getUrlPrefix: getUrlPrefix}), React.createElement("div", {className: 'center-panel'}, React.createElement("div", {className: 'center-top-bar'}, React.createElement("div", {className: 'filter-split-section'}, React.createElement(filter_tile_1.FilterTile, {ref: "filterTile", clicker: clicker, essence: essence, menuStage: visualizationStage, getUrlPrefix: getUrlPrefix}), React.createElement(split_tile_1.SplitTile, {ref: "splitTile", clicker: clicker, essence: essence, menuStage: visualizationStage, getUrlPrefix: getUrlPrefix})), React.createElement(vis_selector_1.VisSelector, {clicker: clicker, essence: essence})), React.createElement("div", {className: 'center-main', onDragEnter: this.dragEnter.bind(this)}, React.createElement("div", {className: 'visualization', ref: 'visualization'}, visElement), manualFallback, dragOver ? React.createElement(drop_indicator_1.DropIndicator, null) : null, dragOver ? React.createElement("div", {className: "drag-mask", onDragOver: this.dragOver.bind(this), onDragLeave: this.dragLeave.bind(this), onDrop: this.drop.bind(this)}) : null)), React.createElement(pinboard_panel_1.PinboardPanel, {clicker: clicker, essence: essence, getUrlPrefix: getUrlPrefix})), this.renderRawDataModal());
	    };
	    CubeView.defaultProps = {
	        maxFilters: 20,
	        maxSplits: 3
	    };
	    return CubeView;
	}(React.Component));
	exports.CubeView = CubeView;


/***/ },
/* 244 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(245);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./cube-view.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./cube-view.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 245 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".cube-view .center-panel .center-main .visualization{background:#fff;box-shadow:0 1px 1px 0 rgba(0,0,0,0.1)}.cube-view .cube-header-bar{position:absolute;top:0;left:0;right:0;height:42px}.cube-view .container{position:absolute;top:42px;bottom:0;left:0;right:0}.cube-view .dimension-measure-panel{position:absolute;top:0;bottom:0;left:0;width:240px}.cube-view .center-panel{position:absolute;top:10px;bottom:10px;left:240px;right:240px}.cube-view .center-panel .center-top-bar{position:absolute;top:0;left:0;right:0;height:73px}.cube-view .center-panel .center-top-bar .filter-split-section{position:absolute;top:0;bottom:0;left:0;right:79px}.cube-view .center-panel .center-top-bar .filter-tile,.cube-view .center-panel .center-top-bar .split-tile{height:36px}.cube-view .center-panel .center-top-bar .filter-tile{margin-bottom:1px;border-radius:2px 0 0 0}.cube-view .center-panel .center-top-bar .split-tile{border-radius:0 0 0 2px}.cube-view .center-panel .center-top-bar .vis-selector{position:absolute;top:0;bottom:0;right:0;width:78px;z-index:8;border-radius:0 2px 2px 0}.cube-view .center-panel .center-main{position:absolute;top:78px;bottom:0;left:0;right:0}.cube-view .center-panel .center-main .visualization{position:absolute;top:0;bottom:0;left:0;right:0;border-radius:2px}.cube-view .center-panel .center-main .manual-fallback{position:absolute;top:0;bottom:0;left:0;right:0}.cube-view .center-panel .center-main .drop-indicator{position:absolute;top:0;bottom:0;left:0;right:0;z-index:9}.cube-view .center-panel .center-main .drag-mask{position:absolute;top:0;bottom:0;left:0;right:0;z-index:10}.cube-view .pinboard-panel{position:absolute;top:0;bottom:0;right:0;width:240px;margin-bottom:9px}.cube-view .pinboard-panel .pinboard-measure-tile:first-child,.cube-view .pinboard-panel .dimension-tile:first-child,.cube-view .pinboard-panel .placeholder-tile:first-child{border-radius:2px 2px 0 0}.cube-view .pinboard-panel .pinboard-measure-tile:last-child,.cube-view .pinboard-panel .dimension-tile:last-child,.cube-view .pinboard-panel .placeholder-tile:last-child{border-radius:0 0 2px 2px}\n", ""]);

	// exports


/***/ },
/* 246 */
/***/ function(module, exports) {

	"use strict";
	var DragManager = (function () {
	    function DragManager() {
	    }
	    DragManager.init = function () {
	        document.addEventListener("dragend", function () {
	            DragManager.dragOrigin = null;
	            DragManager.dragDimension = null;
	            DragManager.dragSplit = null;
	        }, false);
	    };
	    DragManager.getDragOrigin = function () {
	        return DragManager.dragOrigin;
	    };
	    DragManager.setDragDimension = function (dimension, origin) {
	        DragManager.dragDimension = dimension;
	        DragManager.dragOrigin = origin;
	    };
	    DragManager.getDragDimension = function () {
	        return DragManager.dragDimension;
	    };
	    DragManager.setDragSplit = function (split, origin) {
	        DragManager.dragSplit = split;
	        DragManager.dragOrigin = origin;
	    };
	    DragManager.getDragSplit = function () {
	        return DragManager.dragSplit;
	    };
	    DragManager.dragOrigin = null;
	    DragManager.dragDimension = null;
	    DragManager.dragSplit = null;
	    return DragManager;
	}());
	exports.DragManager = DragManager;


/***/ },
/* 247 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(248);
	var React = __webpack_require__(5);
	var immutable_class_1 = __webpack_require__(189);
	var svg_icon_1 = __webpack_require__(174);
	var hiluk_menu_1 = __webpack_require__(250);
	var auto_refresh_menu_1 = __webpack_require__(266);
	var user_menu_1 = __webpack_require__(273);
	var CubeHeaderBar = (function (_super) {
	    __extends(CubeHeaderBar, _super);
	    function CubeHeaderBar() {
	        _super.call(this);
	        this.state = {
	            hilukMenuOpenOn: null,
	            autoRefreshMenuOpenOn: null,
	            autoRefreshRate: null,
	            userMenuOpenOn: null
	        };
	    }
	    CubeHeaderBar.prototype.componentDidMount = function () {
	        var dataSource = this.props.essence.dataSource;
	        this.setAutoRefreshFromDataSource(dataSource);
	    };
	    CubeHeaderBar.prototype.componentWillReceiveProps = function (nextProps) {
	        if (this.props.essence.dataSource.name !== nextProps.essence.dataSource.name) {
	            this.setAutoRefreshFromDataSource(nextProps.essence.dataSource);
	        }
	    };
	    CubeHeaderBar.prototype.componentWillUnmount = function () {
	        this.clearTimerIfExists();
	    };
	    CubeHeaderBar.prototype.setAutoRefreshFromDataSource = function (dataSource) {
	        var refreshRule = dataSource.refreshRule;
	        if (refreshRule.isFixed())
	            return;
	        this.setAutoRefreshRate(refreshRule.refresh);
	    };
	    CubeHeaderBar.prototype.setAutoRefreshRate = function (rate) {
	        var autoRefreshRate = this.state.autoRefreshRate;
	        if (immutable_class_1.immutableEqual(autoRefreshRate, rate))
	            return;
	        this.clearTimerIfExists();
	        // Make new timer
	        var refreshMaxTime = this.props.refreshMaxTime;
	        if (refreshMaxTime && rate) {
	            this.autoRefreshTimer = setInterval(function () {
	                refreshMaxTime();
	            }, rate.getCanonicalLength());
	        }
	        this.setState({
	            autoRefreshRate: rate
	        });
	    };
	    CubeHeaderBar.prototype.clearTimerIfExists = function () {
	        if (this.autoRefreshTimer) {
	            clearInterval(this.autoRefreshTimer);
	            this.autoRefreshTimer = null;
	        }
	    };
	    // Share menu ("hiluk" = share in Hebrew, kind of)
	    CubeHeaderBar.prototype.onHilukMenuClick = function (e) {
	        var hilukMenuOpenOn = this.state.hilukMenuOpenOn;
	        if (hilukMenuOpenOn)
	            return this.onHilukMenuClose();
	        this.setState({
	            hilukMenuOpenOn: e.target
	        });
	    };
	    CubeHeaderBar.prototype.onHilukMenuClose = function () {
	        this.setState({
	            hilukMenuOpenOn: null
	        });
	    };
	    CubeHeaderBar.prototype.renderHilukMenu = function () {
	        var _a = this.props, essence = _a.essence, getUrlPrefix = _a.getUrlPrefix, customization = _a.customization, openRawDataModal = _a.openRawDataModal, downloadableDataset = _a.downloadableDataset;
	        var hilukMenuOpenOn = this.state.hilukMenuOpenOn;
	        if (!hilukMenuOpenOn)
	            return null;
	        var externalViews = null;
	        if (customization && customization.externalViews) {
	            externalViews = customization.externalViews;
	        }
	        return React.createElement(hiluk_menu_1.HilukMenu, {essence: essence, openOn: hilukMenuOpenOn, onClose: this.onHilukMenuClose.bind(this), getUrlPrefix: getUrlPrefix, openRawDataModal: openRawDataModal, externalViews: externalViews, downloadableDataset: downloadableDataset});
	    };
	    // Auto Refresh menu
	    CubeHeaderBar.prototype.onAutoRefreshMenuClick = function (e) {
	        var autoRefreshMenuOpenOn = this.state.autoRefreshMenuOpenOn;
	        if (autoRefreshMenuOpenOn)
	            return this.onAutoRefreshMenuClose();
	        this.setState({
	            autoRefreshMenuOpenOn: e.target
	        });
	    };
	    CubeHeaderBar.prototype.onAutoRefreshMenuClose = function () {
	        this.setState({
	            autoRefreshMenuOpenOn: null
	        });
	    };
	    CubeHeaderBar.prototype.renderAutoRefreshMenu = function () {
	        var _a = this.props, refreshMaxTime = _a.refreshMaxTime, essence = _a.essence;
	        var _b = this.state, autoRefreshMenuOpenOn = _b.autoRefreshMenuOpenOn, autoRefreshRate = _b.autoRefreshRate;
	        if (!autoRefreshMenuOpenOn)
	            return null;
	        return React.createElement(auto_refresh_menu_1.AutoRefreshMenu, {openOn: autoRefreshMenuOpenOn, onClose: this.onAutoRefreshMenuClose.bind(this), autoRefreshRate: autoRefreshRate, setAutoRefreshRate: this.setAutoRefreshRate.bind(this), refreshMaxTime: refreshMaxTime, dataSource: essence.dataSource});
	    };
	    // User menu
	    CubeHeaderBar.prototype.onUserMenuClick = function (e) {
	        var userMenuOpenOn = this.state.userMenuOpenOn;
	        if (userMenuOpenOn)
	            return this.onUserMenuClose();
	        this.setState({
	            userMenuOpenOn: e.target
	        });
	    };
	    CubeHeaderBar.prototype.onUserMenuClose = function () {
	        this.setState({
	            userMenuOpenOn: null
	        });
	    };
	    CubeHeaderBar.prototype.renderUserMenu = function () {
	        var user = this.props.user;
	        var userMenuOpenOn = this.state.userMenuOpenOn;
	        if (!userMenuOpenOn)
	            return null;
	        return React.createElement(user_menu_1.UserMenu, {openOn: userMenuOpenOn, onClose: this.onUserMenuClose.bind(this), user: user});
	    };
	    CubeHeaderBar.prototype.render = function () {
	        var _a = this.props, user = _a.user, onNavClick = _a.onNavClick, essence = _a.essence, customization = _a.customization;
	        var userButton = null;
	        if (user) {
	            userButton = React.createElement("div", {className: "icon-button user", onClick: this.onUserMenuClick.bind(this)}, React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(226)}));
	        }
	        var headerStyle = null;
	        if (customization && customization.headerBackground) {
	            headerStyle = {
	                background: customization.headerBackground
	            };
	        }
	        return React.createElement("header", {className: "cube-header-bar", style: headerStyle}, React.createElement("div", {className: "left-bar", onClick: onNavClick}, React.createElement("div", {className: "menu-icon"}, React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(227)})), React.createElement("div", {className: "title"}, essence.dataSource.title)), React.createElement("div", {className: "right-bar"}, React.createElement("div", {className: "icon-button auto-refresh", onClick: this.onAutoRefreshMenuClick.bind(this)}, React.createElement(svg_icon_1.SvgIcon, {className: "auto-refresh-icon", svg: __webpack_require__(276)})), React.createElement("div", {className: "icon-button hiluk", onClick: this.onHilukMenuClick.bind(this)}, React.createElement(svg_icon_1.SvgIcon, {className: "hiluk-icon", svg: __webpack_require__(277)})), userButton), this.renderHilukMenu(), this.renderAutoRefreshMenu(), this.renderUserMenu());
	    };
	    return CubeHeaderBar;
	}(React.Component));
	exports.CubeHeaderBar = CubeHeaderBar;


/***/ },
/* 248 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(249);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./cube-header-bar.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./cube-header-bar.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 249 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".cube-header-bar{background:#1ea3e6;color:#fff;font-size:16px;z-index:11}.cube-header-bar .left-bar{display:inline-block;height:100%;padding-left:12px;padding-right:12px;cursor:pointer}.cube-header-bar .left-bar .menu-icon{display:inline-block;padding:11px 5px}.cube-header-bar .left-bar .menu-icon svg path{fill:#fff}.cube-header-bar .left-bar .title{display:inline-block;font-size:15px;margin-top:13px;padding:0 7px}.cube-header-bar .right-bar{position:absolute;top:0;right:12px}.cube-header-bar .right-bar .text-button{display:inline-block;font-size:12px;text-transform:uppercase;height:42px;line-height:42px;padding:0 5px;margin-right:2px;cursor:pointer}.cube-header-bar .right-bar .icon-button{display:inline-block;padding:11px 5px;cursor:pointer}.cube-header-bar .right-bar .icon-button:not(:first-child){margin-left:3px}.cube-header-bar .right-bar .icon-button:active:after{display:none}.cube-header-bar .right-bar .icon-button.help:after{content:'Google Groups'}.cube-header-bar .right-bar .icon-button.auto-refresh:after{content:'Refresh options'}.cube-header-bar .right-bar .icon-button.hiluk:after{content:'Share link'}.cube-header-bar .right-bar .icon-button.user:after{content:'User'}.cube-header-bar .right-bar .icon-button.github:after{content:'Pivot on Github'}.cube-header-bar .right-bar .icon-button:hover:after{opacity:1}.cube-header-bar .right-bar .icon-button:after{opacity:0;pointer-events:none;position:absolute;display:block;bottom:-24px;right:0;padding:5px;color:#000;font-size:12px;white-space:nowrap}.cube-header-bar .right-bar .icon-button svg path{fill:#fff}.cube-header-bar svg{height:19px;width:19px}.cube-header-bar .right-bar .icon-button:after{background:#fff;border-radius:2px;box-shadow:0 3px 10px 0 rgba(0,0,0,0.26),0 0 3px 0 rgba(0,0,0,0.16)}\n", ""]);

	// exports


/***/ },
/* 250 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(251);
	var React = __webpack_require__(5);
	var index_1 = __webpack_require__(192);
	var constants_1 = __webpack_require__(222);
	var download_1 = __webpack_require__(253);
	var bubble_menu_1 = __webpack_require__(257);
	var HilukMenu = (function (_super) {
	    __extends(HilukMenu, _super);
	    function HilukMenu() {
	        _super.call(this);
	        this.state = {
	            url: null,
	            specificUrl: null
	        };
	    }
	    HilukMenu.prototype.componentDidMount = function () {
	        var _a = this.props, essence = _a.essence, getUrlPrefix = _a.getUrlPrefix;
	        var urlPrefix = getUrlPrefix();
	        var url = essence.getURL(urlPrefix);
	        var specificUrl = essence.filter.isRelative() ? essence.convertToSpecificFilter().getURL(urlPrefix) : null;
	        this.setState({
	            url: url,
	            specificUrl: specificUrl
	        });
	    };
	    HilukMenu.prototype.openRawDataModal = function () {
	        var _a = this.props, openRawDataModal = _a.openRawDataModal, onClose = _a.onClose;
	        openRawDataModal();
	        onClose();
	    };
	    HilukMenu.prototype.onExport = function () {
	        var _a = this.props, onClose = _a.onClose, downloadableDataset = _a.downloadableDataset, essence = _a.essence;
	        var dataSource = essence.dataSource, splits = essence.splits;
	        if (!downloadableDataset)
	            return;
	        var filters = essence.getEffectiveFilter().getFileString(dataSource.timeAttribute);
	        var splitsString = splits.toArray().map(function (split) {
	            var dimension = split.getDimension(dataSource.dimensions);
	            if (!dimension)
	                return '';
	            return constants_1.STRINGS.splitDelimiter + "_" + dimension.name;
	        }).join("_");
	        download_1.download(downloadableDataset, download_1.makeFileName(dataSource.name, filters, splitsString), 'csv');
	        onClose();
	    };
	    HilukMenu.prototype.render = function () {
	        var _a = this.props, openOn = _a.openOn, onClose = _a.onClose, externalViews = _a.externalViews, essence = _a.essence, downloadableDataset = _a.downloadableDataset;
	        var _b = this.state, url = _b.url, specificUrl = _b.specificUrl;
	        var shareOptions = [
	            React.createElement("li", {className: "copy-url clipboard", key: "copy-url", "data-clipboard-text": url, onClick: onClose}, constants_1.STRINGS.copyUrl)
	        ];
	        if (specificUrl) {
	            shareOptions.push(React.createElement("li", {className: "copy-specific-url clipboard", key: "copy-specific-url", "data-clipboard-text": specificUrl, onClick: onClose}, constants_1.STRINGS.copySpecificUrl));
	        }
	        if (downloadableDataset) {
	            shareOptions.push(React.createElement("li", {className: "export", key: "export", onClick: this.onExport.bind(this)}, constants_1.STRINGS.exportToCSV));
	        }
	        shareOptions.push(React.createElement("li", {className: "view-raw-data", key: "view-raw-data", onClick: this.openRawDataModal.bind(this)}, constants_1.STRINGS.viewRawData));
	        if (externalViews) {
	            externalViews.forEach(function (externalView, i) {
	                var url = externalView.linkGeneratorFn(essence.dataSource, essence.timezone, essence.filter, essence.splits);
	                if (typeof url !== "string")
	                    return;
	                var title = constants_1.STRINGS.openIn + " " + externalView.title;
	                var target = externalView.sameWindow ? "_self" : "_blank";
	                shareOptions.push(React.createElement("li", {key: "custom-url-" + i}, React.createElement("a", {href: url, target: target}, title)));
	            });
	        }
	        var stage = index_1.Stage.fromSize(200, 200);
	        return React.createElement(bubble_menu_1.BubbleMenu, {className: "hiluk-menu", direction: "down", stage: stage, openOn: openOn, onClose: onClose}, React.createElement("ul", {className: "bubble-list"}, shareOptions));
	    };
	    return HilukMenu;
	}(React.Component));
	exports.HilukMenu = HilukMenu;


/***/ },
/* 251 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(252);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./hiluk-menu.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./hiluk-menu.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 252 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, "", ""]);

	// exports


/***/ },
/* 253 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var filesaver = __webpack_require__(254);
	function getMIMEType(fileType) {
	    switch (fileType) {
	        case 'csv':
	            return 'text/csv';
	        case 'tsv':
	            return 'text/tsv';
	        default:
	            return 'application/json';
	    }
	}
	exports.getMIMEType = getMIMEType;
	function download(dataset, fileName, fileFormat) {
	    var type = getMIMEType(fileFormat) + ";charset=utf-8";
	    var blob = new Blob([datasetToFileString(dataset, fileFormat)], { type: type });
	    if (!fileName)
	        fileName = new Date() + "-data";
	    fileName += "." + fileFormat;
	    filesaver.saveAs(blob, fileName, true); // true == disable auto BOM
	}
	exports.download = download;
	function datasetToFileString(dataset, fileFormat) {
	    if (fileFormat === 'csv') {
	        return dataset.toCSV();
	    }
	    else if (fileFormat === 'tsv') {
	        return dataset.toTSV();
	    }
	    else {
	        return JSON.stringify(dataset.toJS(), null, 2);
	    }
	}
	exports.datasetToFileString = datasetToFileString;
	function makeFileName() {
	    var args = [];
	    for (var _i = 0; _i < arguments.length; _i++) {
	        args[_i - 0] = arguments[_i];
	    }
	    var nameComponents = [];
	    args.forEach(function (arg) {
	        if (arg)
	            nameComponents.push(arg.toLowerCase());
	    });
	    var nameString = nameComponents.join("_");
	    return nameString.length < 200 ? nameString : nameString.substr(0, 200);
	}
	exports.makeFileName = makeFileName;


/***/ },
/* 254 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* FileSaver.js
	 * A saveAs() FileSaver implementation.
	 * 1.1.20160328
	 *
	 * By Eli Grey, http://eligrey.com
	 * License: MIT
	 *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md
	 */

	/*global self */
	/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */

	/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */

	var saveAs = saveAs || (function(view) {
		"use strict";
		// IE <10 is explicitly unsupported
		if (typeof navigator !== "undefined" && /MSIE [1-9]\./.test(navigator.userAgent)) {
			return;
		}
		var
			  doc = view.document
			  // only get URL when necessary in case Blob.js hasn't overridden it yet
			, get_URL = function() {
				return view.URL || view.webkitURL || view;
			}
			, save_link = doc.createElementNS("http://www.w3.org/1999/xhtml", "a")
			, can_use_save_link = "download" in save_link
			, click = function(node) {
				var event = new MouseEvent("click");
				node.dispatchEvent(event);
			}
			, is_safari = /Version\/[\d\.]+.*Safari/.test(navigator.userAgent)
			, webkit_req_fs = view.webkitRequestFileSystem
			, req_fs = view.requestFileSystem || webkit_req_fs || view.mozRequestFileSystem
			, throw_outside = function(ex) {
				(view.setImmediate || view.setTimeout)(function() {
					throw ex;
				}, 0);
			}
			, force_saveable_type = "application/octet-stream"
			, fs_min_size = 0
			// the Blob API is fundamentally broken as there is no "downloadfinished" event to subscribe to
			, arbitrary_revoke_timeout = 1000 * 40 // in ms
			, revoke = function(file) {
				var revoker = function() {
					if (typeof file === "string") { // file is an object URL
						get_URL().revokeObjectURL(file);
					} else { // file is a File
						file.remove();
					}
				};
				/* // Take note W3C:
				var
				  uri = typeof file === "string" ? file : file.toURL()
				, revoker = function(evt) {
					// idealy DownloadFinishedEvent.data would be the URL requested
					if (evt.data === uri) {
						if (typeof file === "string") { // file is an object URL
							get_URL().revokeObjectURL(file);
						} else { // file is a File
							file.remove();
						}
					}
				}
				;
				view.addEventListener("downloadfinished", revoker);
				*/
				setTimeout(revoker, arbitrary_revoke_timeout);
			}
			, dispatch = function(filesaver, event_types, event) {
				event_types = [].concat(event_types);
				var i = event_types.length;
				while (i--) {
					var listener = filesaver["on" + event_types[i]];
					if (typeof listener === "function") {
						try {
							listener.call(filesaver, event || filesaver);
						} catch (ex) {
							throw_outside(ex);
						}
					}
				}
			}
			, auto_bom = function(blob) {
				// prepend BOM for UTF-8 XML and text/* types (including HTML)
				if (/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(blob.type)) {
					return new Blob(["\ufeff", blob], {type: blob.type});
				}
				return blob;
			}
			, FileSaver = function(blob, name, no_auto_bom) {
				if (!no_auto_bom) {
					blob = auto_bom(blob);
				}
				// First try a.download, then web filesystem, then object URLs
				var
					  filesaver = this
					, type = blob.type
					, blob_changed = false
					, object_url
					, target_view
					, dispatch_all = function() {
						dispatch(filesaver, "writestart progress write writeend".split(" "));
					}
					// on any filesys errors revert to saving with object URLs
					, fs_error = function() {
						if (target_view && is_safari && typeof FileReader !== "undefined") {
							// Safari doesn't allow downloading of blob urls
							var reader = new FileReader();
							reader.onloadend = function() {
								var base64Data = reader.result;
								target_view.location.href = "data:attachment/file" + base64Data.slice(base64Data.search(/[,;]/));
								filesaver.readyState = filesaver.DONE;
								dispatch_all();
							};
							reader.readAsDataURL(blob);
							filesaver.readyState = filesaver.INIT;
							return;
						}
						// don't create more object URLs than needed
						if (blob_changed || !object_url) {
							object_url = get_URL().createObjectURL(blob);
						}
						if (target_view) {
							target_view.location.href = object_url;
						} else {
							var new_tab = view.open(object_url, "_blank");
							if (new_tab === undefined && is_safari) {
								//Apple do not allow window.open, see http://bit.ly/1kZffRI
								view.location.href = object_url
							}
						}
						filesaver.readyState = filesaver.DONE;
						dispatch_all();
						revoke(object_url);
					}
					, abortable = function(func) {
						return function() {
							if (filesaver.readyState !== filesaver.DONE) {
								return func.apply(this, arguments);
							}
						};
					}
					, create_if_not_found = {create: true, exclusive: false}
					, slice
				;
				filesaver.readyState = filesaver.INIT;
				if (!name) {
					name = "download";
				}
				if (can_use_save_link) {
					object_url = get_URL().createObjectURL(blob);
					setTimeout(function() {
						save_link.href = object_url;
						save_link.download = name;
						click(save_link);
						dispatch_all();
						revoke(object_url);
						filesaver.readyState = filesaver.DONE;
					});
					return;
				}
				// Object and web filesystem URLs have a problem saving in Google Chrome when
				// viewed in a tab, so I force save with application/octet-stream
				// http://code.google.com/p/chromium/issues/detail?id=91158
				// Update: Google errantly closed 91158, I submitted it again:
				// https://code.google.com/p/chromium/issues/detail?id=389642
				if (view.chrome && type && type !== force_saveable_type) {
					slice = blob.slice || blob.webkitSlice;
					blob = slice.call(blob, 0, blob.size, force_saveable_type);
					blob_changed = true;
				}
				// Since I can't be sure that the guessed media type will trigger a download
				// in WebKit, I append .download to the filename.
				// https://bugs.webkit.org/show_bug.cgi?id=65440
				if (webkit_req_fs && name !== "download") {
					name += ".download";
				}
				if (type === force_saveable_type || webkit_req_fs) {
					target_view = view;
				}
				if (!req_fs) {
					fs_error();
					return;
				}
				fs_min_size += blob.size;
				req_fs(view.TEMPORARY, fs_min_size, abortable(function(fs) {
					fs.root.getDirectory("saved", create_if_not_found, abortable(function(dir) {
						var save = function() {
							dir.getFile(name, create_if_not_found, abortable(function(file) {
								file.createWriter(abortable(function(writer) {
									writer.onwriteend = function(event) {
										target_view.location.href = file.toURL();
										filesaver.readyState = filesaver.DONE;
										dispatch(filesaver, "writeend", event);
										revoke(file);
									};
									writer.onerror = function() {
										var error = writer.error;
										if (error.code !== error.ABORT_ERR) {
											fs_error();
										}
									};
									"writestart progress write abort".split(" ").forEach(function(event) {
										writer["on" + event] = filesaver["on" + event];
									});
									writer.write(blob);
									filesaver.abort = function() {
										writer.abort();
										filesaver.readyState = filesaver.DONE;
									};
									filesaver.readyState = filesaver.WRITING;
								}), fs_error);
							}), fs_error);
						};
						dir.getFile(name, {create: false}, abortable(function(file) {
							// delete file if it already exists
							file.remove();
							save();
						}), abortable(function(ex) {
							if (ex.code === ex.NOT_FOUND_ERR) {
								save();
							} else {
								fs_error();
							}
						}));
					}), fs_error);
				}), fs_error);
			}
			, FS_proto = FileSaver.prototype
			, saveAs = function(blob, name, no_auto_bom) {
				return new FileSaver(blob, name, no_auto_bom);
			}
		;
		// IE 10+ (native saveAs)
		if (typeof navigator !== "undefined" && navigator.msSaveOrOpenBlob) {
			return function(blob, name, no_auto_bom) {
				if (!no_auto_bom) {
					blob = auto_bom(blob);
				}
				return navigator.msSaveOrOpenBlob(blob, name || "download");
			};
		}

		FS_proto.abort = function() {
			var filesaver = this;
			filesaver.readyState = filesaver.DONE;
			dispatch(filesaver, "abort");
		};
		FS_proto.readyState = FS_proto.INIT = 0;
		FS_proto.WRITING = 1;
		FS_proto.DONE = 2;

		FS_proto.error =
		FS_proto.onwritestart =
		FS_proto.onprogress =
		FS_proto.onwrite =
		FS_proto.onabort =
		FS_proto.onerror =
		FS_proto.onwriteend =
			null;

		return saveAs;
	}(
		   typeof self !== "undefined" && self
		|| typeof window !== "undefined" && window
		|| this.content
	));
	// `self` is undefined in Firefox for Android content script context
	// while `this` is nsIContentFrameMessageManager
	// with an attribute `content` that corresponds to the window

	if (typeof module !== "undefined" && module.exports) {
	  module.exports.saveAs = saveAs;
	} else if (("function" !== "undefined" && __webpack_require__(255) !== null) && (__webpack_require__(256) !== null)) {
	  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {
	    return saveAs;
	  }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	}


/***/ },
/* 255 */
/***/ function(module, exports) {

	module.exports = function() { throw new Error("define cannot be used indirect"); };


/***/ },
/* 256 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {module.exports = __webpack_amd_options__;

	/* WEBPACK VAR INJECTION */}.call(exports, {}))

/***/ },
/* 257 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(258);
	var React = __webpack_require__(5);
	var index_1 = __webpack_require__(192);
	var dom_1 = __webpack_require__(240);
	var body_portal_1 = __webpack_require__(260);
	var shpitz_1 = __webpack_require__(263);
	var OFFSET_H = 10;
	var OFFSET_V = 0;
	var SCREEN_OFFSET = 5;
	var BubbleMenu = (function (_super) {
	    __extends(BubbleMenu, _super);
	    function BubbleMenu() {
	        _super.call(this);
	        this.state = {
	            id: null
	        };
	        this.globalMouseDownListener = this.globalMouseDownListener.bind(this);
	        this.globalKeyDownListener = this.globalKeyDownListener.bind(this);
	    }
	    BubbleMenu.prototype.componentWillMount = function () {
	        var _a = this.props, openOn = _a.openOn, direction = _a.direction, align = _a.align, id = _a.id;
	        var rect = openOn.getBoundingClientRect();
	        var x;
	        var y;
	        switch (direction) {
	            case 'right':
	                x = rect.left + rect.width - OFFSET_H;
	                y = rect.top + rect.height / 2;
	                break;
	            case 'down':
	                if (align === 'center') {
	                    x = rect.left + rect.width / 2;
	                }
	                else if (align === 'start') {
	                    x = rect.left;
	                }
	                else {
	                    x = rect.left + rect.width;
	                }
	                y = rect.top + rect.height - OFFSET_V;
	                break;
	            default:
	                throw new Error("unknown direction: '" + direction + "'");
	        }
	        this.setState({
	            id: id || dom_1.uniqueId('bubble-menu-'),
	            x: x,
	            y: y
	        });
	    };
	    BubbleMenu.prototype.componentDidMount = function () {
	        window.addEventListener('mousedown', this.globalMouseDownListener);
	        window.addEventListener('keydown', this.globalKeyDownListener);
	    };
	    BubbleMenu.prototype.componentWillUnmount = function () {
	        window.removeEventListener('mousedown', this.globalMouseDownListener);
	        window.removeEventListener('keydown', this.globalKeyDownListener);
	    };
	    BubbleMenu.prototype.globalMouseDownListener = function (e) {
	        var _a = this.props, onClose = _a.onClose, openOn = _a.openOn;
	        var id = this.state.id;
	        // can not use ReactDOM.findDOMNode(this) because portal?
	        var myElement = document.getElementById(id);
	        if (!myElement)
	            return;
	        var target = e.target;
	        if (dom_1.isInside(target, myElement) || dom_1.isInside(target, openOn))
	            return;
	        onClose();
	    };
	    BubbleMenu.prototype.globalKeyDownListener = function (e) {
	        if (!dom_1.escapeKey(e))
	            return;
	        var onClose = this.props.onClose;
	        onClose();
	    };
	    BubbleMenu.prototype.render = function () {
	        var _a = this.props, className = _a.className, direction = _a.direction, stage = _a.stage, fixedSize = _a.fixedSize, containerStage = _a.containerStage, inside = _a.inside, layout = _a.layout, align = _a.align, children = _a.children;
	        var _b = this.state, id = _b.id, x = _b.x, y = _b.y;
	        var menuWidth = stage.width;
	        var menuHeight = stage.height;
	        var menuLeft = 0;
	        var menuTop = 0;
	        var menuStyle = {};
	        if (fixedSize) {
	            menuStyle.width = menuWidth;
	            menuStyle.height = menuHeight;
	        }
	        var shpitzStyle = {
	            left: 0,
	            top: 0
	        };
	        if (!containerStage) {
	            containerStage = new index_1.Stage({
	                x: SCREEN_OFFSET,
	                y: SCREEN_OFFSET,
	                width: window.innerWidth - SCREEN_OFFSET * 2,
	                height: window.innerHeight - SCREEN_OFFSET * 2
	            });
	        }
	        switch (direction) {
	            case 'right':
	                var top = y - menuHeight / 2;
	                // constrain
	                top = Math.min(Math.max(top, containerStage.y), containerStage.y + containerStage.height - menuHeight);
	                menuLeft = x;
	                menuTop = top;
	                shpitzStyle.top = y - top;
	                menuStyle.height = menuHeight;
	                break;
	            case 'down':
	                var left;
	                if (align === 'center') {
	                    left = x - menuWidth / 2;
	                }
	                else if (align === 'start') {
	                    left = x;
	                }
	                else {
	                    left = x - menuWidth;
	                }
	                // constrain
	                left = Math.min(Math.max(left, containerStage.x), containerStage.x + containerStage.width - menuWidth);
	                menuLeft = left;
	                menuTop = y;
	                shpitzStyle.left = x - left;
	                menuStyle.width = menuWidth;
	                break;
	            default:
	                throw new Error("unknown direction: '" + direction + "'");
	        }
	        var insideId = null;
	        if (inside) {
	            insideId = inside.id;
	            if (!insideId)
	                throw new Error('inside element must have id');
	        }
	        var shpitzElement = null;
	        if (align === 'center') {
	            shpitzElement = React.createElement(shpitz_1.Shpitz, {style: shpitzStyle, direction: direction});
	        }
	        var myClass = dom_1.classNames('bubble-menu', direction, className, { mini: layout === 'mini' });
	        return React.createElement(body_portal_1.BodyPortal, {left: menuLeft, top: menuTop}, React.createElement("div", {className: myClass, id: id, "data-parent": insideId, style: menuStyle}, children, shpitzElement));
	    };
	    BubbleMenu.defaultProps = {
	        align: 'center'
	    };
	    return BubbleMenu;
	}(React.Component));
	exports.BubbleMenu = BubbleMenu;


/***/ },
/* 258 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(259);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./bubble-menu.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./bubble-menu.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 259 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".bubble-menu{background:#fff;border-radius:2px;box-shadow:0 3px 10px 0 rgba(0,0,0,0.26),0 0 3px 0 rgba(0,0,0,0.16)}.bubble-menu{position:absolute;padding:14px}.bubble-menu.mini{padding:10px}.bubble-menu .menu-header{position:absolute;top:0;left:0;right:0;height:40px}.bubble-menu ul.bubble-list{margin-left:-14px;margin-right:-14px}.bubble-menu ul.bubble-list li{padding:0 14px;line-height:25px;cursor:pointer}.bubble-menu ul.bubble-list li:hover{background:rgba(30,163,230,0.12)}\n", ""]);

	// exports


/***/ },
/* 260 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(261);
	var React = __webpack_require__(5);
	var ReactDOM = __webpack_require__(36);
	var BodyPortal = (function (_super) {
	    __extends(BodyPortal, _super);
	    function BodyPortal() {
	        _super.call(this);
	        this.target = null; // HTMLElement, a div that is appended to the body
	        this.component = null; // ReactElement, which is mounted on the target
	        // this.state = {};
	    }
	    BodyPortal.prototype.updateStyle = function () {
	        var _a = this.props, left = _a.left, top = _a.top, disablePointerEvents = _a.disablePointerEvents;
	        var style = this.target.style;
	        if (typeof left === 'number') {
	            style.left = Math.round(left) + 'px';
	        }
	        if (typeof top === 'number') {
	            style.top = Math.round(top) + 'px';
	        }
	        style['z-index'] = disablePointerEvents ? 200 : 201;
	        style['pointer-events'] = disablePointerEvents ? 'none' : 'auto';
	    };
	    BodyPortal.prototype.componentDidMount = function () {
	        var fullSize = this.props.fullSize;
	        var newDiv = document.createElement('div');
	        newDiv.className = 'body-portal' + (fullSize ? ' full-size' : '');
	        this.target = document.body.appendChild(newDiv);
	        this.updateStyle();
	        this.component = ReactDOM.render(React.Children.only(this.props.children), this.target);
	    };
	    BodyPortal.prototype.componentDidUpdate = function () {
	        this.updateStyle();
	        this.component = ReactDOM.render(React.Children.only(this.props.children), this.target);
	    };
	    BodyPortal.prototype.componentWillUnmount = function () {
	        ReactDOM.unmountComponentAtNode(this.target);
	        document.body.removeChild(this.target);
	    };
	    BodyPortal.prototype.render = function () {
	        return null;
	    };
	    return BodyPortal;
	}(React.Component));
	exports.BodyPortal = BodyPortal;


/***/ },
/* 261 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(262);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./body-portal.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./body-portal.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 262 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".body-portal{position:absolute}.body-portal.full-size{width:100%;height:100%}\n", ""]);

	// exports


/***/ },
/* 263 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(264);
	var React = __webpack_require__(5);
	var dom_1 = __webpack_require__(240);
	var Shpitz = (function (_super) {
	    __extends(Shpitz, _super);
	    function Shpitz() {
	        _super.call(this);
	        // this.state = {};
	    }
	    Shpitz.prototype.render = function () {
	        var _a = this.props, direction = _a.direction, style = _a.style;
	        return React.createElement("div", {className: dom_1.classNames('shpitz', direction), style: style}, React.createElement("div", {className: "rectangle"}));
	    };
	    return Shpitz;
	}(React.Component));
	exports.Shpitz = Shpitz;


/***/ },
/* 264 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(265);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./shpitz.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./shpitz.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 265 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".shpitz{position:absolute;width:40px;height:40px;overflow:hidden;pointer-events:none}.shpitz .rectangle{position:absolute}.shpitz .rectangle:after{content:'';position:absolute;width:12px;height:12px;-webkit-transform:translate(-50%, -50%) rotate(45deg);-ms-transform:translate(-50%, -50%) rotate(45deg);transform:translate(-50%, -50%) rotate(45deg);background:#fff;box-shadow:0 0 4px 0 rgba(0,0,0,0.35)}.shpitz.up{margin-bottom:-40px;margin-left:-20px}.shpitz.up .rectangle{bottom:100%;left:50%}.shpitz.down{margin-top:-40px;margin-left:-20px}.shpitz.down .rectangle{top:100%;left:50%}.shpitz.left{margin-right:-40px;margin-top:-20px}.shpitz.left .rectangle{right:100%;top:50%}.shpitz.right{margin-left:-40px;margin-top:-20px}.shpitz.right .rectangle{left:100%;top:50%}\n", ""]);

	// exports


/***/ },
/* 266 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(267);
	var React = __webpack_require__(5);
	var chronoshift_1 = __webpack_require__(179);
	var index_1 = __webpack_require__(192);
	var constants_1 = __webpack_require__(222);
	var bubble_menu_1 = __webpack_require__(257);
	var dropdown_1 = __webpack_require__(269);
	var AUTO_REFRESH_LABELS = {
	    "null": "Off",
	    "PT5S": "Every 5 seconds",
	    "PT15S": "Every 15 seconds",
	    "PT1M": "Every minute",
	    "PT5M": "Every 5 minutes",
	    "PT10M": "Every 10 minutes",
	    "PT30M": "Every 30 minutes"
	};
	var REFRESH_DURATIONS = [
	    null,
	    chronoshift_1.Duration.fromJS("PT5S"),
	    chronoshift_1.Duration.fromJS("PT15S"),
	    chronoshift_1.Duration.fromJS("PT1M"),
	    chronoshift_1.Duration.fromJS("PT5M"),
	    chronoshift_1.Duration.fromJS("PT10M"),
	    chronoshift_1.Duration.fromJS("PT30M")
	];
	var AutoRefreshMenu = (function (_super) {
	    __extends(AutoRefreshMenu, _super);
	    function AutoRefreshMenu() {
	        _super.call(this);
	        // this.state = {};
	    }
	    AutoRefreshMenu.prototype.onRefreshNowClick = function () {
	        var refreshMaxTime = this.props.refreshMaxTime;
	        refreshMaxTime();
	    };
	    AutoRefreshMenu.prototype.renderRefreshIntervalDropdown = function () {
	        var _a = this.props, autoRefreshRate = _a.autoRefreshRate, setAutoRefreshRate = _a.setAutoRefreshRate;
	        return React.createElement(dropdown_1.Dropdown, {
	            label: constants_1.STRINGS.autoUpdate,
	            items: REFRESH_DURATIONS,
	            selectedItem: autoRefreshRate,
	            renderItem: function (d) { return AUTO_REFRESH_LABELS[String(d)] || "Custom " + d; },
	            onSelect: setAutoRefreshRate
	        });
	    };
	    AutoRefreshMenu.prototype.render = function () {
	        var _a = this.props, openOn = _a.openOn, onClose = _a.onClose, dataSource = _a.dataSource;
	        var stage = index_1.Stage.fromSize(260, 200);
	        return React.createElement(bubble_menu_1.BubbleMenu, {className: "auto-refresh-menu", direction: "down", stage: stage, openOn: openOn, onClose: onClose}, this.renderRefreshIntervalDropdown(), React.createElement("button", {className: "update-now-button", onClick: this.onRefreshNowClick.bind(this)}, "Update now"), React.createElement("div", {className: "update-info"}, dataSource.updatedText()));
	    };
	    return AutoRefreshMenu;
	}(React.Component));
	exports.AutoRefreshMenu = AutoRefreshMenu;


/***/ },
/* 267 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(268);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./auto-refresh-menu.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./auto-refresh-menu.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 268 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".auto-refresh-menu .update-now-button{display:inline-block;padding:6px 16px;font-size:13px;min-width:46px;text-align:center;cursor:pointer;border-radius:2px;outline:none;height:30px}.auto-refresh-menu .disabled.update-now-button,.auto-refresh-menu [disabled].update-now-button{opacity:.40;cursor:default;pointer-events:none}.auto-refresh-menu .update-now-button{background:rgba(30,163,230,0.22);color:#1ea3e6}.auto-refresh-menu .update-now-button svg path{fill:#1ea3e6}.auto-refresh-menu .update-now-button:hover{background:rgba(30,163,230,0.3)}.auto-refresh-menu .active.update-now-button,.auto-refresh-menu .update-now-button:active{background:rgba(30,163,230,0.38)}.auto-refresh-menu .update-info{height:30px;line-height:28px;border:1px solid #dfdfdf;border-radius:2px;color:#999;text-align:center}.auto-refresh-menu .update-now-button{width:100%;margin-top:8px}.auto-refresh-menu .update-now-button svg{position:absolute;top:5px;left:50%;margin-left:-10px;width:19px}.auto-refresh-menu .update-info{-webkit-box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1;margin-top:8px}\n", ""]);

	// exports


/***/ },
/* 269 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(270);
	var React = __webpack_require__(5);
	var ReactDOM = __webpack_require__(36);
	var svg_icon_1 = __webpack_require__(174);
	var dom_1 = __webpack_require__(240);
	function simpleEqual(item1, item2) {
	    return item1 === item2;
	}
	var Dropdown = (function (_super) {
	    __extends(Dropdown, _super);
	    function Dropdown() {
	        _super.call(this);
	        this.state = {
	            open: false
	        };
	        this.globalMouseDownListener = this.globalMouseDownListener.bind(this);
	        this.globalKeyDownListener = this.globalKeyDownListener.bind(this);
	    }
	    Dropdown.prototype.componentDidMount = function () {
	        window.addEventListener('mousedown', this.globalMouseDownListener);
	        window.addEventListener('keydown', this.globalKeyDownListener);
	    };
	    Dropdown.prototype.componentWillUnmount = function () {
	        window.removeEventListener('mousedown', this.globalMouseDownListener);
	        window.removeEventListener('keydown', this.globalKeyDownListener);
	    };
	    Dropdown.prototype.onClick = function () {
	        var open = this.state.open;
	        this.setState({ open: !open });
	    };
	    Dropdown.prototype.globalMouseDownListener = function (e) {
	        var open = this.state.open;
	        if (!open)
	            return;
	        var myElement = ReactDOM.findDOMNode(this);
	        if (!myElement)
	            return;
	        var target = e.target;
	        if (dom_1.isInside(target, myElement))
	            return;
	        this.setState({ open: false });
	    };
	    Dropdown.prototype.globalKeyDownListener = function (e) {
	        if (!dom_1.escapeKey(e))
	            return;
	        var open = this.state.open;
	        if (!open)
	            return;
	        this.setState({ open: false });
	    };
	    Dropdown.prototype.renderMenu = function () {
	        var _a = this.props, items = _a.items, renderItem = _a.renderItem, keyItem = _a.keyItem, selectedItem = _a.selectedItem, equal = _a.equal, onSelect = _a.onSelect;
	        if (!items || !items.length)
	            return null;
	        if (!renderItem)
	            renderItem = String;
	        if (!keyItem)
	            keyItem = renderItem;
	        if (!equal)
	            equal = simpleEqual;
	        var itemElements = items.map(function (item) {
	            return React.createElement("div", {className: dom_1.classNames('dropdown-item', equal(item, selectedItem) ? 'selected' : null), key: keyItem(item), onClick: function () { return onSelect(item); }}, renderItem(item));
	        });
	        return React.createElement("div", {className: "dropdown-menu"}, itemElements);
	    };
	    Dropdown.prototype.render = function () {
	        var _a = this.props, label = _a.label, renderItem = _a.renderItem, selectedItem = _a.selectedItem, direction = _a.direction;
	        var open = this.state.open;
	        if (!renderItem)
	            renderItem = String;
	        if (!direction)
	            direction = 'down';
	        var labelElement = null;
	        if (label) {
	            labelElement = React.createElement("div", {className: "dropdown-label"}, label);
	        }
	        return React.createElement("div", {className: dom_1.classNames('dropdown', direction), onClick: this.onClick.bind(this)}, labelElement, React.createElement("div", {className: "selected-item"}, renderItem(selectedItem), React.createElement(svg_icon_1.SvgIcon, {className: "caret-icon", svg: __webpack_require__(272)})), open ? this.renderMenu() : null);
	    };
	    return Dropdown;
	}(React.Component));
	exports.Dropdown = Dropdown;


/***/ },
/* 270 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(271);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./dropdown.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./dropdown.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 271 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".dropdown .dropdown-menu{background:#fff;border-radius:2px;box-shadow:0 3px 10px 0 rgba(0,0,0,0.26),0 0 3px 0 rgba(0,0,0,0.16)}.dropdown .selected-item{background:#fff;border:1px solid #d1d1d1;border-radius:2px;cursor:pointer;box-shadow:0 1px 1px 0 rgba(0,0,0,0.1)}.dropdown .selected-item:hover{border-color:#bababa}.dropdown .dropdown-label{text-transform:uppercase;font-size:12px;color:#a6a6a6;margin-bottom:5px}.dropdown{cursor:pointer;white-space:nowrap;pointer-events:none}.dropdown:hover .caret-icon path{fill:#999}.dropdown .selected-item{display:block;pointer-events:auto;height:30px;padding-left:6px;padding-top:8px}.dropdown .caret-icon{position:absolute;width:11px;height:9px;right:9px;bottom:9px}.dropdown .caret-icon path{fill:#a6a6a6}.dropdown .dropdown-menu{position:absolute;pointer-events:auto;z-index:800;padding:6px;width:100%;line-height:24px}.dropdown.down .dropdown-menu{top:100%}.dropdown.up .dropdown-menu{bottom:100%}.dropdown .dropdown-item{white-space:nowrap;overflow-x:hidden;text-overflow:ellipsis;padding:0 4px;cursor:pointer}.dropdown .dropdown-item.selected{background:#ededed}.dropdown .dropdown-item:hover{background:#e4f3fc}\n", ""]);

	// exports


/***/ },
/* 272 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 11 9\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M1,1 L10,1 L5.5,7 L1,1 Z\" fill=\"#AAAAAA\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 273 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(274);
	var React = __webpack_require__(5);
	var index_1 = __webpack_require__(192);
	var constants_1 = __webpack_require__(222);
	var bubble_menu_1 = __webpack_require__(257);
	var UserMenu = (function (_super) {
	    __extends(UserMenu, _super);
	    function UserMenu() {
	        _super.call(this);
	        // this.state = {};
	    }
	    UserMenu.prototype.render = function () {
	        var _a = this.props, openOn = _a.openOn, onClose = _a.onClose, user = _a.user;
	        var stage = index_1.Stage.fromSize(200, 200);
	        return React.createElement(bubble_menu_1.BubbleMenu, {className: "user-menu", direction: "down", stage: stage, openOn: openOn, onClose: onClose}, React.createElement("ul", {className: "bubble-list"}, React.createElement("li", {className: "user-name"}, user.name), React.createElement("li", {className: "copy-static-url clipboard", onClick: onClose}, constants_1.STRINGS.logout)));
	    };
	    return UserMenu;
	}(React.Component));
	exports.UserMenu = UserMenu;


/***/ },
/* 274 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(275);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./user-menu.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./user-menu.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 275 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, "", ""]);

	// exports


/***/ },
/* 276 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M14.0825,4.909375 C12.904375,3.73125 11.2875,3 9.491875,3 C5.900625,3 3,5.90875 3,9.5 C3,13.09125 5.900625,16 9.491875,16 C12.5225,16 15.049375,13.928125 15.7725,11.125 L14.0825,11.125 C13.41625,13.018125 11.6125,14.375 9.491875,14.375 C6.8025,14.375 4.616875,12.189375 4.616875,9.5 C4.616875,6.810625 6.8025,4.625 9.491875,4.625 C10.840625,4.625 12.043125,5.185625 12.920625,6.07125 L10.304375,8.6875 L15.991875,8.6875 L15.991875,3 L14.0825,4.909375 L14.0825,4.909375 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 277 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.1124797,12.1748132 L7.63210582,10.0583113 C7.67129453,9.8847821 7.7026455,9.71125292 7.7026455,9.53017899 C7.7026455,9.34910506 7.67129453,9.17557587 7.63210582,9.00204669 L11.0497778,6.91572377 C11.4730159,7.29296113 12.0294956,7.52684829 12.6486772,7.52684829 C13.9497425,7.52684829 15,6.51585217 15,5.26342414 C15,4.01099612 13.9497425,3 12.6486772,3 C11.347612,3 10.2973545,4.01099612 10.2973545,5.26342414 C10.2973545,5.44449808 10.3287055,5.61802726 10.3678942,5.79155644 L6.95022222,7.87787936 C6.52698413,7.50064201 5.97050441,7.26675484 5.35132275,7.26675484 C4.0502575,7.26675484 3,8.27775096 3,9.53017899 C3,10.782607 4.0502575,11.7936031 5.35132275,11.7936031 C5.97050441,11.7936031 6.52698413,11.559716 6.95022222,11.1824786 L10.4227584,13.3065253 C10.3835697,13.464965 10.3600564,13.6309494 10.3600564,13.7969338 C10.3600564,15.0116381 11.3868007,16 12.6486772,16 C13.9105538,16 14.9372981,15.0116381 14.9372981,13.7969338 C14.9372981,12.5822295 13.9105538,11.5938677 12.6486772,11.5938677 C12.0530088,11.5938677 11.5200423,11.8202101 11.1124797,12.1748132 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 278 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(279);
	var React = __webpack_require__(5);
	var dimension_list_tile_1 = __webpack_require__(281);
	var measures_tile_1 = __webpack_require__(312);
	var DimensionMeasurePanel = (function (_super) {
	    __extends(DimensionMeasurePanel, _super);
	    function DimensionMeasurePanel() {
	        _super.call(this);
	        // this.state = {};
	    }
	    DimensionMeasurePanel.prototype.render = function () {
	        var _a = this.props, clicker = _a.clicker, essence = _a.essence, menuStage = _a.menuStage, triggerFilterMenu = _a.triggerFilterMenu, triggerSplitMenu = _a.triggerSplitMenu, getUrlPrefix = _a.getUrlPrefix;
	        return React.createElement("div", {className: "dimension-measure-panel"}, React.createElement(dimension_list_tile_1.DimensionListTile, {clicker: clicker, essence: essence, menuStage: menuStage, triggerFilterMenu: triggerFilterMenu, triggerSplitMenu: triggerSplitMenu, getUrlPrefix: getUrlPrefix}), React.createElement(measures_tile_1.MeasuresTile, {clicker: clicker, essence: essence}));
	    };
	    return DimensionMeasurePanel;
	}(React.Component));
	exports.DimensionMeasurePanel = DimensionMeasurePanel;


/***/ },
/* 279 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(280);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./dimension-measure-panel.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./dimension-measure-panel.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 280 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".dimension-measure-panel{padding:10px 10px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column}.dimension-measure-panel .dimension-list-tile{margin-bottom:1px;border-radius:2px 2px 0 0}.dimension-measure-panel .measures-tile{border-radius:0 0 2px 2px}\n", ""]);

	// exports


/***/ },
/* 281 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(282);
	var React = __webpack_require__(5);
	var constants_1 = __webpack_require__(222);
	var drag_manager_1 = __webpack_require__(246);
	var dom_1 = __webpack_require__(240);
	var index_1 = __webpack_require__(192);
	var svg_icon_1 = __webpack_require__(174);
	var highlight_string_1 = __webpack_require__(284);
	var searchable_tile_1 = __webpack_require__(287);
	var DIMENSION_CLASS_NAME = 'dimension';
	var DimensionListTile = (function (_super) {
	    __extends(DimensionListTile, _super);
	    function DimensionListTile() {
	        _super.call(this);
	        this.state = {
	            DimensionActionsMenuAsync: null,
	            menuOpenOn: null,
	            menuDimension: null,
	            highlightDimension: null,
	            showSearch: false,
	            searchText: ''
	        };
	    }
	    DimensionListTile.prototype.componentDidMount = function () {
	        var _this = this;
	        __webpack_require__.e/* nsure */(2, function (require) {
	            _this.setState({
	                DimensionActionsMenuAsync: __webpack_require__(305).DimensionActionsMenu
	            });
	        });
	    };
	    DimensionListTile.prototype.clickDimension = function (dimension, e) {
	        var menuOpenOn = this.state.menuOpenOn;
	        var target = dom_1.findParentWithClass(e.target, DIMENSION_CLASS_NAME);
	        if (menuOpenOn === target) {
	            this.closeMenu();
	            return;
	        }
	        this.setState({
	            menuOpenOn: target,
	            menuDimension: dimension
	        });
	    };
	    DimensionListTile.prototype.closeMenu = function () {
	        var menuOpenOn = this.state.menuOpenOn;
	        if (!menuOpenOn)
	            return;
	        this.setState({
	            menuOpenOn: null,
	            menuDimension: null
	        });
	    };
	    DimensionListTile.prototype.dragStart = function (dimension, e) {
	        var _a = this.props, essence = _a.essence, getUrlPrefix = _a.getUrlPrefix;
	        var dataTransfer = e.dataTransfer;
	        dataTransfer.effectAllowed = 'all';
	        if (getUrlPrefix) {
	            var newUrl = essence.changeSplit(index_1.SplitCombine.fromExpression(dimension.expression), index_1.VisStrategy.FairGame).getURL(getUrlPrefix());
	            dataTransfer.setData("text/url-list", newUrl);
	            dataTransfer.setData("text/plain", newUrl);
	        }
	        drag_manager_1.DragManager.setDragDimension(dimension, 'dimension-list-tile');
	        dom_1.setDragGhost(dataTransfer, dimension.title);
	        this.closeMenu();
	    };
	    DimensionListTile.prototype.onMouseOver = function (dimension) {
	        var highlightDimension = this.state.highlightDimension;
	        if (highlightDimension === dimension)
	            return;
	        this.setState({
	            highlightDimension: dimension
	        });
	    };
	    DimensionListTile.prototype.onMouseLeave = function (dimension) {
	        var highlightDimension = this.state.highlightDimension;
	        if (highlightDimension !== dimension)
	            return;
	        this.setState({
	            highlightDimension: null
	        });
	    };
	    DimensionListTile.prototype.toggleSearch = function () {
	        var showSearch = this.state.showSearch;
	        this.setState({ showSearch: !showSearch });
	        this.onSearchChange('');
	    };
	    DimensionListTile.prototype.onSearchChange = function (text) {
	        var searchText = this.state.searchText;
	        var newSearchText = text.substr(0, constants_1.MAX_SEARCH_LENGTH);
	        if (searchText === newSearchText)
	            return; // nothing to do;
	        this.setState({
	            searchText: newSearchText
	        });
	    };
	    DimensionListTile.prototype.renderMenu = function () {
	        var _a = this.props, essence = _a.essence, clicker = _a.clicker, menuStage = _a.menuStage, triggerFilterMenu = _a.triggerFilterMenu, triggerSplitMenu = _a.triggerSplitMenu;
	        var _b = this.state, DimensionActionsMenuAsync = _b.DimensionActionsMenuAsync, menuOpenOn = _b.menuOpenOn, menuDimension = _b.menuDimension;
	        if (!DimensionActionsMenuAsync || !menuDimension)
	            return null;
	        var onClose = this.closeMenu.bind(this);
	        return React.createElement(DimensionActionsMenuAsync, {clicker: clicker, essence: essence, direction: "right", containerStage: menuStage, openOn: menuOpenOn, dimension: menuDimension, triggerFilterMenu: triggerFilterMenu, triggerSplitMenu: triggerSplitMenu, onClose: onClose});
	    };
	    DimensionListTile.prototype.render = function () {
	        var _this = this;
	        var essence = this.props.essence;
	        var _a = this.state, menuDimension = _a.menuDimension, highlightDimension = _a.highlightDimension, showSearch = _a.showSearch, searchText = _a.searchText;
	        var dataSource = essence.dataSource;
	        var rowData = dataSource.dimensions.toArray();
	        var itemY = 0;
	        if (searchText) {
	            rowData = rowData.filter(function (r) {
	                return r.title.toLowerCase().indexOf(searchText.toLowerCase()) !== -1;
	            });
	        }
	        var dimensionItems = rowData.map(function (dimension, i) {
	            var className = dom_1.classNames(DIMENSION_CLASS_NAME, 'type-' + dimension.className, {
	                highlight: dimension === highlightDimension,
	                selected: dimension === menuDimension
	            });
	            var style = dom_1.transformStyle(0, itemY);
	            itemY += constants_1.DIMENSION_HEIGHT;
	            return React.createElement("div", {className: className, key: dimension.name, onClick: _this.clickDimension.bind(_this, dimension), onMouseOver: _this.onMouseOver.bind(_this, dimension), onMouseLeave: _this.onMouseLeave.bind(_this, dimension), draggable: true, onDragStart: _this.dragStart.bind(_this, dimension), style: style}, React.createElement("div", {className: "icon"}, React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(297)("./dim-" + dimension.className + '.svg')})), React.createElement("div", {className: "item-title"}, React.createElement(highlight_string_1.HighlightString, {className: "label", text: dimension.title, highlightText: searchText})));
	        }, this);
	        var message = null;
	        if (searchText && !dimensionItems.length) {
	            message = React.createElement("div", {className: "message"}, "No " + constants_1.STRINGS.dimensions.toLowerCase() + " for \"" + searchText + "\"");
	        }
	        var style = {
	            flex: dimensionItems.length + 2
	        };
	        var icons = [
	            //{ name: 'more', onClick: null, svg: require('../../icons/full-more-mini.svg') }
	            {
	                name: 'search',
	                ref: 'search',
	                onClick: this.toggleSearch.bind(this),
	                svg: __webpack_require__(304),
	                active: showSearch
	            }
	        ];
	        return React.createElement(searchable_tile_1.SearchableTile, {style: style, title: constants_1.STRINGS.dimensions, toggleChangeFn: this.toggleSearch.bind(this), onSearchChange: this.onSearchChange.bind(this), searchText: searchText, showSearch: showSearch, icons: icons, className: 'dimension-list-tile'}, React.createElement("div", {className: "items", ref: "items"}, dimensionItems, message), this.renderMenu());
	    };
	    return DimensionListTile;
	}(React.Component));
	exports.DimensionListTile = DimensionListTile;


/***/ },
/* 282 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(283);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./dimension-list-tile.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./dimension-list-tile.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 283 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".dimension-list-tile{overflow:hidden}.dimension-list-tile .items{position:absolute;top:36px;bottom:0;width:100%;overflow:auto;color:#000;-webkit-transition:height 0.1s ease-in-out;transition:height 0.1s ease-in-out}.dimension-list-tile .items .dimension{position:absolute;top:0;left:0;right:0;height:27px;background:#fff;cursor:pointer;overflow:hidden;-webkit-transition:-webkit-transform 0.1s ease-in-out;transition:-webkit-transform 0.1s ease-in-out;transition:transform 0.1s ease-in-out;transition:transform 0.1s ease-in-out, -webkit-transform 0.1s ease-in-out}.dimension-list-tile .items .dimension:last-child{margin-bottom:12px}.dimension-list-tile .items .dimension.highlight{background:#e4f3fc}.dimension-list-tile .items .dimension.selected{background:#c4e5f8}.dimension-list-tile .items .dimension .icon{position:absolute;top:0;bottom:0;left:0;width:37px;top:4px;left:0;width:19px}.dimension-list-tile .items .dimension .icon svg{position:absolute;left:12px;width:19px}.dimension-list-tile .items .dimension .icon svg path{fill:rgba(0,0,0,0.35)}.dimension-list-tile .items .dimension .item-title{white-space:nowrap;overflow-x:hidden;text-overflow:ellipsis;position:absolute;top:7px;bottom:0;right:10px;left:38px}\n", ""]);

	// exports


/***/ },
/* 284 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(285);
	var React = __webpack_require__(5);
	var dom_1 = __webpack_require__(240);
	var HighlightString = (function (_super) {
	    __extends(HighlightString, _super);
	    function HighlightString() {
	        _super.call(this);
	        // this.state = {};
	    }
	    HighlightString.prototype.highlightInString = function () {
	        var _a = this.props, text = _a.text, highlightText = _a.highlightText;
	        if (!highlightText)
	            return text;
	        var strLower = text.toLowerCase();
	        var startIndex = strLower.indexOf(highlightText.toLowerCase());
	        if (startIndex === -1)
	            return text;
	        var endIndex = startIndex + highlightText.length;
	        return [
	            React.createElement("span", {className: "pre", key: "pre"}, text.substring(0, startIndex)),
	            React.createElement("span", {className: "bold", key: "bold"}, text.substring(startIndex, endIndex)),
	            React.createElement("span", {className: "post", key: "post"}, text.substring(endIndex))
	        ];
	    };
	    HighlightString.prototype.render = function () {
	        var className = this.props.className;
	        return React.createElement("span", {className: dom_1.classNames('highlight-string', className)}, this.highlightInString());
	    };
	    return HighlightString;
	}(React.Component));
	exports.HighlightString = HighlightString;


/***/ },
/* 285 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(286);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./highlight-string.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./highlight-string.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 286 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".highlight-string .bold{border-bottom:1px solid #000}\n", ""]);

	// exports


/***/ },
/* 287 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(288);
	var React = __webpack_require__(5);
	var ReactDOM = __webpack_require__(36);
	var dom_1 = __webpack_require__(240);
	var tile_header_1 = __webpack_require__(290);
	var clearable_input_1 = __webpack_require__(293);
	var SearchableTile = (function (_super) {
	    __extends(SearchableTile, _super);
	    function SearchableTile() {
	        _super.call(this);
	        // this.state = {};
	        this.globalMouseDownListener = this.globalMouseDownListener.bind(this);
	        this.globalKeyDownListener = this.globalKeyDownListener.bind(this);
	    }
	    SearchableTile.prototype.componentDidMount = function () {
	        this.mounted = true;
	        window.addEventListener('mousedown', this.globalMouseDownListener);
	        window.addEventListener('keydown', this.globalKeyDownListener);
	    };
	    SearchableTile.prototype.componentWillUnmount = function () {
	        this.mounted = false;
	        window.removeEventListener('mousedown', this.globalMouseDownListener);
	        window.removeEventListener('keydown', this.globalKeyDownListener);
	    };
	    SearchableTile.prototype.componentWillReceiveProps = function (nextProps) {
	    };
	    SearchableTile.prototype.globalMouseDownListener = function (e) {
	        var _a = this.props, searchText = _a.searchText, toggleChangeFn = _a.toggleChangeFn;
	        // Remove search if it looses focus while empty
	        if (searchText !== '')
	            return;
	        var target = e.target;
	        var searchBoxElement = ReactDOM.findDOMNode(this.refs['search-box']);
	        if (!searchBoxElement || dom_1.isInside(target, searchBoxElement))
	            return;
	        var headerRef = this.refs['header'];
	        if (!headerRef)
	            return;
	        var searchButtonElement = ReactDOM.findDOMNode(headerRef.refs['search']);
	        if (!searchButtonElement || dom_1.isInside(target, searchButtonElement))
	            return;
	        toggleChangeFn();
	    };
	    SearchableTile.prototype.globalKeyDownListener = function (e) {
	        var _a = this.props, toggleChangeFn = _a.toggleChangeFn, showSearch = _a.showSearch;
	        if (!dom_1.escapeKey(e))
	            return;
	        if (!showSearch)
	            return;
	        toggleChangeFn();
	    };
	    SearchableTile.prototype.render = function () {
	        var _a = this.props, className = _a.className, style = _a.style, icons = _a.icons, title = _a.title, onSearchChange = _a.onSearchChange, showSearch = _a.showSearch, searchText = _a.searchText, children = _a.children, onDragStart = _a.onDragStart;
	        var qualifiedClassName = "searchable-tile " + className;
	        var header = React.createElement(tile_header_1.TileHeader, {title: title, icons: icons, ref: "header", onDragStart: onDragStart});
	        var searchBar = null;
	        if (showSearch) {
	            searchBar = React.createElement("div", {className: "search-box", ref: "search-box"}, React.createElement(clearable_input_1.ClearableInput, {placeholder: "Search", focusOnMount: true, value: searchText, onChange: onSearchChange.bind(this)}));
	        }
	        qualifiedClassName = dom_1.classNames(qualifiedClassName, (showSearch ? 'has-search' : 'no-search'));
	        return React.createElement("div", {className: qualifiedClassName, style: style}, header, searchBar, children);
	    };
	    return SearchableTile;
	}(React.Component));
	exports.SearchableTile = SearchableTile;


/***/ },
/* 288 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(289);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./searchable-tile.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./searchable-tile.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 289 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".searchable-tile{background:#fff;box-shadow:0 1px 1px 0 rgba(0,0,0,0.1)}.searchable-tile .search-box .clearable-input{background:#fff;border:1px solid #d1d1d1;border-radius:2px;box-shadow:inset 0 1px 1px 0 rgba(0,0,0,0.1)}.searchable-tile:after{position:absolute;top:0;bottom:0;left:0;right:0;content:'';pointer-events:none;box-shadow:inset 0 -20px 10px -10px #fff;border-radius:2px}.searchable-tile .rows{position:absolute;top:36px;bottom:0;left:0;right:0;overflow:auto}.searchable-tile .search-box{position:absolute;top:36px;left:0;right:0;height:26px;padding:0 14px;margin-bottom:4px}.searchable-tile .search-box .clearable-input{width:100%;height:26px;padding-left:6px}.searchable-tile .search-box .clearable-input .clear{top:3px}.searchable-tile.has-search .rows{top:65px}.searchable-tile.has-search .items{top:65px}.searchable-tile .message{padding:4px 10px;color:#999;font-style:italic}\n", ""]);

	// exports


/***/ },
/* 290 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var dom_1 = __webpack_require__(240);
	__webpack_require__(291);
	var React = __webpack_require__(5);
	var svg_icon_1 = __webpack_require__(174);
	var TileHeader = (function (_super) {
	    __extends(TileHeader, _super);
	    function TileHeader() {
	        _super.call(this);
	        // this.state = {};
	    }
	    TileHeader.prototype.renderIcons = function () {
	        var icons = this.props.icons;
	        if (!icons || !icons.length)
	            return null;
	        var iconElements = icons.map(function (icon) {
	            return React.createElement("div", {className: dom_1.classNames('icon', icon.name, { active: icon.active }), key: icon.name, onClick: icon.onClick, ref: icon.ref}, React.createElement(svg_icon_1.SvgIcon, {svg: icon.svg}));
	        });
	        return React.createElement("div", {className: "icons"}, iconElements);
	    };
	    TileHeader.prototype.render = function () {
	        var _a = this.props, title = _a.title, onDragStart = _a.onDragStart;
	        return React.createElement("div", {className: "tile-header", draggable: onDragStart ? true : null, onDragStart: onDragStart}, React.createElement("div", {className: "title"}, title), this.renderIcons());
	    };
	    return TileHeader;
	}(React.Component));
	exports.TileHeader = TileHeader;


/***/ },
/* 291 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(292);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./tile-header.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./tile-header.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 292 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".tile-header .title{padding:15px 14px 10px 14px;font-size:12px;text-transform:uppercase;color:#000;cursor:default}.tile-header .icons{position:absolute;top:1px;right:10px}.tile-header .icons .icon{display:inline-block;padding:10px 0;cursor:pointer;width:19px;margin-left:3px}.tile-header .icons .icon svg path{fill:#bbb}.tile-header .icons .icon:hover svg path,.tile-header .icons .icon.active svg path{fill:#888}\n", ""]);

	// exports


/***/ },
/* 293 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(294);
	var React = __webpack_require__(5);
	// import { ... } from '../../config/constants';
	var svg_icon_1 = __webpack_require__(174);
	function focusOnInput(component) {
	    if (!component)
	        return;
	    component.focus();
	}
	var ClearableInput = (function (_super) {
	    __extends(ClearableInput, _super);
	    function ClearableInput() {
	        _super.call(this);
	        // this.state = {};
	    }
	    ClearableInput.prototype.onChange = function (e) {
	        this.props.onChange(e.target.value);
	    };
	    ClearableInput.prototype.onClear = function () {
	        this.props.onChange('');
	    };
	    ClearableInput.prototype.render = function () {
	        var _a = this.props, className = _a.className, type = _a.type, placeholder = _a.placeholder, focusOnMount = _a.focusOnMount, value = _a.value, onBlur = _a.onBlur;
	        var ref = focusOnMount ? focusOnInput : null;
	        var classNames = ['clearable-input'];
	        if (className)
	            classNames.push(className);
	        if (!value)
	            classNames.push('empty');
	        return React.createElement("div", {className: classNames.join(' ')}, React.createElement("input", {type: type || 'text', placeholder: placeholder, value: value || '', onChange: this.onChange.bind(this), onBlur: onBlur, ref: ref}), React.createElement("div", {className: "clear", onClick: this.onClear.bind(this)}, React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(296)})));
	    };
	    return ClearableInput;
	}(React.Component));
	exports.ClearableInput = ClearableInput;


/***/ },
/* 294 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(295);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./clearable-input.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./clearable-input.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 295 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".clearable-input{padding-right:28px}.clearable-input input{width:100%;height:100%;background:none}.clearable-input .clear{position:absolute;top:5px;right:6px;cursor:pointer;background:#d9d9d9;border-radius:30px;width:18px;height:18px}.clearable-input .clear:hover{background:#bababa}.clearable-input .clear svg{width:10px;margin-top:5px;margin-left:4px}.clearable-input .clear svg path{fill:#fff}.clearable-input.empty .clear{display:none}\n", ""]);

	// exports


/***/ },
/* 296 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 10 9\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M149.834394,13.2377345 L149.834394,9.07106781 L148.167727,9.07106781 L148.167727,13.2377345 L144.00106,13.2377345 L144.00106,14.9044011 L148.167727,14.9044011 L148.167727,19.0710678 L149.834394,19.0710678 L149.834394,14.9044011 L154.00106,14.9044011 L154.00106,13.2377345 L149.834394,13.2377345 Z\" transform=\"rotate(-45 64.93 182.894)\" fill=\"#BBBBBB\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 297 */
/***/ function(module, exports, __webpack_require__) {

	var map = {
		"./dim-boolean.svg": 298,
		"./dim-geo.svg": 299,
		"./dim-number.svg": 300,
		"./dim-string-geo.svg": 301,
		"./dim-string.svg": 302,
		"./dim-time.svg": 303
	};
	function webpackContext(req) {
		return __webpack_require__(webpackContextResolve(req));
	};
	function webpackContextResolve(req) {
		return map[req] || (function() { throw new Error("Cannot find module '" + req + "'.") }());
	};
	webpackContext.keys = function webpackContextKeys() {
		return Object.keys(map);
	};
	webpackContext.resolve = webpackContextResolve;
	module.exports = webpackContext;
	webpackContext.id = 297;


/***/ },
/* 298 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M13,5 L14,5 L14,13 L13,13 L13,5 Z M11,5 L13,5 L13,6 L11,6 L11,5 Z M5,5 L10,5 L10,13 L5,13 L5,5 Z M6,6 L9,6 L9,12 L6,12 L6,6 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 299 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M8,11 L8,8 L11,8 L11,11 L8,11 Z M8,12 L8,15.8260682 C8.48151935,15.9398113 8.98373076,16 9.5,16 C10.0162692,16 10.5184807,15.9398113 11,15.8260682 L11,12 L8,12 Z M15.8260682,11 C15.9398113,10.5184807 16,10.0162692 16,9.5 C16,8.98373076 15.9398113,8.48151935 15.8260682,8 L12,8 L12,11 L15.8260682,11 Z M15.5018367,12 C14.8432122,13.5793598 13.5793598,14.8432122 12,15.5018367 L12,12 L15.5018367,12 Z M3.17393184,11 C3.06018869,10.5184807 3,10.0162692 3,9.5 C3,8.98373076 3.06018869,8.48151935 3.17393184,8 L7,8 L7,11 L3.17393184,11 Z M3.49816335,12 C4.15678777,13.5793598 5.42064024,14.8432122 7,15.5018367 L7,12 L3.49816335,12 Z M8,7 L8,3.17393184 C8.48151935,3.06018869 8.98373076,3 9.5,3 C10.0162692,3 10.5184807,3.06018869 11,3.17393184 L11,7 L8,7 Z M15.5018367,7 C14.8432122,5.42064024 13.5793598,4.15678777 12,3.49816335 L12,7 L15.5018367,7 Z M3.49816335,7 C4.15678777,5.42064024 5.42064024,4.15678777 7,3.49816335 L7,7 L3.49816335,7 Z M9.5,17 C13.6421356,17 17,13.6421356 17,9.5 C17,5.35786438 13.6421356,2 9.5,2 C5.35786438,2 2,5.35786438 2,9.5 C2,13.6421356 5.35786438,17 9.5,17 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 300 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M7,11 L7,8 L3,8 L3,7 L7,7 L7,3 L8,3 L8,7 L11,7 L11,3 L12,3 L12,7 L16,7 L16,8 L12,8 L12,11 L16,11 L16,12 L12,12 L12,16 L11,16 L11,12 L8,12 L8,16 L7,16 L7,12 L3,12 L3,11 L7,11 Z M8,11 L8,8 L11,8 L11,11 L8,11 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 301 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M8,11 L8,8 L11,8 L11,11 L8,11 Z M8,12 L8,15.8260682 C8.48151935,15.9398113 8.98373076,16 9.5,16 C10.0162692,16 10.5184807,15.9398113 11,15.8260682 L11,12 L8,12 Z M15.8260682,11 C15.9398113,10.5184807 16,10.0162692 16,9.5 C16,8.98373076 15.9398113,8.48151935 15.8260682,8 L12,8 L12,11 L15.8260682,11 Z M15.5018367,12 C14.8432122,13.5793598 13.5793598,14.8432122 12,15.5018367 L12,12 L15.5018367,12 Z M3.17393184,11 C3.06018869,10.5184807 3,10.0162692 3,9.5 C3,8.98373076 3.06018869,8.48151935 3.17393184,8 L7,8 L7,11 L3.17393184,11 Z M3.49816335,12 C4.15678777,13.5793598 5.42064024,14.8432122 7,15.5018367 L7,12 L3.49816335,12 Z M8,7 L8,3.17393184 C8.48151935,3.06018869 8.98373076,3 9.5,3 C10.0162692,3 10.5184807,3.06018869 11,3.17393184 L11,7 L8,7 Z M15.5018367,7 C14.8432122,5.42064024 13.5793598,4.15678777 12,3.49816335 L12,7 L15.5018367,7 Z M3.49816335,7 C4.15678777,5.42064024 5.42064024,4.15678777 7,3.49816335 L7,7 L3.49816335,7 Z M9.5,17 C13.6421356,17 17,13.6421356 17,9.5 C17,5.35786438 13.6421356,2 9.5,2 C5.35786438,2 2,5.35786438 2,9.5 C2,13.6421356 5.35786438,17 9.5,17 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 302 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M1,5 L6,5 L6,13 L1,13 L1,5 Z M2,6 L5,6 L5,8 L2,8 L2,6 Z M2,9 L5,9 L5,13 L2,13 L2,9 Z M7,5 L12,5 L12,13 L7,13 L7,5 Z M8,6 L11,6 L11,8 L8,8 L8,6 Z M8,9 L11,9 L11,12 L8,12 L8,9 Z M13,5 L18,5 L18,13 L13,13 L13,5 Z M14,6 L18,6 L18,12 L14,12 L14,6 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 303 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M9.5,17 C13.6421356,17 17,13.6421356 17,9.5 C17,5.35786438 13.6421356,2 9.5,2 C5.35786438,2 2,5.35786438 2,9.5 C2,13.6421356 5.35786438,17 9.5,17 Z M9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,13.0898509 13.0898509,16 9.5,16 Z M9,4 L10,4 L10,9 L9,9 L9,4 Z M9,9 L14,9 L14,10 L9,10 L9,9 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 304 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.573151,9.94495162 C12.6161629,8.17894957 12.3789932,5.86619566 10.8616421,4.34884454 C9.06318273,2.55038515 6.14730393,2.55038515 4.34884454,4.34884454 C2.55038515,6.14730393 2.55038515,9.06318273 4.34884454,10.8616421 C5.86619566,12.3789932 8.17894957,12.6161629 9.94495162,11.573151 L13.8466743,15.4748737 L15.4748737,13.8466743 L11.573151,9.94495162 L11.573151,9.94495162 Z M9.58886079,9.58886079 C10.6843825,8.49333912 10.6843825,6.71714754 9.58886079,5.62162587 C8.49333912,4.5261042 6.71714754,4.5261042 5.62162587,5.62162587 C4.5261042,6.71714754 4.5261042,8.49333912 5.62162587,9.58886079 C6.71714754,10.6843825 8.49333912,10.6843825 9.58886079,9.58886079 L9.58886079,9.58886079 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 305 */,
/* 306 */,
/* 307 */,
/* 308 */,
/* 309 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 18 18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.8541084,10.3397357 L15.0966594,6.87868518 C15.4743907,6.47550041 15.3453823,6.25543918 14.8168247,6.38512486 L11.7137902,7.14647832 L7.85779145,3.80496277 L7.76662817,1.99673298 C7.7388714,1.44617559 7.40952415,1.31386608 7.02107371,1.71138005 L1.67763282,7.17949703 C1.29363124,7.57245835 1.42362049,7.8812442 1.97818714,7.86896331 L3.97300911,7.82478795 L6.99569836,12.1398735 L6.51964948,14.8205672 C6.42340016,15.3625597 6.65345941,15.4861394 7.04467099,15.0851408 L10.1101179,11.9430055 L17.0003364,17.1178606 L11.8541084,10.3397357 Z\" fill=\"#189AE0\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 310 */,
/* 311 */,
/* 312 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(313);
	var React = __webpack_require__(5);
	var constants_1 = __webpack_require__(222);
	var dom_1 = __webpack_require__(240);
	var checkbox_1 = __webpack_require__(315);
	var highlight_string_1 = __webpack_require__(284);
	var searchable_tile_1 = __webpack_require__(287);
	var MeasuresTile = (function (_super) {
	    __extends(MeasuresTile, _super);
	    function MeasuresTile() {
	        _super.call(this);
	        this.state = {
	            showSearch: false,
	            searchText: ''
	        };
	    }
	    MeasuresTile.prototype.measureClick = function (measure, e) {
	        if (e.altKey && typeof console !== 'undefined') {
	            console.log("Measure: " + measure.name);
	            console.log("expression: " + measure.expression.toString());
	            return;
	        }
	        var clicker = this.props.clicker;
	        clicker.toggleEffectiveMeasure(measure);
	    };
	    MeasuresTile.prototype.toggleSearch = function () {
	        var showSearch = this.state.showSearch;
	        this.setState({ showSearch: !showSearch });
	        this.onSearchChange('');
	    };
	    MeasuresTile.prototype.onSearchChange = function (text) {
	        var searchText = this.state.searchText;
	        var newSearchText = text.substr(0, constants_1.MAX_SEARCH_LENGTH);
	        if (searchText === newSearchText)
	            return; // nothing to do;
	        this.setState({
	            searchText: newSearchText
	        });
	    };
	    MeasuresTile.prototype.render = function () {
	        var _this = this;
	        var _a = this.props, clicker = _a.clicker, essence = _a.essence;
	        var _b = this.state, showSearch = _b.showSearch, searchText = _b.searchText;
	        var dataSource = essence.dataSource;
	        var multiMeasureMode = essence.getEffectiveMultiMeasureMode();
	        var selectedMeasures = essence.getEffectiveSelectedMeasure();
	        var maxHeight = constants_1.PIN_TITLE_HEIGHT;
	        var checkboxType = multiMeasureMode ? 'check' : 'radio';
	        var totalMeasures = dataSource.measures;
	        var rowData = totalMeasures.toArray();
	        if (searchText) {
	            rowData = rowData.filter(function (r) {
	                return r.title.toLowerCase().indexOf(searchText.toLowerCase()) !== -1;
	            });
	        }
	        var message = null;
	        var rows = rowData.map(function (measure) {
	            var measureName = measure.name;
	            var selected = selectedMeasures.has(measureName);
	            return React.createElement("div", {className: dom_1.classNames('row', { selected: selected }), key: measureName, onClick: _this.measureClick.bind(_this, measure)}, React.createElement(checkbox_1.Checkbox, {type: checkboxType, selected: selected}), React.createElement(highlight_string_1.HighlightString, {className: "label", text: measure.title, highlightText: searchText}));
	        });
	        if (searchText && !rows.length) {
	            message = React.createElement("div", {className: "message"}, "No " + constants_1.STRINGS.measures.toLowerCase() + " for \"" + searchText + "\"");
	        }
	        maxHeight += (totalMeasures.size + 2) * constants_1.MEASURE_HEIGHT + constants_1.PIN_PADDING_BOTTOM;
	        var style = {
	            flex: totalMeasures.size + 2,
	            maxHeight: maxHeight
	        };
	        var icons = [];
	        if (!essence.isFixedMeasureMode()) {
	            icons.push({
	                name: 'multi',
	                onClick: clicker.toggleMultiMeasureMode,
	                svg: __webpack_require__(319),
	                active: multiMeasureMode
	            });
	        }
	        icons.push({
	            name: 'search',
	            ref: 'search',
	            onClick: this.toggleSearch.bind(this),
	            svg: __webpack_require__(304),
	            active: showSearch
	        });
	        // More icons to add later
	        //{ name: 'more', onClick: null, svg: require('../../icons/full-more-mini.svg') }
	        return React.createElement(searchable_tile_1.SearchableTile, {style: style, title: constants_1.STRINGS.measures, toggleChangeFn: this.toggleSearch.bind(this), onSearchChange: this.onSearchChange.bind(this), searchText: searchText, showSearch: showSearch, icons: icons, className: 'measures-tile'}, React.createElement("div", {className: "rows"}, rows, message));
	    };
	    ;
	    return MeasuresTile;
	}(React.Component));
	exports.MeasuresTile = MeasuresTile;


/***/ },
/* 313 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(314);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./measures-tile.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./measures-tile.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 314 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".measures-tile .row{padding-left:14px;height:27px;cursor:pointer;overflow:hidden;white-space:nowrap}.measures-tile .row:last-child{margin-bottom:12px}.measures-tile .row .label{white-space:nowrap;overflow-x:hidden;text-overflow:ellipsis;position:absolute;top:7px;bottom:0;left:37px;right:10px}.measures-tile .row:hover{background:#e4f3fc}.measures-tile .checkbox{margin-top:2px}\n", ""]);

	// exports


/***/ },
/* 315 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(316);
	var React = __webpack_require__(5);
	var svg_icon_1 = __webpack_require__(174);
	var dom_1 = __webpack_require__(240);
	var Checkbox = (function (_super) {
	    __extends(Checkbox, _super);
	    function Checkbox() {
	        _super.call(this);
	        // this.state = {};
	    }
	    Checkbox.prototype.renderIcon = function () {
	        var _a = this.props, selected = _a.selected, type = _a.type;
	        if (!selected)
	            return null;
	        if (type === 'check') {
	            return React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(318)});
	        }
	        else if (type === 'cross') {
	            return React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(296)});
	        }
	        return null;
	    };
	    Checkbox.prototype.render = function () {
	        var _a = this.props, onClick = _a.onClick, type = _a.type, color = _a.color, selected = _a.selected;
	        var style = null;
	        if (color) {
	            style = { background: color };
	        }
	        return React.createElement("div", {className: dom_1.classNames('checkbox', type, { selected: selected, color: color }), onClick: onClick}, React.createElement("div", {className: "checkbox-body", style: style}), this.renderIcon());
	    };
	    Checkbox.defaultProps = {
	        type: 'check'
	    };
	    return Checkbox;
	}(React.Component));
	exports.Checkbox = Checkbox;


/***/ },
/* 316 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(317);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./checkbox.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./checkbox.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 317 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".checkbox{display:inline-block;vertical-align:top;width:20px;height:100%;cursor:pointer;margin-right:3px}.checkbox .checkbox-body{position:absolute;left:0;top:3px;background:rgba(0,0,0,0.12);width:15px;height:15px;border-radius:2px}.checkbox.radio .checkbox-body{border-radius:30px}.checkbox.selected.check .checkbox-body,.checkbox.selected.radio .checkbox-body{background:rgba(0,0,0,0.45)}.checkbox.selected.radio .checkbox-body:after{content:'';position:absolute;top:5px;left:5px;width:5px;height:5px;border-radius:30px;background:#fff}.checkbox svg{position:absolute;top:4px;left:2px;width:11px;height:14px}.checkbox svg path{fill:#fff}\n", ""]);

	// exports


/***/ },
/* 318 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 11 11\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M4.58636943,10.1740086 L10.882848,2.34713255 L9.16347545,0.931531183 L4.49584966,6.73846459 L2.29904796,4.29310659 L0.65846472,5.80137072 L4.58636943,10.1740086 Z\" fill=\"#666666\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 319 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12,2 L12,1.00247329 C12,0.455760956 11.5511774,0 10.9975267,0 L1.00247329,0 C0.455760956,0 0,0.448822582 0,1.00247329 L0,10.9975267 C0,11.544239 0.448822582,12 1.00247329,12 L2,12 L2,4.00276013 C2,2.89666625 2.89354265,2 4.00276013,2 L12,2 Z M3,3.9955775 C3,3.44573523 3.44483697,3 3.9955775,3 L13.0044225,3 C13.5542648,3 14,3.44483697 14,3.9955775 L14,13.0044225 C14,13.5542648 13.555163,14 13.0044225,14 L3.9955775,14 C3.44573523,14 3,13.555163 3,13.0044225 L3,3.9955775 Z M6.7576206,11.4354379 L7.46397296,12.3147697 L8.12273147,11.3990432 L12.3169711,5.56871801 L10.9241827,4.561222 L7.40466411,9.49569228 L5.75335309,7.43998979 L4.41591974,8.52027517 L6.7576206,11.4354379 Z\" transform=\"translate(3 3)\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 320 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(321);
	var React = __webpack_require__(5);
	var ReactDOM = __webpack_require__(36);
	var Q = __webpack_require__(186);
	var constants_1 = __webpack_require__(222);
	var index_1 = __webpack_require__(192);
	var formatter_1 = __webpack_require__(323);
	var dom_1 = __webpack_require__(240);
	var drag_manager_1 = __webpack_require__(246);
	var svg_icon_1 = __webpack_require__(174);
	var fancy_drag_indicator_1 = __webpack_require__(325);
	var bubble_menu_1 = __webpack_require__(257);
	var FILTER_CLASS_NAME = 'filter';
	var ANIMATION_DURATION = 400;
	var OVERFLOW_WIDTH = 40;
	function formatLabelDummy(dimension) {
	    return dimension.title;
	}
	var FilterTile = (function (_super) {
	    __extends(FilterTile, _super);
	    function FilterTile() {
	        _super.call(this);
	        this.overflowMenuId = dom_1.uniqueId('overflow-menu-');
	        this.state = {
	            FilterMenuAsync: null,
	            menuOpenOn: null,
	            menuDimension: null,
	            menuInside: null,
	            overflowMenuOpenOn: null,
	            dragPosition: null,
	            possibleDimension: null,
	            possiblePosition: null,
	            maxItems: 20
	        };
	    }
	    FilterTile.prototype.componentDidMount = function () {
	        var _this = this;
	        __webpack_require__.e/* nsure */(3, function (require) {
	            _this.setState({
	                FilterMenuAsync: __webpack_require__(329).FilterMenu
	            });
	        });
	    };
	    FilterTile.prototype.componentWillReceiveProps = function (nextProps) {
	        var menuStage = nextProps.menuStage;
	        var sectionWidth = constants_1.CORE_ITEM_WIDTH + constants_1.CORE_ITEM_GAP;
	        if (menuStage) {
	            var newMaxItems = Math.floor((menuStage.width - constants_1.BAR_TITLE_WIDTH - OVERFLOW_WIDTH - 79 + constants_1.CORE_ITEM_GAP) / sectionWidth); // 79 = vis selector width
	            if (newMaxItems !== this.state.maxItems) {
	                this.setState({
	                    menuOpenOn: null,
	                    menuDimension: null,
	                    menuInside: null,
	                    possibleDimension: null,
	                    possiblePosition: null,
	                    overflowMenuOpenOn: null,
	                    maxItems: newMaxItems
	                });
	            }
	        }
	    };
	    FilterTile.prototype.componentDidUpdate = function () {
	        var _a = this.state, possibleDimension = _a.possibleDimension, overflowMenuOpenOn = _a.overflowMenuOpenOn;
	        if (possibleDimension) {
	            this.dummyDeferred.resolve(null);
	        }
	        if (overflowMenuOpenOn) {
	            var overflowMenu = this.getOverflowMenu();
	            if (overflowMenu)
	                this.overflowMenuDeferred.resolve(overflowMenu);
	        }
	    };
	    FilterTile.prototype.overflowButtonTarget = function () {
	        return ReactDOM.findDOMNode(this.refs['overflow']);
	    };
	    FilterTile.prototype.getOverflowMenu = function () {
	        return document.getElementById(this.overflowMenuId);
	    };
	    FilterTile.prototype.clickDimension = function (dimension, e) {
	        var target = dom_1.findParentWithClass(e.target, FILTER_CLASS_NAME);
	        this.openMenu(dimension, target);
	    };
	    FilterTile.prototype.openMenuOnDimension = function (dimension) {
	        var _this = this;
	        var targetRef = this.refs[dimension.name];
	        if (targetRef) {
	            var target = ReactDOM.findDOMNode(targetRef);
	            if (!target)
	                return;
	            this.openMenu(dimension, target);
	        }
	        else {
	            var overflowButtonTarget = this.overflowButtonTarget();
	            if (overflowButtonTarget) {
	                this.openOverflowMenu(overflowButtonTarget).then(function () {
	                    var target = ReactDOM.findDOMNode(_this.refs[dimension.name]);
	                    if (!target)
	                        return;
	                    _this.openMenu(dimension, target);
	                });
	            }
	        }
	    };
	    FilterTile.prototype.openMenu = function (dimension, target) {
	        var menuOpenOn = this.state.menuOpenOn;
	        if (menuOpenOn === target) {
	            this.closeMenu();
	            return;
	        }
	        var overflowMenu = this.getOverflowMenu();
	        var menuInside = null;
	        if (overflowMenu && dom_1.isInside(target, overflowMenu)) {
	            menuInside = overflowMenu;
	        }
	        this.setState({
	            menuOpenOn: target,
	            menuDimension: dimension,
	            menuInside: menuInside
	        });
	    };
	    FilterTile.prototype.closeMenu = function () {
	        var _a = this.state, menuOpenOn = _a.menuOpenOn, possibleDimension = _a.possibleDimension;
	        if (!menuOpenOn)
	            return;
	        var newState = {
	            menuOpenOn: null,
	            menuDimension: null,
	            menuInside: null,
	            possibleDimension: null,
	            possiblePosition: null
	        };
	        if (possibleDimension) {
	            // If we are adding a ghost dimension also close the overflow menu
	            // This is so it does not remain phantom open with nothing inside
	            newState.overflowMenuOpenOn = null;
	        }
	        this.setState(newState);
	    };
	    FilterTile.prototype.openOverflowMenu = function (target) {
	        if (!target)
	            return;
	        var overflowMenuOpenOn = this.state.overflowMenuOpenOn;
	        if (overflowMenuOpenOn === target) {
	            this.closeOverflowMenu();
	            return;
	        }
	        this.overflowMenuDeferred = Q.defer();
	        this.setState({ overflowMenuOpenOn: target });
	        return this.overflowMenuDeferred.promise;
	    };
	    FilterTile.prototype.closeOverflowMenu = function () {
	        var overflowMenuOpenOn = this.state.overflowMenuOpenOn;
	        if (!overflowMenuOpenOn)
	            return;
	        this.setState({
	            overflowMenuOpenOn: null
	        });
	    };
	    FilterTile.prototype.removeFilter = function (itemBlank, e) {
	        var _a = this.props, essence = _a.essence, clicker = _a.clicker;
	        if (itemBlank.clause) {
	            if (itemBlank.source === 'from-highlight') {
	                clicker.dropHighlight();
	            }
	            else {
	                clicker.changeFilter(essence.filter.remove(itemBlank.clause.expression));
	            }
	        }
	        this.closeMenu();
	        this.closeOverflowMenu();
	        e.stopPropagation();
	    };
	    FilterTile.prototype.dragStart = function (dimension, clause, e) {
	        var _a = this.props, essence = _a.essence, getUrlPrefix = _a.getUrlPrefix;
	        var dataTransfer = e.dataTransfer;
	        dataTransfer.effectAllowed = 'all';
	        if (getUrlPrefix) {
	            var newUrl = essence.getURL(getUrlPrefix());
	            dataTransfer.setData("text/url-list", newUrl);
	            dataTransfer.setData("text/plain", newUrl);
	        }
	        drag_manager_1.DragManager.setDragDimension(dimension, 'filter-tile');
	        dom_1.setDragGhost(dataTransfer, dimension.title);
	        this.closeMenu();
	        this.closeOverflowMenu();
	    };
	    FilterTile.prototype.calculateDragPosition = function (e) {
	        var essence = this.props.essence;
	        var numItems = essence.filter.length();
	        var rect = ReactDOM.findDOMNode(this.refs['items']).getBoundingClientRect();
	        var offset = dom_1.getXFromEvent(e) - rect.left;
	        return index_1.DragPosition.calculateFromOffset(offset, numItems, constants_1.CORE_ITEM_WIDTH, constants_1.CORE_ITEM_GAP);
	    };
	    FilterTile.prototype.canDrop = function (e) {
	        return Boolean(drag_manager_1.DragManager.getDragDimension());
	    };
	    FilterTile.prototype.dragEnter = function (e) {
	        if (!this.canDrop(e))
	            return;
	        var dragPosition = this.calculateDragPosition(e);
	        if (dragPosition.equals(this.state.dragPosition))
	            return;
	        this.setState({ dragPosition: dragPosition });
	    };
	    FilterTile.prototype.dragOver = function (e) {
	        if (!this.canDrop(e))
	            return;
	        e.dataTransfer.dropEffect = 'move';
	        e.preventDefault();
	        var dragPosition = this.calculateDragPosition(e);
	        if (dragPosition.equals(this.state.dragPosition))
	            return;
	        this.setState({ dragPosition: dragPosition });
	    };
	    FilterTile.prototype.dragLeave = function (e) {
	        this.setState({ dragPosition: null });
	    };
	    FilterTile.prototype.drop = function (e) {
	        var _this = this;
	        if (!this.canDrop(e))
	            return;
	        e.preventDefault();
	        var _a = this.props, clicker = _a.clicker, essence = _a.essence;
	        var filter = essence.filter, dataSource = essence.dataSource;
	        var newState = {
	            dragPosition: null
	        };
	        var dimension = drag_manager_1.DragManager.getDragDimension();
	        if (dimension) {
	            var dragPosition = this.calculateDragPosition(e);
	            var tryingToReplaceTime = false;
	            if (dragPosition.replace !== null) {
	                var targetClause = filter.clauses.get(dragPosition.replace);
	                tryingToReplaceTime = targetClause && targetClause.expression.equals(dataSource.timeAttribute);
	            }
	            var existingClause = filter.clauseForExpression(dimension.expression);
	            if (existingClause) {
	                var newFilter;
	                if (dragPosition.isReplace()) {
	                    newFilter = filter.replaceByIndex(dragPosition.replace, existingClause);
	                }
	                else {
	                    newFilter = filter.insertByIndex(dragPosition.insert, existingClause);
	                }
	                var newFilterSame = filter.equals(newFilter);
	                if (!newFilterSame) {
	                    clicker.changeFilter(newFilter);
	                }
	                if (drag_manager_1.DragManager.getDragOrigin() !== 'filter-tile') {
	                    if (newFilterSame) {
	                        this.filterMenuRequest(dimension);
	                    }
	                    else {
	                        // Wait for the animation to finish to know where to open the menu
	                        setTimeout(function () {
	                            _this.filterMenuRequest(dimension);
	                        }, ANIMATION_DURATION + 50);
	                    }
	                }
	            }
	            else {
	                if (dragPosition && !tryingToReplaceTime) {
	                    this.addDummy(dimension, dragPosition);
	                }
	            }
	        }
	        this.setState(newState);
	    };
	    FilterTile.prototype.addDummy = function (dimension, possiblePosition) {
	        var _this = this;
	        this.dummyDeferred = Q.defer();
	        this.setState({
	            possibleDimension: dimension,
	            possiblePosition: possiblePosition
	        });
	        this.dummyDeferred.promise.then(function () {
	            _this.openMenuOnDimension(dimension);
	        });
	    };
	    // This will be called externally
	    FilterTile.prototype.filterMenuRequest = function (dimension) {
	        var filter = this.props.essence.filter;
	        if (filter.filteredOn(dimension.expression)) {
	            this.openMenuOnDimension(dimension);
	        }
	        else {
	            this.addDummy(dimension, new index_1.DragPosition({ insert: filter.length() }));
	        }
	    };
	    FilterTile.prototype.overflowButtonClick = function () {
	        this.openOverflowMenu(this.overflowButtonTarget());
	    };
	    ;
	    FilterTile.prototype.renderMenu = function () {
	        var _a = this.props, essence = _a.essence, clicker = _a.clicker, menuStage = _a.menuStage;
	        var _b = this.state, FilterMenuAsync = _b.FilterMenuAsync, menuOpenOn = _b.menuOpenOn, menuDimension = _b.menuDimension, menuInside = _b.menuInside, possiblePosition = _b.possiblePosition, maxItems = _b.maxItems, overflowMenuOpenOn = _b.overflowMenuOpenOn;
	        if (!FilterMenuAsync || !menuDimension)
	            return null;
	        if (possiblePosition && possiblePosition.replace === maxItems) {
	            possiblePosition = new index_1.DragPosition({ insert: possiblePosition.replace });
	        }
	        return React.createElement(FilterMenuAsync, {clicker: clicker, essence: essence, direction: "down", containerStage: overflowMenuOpenOn ? null : menuStage, openOn: menuOpenOn, dimension: menuDimension, changePosition: possiblePosition, onClose: this.closeMenu.bind(this), inside: menuInside});
	    };
	    FilterTile.prototype.renderOverflowMenu = function (overflowItemBlanks) {
	        var _this = this;
	        var overflowMenuOpenOn = this.state.overflowMenuOpenOn;
	        if (!overflowMenuOpenOn)
	            return null;
	        var segmentHeight = 29 + constants_1.CORE_ITEM_GAP;
	        var itemY = constants_1.CORE_ITEM_GAP;
	        var filterItems = overflowItemBlanks.map(function (itemBlank) {
	            var style = dom_1.transformStyle(0, itemY);
	            itemY += segmentHeight;
	            return _this.renderItemBlank(itemBlank, style);
	        });
	        return React.createElement(bubble_menu_1.BubbleMenu, {className: "overflow-menu", id: this.overflowMenuId, direction: "down", stage: index_1.Stage.fromSize(208, itemY), fixedSize: true, openOn: overflowMenuOpenOn, onClose: this.closeOverflowMenu.bind(this)}, filterItems);
	    };
	    FilterTile.prototype.renderOverflow = function (overflowItemBlanks) {
	        return React.createElement("div", {className: "overflow", ref: "overflow", onClick: this.overflowButtonClick.bind(this)}, '+' + overflowItemBlanks.length, this.renderOverflowMenu(overflowItemBlanks));
	    };
	    FilterTile.prototype.renderRemoveButton = function (itemBlank) {
	        var essence = this.props.essence;
	        var dataSource = essence.dataSource;
	        if (itemBlank.dimension.expression.equals(dataSource.timeAttribute))
	            return null;
	        return React.createElement("div", {className: "remove", onClick: this.removeFilter.bind(this, itemBlank)}, React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(296)}));
	    };
	    FilterTile.prototype.renderItemBlank = function (itemBlank, style) {
	        var _a = this.props, essence = _a.essence, clicker = _a.clicker;
	        var menuDimension = this.state.menuDimension;
	        var timezone = essence.timezone;
	        var dimension = itemBlank.dimension, clause = itemBlank.clause, source = itemBlank.source;
	        var dimensionName = dimension.name;
	        var classNames = [FILTER_CLASS_NAME, 'type-' + dimension.className, source];
	        if (dimension === menuDimension)
	            classNames.push('selected');
	        var className = classNames.join(' ');
	        if (source === 'from-highlight') {
	            return React.createElement("div", {className: className, key: dimensionName, ref: dimensionName, onClick: clicker.acceptHighlight.bind(clicker), style: style}, React.createElement("div", {className: "reading"}, formatter_1.formatLabel({ dimension: dimension, clause: clause, essence: essence })), this.renderRemoveButton(itemBlank));
	        }
	        if (clause) {
	            return React.createElement("div", {className: className, key: dimensionName, ref: dimensionName, draggable: true, onClick: this.clickDimension.bind(this, dimension), onDragStart: this.dragStart.bind(this, dimension, clause), style: style}, React.createElement("div", {className: "reading"}, formatter_1.formatLabel({ dimension: dimension, clause: clause, essence: essence })), this.renderRemoveButton(itemBlank));
	        }
	        else {
	            return React.createElement("div", {className: className, key: dimensionName, ref: dimensionName, style: style}, React.createElement("div", {className: "reading"}, formatLabelDummy(dimension)), this.renderRemoveButton(itemBlank));
	        }
	    };
	    FilterTile.prototype.render = function () {
	        var _this = this;
	        var essence = this.props.essence;
	        var _a = this.state, dragPosition = _a.dragPosition, possibleDimension = _a.possibleDimension, possiblePosition = _a.possiblePosition, maxItems = _a.maxItems;
	        var dataSource = essence.dataSource, filter = essence.filter, highlight = essence.highlight;
	        var sectionWidth = constants_1.CORE_ITEM_WIDTH + constants_1.CORE_ITEM_GAP;
	        var itemBlanks = filter.clauses.toArray()
	            .map(function (clause) {
	            var dimension = dataSource.getDimensionByExpression(clause.expression);
	            if (!dimension)
	                return null;
	            return {
	                dimension: dimension,
	                source: 'from-filter',
	                clause: clause
	            };
	        })
	            .filter(Boolean);
	        if (highlight) {
	            highlight.delta.clauses.forEach(function (clause) {
	                var added = false;
	                itemBlanks = itemBlanks.map(function (blank) {
	                    if (clause.expression.equals(blank.clause.expression)) {
	                        added = true;
	                        return {
	                            dimension: blank.dimension,
	                            source: 'from-highlight',
	                            clause: clause
	                        };
	                    }
	                    else {
	                        return blank;
	                    }
	                });
	                if (!added) {
	                    var dimension = dataSource.getDimensionByExpression(clause.expression);
	                    if (dimension) {
	                        itemBlanks.push({
	                            dimension: dimension,
	                            source: 'from-highlight',
	                            clause: clause
	                        });
	                    }
	                }
	            });
	        }
	        if (possibleDimension && possiblePosition) {
	            var dummyBlank = {
	                dimension: possibleDimension,
	                source: 'from-drag'
	            };
	            if (possiblePosition.replace === maxItems) {
	                possiblePosition = new index_1.DragPosition({ insert: possiblePosition.replace });
	            }
	            if (possiblePosition.isInsert()) {
	                itemBlanks.splice(possiblePosition.insert, 0, dummyBlank);
	            }
	            else {
	                itemBlanks[possiblePosition.replace] = dummyBlank;
	            }
	        }
	        var overflowItemBlanks;
	        if (maxItems < itemBlanks.length) {
	            overflowItemBlanks = itemBlanks.slice(maxItems);
	            itemBlanks = itemBlanks.slice(0, maxItems);
	        }
	        else {
	            overflowItemBlanks = [];
	        }
	        var itemX = 0;
	        var filterItems = itemBlanks.map(function (itemBlank) {
	            var style = dom_1.transformStyle(itemX, 0);
	            itemX += sectionWidth;
	            return _this.renderItemBlank(itemBlank, style);
	        });
	        var overflowIndicator = null;
	        if (overflowItemBlanks.length) {
	            overflowIndicator = this.renderOverflow(overflowItemBlanks);
	        }
	        return React.createElement("div", {className: dom_1.classNames('filter-tile', (overflowIndicator ? 'has-overflow' : 'no-overflow')), onDragEnter: this.dragEnter.bind(this)}, React.createElement("div", {className: "title"}, constants_1.STRINGS.filter), React.createElement("div", {className: "items", ref: "items"}, filterItems), overflowIndicator, dragPosition ? React.createElement(fancy_drag_indicator_1.FancyDragIndicator, {dragPosition: dragPosition}) : null, dragPosition ? React.createElement("div", {className: "drag-mask", onDragOver: this.dragOver.bind(this), onDragLeave: this.dragLeave.bind(this), onDrop: this.drop.bind(this)}) : null, this.renderMenu());
	    };
	    return FilterTile;
	}(React.Component));
	exports.FilterTile = FilterTile;


/***/ },
/* 321 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(322);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./filter-tile.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./filter-tile.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 322 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".filter-tile{background:#fff;box-shadow:0 1px 1px 0 rgba(0,0,0,0.1)}.filter-tile .title{position:absolute;top:0;bottom:0;left:0;width:64px;padding:12px 0 0 14px;font-size:12px;text-transform:uppercase;color:#999}.filter-tile .items .filter,.overflow-menu .filter{padding:0 0 0 9px;background:#b6e3fc;border:1px solid transparent;border-radius:4px;cursor:pointer;overflow:hidden;-webkit-transition:-webkit-transform 0.1s ease-in-out;transition:-webkit-transform 0.1s ease-in-out;transition:transform 0.1s ease-in-out;transition:transform 0.1s ease-in-out, -webkit-transform 0.1s ease-in-out;width:192px}.filter-tile .items .filter .reading,.overflow-menu .filter .reading{white-space:nowrap;overflow-x:hidden;text-overflow:ellipsis;pointer-events:none;white-space:nowrap;margin-right:20px;height:16px;margin-top:7px}.filter-tile .items .filter .remove,.overflow-menu .filter .remove{position:absolute;top:0;bottom:0;right:0;width:27px;text-align:center;padding-top:9px;cursor:pointer}.filter-tile .items .filter .remove svg,.overflow-menu .filter .remove svg{width:10px}.filter-tile .items .filter .remove path,.overflow-menu .filter .remove path{fill:rgba(0,0,0,0.2)}.filter-tile .items .filter .remove:hover path,.overflow-menu .filter .remove:hover path{fill:rgba(0,0,0,0.5)}.filter-tile .items .filter:hover,.overflow-menu .filter:hover,.filter-tile .items .selected.filter,.overflow-menu .selected.filter{background-color:#98d8fb}.filter-tile .items .type-time.filter,.overflow-menu .type-time.filter{background:#c2eac4}.filter-tile .items .type-time.filter:hover,.overflow-menu .type-time.filter:hover,.filter-tile .items .type-time.selected.filter,.overflow-menu .type-time.selected.filter{background-color:#abe2ad}.filter-tile .items .filter{top:4px;bottom:4px}.filter-tile .drag-mask{position:absolute;top:0;bottom:0;left:0;right:0}.filter-tile .items{position:absolute;top:0;bottom:0;left:64px;right:0;-webkit-transition:height 0.1s ease-in-out;transition:height 0.1s ease-in-out;overflow:hidden}.filter-tile .items .filter{position:absolute;left:0}.filter-tile .items .filter.from-highlight{border:1px dashed #168bc5;background:rgba(182,227,252,0.5)}.filter-tile .items .filter.from-highlight.type-time{border:1px dashed #449c53;background:rgba(194,234,196,0.5)}.filter-tile.has-overflow .items{right:40px}.filter-tile .overflow{position:absolute;top:0;bottom:0;right:0;width:40px;cursor:pointer;border-left:1px solid #ccc;padding-top:12px;text-align:center;font-weight:600}.filter-tile .fancy-drag-indicator{position:absolute;top:0;bottom:0;left:64px;right:0}.overflow-menu .filter{position:absolute;left:8px;top:0;height:29px}.overflow-menu .filter.from-highlight{border:1px dashed #168bc5;background:rgba(182,227,252,0.5)}.overflow-menu .filter.from-highlight.type-time{border:1px dashed #449c53;background:rgba(194,234,196,0.5)}\n", ""]);

	// exports


/***/ },
/* 323 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var numeral = __webpack_require__(199);
	var date_1 = __webpack_require__(324);
	var scales = {
	    'a': {
	        '': 1,
	        'k': 1e3,
	        'm': 1e6,
	        'b': 1e9,
	        't': 1e12
	    },
	    'b': {
	        'B': 1,
	        'KB': 1024,
	        'MB': 1024 * 1024,
	        'GB': 1024 * 1024 * 1024,
	        'TB': 1024 * 1024 * 1024 * 1024,
	        'PB': 1024 * 1024 * 1024 * 1024 * 1024,
	        'EB': 1024 * 1024 * 1024 * 1024 * 1024 * 1024,
	        'ZB': 1024 * 1024 * 1024 * 1024 * 1024 * 1024 * 1024,
	        'YB': 1024 * 1024 * 1024 * 1024 * 1024 * 1024 * 1024 * 1024
	    }
	};
	function getMiddleNumber(values) {
	    var filteredAbsData = [];
	    for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {
	        var v = values_1[_i];
	        if (v === 0 || isNaN(v) || !isFinite(v))
	            continue;
	        filteredAbsData.push(Math.abs(v));
	    }
	    var n = filteredAbsData.length;
	    if (n) {
	        filteredAbsData.sort(function (a, b) { return b - a; });
	        return filteredAbsData[Math.ceil((n - 1) / 2)];
	    }
	    else {
	        return 0;
	    }
	}
	exports.getMiddleNumber = getMiddleNumber;
	function formatterFromData(values, format) {
	    var match = format.match(/^(\S*)( ?)([ab])$/);
	    if (match) {
	        var numberFormat = match[1];
	        var space = match[2];
	        var formatType = match[3];
	        var middle = getMiddleNumber(values);
	        var formatMiddle = numeral(middle).format('0 ' + formatType);
	        var unit = formatMiddle.split(' ')[1] || '';
	        var scale = scales[formatType][unit];
	        var append = unit ? space + unit : '';
	        return function (n) {
	            if (isNaN(n) || !isFinite(n))
	                return '-';
	            return numeral(n / scale).format(numberFormat) + append;
	        };
	    }
	    else {
	        return function (n) {
	            if (isNaN(n) || !isFinite(n))
	                return '-';
	            return numeral(n).format(format);
	        };
	    }
	}
	exports.formatterFromData = formatterFromData;
	function formatLabel(options) {
	    var dimension = options.dimension, clause = options.clause, essence = options.essence, verbose = options.verbose;
	    var label = dimension.title;
	    switch (dimension.kind) {
	        case 'boolean':
	        case 'number':
	        case 'string':
	            if (verbose) {
	                label += ": " + clause.getLiteralSet().toString();
	            }
	            else {
	                var setElements = clause.getLiteralSet().elements;
	                label += setElements.length > 1 ? " (" + setElements.length + ")" : ": " + setElements[0];
	            }
	            break;
	        case 'time':
	            var timeSelection = clause.selection;
	            var timeRange = essence.evaluateSelection(timeSelection);
	            if (verbose) {
	                label = "Time: " + date_1.formatTimeRange(timeRange, essence.timezone, date_1.DisplayYear.IF_DIFF);
	            }
	            else {
	                label = date_1.formatTimeRange(timeRange, essence.timezone, date_1.DisplayYear.IF_DIFF);
	            }
	            break;
	        default:
	            throw new Error("unknown kind " + dimension.kind);
	    }
	    return label;
	}
	exports.formatLabel = formatLabel;


/***/ },
/* 324 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var d3 = __webpack_require__(241);
	var chronoshift_1 = __webpack_require__(179);
	var formatWithYear = d3.time.format('%b %-d, %Y');
	var formatWithoutYear = d3.time.format('%b %-d');
	var formatTimeOfDayWithoutMinutes = d3.time.format('%-I%p');
	var formatTimeOfDayWithMinutes = d3.time.format('%-I:%M%p');
	function formatTimeOfDay(d) {
	    return d.getMinutes() ? formatTimeOfDayWithMinutes(d) : formatTimeOfDayWithoutMinutes(d);
	}
	function isCurrentYear(year, timezone) {
	    var nowWallTime = chronoshift_1.WallTime.UTCToWallTime(new Date(), timezone.toString());
	    return nowWallTime.getFullYear() === year;
	}
	(function (DisplayYear) {
	    DisplayYear[DisplayYear["ALWAYS"] = 0] = "ALWAYS";
	    DisplayYear[DisplayYear["NEVER"] = 1] = "NEVER";
	    DisplayYear[DisplayYear["IF_DIFF"] = 2] = "IF_DIFF";
	})(exports.DisplayYear || (exports.DisplayYear = {}));
	var DisplayYear = exports.DisplayYear;
	function formatTimeRange(timeRange, timezone, displayYear) {
	    var start = timeRange.start, end = timeRange.end;
	    var startWallTime = chronoshift_1.WallTime.UTCToWallTime(start, timezone.toString());
	    var endWallTime = chronoshift_1.WallTime.UTCToWallTime(end, timezone.toString());
	    var endShiftWallTime = chronoshift_1.WallTime.UTCToWallTime(new Date(end.valueOf() - 1), timezone.toString());
	    var showingYear = true;
	    var formatted;
	    if (startWallTime.getFullYear() !== endShiftWallTime.getFullYear()) {
	        formatted = [formatWithYear(startWallTime), formatWithYear(endShiftWallTime)].join(' - ');
	    }
	    else {
	        showingYear = displayYear === DisplayYear.ALWAYS || (displayYear === DisplayYear.IF_DIFF && !isCurrentYear(endShiftWallTime.getFullYear(), timezone));
	        var fmt = showingYear ? formatWithYear : formatWithoutYear;
	        if (startWallTime.getMonth() !== endShiftWallTime.getMonth() || startWallTime.getDate() !== endShiftWallTime.getDate()) {
	            formatted = [formatWithoutYear(startWallTime), fmt(endShiftWallTime)].join(' - ');
	        }
	        else {
	            formatted = fmt(startWallTime);
	        }
	    }
	    if (startWallTime.getHours() || startWallTime.getMinutes() || endWallTime.getHours() || endWallTime.getMinutes()) {
	        formatted += (showingYear ? ' ' : ', ');
	        var startTimeStr = formatTimeOfDay(startWallTime).toLowerCase();
	        var endTimeStr = formatTimeOfDay(endWallTime).toLowerCase();
	        if (startTimeStr === endTimeStr) {
	            formatted += startTimeStr;
	        }
	        else {
	            if (startTimeStr.substr(-2) === endTimeStr.substr(-2)) {
	                startTimeStr = startTimeStr.substr(0, startTimeStr.length - 2);
	            }
	            formatted += [startTimeStr, endTimeStr].join('-');
	        }
	    }
	    return formatted;
	}
	exports.formatTimeRange = formatTimeRange;


/***/ },
/* 325 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(326);
	var React = __webpack_require__(5);
	var svg_icon_1 = __webpack_require__(174);
	var constants_1 = __webpack_require__(222);
	var FancyDragIndicator = (function (_super) {
	    __extends(FancyDragIndicator, _super);
	    function FancyDragIndicator() {
	        _super.call(this);
	        // this.state = {};
	    }
	    FancyDragIndicator.prototype.render = function () {
	        var dragPosition = this.props.dragPosition;
	        if (!dragPosition)
	            return null;
	        var sectionWidth = constants_1.CORE_ITEM_WIDTH + constants_1.CORE_ITEM_GAP;
	        var ghostArrowLeft;
	        var dragGhostElement = null;
	        if (dragPosition.isInsert()) {
	            ghostArrowLeft = dragPosition.insert * sectionWidth - constants_1.CORE_ITEM_GAP / 2;
	        }
	        else {
	            ghostArrowLeft = dragPosition.replace * sectionWidth + constants_1.CORE_ITEM_WIDTH / 2;
	            var left = dragPosition.replace * sectionWidth;
	            dragGhostElement = React.createElement("div", {className: "drag-ghost-element", style: { left: left }});
	        }
	        return React.createElement("div", {className: "fancy-drag-indicator"}, dragGhostElement, React.createElement(svg_icon_1.SvgIcon, {className: "drag-ghost-arrow", svg: __webpack_require__(328), style: { left: ghostArrowLeft }}));
	    };
	    return FancyDragIndicator;
	}(React.Component));
	exports.FancyDragIndicator = FancyDragIndicator;


/***/ },
/* 326 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(327);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./fancy-drag-indicator.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./fancy-drag-indicator.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 327 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".fancy-drag-indicator{pointer-events:none}.fancy-drag-indicator .drag-ghost-element{position:absolute;top:4px;bottom:4px;width:192px;border:1px dashed #666;border-radius:4px}.fancy-drag-indicator .drag-ghost-arrow{position:absolute;top:-12px;width:16px;margin-left:-8px}\n", ""]);

	// exports


/***/ },
/* 328 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 16 17\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M6,10 L2,10 L8,17 L14,10 L10,10 L10,3 L6,3 L6,10 Z\" fill=\"#666666\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 329 */,
/* 330 */,
/* 331 */,
/* 332 */,
/* 333 */,
/* 334 */,
/* 335 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(336);
	var React = __webpack_require__(5);
	var constants_1 = __webpack_require__(222);
	var QueryError = (function (_super) {
	    __extends(QueryError, _super);
	    function QueryError() {
	        _super.call(this);
	        // this.state = {};
	    }
	    QueryError.prototype.render = function () {
	        var error = this.props.error;
	        return React.createElement("div", {className: "query-error"}, React.createElement("div", {className: "whiteout"}), React.createElement("div", {className: "container"}, React.createElement("div", {className: "error"}, constants_1.STRINGS.queryError), React.createElement("div", {className: "message"}, error.message)));
	    };
	    return QueryError;
	}(React.Component));
	exports.QueryError = QueryError;


/***/ },
/* 336 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(337);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./query-error.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./query-error.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 337 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".query-error{text-align:center}.query-error .whiteout{position:absolute;top:0;bottom:0;left:0;right:0;background:#fff;opacity:0.5}.query-error .container{position:absolute;top:50%;left:50%;width:180px;height:50px;margin-left:-90px;margin-top:-25px;color:red;text-align:left}.query-error .container .error{font-size:14px}.query-error .container .message{margin-top:5px;font-size:13px;overflow:hidden}\n", ""]);

	// exports


/***/ },
/* 338 */,
/* 339 */,
/* 340 */,
/* 341 */,
/* 342 */,
/* 343 */,
/* 344 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(345);
	var React = __webpack_require__(5);
	var ReactDOM = __webpack_require__(36);
	var svg_icon_1 = __webpack_require__(174);
	var constants_1 = __webpack_require__(222);
	var index_1 = __webpack_require__(192);
	var dom_1 = __webpack_require__(240);
	var drag_manager_1 = __webpack_require__(246);
	var fancy_drag_indicator_1 = __webpack_require__(325);
	var SPLIT_CLASS_NAME = 'split';
	var SplitTile = (function (_super) {
	    __extends(SplitTile, _super);
	    function SplitTile() {
	        _super.call(this);
	        this.state = {
	            SplitMenuAsync: null,
	            menuOpenOn: null,
	            menuDimension: null,
	            dragPosition: null
	        };
	    }
	    SplitTile.prototype.componentDidMount = function () {
	        var _this = this;
	        __webpack_require__.e/* nsure */(4, function (require) {
	            _this.setState({
	                SplitMenuAsync: __webpack_require__(347).SplitMenu
	            });
	        });
	    };
	    SplitTile.prototype.selectDimensionSplit = function (dimension, split, e) {
	        var target = dom_1.findParentWithClass(e.target, SPLIT_CLASS_NAME);
	        this.openMenu(dimension, split, target);
	    };
	    SplitTile.prototype.openMenu = function (dimension, split, target) {
	        var menuOpenOn = this.state.menuOpenOn;
	        if (menuOpenOn === target) {
	            this.closeMenu();
	            return;
	        }
	        this.setState({
	            menuOpenOn: target,
	            menuDimension: dimension,
	            menuSplit: split
	        });
	    };
	    SplitTile.prototype.closeMenu = function () {
	        var menuOpenOn = this.state.menuOpenOn;
	        if (!menuOpenOn)
	            return;
	        this.setState({
	            menuOpenOn: null,
	            menuDimension: null,
	            menuSplit: null
	        });
	    };
	    SplitTile.prototype.removeSplit = function (split, e) {
	        var clicker = this.props.clicker;
	        clicker.removeSplit(split, index_1.VisStrategy.FairGame);
	        this.closeMenu();
	        e.stopPropagation();
	    };
	    SplitTile.prototype.dragStart = function (dimension, split, splitIndex, e) {
	        var _a = this.props, essence = _a.essence, getUrlPrefix = _a.getUrlPrefix;
	        var dataTransfer = e.dataTransfer;
	        dataTransfer.effectAllowed = 'all';
	        if (getUrlPrefix) {
	            var newUrl = essence.changeSplit(index_1.SplitCombine.fromExpression(dimension.expression), index_1.VisStrategy.FairGame).getURL(getUrlPrefix());
	            dataTransfer.setData("text/url-list", newUrl);
	            dataTransfer.setData("text/plain", newUrl);
	        }
	        drag_manager_1.DragManager.setDragSplit(split, 'filter-tile');
	        drag_manager_1.DragManager.setDragDimension(dimension, 'filter-tile');
	        dom_1.setDragGhost(dataTransfer, dimension.title);
	        this.closeMenu();
	    };
	    SplitTile.prototype.calculateDragPosition = function (e) {
	        var essence = this.props.essence;
	        var numItems = essence.splits.length();
	        var rect = ReactDOM.findDOMNode(this.refs['items']).getBoundingClientRect();
	        var x = dom_1.getXFromEvent(e);
	        var offset = x - rect.left;
	        return index_1.DragPosition.calculateFromOffset(offset, numItems, constants_1.CORE_ITEM_WIDTH, constants_1.CORE_ITEM_GAP);
	    };
	    SplitTile.prototype.canDrop = function (e) {
	        return Boolean(drag_manager_1.DragManager.getDragSplit() || drag_manager_1.DragManager.getDragDimension());
	    };
	    SplitTile.prototype.dragEnter = function (e) {
	        if (!this.canDrop(e))
	            return;
	        this.setState({
	            dragPosition: this.calculateDragPosition(e)
	        });
	    };
	    SplitTile.prototype.dragOver = function (e) {
	        if (!this.canDrop(e))
	            return;
	        e.dataTransfer.dropEffect = 'move';
	        e.preventDefault();
	        var dragPosition = this.calculateDragPosition(e);
	        if (dragPosition.equals(this.state.dragPosition))
	            return;
	        this.setState({ dragPosition: dragPosition });
	    };
	    SplitTile.prototype.dragLeave = function (e) {
	        if (!this.canDrop(e))
	            return;
	        this.setState({
	            dragPosition: null
	        });
	    };
	    SplitTile.prototype.drop = function (e) {
	        if (!this.canDrop(e))
	            return;
	        e.preventDefault();
	        var _a = this.props, clicker = _a.clicker, essence = _a.essence;
	        var splits = essence.splits;
	        var newSplitCombine = null;
	        if (drag_manager_1.DragManager.getDragSplit()) {
	            newSplitCombine = drag_manager_1.DragManager.getDragSplit();
	        }
	        else if (drag_manager_1.DragManager.getDragDimension()) {
	            newSplitCombine = index_1.SplitCombine.fromExpression(drag_manager_1.DragManager.getDragDimension().expression);
	        }
	        if (newSplitCombine) {
	            var dragPosition = this.calculateDragPosition(e);
	            if (dragPosition.isReplace()) {
	                clicker.changeSplits(splits.replaceByIndex(dragPosition.replace, newSplitCombine), index_1.VisStrategy.FairGame);
	            }
	            else {
	                clicker.changeSplits(splits.insertByIndex(dragPosition.insert, newSplitCombine), index_1.VisStrategy.FairGame);
	            }
	        }
	        this.setState({
	            dragPosition: null
	        });
	    };
	    // This will be called externally
	    SplitTile.prototype.splitMenuRequest = function (dimension) {
	        var splits = this.props.essence.splits;
	        var split = splits.findSplitForDimension(dimension);
	        if (!split)
	            return;
	        var targetRef = this.refs[dimension.name];
	        if (!targetRef)
	            return;
	        var target = ReactDOM.findDOMNode(targetRef);
	        if (!target)
	            return;
	        this.openMenu(dimension, split, target);
	    };
	    SplitTile.prototype.renderMenu = function () {
	        var _a = this.props, essence = _a.essence, clicker = _a.clicker, menuStage = _a.menuStage;
	        var _b = this.state, SplitMenuAsync = _b.SplitMenuAsync, menuOpenOn = _b.menuOpenOn, menuDimension = _b.menuDimension, menuSplit = _b.menuSplit;
	        if (!SplitMenuAsync || !menuDimension)
	            return null;
	        var onClose = this.closeMenu.bind(this);
	        return React.createElement(SplitMenuAsync, {clicker: clicker, essence: essence, containerStage: menuStage, openOn: menuOpenOn, dimension: menuDimension, split: menuSplit, onClose: onClose});
	    };
	    SplitTile.prototype.render = function () {
	        var _this = this;
	        var essence = this.props.essence;
	        var _a = this.state, menuDimension = _a.menuDimension, dragPosition = _a.dragPosition;
	        var dataSource = essence.dataSource, splits = essence.splits;
	        var sectionWidth = constants_1.CORE_ITEM_WIDTH + constants_1.CORE_ITEM_GAP;
	        var itemX = 0;
	        var splitItems = splits.toArray().map(function (split, i) {
	            var dimension = split.getDimension(dataSource.dimensions);
	            if (!dimension)
	                throw new Error('dimension not found');
	            var dimensionName = dimension.name;
	            var style = dom_1.transformStyle(itemX, 0);
	            itemX += sectionWidth;
	            var classNames = [
	                SPLIT_CLASS_NAME,
	                'type-' + dimension.className
	            ];
	            if (dimension === menuDimension)
	                classNames.push('selected');
	            return React.createElement("div", {className: classNames.join(' '), key: split.toKey(), ref: dimensionName, draggable: true, onClick: _this.selectDimensionSplit.bind(_this, dimension, split), onDragStart: _this.dragStart.bind(_this, dimension, split, i), style: style}, React.createElement("div", {className: "reading"}, split.getTitle(dataSource.dimensions)), React.createElement("div", {className: "remove", onClick: _this.removeSplit.bind(_this, split)}, React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(296)})));
	        }, this);
	        return React.createElement("div", {className: "split-tile", onDragEnter: this.dragEnter.bind(this)}, React.createElement("div", {className: "title"}, constants_1.STRINGS.split), React.createElement("div", {className: "items", ref: "items"}, splitItems), dragPosition ? React.createElement(fancy_drag_indicator_1.FancyDragIndicator, {dragPosition: dragPosition}) : null, dragPosition ? React.createElement("div", {className: "drag-mask", onDragOver: this.dragOver.bind(this), onDragLeave: this.dragLeave.bind(this), onDrop: this.drop.bind(this)}) : null, this.renderMenu());
	    };
	    return SplitTile;
	}(React.Component));
	exports.SplitTile = SplitTile;


/***/ },
/* 345 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(346);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./split-tile.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./split-tile.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 346 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".split-tile{background:#fff;box-shadow:0 1px 1px 0 rgba(0,0,0,0.1)}.split-tile .title{position:absolute;top:0;bottom:0;left:0;width:64px;padding:12px 0 0 14px;font-size:12px;text-transform:uppercase;color:#999}.split-tile .items .split{padding:0 0 0 9px;background:#b6e3fc;border:1px solid transparent;border-radius:4px;cursor:pointer;overflow:hidden;-webkit-transition:-webkit-transform 0.1s ease-in-out;transition:-webkit-transform 0.1s ease-in-out;transition:transform 0.1s ease-in-out;transition:transform 0.1s ease-in-out, -webkit-transform 0.1s ease-in-out;width:192px}.split-tile .items .split .reading{white-space:nowrap;overflow-x:hidden;text-overflow:ellipsis;pointer-events:none;white-space:nowrap;margin-right:20px;height:16px;margin-top:7px}.split-tile .items .split .remove{position:absolute;top:0;bottom:0;right:0;width:27px;text-align:center;padding-top:9px;cursor:pointer}.split-tile .items .split .remove svg{width:10px}.split-tile .items .split .remove path{fill:rgba(0,0,0,0.2)}.split-tile .items .split .remove:hover path{fill:rgba(0,0,0,0.5)}.split-tile .items .split:hover,.split-tile .items .selected.split{background-color:#98d8fb}.split-tile .items .type-time.split{background:#c2eac4}.split-tile .items .type-time.split:hover,.split-tile .items .type-time.selected.split{background-color:#abe2ad}.split-tile .items .split{top:4px;bottom:4px}.split-tile .drag-mask{position:absolute;top:0;bottom:0;left:0;right:0}.split-tile .items{position:absolute;top:0;bottom:0;left:64px;right:0;-webkit-transition:height 0.1s ease-in-out;transition:height 0.1s ease-in-out;overflow:hidden}.split-tile .items .split{position:absolute;left:0}.split-tile .fancy-drag-indicator{position:absolute;top:0;bottom:0;left:64px;right:0}\n", ""]);

	// exports


/***/ },
/* 347 */,
/* 348 */,
/* 349 */,
/* 350 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 8 13\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M3,8 L0,8 L4,13 L8,8 L5,8 L5,0 L3,0 L3,8 Z\" fill=\"#888888\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 351 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(352);
	var React = __webpack_require__(5);
	var dom_1 = __webpack_require__(240);
	var svg_icon_1 = __webpack_require__(174);
	var vis_selector_menu_1 = __webpack_require__(354);
	var VisSelector = (function (_super) {
	    __extends(VisSelector, _super);
	    function VisSelector() {
	        _super.call(this);
	        this.state = {
	            menuOpenOn: null
	        };
	    }
	    VisSelector.prototype.openMenu = function (e) {
	        var menuOpenOn = this.state.menuOpenOn;
	        var target = dom_1.findParentWithClass(e.target, 'vis-selector');
	        if (menuOpenOn === target) {
	            this.closeMenu();
	            return;
	        }
	        this.setState({
	            menuOpenOn: target
	        });
	    };
	    VisSelector.prototype.closeMenu = function () {
	        this.setState({
	            menuOpenOn: null
	        });
	    };
	    VisSelector.prototype.render = function () {
	        var _a = this.props, clicker = _a.clicker, essence = _a.essence;
	        var menuOpenOn = this.state.menuOpenOn;
	        var visualization = essence.visualization;
	        var menu = null;
	        if (menuOpenOn) {
	            menu = React.createElement(vis_selector_menu_1.VisSelectorMenu, {
	                clicker: clicker,
	                essence: essence,
	                openOn: menuOpenOn,
	                onClose: this.closeMenu.bind(this)
	            });
	        }
	        return React.createElement("div", {className: dom_1.classNames('vis-selector', { active: menuOpenOn }), onClick: this.openMenu.bind(this)}, React.createElement("div", {className: "vis-item selected"}, React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(357)("./vis-" + visualization.id + '.svg')}), React.createElement("div", {className: "vis-title"}, visualization.title)), menu);
	    };
	    return VisSelector;
	}(React.Component));
	exports.VisSelector = VisSelector;


/***/ },
/* 352 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(353);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./vis-selector.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./vis-selector.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 353 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".vis-selector{background:#fff;box-shadow:0 1px 1px 0 rgba(0,0,0,0.1)}.vis-selector:before{position:absolute;top:0;bottom:0;left:0;right:0;content:'';z-index:6;background-color:rgba(255,255,255,0.65);pointer-events:none;opacity:0}.vis-selector:after{width:0;height:0;border-top:9px solid #666;border-bottom:0;border-left:7px solid transparent;border-right:7px solid transparent;content:'';z-index:7;position:absolute;top:50%;left:50%;margin-top:-6px;margin-left:-7px;pointer-events:none;opacity:0}.vis-selector:hover:after,.vis-selector:hover:before,.vis-selector.active:after,.vis-selector.active:before{opacity:1}.vis-selector .vis-item{display:inline-block;width:78px;height:70px;cursor:pointer}.vis-selector .vis-item .vis-title{position:absolute;left:0;right:0;bottom:7px;text-align:center;font-size:11px;font-weight:400;color:#666}.vis-selector .vis-item svg{position:absolute;top:3px;left:50%;width:53px;height:53px;margin-left:-27px}.vis-selector .vis-selector-menu{position:absolute;top:100%;right:0}\n", ""]);

	// exports


/***/ },
/* 354 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(355);
	var React = __webpack_require__(5);
	var ReactDOM = __webpack_require__(36);
	var svg_icon_1 = __webpack_require__(174);
	var dom_1 = __webpack_require__(240);
	var VisSelectorMenu = (function (_super) {
	    __extends(VisSelectorMenu, _super);
	    function VisSelectorMenu() {
	        _super.call(this);
	        // this.state = {};
	        this.globalMouseDownListener = this.globalMouseDownListener.bind(this);
	        this.globalKeyDownListener = this.globalKeyDownListener.bind(this);
	    }
	    VisSelectorMenu.prototype.componentDidMount = function () {
	        window.addEventListener('mousedown', this.globalMouseDownListener);
	        window.addEventListener('keydown', this.globalKeyDownListener);
	    };
	    VisSelectorMenu.prototype.componentWillUnmount = function () {
	        window.removeEventListener('mousedown', this.globalMouseDownListener);
	        window.removeEventListener('keydown', this.globalKeyDownListener);
	    };
	    VisSelectorMenu.prototype.globalMouseDownListener = function (e) {
	        var _a = this.props, onClose = _a.onClose, openOn = _a.openOn;
	        var myElement = ReactDOM.findDOMNode(this);
	        if (!myElement)
	            return;
	        var target = e.target;
	        if (dom_1.isInside(target, myElement) || dom_1.isInside(target, openOn))
	            return;
	        onClose();
	    };
	    VisSelectorMenu.prototype.globalKeyDownListener = function (e) {
	        if (!dom_1.escapeKey(e))
	            return;
	        var onClose = this.props.onClose;
	        onClose();
	    };
	    VisSelectorMenu.prototype.onVisSelect = function (v) {
	        var clicker = this.props.clicker;
	        clicker.changeVisualization(v);
	        this.setState({
	            menuOpen: false
	        });
	    };
	    VisSelectorMenu.prototype.renderVisItem = function (v) {
	        var essence = this.props.essence;
	        var visualization = essence.visualization;
	        return React.createElement("div", {className: dom_1.classNames('vis-item', (v.id === visualization.id ? 'selected' : 'not-selected')), key: v.id, onClick: this.onVisSelect.bind(this, v)}, React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(357)("./vis-" + v.id + '.svg')}), React.createElement("div", {className: "vis-title"}, v.title));
	    };
	    VisSelectorMenu.prototype.render = function () {
	        var _this = this;
	        var essence = this.props.essence;
	        var visualizations = essence.visualizations;
	        var visItems = null;
	        if (visualizations) {
	            visItems = visualizations.toArray().map(function (v) {
	                return _this.renderVisItem(v);
	            });
	        }
	        return React.createElement("div", {className: "vis-selector-menu"}, visItems);
	    };
	    return VisSelectorMenu;
	}(React.Component));
	exports.VisSelectorMenu = VisSelectorMenu;


/***/ },
/* 355 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(356);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./vis-selector-menu.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./vis-selector-menu.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 356 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".vis-selector-menu{background:#fff;border-radius:2px;box-shadow:0 3px 10px 0 rgba(0,0,0,0.26),0 0 3px 0 rgba(0,0,0,0.16)}.vis-selector-menu{z-index:8;font-size:0;width:272px;padding:16px}.vis-selector-menu .vis-item{margin:1px;border-radius:2px}.vis-selector-menu .vis-item:hover{box-shadow:inset 0 0 0 1px #dedede}.vis-selector-menu .vis-item.selected{box-shadow:inset 0 0 0 1px #d1d1d1}\n", ""]);

	// exports


/***/ },
/* 357 */
/***/ function(module, exports, __webpack_require__) {

	var map = {
		"./vis-bar-chart.svg": 358,
		"./vis-geo.svg": 359,
		"./vis-heatmap.svg": 360,
		"./vis-scatter-plot.svg": 361,
		"./vis-stacked-bars.svg": 362,
		"./vis-table.svg": 363,
		"./vis-time-series.svg": 364,
		"./vis-totals.svg": 365,
		"./vis-treemap.svg": 366
	};
	function webpackContext(req) {
		return __webpack_require__(webpackContextResolve(req));
	};
	function webpackContextResolve(req) {
		return map[req] || (function() { throw new Error("Cannot find module '" + req + "'.") }());
	};
	webpackContext.keys = function webpackContextKeys() {
		return Object.keys(map);
	};
	webpackContext.resolve = webpackContextResolve;
	module.exports = webpackContext;
	webpackContext.id = 357;


/***/ },
/* 358 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 53 53\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fill-rule=\"evenodd\"><path fill=\"#999999\" d=\"M0 8H7V33H0zM8 0H15V33H8zM16 13H23V33H16zM24 20H31V33H24z\" transform=\"translate(11 10)\"/><path fill=\"#ECECEC\" d=\"M1 9H6V32H1zM9 1H14V32H9zM17 14H22V32H17zM25 21H30V32H25z\" transform=\"translate(11 10)\"/></g></svg>"

/***/ },
/* 359 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 53 53\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fill-rule=\"evenodd\"><path d=\"M18.5,36.5 C28.4411255,36.5 36.5,28.4411255 36.5,18.5 C36.5,8.5588745 28.4411255,0.5 18.5,0.5 C8.5588745,0.5 0.5,8.5588745 0.5,18.5 C0.5,28.4411255 8.5588745,36.5 18.5,36.5 L18.5,36.5 Z\" fill=\"#EEEEEE\" transform=\"translate(8 8)\"/><path d=\"M18.5,36.5 C28.4411255,36.5 36.5,28.4411255 36.5,18.5 C36.5,8.5588745 28.4411255,0.5 18.5,0.5 C8.5588745,0.5 0.5,8.5588745 0.5,18.5 C0.5,28.4411255 8.5588745,36.5 18.5,36.5 L18.5,36.5 Z M18.5,35.5 C9.11115925,35.5 1.5,27.8888407 1.5,18.5 C1.5,9.11115925 9.11115925,1.5 18.5,1.5 C27.8888407,1.5 35.5,9.11115925 35.5,18.5 C35.5,27.8888407 27.8888407,35.5 18.5,35.5 L18.5,35.5 Z\" fill=\"#999999\" transform=\"translate(8 8)\"/><path d=\"M31.6707152,13.6587974 L33.3941016,13.6587974 L34.8709677,13.5690187 C34.7326759,13.098061 34.5770977,12.6354724 34.4027298,12.1820138 L33.5023299,12.1972306 L33.0506268,11.6950785 L32.2524427,12.1302769 L31.5842828,11.4105256 L31.5572257,10.7303378 L30.1622824,10.6032781 L29.3062261,10.1749272 L28.7583201,10.6770793 L28.2028981,10.5614321 L27.8586718,9.01236903 L28.4839912,8.11838616 L29.1296035,8.0088257 L29.927036,8.0963219 L29.8082855,7.25635842 L29.1002916,7.54547628 L28.4396477,6.85996261 L28.3622343,6.43009 L28.6974416,6.06032346 L29.4948742,5.74381549 L29.7000571,5.37252728 C26.6523765,2.65481936 22.6576977,1 18.2864745,1 C14.4932207,1 10.9840664,2.24625016 8.13029492,4.35148472 L10.1798695,3.8843802 L13.1337522,3.8988361 L15.4426239,3.76497796 L14.2376815,5.51023869 L13.4838409,5.74229381 L11.9430899,6.6552976 L12.1159547,7.29820443 L12.5466134,7.58275727 L13.2759777,7.68455305 L13.4079307,7.70296944 L13.4079307,8.69433938 L13.8062712,8.62966828 L14.1730451,7.85513673 L15.0892283,7.56145385 L16.7442203,7.06310595 L17.0749181,7.06310595 L18.024171,7.64438503 L18.6833118,8.05143255 L18.6555031,8.66314508 L16.9621802,9.03975914 L16.4037519,8.69433938 L15.8550942,8.83737664 L14.9592039,10.1574279 L13.9287797,10.8741359 L12.8652858,11.9940872 L12.7923819,12.4924351 L11.7266332,13.2015347 L11.1982683,13.7394461 L10.5293569,13.8406374 L8.49030454,13.8413982 L7.43432643,14.3823529 L6.79397529,15.9169601 L7.0908517,16.5750837 L7.92285723,16.6777966 L9.9634128,17.1723403 L10.0641253,18.7457502 L11.4432853,18.9831312 L12.3196344,17.9575236 L13.3831284,18.1766445 L13.7566666,18.7023825 L14.7765686,18.6415156 L15.9978956,19.6146255 L17.0891982,19.6298422 L17.4920482,20.3435068 L17.5491687,21.2154254 L18.7562156,21.6802965 L20.2789285,21.6962741 L21.399543,22.6556889 L21.2702703,23.2681623 L20.5307098,24.2192079 L20.3150047,26.3259641 L19.6468448,26.8600713 L18.6562547,26.8303987 L18.3263085,27.4116778 L18.5713255,28.5042389 L17.4927998,29.8996131 L17.1485735,30.5402374 L16.1211556,31.0393461 L15.891922,31.5711708 L15.4101554,32.2977697 L16.1504675,33.0403461 L15.9708385,33.7532499 L16.7269338,34.3976784 L16.6262213,34.7324464 L15.5973003,34.7126647 L14.5736404,33.8087909 L13.7762078,32.3898309 L13.8874425,31.0203252 L13.2839191,30.2054693 L13.5281845,28.8245511 L13.169678,28.7233599 L13.169678,25.7271858 C13.169678,25.7271858 12.1640562,24.9556976 12.106184,24.9556976 C12.0483119,24.9556976 11.5740613,24.8248337 11.5740613,24.8248337 L11.4733488,24.2587714 L10.166341,22.6001478 L10.2956137,22.0044129 L10.3384541,21.0297813 L11.2433635,20.389157 L11.1140907,19.2981175 L9.79280281,19.1976871 L8.75862069,18.0046954 L8.02582449,17.7992696 L7.0059225,17.1883179 L5.49673812,17.0544107 L4.88945675,16.1140168 L4.34681177,15.6575149 L3.78688032,15.5700187 L3.0976761,14.3808313 L3.0976761,12.9968697 L2.37916003,12.6476458 L2.37916003,11.6517108 C1.49228873,13.7561845 1,16.0706491 1,18.5 C1,28.1496891 8.75486276,36 18.287226,36 C23.6911283,36 28.5223221,33.4755445 31.694766,29.5313682 L31.1243123,29.5313682 L31.1243123,28.3680492 L30.4644199,27.4687405 L30.4644199,26.0695622 L29.9608574,25.5613234 L29.9165138,24.9792835 L30.556865,23.7429242 L29.344557,21.5753011 L29.4866067,20.1046041 L28.3953041,19.9904787 L27.9932057,19.5834312 L27.2596579,19.5834312 L26.8868713,19.9318943 L25.5498001,20.0483022 L24.8305324,20.0483022 L23.1800499,18.1439285 L23.1935785,16.6602974 L23.1800499,15.9915221 L23.0214653,15.3957871 L24.9312449,14.000413 L24.9312449,13.0113256 L25.8662177,12.4855876 L27.0138893,12.5236294 L27.6159096,12.1964697 L29.5557526,12.0435416 L29.5557526,13.0470849 L31.0897394,13.4404374 L31.6707152,13.6587974 Z\" fill=\"#FFFFFF\" transform=\"translate(8 8)\"/><path d=\"M31.6707152,14.1587974 L33.3941016,14.1587974 L34.9013067,14.0680974 L35.5274505,14.0300342 L35.3507125,13.4281467 C35.2071621,12.9392803 35.0469345,12.464211 34.8694161,12.0025594 L34.7439124,11.6761765 L34.394281,11.6820852 L33.4938811,11.6973019 L33.874063,11.8628438 L33.4223599,11.3606917 L33.158143,11.0669654 L32.8112748,11.2560903 L32.0130906,11.6912888 L32.6188853,11.7901008 L31.9507254,11.0703495 L32.0838877,11.3906519 L32.0568306,10.7104641 L32.0393965,10.2721869 L31.6025809,10.2323992 L30.2076376,10.1053395 L30.3860241,10.156132 L29.5299678,9.72778105 L29.2221506,9.57375634 L28.9683986,9.80631822 L28.4204925,10.3084703 L28.8602416,10.1875775 L28.3048197,10.0719303 L28.6909923,10.4529699 L28.346766,8.90390678 L28.2683886,9.29895605 L28.893708,8.40497318 L28.5676453,8.61133849 L29.2132575,8.50177803 L29.0750696,8.50584286 L29.8725021,8.59333906 L30.5121974,8.66352793 L30.4221129,8.02632997 L30.3033624,7.1863665 L30.2135083,6.55079755 L29.6192581,6.79346681 L28.9112642,7.08258467 L29.4603153,7.19851385 L28.7996714,6.51300018 L28.4396477,6.85996261 L28.9317321,6.77134589 L28.8543187,6.34147328 L28.3622343,6.43009 L28.7326748,6.76590821 L29.067882,6.39614168 L28.6974416,6.06032346 L28.8818978,6.52505554 L29.6793304,6.20854756 L29.8458445,6.14245667 L29.9324963,5.98565615 L30.1376792,5.61436794 L30.3307442,5.26500775 L30.0328309,4.99934954 C26.8025927,2.11884954 22.6641785,0.5 18.2864745,0.5 C14.4826483,0.5 10.8540066,1.72086534 7.83347106,3.9491222 L5.9055948,5.37132149 L8.24139769,4.83898464 L10.2909723,4.37188012 L10.1774226,4.38437421 L13.1313053,4.39883011 L15.4715631,4.26413978 L15.0311624,3.48090153 L13.82622,5.22616225 L14.0905783,5.03236775 L13.3367377,5.26442287 L13.2289467,5.3121439 L11.6881957,6.22514769 L11.3616941,6.41862294 L11.4602395,6.78512637 L11.6331043,7.4280332 L11.6822868,7.61094945 L11.840319,7.71536741 L12.2709776,7.99992026 L12.4774994,8.07795749 L13.2068637,8.17975327 L13.3388167,8.19816965 L13.4079307,7.70296944 L12.9079307,7.70296944 L12.9079307,8.69433938 L12.9079307,9.28206166 L13.4880573,9.18787736 L13.8863978,9.12320626 L14.1457245,9.08110422 L14.2581649,8.84365928 L14.6249388,8.06912774 L14.3256707,8.33127267 L15.2418538,8.03758979 L16.8883852,7.54187152 L16.7442203,7.06310595 L16.7442203,7.56310595 L17.0749181,7.56310595 L17.0749181,7.06310595 L16.8138072,7.48951084 L17.7630602,8.07078991 L18.4205975,8.47685141 L18.1838276,8.02872581 L18.156019,8.64043835 L18.54695,8.1750711 L16.8536271,8.55168516 L17.2252067,8.61453324 L16.6667784,8.26911348 L16.4847409,8.15651288 L16.277616,8.21051118 L15.7289583,8.35354844 L15.546983,8.40099013 L15.4413769,8.55659562 L14.5454866,9.87664692 L14.6737009,9.74695501 L13.6432767,10.463663 L13.5662057,10.5298394 L12.5027117,11.6497907 L12.3935076,11.7647921 L12.3705516,11.9217121 L12.2976478,12.4200599 L12.5154104,12.0761578 L11.4496617,12.7852574 L11.3699287,12.8511608 L10.8415638,13.3890722 L11.1234805,13.245071 L10.4545691,13.3462622 L8.49011798,13.3413982 L8.36959993,13.3414432 L8.26233726,13.3963915 L7.20635915,13.9373463 L7.04339786,14.0208278 L6.97288747,14.1898066 L6.33253633,15.7244138 L6.24895582,15.9247152 L6.33820153,16.1225575 L6.63507794,16.7806811 L6.7506483,17.0368805 L7.02959065,17.0713166 L7.86159618,17.1740295 L9.84564347,17.6582728 L9.46443395,17.2042795 L9.56514646,18.7776894 L9.5903576,19.1715576 L9.97931245,19.2385045 L11.3584725,19.4758854 L11.6386987,19.524118 L11.8234156,19.3079404 L12.6997646,18.2823328 L12.2187345,18.447237 L13.2822285,18.6663579 L12.9755336,18.4662416 L13.3490718,18.9919796 L13.5096689,19.2180127 L13.7864532,19.2014945 L14.8063552,19.1406276 L14.4649932,19.0325664 L15.6863202,20.0056763 L15.8200075,20.1121936 L15.9909244,20.1145769 L17.0822271,20.1297936 L16.6537795,19.8756277 L17.0566295,20.5892923 L16.9931177,20.3761924 L17.0502382,21.248111 L17.071137,21.5671204 L17.3694697,21.6820176 L18.5765165,22.1468887 L18.7509695,22.180269 L20.2736824,22.1962466 L19.9537502,22.0760885 L21.0743647,23.0355033 L20.9103215,22.5524305 L20.7810487,23.1649039 L20.8755657,22.9612286 L20.1360052,23.9122742 L20.0479248,24.0255422 L20.0333102,24.1682804 L19.817605,26.2750367 L20.0028071,25.9354098 L19.3346473,26.469517 L19.6618154,26.3602955 L18.6712252,26.3306228 L18.3701241,26.3216035 L18.2214217,26.5835784 L17.8914755,27.1648574 L17.7961857,27.3327333 L17.8384264,27.5210899 L18.0834433,28.613651 L18.1757217,28.1984651 L17.097196,29.5938392 L16.70813,30.3035741 L16.9300942,30.0904966 L15.9026763,30.5896053 L15.7355425,30.6707972 L15.6619932,30.8414322 L15.4327596,31.3732569 L14.9934347,32.0214658 L14.7678513,32.36169 L15.0560626,32.6507828 L15.7963746,33.3933592 L15.6656216,32.9181804 L15.4859926,33.6310842 L15.4100975,33.9322933 L15.646504,34.1337852 L16.4025993,34.7782137 L16.7269338,34.3976784 L16.2481319,34.2536343 L16.1474194,34.5884024 L16.6262213,34.7324464 L16.6358324,34.2325388 L15.6069114,34.212757 L15.9282438,34.3378628 L14.9045838,33.4339891 L15.0095243,33.5638312 L14.2120917,32.1448712 L14.2745666,32.4303088 L14.3858013,31.0608032 L14.4010035,30.8736361 L14.2892384,30.7227348 L13.685715,29.907879 L13.7762758,30.2925604 L14.0205412,28.9116422 L14.0993293,28.4662255 L13.6640066,28.3433522 L13.3055002,28.242161 L13.169678,28.7233599 L13.669678,28.7233599 L13.669678,25.7271858 L13.669678,25.4805834 L13.4740208,25.33048 C13.3466654,25.2327761 13.1547059,25.0869086 12.9585334,24.9406193 C12.9468756,24.9319282 12.9468756,24.9319282 12.935205,24.9232375 C12.791566,24.8163061 12.6697682,24.7273407 12.5755536,24.6610197 C12.5187998,24.6210687 12.4718681,24.5891883 12.4335703,24.5648752 C12.2762455,24.4649986 12.2587185,24.4556976 12.106184,24.4556976 C12.1486251,24.4556976 12.0269093,24.4277093 11.9679175,24.4124889 C11.9560968,24.4094348 11.9560968,24.4094348 11.9442694,24.4063627 C11.8527651,24.3825651 11.7641659,24.3586045 11.7070599,24.3428468 L11.5740613,24.8248337 L12.0663306,24.7372503 L11.9656181,24.1711879 L11.9436593,24.0477667 L11.86607,23.9493041 L10.5590622,22.2906805 L10.6549691,22.7061787 L10.7842419,22.1104437 L10.8379718,21.0517379 L10.6273568,21.4378687 L11.5322661,20.7972443 L11.7748641,20.6254987 L11.7398903,20.3303256 L11.6106175,19.2392861 L11.5622102,18.8307365 L11.1519862,18.7995556 L9.83069825,18.6991252 L10.1706072,18.8701755 L9.13642509,17.6771839 L9.03810854,17.5637698 L8.89358364,17.5232549 L8.16078744,17.317829 L8.28276631,17.3703397 L7.26286432,16.759388 L7.16441983,16.7004168 L7.05011299,16.6902745 L5.54092861,16.5563673 L5.91676928,16.7831657 L5.30948792,15.8427718 L5.21133387,15.7314006 L4.66868889,15.2748987 L4.56189297,15.1850563 L4.42400616,15.1635098 L3.86407471,15.0760136 L4.21947869,15.3193024 L3.53027447,14.130115 L3.5976761,14.3808313 L3.5976761,12.9968697 L3.5976761,12.6839578 L3.31624476,12.5471723 L2.59772869,12.1979484 L2.87916003,12.6476458 L2.87916003,11.6517108 L2.87916003,9.17773972 L1.91840321,11.4575378 C0.986778242,13.6682083 0.5,16.0515112 0.5,18.5 C0.5,28.4244716 8.47734197,36.5 18.287226,36.5 C23.7003935,36.5 28.7234531,34.0232484 32.0843749,29.8447448 L32.7386031,29.0313682 L31.694766,29.0313682 L31.1243123,29.0313682 L31.6243123,29.5313682 L31.6243123,28.3680492 L31.6243123,28.2042841 L31.5274294,28.072251 L30.8675371,27.1729423 L30.9644199,27.4687405 L30.9644199,26.0695622 L30.9644199,25.8638078 L30.8196035,25.7176466 L30.316041,25.2094078 L30.4594126,25.5233403 L30.415069,24.9413004 L30.3604973,25.2092372 L31.0008485,23.9728779 L31.1246619,23.7338247 L30.9932519,23.4988618 L29.7809439,21.3312387 L29.842241,21.6233707 L29.9842907,20.1526738 L30.0319816,19.6589113 L29.5386118,19.607316 L28.4473091,19.4931906 L28.7510133,19.6390943 L28.3489149,19.2320468 L28.2021062,19.0834312 L27.9932057,19.0834312 L27.2596579,19.0834312 L27.0623574,19.0834312 L26.9182218,19.2181622 L26.5454353,19.5666253 L26.8435044,19.4337785 L25.5064332,19.5501865 L24.8305324,19.5483022 L25.2083745,19.7208341 L23.557892,17.8164604 L23.6800291,18.1484876 L23.6935577,16.6648565 L23.6799476,15.9814098 L23.6632235,15.8629013 L23.5046389,15.2671664 L23.3164413,15.7995063 L25.226221,14.4041322 L25.4312449,14.2543321 L25.4312449,14.000413 L25.4312449,13.0113256 L25.1763103,13.44715 L26.1112831,12.921412 L25.8496533,12.9853131 L26.9973249,13.023355 L27.1331898,13.0278585 L27.2526317,12.9629494 L27.854652,12.6357897 L27.6552053,12.6949232 L29.5950484,12.541995 L29.0557526,12.0435416 L29.0557526,13.0470849 L29.0557526,13.4350492 L29.4315583,13.5314151 L30.965545,13.9247676 L31.4948045,14.126831 L31.6707152,14.1587974 L31.6707152,14.1587974 Z M31.6707152,13.1587974 L31.8466259,13.1907639 L31.26565,12.9724038 L29.679947,12.5627547 L30.0557526,13.0470849 L30.0557526,12.0435416 L30.0557526,11.5025726 L29.5164569,11.5450881 L27.5766138,11.6980163 L27.3771671,11.7571497 L26.7751469,12.0843094 L27.0304537,12.0239039 L25.8827821,11.985862 L25.7430321,11.9812298 L25.6211523,12.0497631 L24.6861795,12.5755011 L24.4312449,12.7188516 L24.4312449,13.0113256 L24.4312449,14.000413 L24.6362689,13.5966939 L22.7264893,14.992068 L22.450301,15.1938641 L22.5382917,15.5244079 L22.6968763,16.1201429 L22.6801522,16.0016345 L22.6936807,16.6704097 L22.6800707,18.1393694 L22.6783463,18.3284816 L22.8022078,18.4713967 L24.4526904,20.3757704 L24.6022203,20.5483022 L24.8305324,20.5483022 L25.5498001,20.5483022 L26.9302382,20.43001 L27.1022043,20.4150383 L27.2283073,20.2971633 L27.6010939,19.9487001 L27.2596579,20.0834312 L27.9932057,20.0834312 L27.6374964,19.9348155 L28.0395949,20.341863 L28.1653405,20.4691564 L28.343299,20.4877668 L29.4346017,20.6018923 L28.9889228,20.0565345 L28.8468731,21.5272314 L28.8318392,21.6828828 L28.9081701,21.8193635 L30.1204781,23.9869866 L30.1128815,23.5129706 L29.4725304,24.7493299 L29.4071611,24.8755417 L29.4179587,25.0172667 L29.4623022,25.5993066 L29.4762692,25.7826327 L29.6056738,25.913239 L30.1092363,26.4214778 L29.9644199,26.0695622 L29.9644199,27.4687405 L29.9644199,27.6325056 L30.0613028,27.7645387 L30.7211952,28.6638474 L30.6243123,28.3680492 L30.6243123,29.5313682 L30.6243123,30.0313682 L31.1243123,30.0313682 L31.694766,30.0313682 L31.305157,29.2179916 C28.1314934,33.1636844 23.3932499,35.5 18.287226,35.5 C9.03238355,35.5 1.5,27.8749067 1.5,18.5 C1.5,16.185605 1.95982375,13.9342734 2.83991684,11.8458838 L1.87916003,11.6517108 L1.87916003,12.6476458 L1.87916003,12.9605577 L2.16059136,13.0973431 L2.87910743,13.4465671 L2.5976761,12.9968697 L2.5976761,14.3808313 L2.5976761,14.5152494 L2.66507772,14.6315475 L3.35428194,15.820735 L3.47393147,16.0271842 L3.70968593,16.0640238 L4.26961739,16.15152 L4.02493466,16.040131 L4.56757964,16.4966329 L4.46942559,16.3852617 L5.07670696,17.3256556 L5.20922539,17.5308645 L5.45254762,17.552454 L6.961732,17.6863613 L6.74898067,17.6172478 L7.76888267,18.2281995 L7.89086154,18.2807101 L8.62365774,18.486136 L8.38081629,18.332207 L9.41499841,19.5251986 L9.54976139,19.6806559 L9.75490738,19.6962489 L11.0761953,19.7966793 L10.6175639,19.3569489 L10.7468367,20.4479884 L10.9544609,19.9810696 L10.0495515,20.621694 L9.84968973,20.7631847 L9.83893646,21.0078248 L9.79609607,21.9824563 L9.67771285,22.4941169 L9.62772627,22.7244729 L9.77361972,22.9096151 L11.0806275,24.5682387 L10.9810794,24.3463548 L11.0817919,24.9124171 L11.1370373,25.2229284 L11.4410627,25.3068206 C11.5025193,25.3237788 11.5953811,25.3488922 11.6925719,25.3741686 C11.7052973,25.377474 11.7052973,25.377474 11.7180907,25.3807795 C11.9470505,25.439853 12.0159558,25.4556976 12.106184,25.4556976 C11.9672632,25.4556976 11.9899209,25.4677213 11.8976087,25.4091176 C11.9199859,25.4233236 11.9550712,25.4471568 11.9999333,25.4787368 C12.08548,25.5389562 12.2009228,25.6232796 12.3380599,25.7253708 C12.3493963,25.7338126 12.3493963,25.7338126 12.3607327,25.7422641 C12.5525194,25.8852828 12.7412852,26.0287234 12.8653352,26.1238915 L12.669678,25.7271858 L12.669678,28.7233599 L12.669678,29.1017667 L13.0338559,29.2045587 L13.3923623,29.30575 L13.5281845,28.8245511 L13.0358278,28.73746 L12.7915624,30.1183782 L12.7540941,30.3301994 L12.8821231,30.5030597 L13.4856466,31.3179156 L13.3890837,30.9798472 L13.277849,32.3493529 L13.2654818,32.5016157 L13.3403239,32.6347906 L14.1377565,34.0537506 L14.2426969,34.1835928 L15.2663568,35.0874665 L15.4040437,35.2090416 L15.5876892,35.2125723 L16.6166102,35.232354 L16.9957713,35.2396437 L17.1050233,34.8764905 L17.2057358,34.5417224 L17.2998201,34.2289865 L17.0512683,34.017143 L16.295173,33.3727145 L16.4556844,33.8754156 L16.6353134,33.1625118 L16.7045086,32.8878928 L16.5045603,32.687333 L15.7642483,31.9447566 L15.8268761,32.5740736 L16.3086427,31.8474747 L16.580318,31.23726 L16.339635,31.4890869 L17.3670528,30.9899782 L17.5124866,30.919328 L17.589017,30.7769007 L17.9332433,30.1362763 L18.9669293,28.8100128 L19.1106248,28.6241025 L19.0592076,28.3948268 L18.8141907,27.3022657 L18.7611415,27.6584981 L19.0910877,27.077219 L18.6412842,27.3301745 L19.6318743,27.3598471 L19.8155261,27.3653483 L19.9590424,27.2506256 L20.6272022,26.7165184 L20.7910402,26.5855512 L20.8124043,26.3768915 L21.0281094,24.2701353 L20.9254144,24.5261415 L21.6649749,23.5750959 L21.7356989,23.4841476 L21.7594918,23.3714207 L21.8887646,22.7589473 L21.9500137,22.4687586 L21.7247214,22.2758744 L20.6041069,21.3164596 L20.4659884,21.1982093 L20.2841747,21.1963016 L18.7614617,21.180324 L18.9359147,21.2137044 L17.7288678,20.7488333 L18.0480993,21.1827398 L17.9909787,20.3108212 L17.927467,20.0977213 L17.5246169,19.3840566 L17.383406,19.1338959 L17.0961693,19.1298908 L16.0048667,19.1146741 L16.309471,19.2235746 L15.088144,18.2504647 L14.9381827,18.130981 L14.746782,18.1424036 L13.72688,18.2032705 L14.1642614,18.4127854 L13.7907232,17.8870474 L13.6767533,17.7266399 L13.4840283,17.6869311 L12.4205343,17.4678102 L12.1313258,17.408222 L11.9395042,17.6327144 L11.0631551,18.658322 L11.5280982,18.4903769 L10.1489382,18.2529959 L10.5631042,18.713811 L10.4623916,17.1404012 L10.438881,16.7730988 L10.0811821,16.6864078 L8.04062656,16.1918641 L7.15211275,16.0788508 L7.54662546,16.3694863 L7.24974905,15.7113628 L7.25541425,16.1095065 L7.89576539,14.5748993 L7.66229371,14.8273596 L8.71827182,14.2864049 L8.49049111,14.3413982 L10.5295435,14.3406373 L11.2730562,14.2338213 L11.4380432,14.2088624 L11.5549729,14.08982 L12.0833377,13.5519086 L12.0036047,13.617812 L13.0693535,12.9087124 L13.2548628,12.7852831 L13.287116,12.5648103 L13.3600199,12.0664624 L13.2278598,12.3383837 L14.2913538,11.2184324 L14.2142827,11.2846088 L15.2447069,10.5679009 L15.3729212,10.438209 L16.2688116,9.11815765 L15.9812302,9.32120483 L16.5298879,9.17816757 L16.1407254,9.11956528 L16.6991537,9.46498504 L16.8721585,9.5719984 L17.0707333,9.52783313 L18.7640563,9.15121907 L19.1376084,9.06813686 L19.1549872,8.68585181 L19.1827959,8.07413928 L19.1961461,7.78047345 L18.9460261,7.62601368 L18.2868853,7.21896616 L17.3360289,6.63670107 L17.215845,6.56310595 L17.0749181,6.56310595 L16.7442203,6.56310595 L16.6000554,6.58434038 L14.9450633,7.08268828 L14.0204196,7.37900079 L13.813947,7.44518565 L13.7211515,7.64114573 L13.3543776,8.41567727 L13.8062712,8.62966828 L13.7261447,8.13613029 L13.3278042,8.2008014 L13.4079307,8.69433938 L13.9079307,8.69433938 L13.9079307,7.70296944 L13.9079307,7.26790703 L13.4770447,7.20776922 L13.3450917,7.18935283 L12.6157274,7.08755705 L12.8222491,7.16559429 L12.3915904,6.88104144 L12.598805,7.16837565 L12.4259403,6.52546882 L12.1979841,7.08544751 L13.7387351,6.17244372 L13.6309442,6.22016475 L14.3847848,5.98810962 L14.5505825,5.93707203 L14.649143,5.79431512 L15.8540855,4.04905439 L16.4357496,3.20656135 L15.4136847,3.26581614 L13.104813,3.39967427 L10.1823164,3.38438619 L10.0687668,3.39688028 L8.01919215,3.8639848 L8.42711879,4.75384723 C11.2775819,2.65105327 14.6987289,1.5 18.2864745,1.5 C22.4155286,1.5 26.3179729,3.02654368 29.3672834,5.74570503 L29.7000571,5.37252728 L29.262435,5.13068662 L29.0572521,5.50197482 L29.4948742,5.74381549 L29.310418,5.27908341 L28.5129854,5.59559139 L28.4050186,5.63844435 L28.3270012,5.72450525 L27.9917939,6.09427178 L27.826543,6.2765597 L27.8701499,6.51870671 L27.9475632,6.94857933 L27.9744304,7.09777154 L28.0796239,7.20692504 L28.7402679,7.89243871 L28.9754956,8.13652148 L29.289319,8.0083679 L29.9973129,7.71925003 L29.3132086,7.32635034 L29.4319592,8.16631382 L29.9815699,7.59930474 L29.1841374,7.51180855 L29.0459494,7.51587337 L28.4003372,7.62543383 L28.1941469,7.66042433 L28.0742744,7.83179913 L27.448955,8.725782 L27.3228527,8.90606308 L27.3705776,9.12083128 L27.7148039,10.6698944 L27.7848502,10.9851117 L28.1009765,11.0509339 L28.6563985,11.166581 L28.9072495,11.218812 L29.0961476,11.0456882 L29.6440537,10.5435361 L29.0824845,10.6220733 L29.9385407,11.0504242 L30.1169272,11.1012168 L31.5118705,11.2282765 L31.0576209,10.7502115 L31.084678,11.4303993 L31.0920281,11.6151752 L31.2178402,11.7507018 L31.886,12.4704531 L32.1504845,12.7553596 L32.4917947,12.5692651 L33.2899788,12.1340666 L32.6788937,12.0294652 L33.1305968,12.5316173 L33.2829706,12.7010091 L33.5107787,12.6971592 L34.4111785,12.6819424 L34.4027298,12.1820138 L33.9360434,12.3614682 C34.103681,12.797424 34.2552291,13.2467586 34.3912229,13.7098907 L34.8709677,13.5690187 L34.8406287,13.06994 L33.3637626,13.1597187 L31.6707152,13.1587974 L31.6707152,13.1587974 Z\" fill=\"#A0A0A0\" transform=\"translate(8 8)\"/></g></svg>"

/***/ },
/* 360 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 53 53\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fill-rule=\"evenodd\"><path fill=\"#999999\" d=\"M0 0H33V33H0z\" transform=\"translate(10 10)\"/><path fill=\"#EAEAEA\" d=\"M1 1H8V8H1z\" transform=\"translate(10 10)\"/><path fill=\"#D6D6D6\" d=\"M9 1H16V8H9z\" transform=\"translate(10 10)\"/><path fill=\"#FFFFFF\" d=\"M17 1H24V8H17z\" transform=\"translate(10 10)\"/><path fill=\"#F5F5F5\" d=\"M25 1H32V8H25z\" transform=\"translate(10 10)\"/><path fill=\"#FFFFFF\" d=\"M1 9H8V16H1z\" transform=\"translate(10 10)\"/><path fill=\"#EAEAEA\" d=\"M9 9H16V16H9z\" transform=\"translate(10 10)\"/><path fill=\"#D6D6D6\" d=\"M17 9H24V16H17z\" transform=\"translate(10 10)\"/><path fill=\"#EAEAEA\" d=\"M25 9H32V16H25zM1 17H8V24H1z\" transform=\"translate(10 10)\"/><path fill=\"#E0E0E0\" d=\"M9 17H16V24H9z\" transform=\"translate(10 10)\"/><path fill=\"#FFFFFF\" d=\"M17 17H24V24H17z\" transform=\"translate(10 10)\"/><path fill=\"#E0E0E0\" d=\"M25 17H32V24H25z\" transform=\"translate(10 10)\"/><path fill=\"#D6D6D6\" d=\"M1 25H8V32H1z\" transform=\"translate(10 10)\"/><path fill=\"#EAEAEA\" d=\"M9 25H16V32H9zM17 25H24V32H17z\" transform=\"translate(10 10)\"/><path fill=\"#F5F5F5\" d=\"M25 25H32V32H25z\" transform=\"translate(10 10)\"/></g></svg>"

/***/ },
/* 361 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 53 53\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fill-rule=\"evenodd\"><path d=\"M32,0 L33,0 L33,33 L32,33 L32,0 Z M0,32 L32,32 L32,33 L0,33 L0,32 Z\" fill=\"#AAAAAA\" transform=\"translate(10 10)\"/><g transform=\"translate(16 16)\" fill=\"#999999\"><circle cx=\"2\" cy=\"20\" r=\"2\"/><circle cx=\"5\" cy=\"11\" r=\"2\"/><circle cx=\"21\" cy=\"10\" r=\"2\"/><circle cx=\"12\" cy=\"2\" r=\"2\"/><circle cx=\"9\" cy=\"16\" r=\"2\"/><circle cx=\"12\" cy=\"10\" r=\"2\"/></g><g transform=\"translate(17 17)\" fill=\"#ECECEC\"><circle cx=\"1\" cy=\"19\" r=\"1\"/><circle cx=\"4\" cy=\"10\" r=\"1\"/><circle cx=\"20\" cy=\"9\" r=\"1\"/><circle cx=\"11\" cy=\"1\" r=\"1\"/><circle cx=\"8\" cy=\"15\" r=\"1\"/><circle cx=\"11\" cy=\"9\" r=\"1\"/></g></g></svg>"

/***/ },
/* 362 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 53 53\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fill-rule=\"evenodd\"><path fill=\"#999999\" d=\"M0 8H7V17H0zM8 0H15V10H8zM16 0H23V14H16zM24 0H31V7H24z\" transform=\"translate(11 10)\"/><path fill=\"#999999\" d=\"M0 0H7V9H0zM0 16H7V33H0zM8 9H15V21H8z\" transform=\"translate(11 10)\"/><path fill=\"#999999\" d=\"M8 20H15V33H8zM16 13H23V23H16z\" transform=\"translate(11 10)\"/><path fill=\"#999999\" d=\"M16 22H23V33H16zM24 6H31V17H24z\" transform=\"translate(11 10)\"/><path fill=\"#999999\" d=\"M24 16H31V33H24z\" transform=\"translate(11 10)\"/><path fill=\"#D3CFCF\" d=\"M25 7H30V16H25zM17 14H22V22H17zM9 10H14V20H9zM1 9H6V16H1z\" transform=\"translate(11 10)\"/><path fill=\"#ECECEC\" d=\"M25 17H30V32H25zM17 23H22V32H17zM9 21H14V32H9zM1 17H6V32H1z\" transform=\"translate(11 10)\"/><path fill=\"#FFFFFF\" d=\"M25 1H30V6H25zM17 1H22V13H17zM9 1H14V9H9zM1 1H6V8H1z\" transform=\"translate(11 10)\"/></g></svg>"

/***/ },
/* 363 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 53 53\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fill-rule=\"evenodd\"><path fill=\"#EEEEEE\" d=\"M0 1H9V28H0zM10 1H41V7H10z\" transform=\"translate(6 12)\"/><path d=\"M0,0 L41,0 L41,29 L0,29 L0,0 Z M10,1 L40,1 L40,7 L10,7 L10,1 Z M10,8 L40,8 L40,14 L10,14 L10,8 Z M10,15 L40,15 L40,21 L10,21 L10,15 Z M10,22 L40,22 L40,28 L10,28 L10,22 Z M1,1 L9,1 L9,7 L1,7 L1,1 Z M1,8 L9,8 L9,14 L1,14 L1,8 Z M1,15 L9,15 L9,21 L1,21 L1,15 Z M1,22 L9,22 L9,28 L1,28 L1,22 Z\" fill=\"#999999\" transform=\"translate(6 12)\"/></g></svg>"

/***/ },
/* 364 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 53 53\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fill-rule=\"evenodd\"><path d=\"M0.955555556,20.8129857 L9.42181091,8.8558428 L17.5717472,14.8344142 L25.7838201,0.88441423 L34.5810198,12.8415571 L43,4.87012852 L43,30.7540849 L0.955555556,30.7540849 L0.955555556,20.8129857 Z\" fill=\"#EEEEEE\" transform=\"translate(5 11)\"/><path d=\"M9.5494353,9.56007049 L17.7126256,15.5483647 L25.815325,1.74681713 L34.5244138,13.5841997 L42.9961663,5.23410924 L42.3410202,4.50614779 L34.6249454,12.0816792 L25.7401035,0.00541321826 L17.4218699,14.1138624 L9.3115691,8.16436651 L0.72615865,20.5189081 L1.49896249,21.1070632 L9.5494353,9.56007049 Z\" fill=\"#888888\" transform=\"translate(5 11)\"/></g></svg>"

/***/ },
/* 365 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 53 53\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fill-rule=\"evenodd\"><path d=\"M0,0 L41,0 L41,29 L0,29 L0,0 Z M1,1 L40,1 L40,28 L1,28 L1,1 Z\" fill=\"#AAAAAA\" transform=\"translate(6 12)\"/><path d=\"M14.3205566,20 L12.8288574,20 L12.8288574,14.0078125 C12.8288574,13.2926397 12.8457843,12.725588 12.8796387,12.3066406 C12.7823075,12.4082036 12.6627611,12.5203444 12.5209961,12.6430664 C12.3792311,12.7657884 11.9042195,13.1551074 11.0959473,13.8110352 L10.3469238,12.8652344 L13.076416,10.7197266 L14.3205566,10.7197266 L14.3205566,20 Z M23.6516113,20 L17.361084,20 L17.361084,18.8701172 L19.7541504,16.4643555 C20.4608597,15.740719 20.9295236,15.227622 21.1601562,14.9250488 C21.3907889,14.6224757 21.5590001,14.337892 21.6647949,14.0712891 C21.7705897,13.8046862 21.8234863,13.5190445 21.8234863,13.2143555 C21.8234863,12.7954081 21.6975924,12.4653332 21.4458008,12.2241211 C21.1940092,11.982909 20.8459495,11.8623047 20.4016113,11.8623047 C20.0461408,11.8623047 19.7023129,11.9278965 19.3701172,12.059082 C19.0379215,12.1902676 18.6538922,12.4272444 18.2180176,12.7700195 L17.4118652,11.7861328 C17.9281439,11.3502582 18.4296037,11.0413421 18.9162598,10.859375 C19.4029158,10.6774079 19.9213026,10.5864258 20.4714355,10.5864258 C21.3347211,10.5864258 22.0266087,10.8117653 22.5471191,11.2624512 C23.0676296,11.713137 23.3278809,12.3193321 23.3278809,13.0810547 C23.3278809,13.5000021 23.2527677,13.8977846 23.1025391,14.2744141 C22.9523104,14.6510435 22.7216812,15.0393046 22.4106445,15.439209 C22.0996078,15.8391133 21.582279,16.3797166 20.8586426,17.0610352 L19.2463379,18.6225586 L19.2463379,18.6860352 L23.6516113,18.6860352 L23.6516113,20 Z M30.7229004,12.8525391 C30.7229004,13.4407581 30.5515154,13.9305807 30.2087402,14.3220215 C29.8659651,14.7134622 29.383548,14.9768873 28.7614746,15.1123047 L28.7614746,15.1630859 C29.50627,15.2561854 30.0648582,15.4878725 30.4372559,15.8581543 C30.8096536,16.2284361 30.9958496,16.7203745 30.9958496,17.3339844 C30.9958496,18.2268925 30.6805858,18.9156063 30.0500488,19.4001465 C29.4195118,19.8846867 28.5223854,20.1269531 27.3586426,20.1269531 C26.3303171,20.1269531 25.4628128,19.9597998 24.7561035,19.6254883 L24.7561035,18.2988281 C25.1496602,18.4934906 25.5664854,18.6437169 26.0065918,18.7495117 C26.4466982,18.8553065 26.869871,18.9082031 27.276123,18.9082031 C27.9955277,18.9082031 28.5329572,18.7749037 28.8884277,18.5083008 C29.2438983,18.2416979 29.4216309,17.8291044 29.4216309,17.2705078 C29.4216309,16.7753881 29.2248555,16.4114595 28.8312988,16.1787109 C28.4377422,15.9459624 27.8199098,15.8295898 26.9777832,15.8295898 L26.1716309,15.8295898 L26.1716309,14.6171875 L26.9904785,14.6171875 C28.4716057,14.6171875 29.2121582,14.1051483 29.2121582,13.0810547 C29.2121582,12.6832662 29.0830905,12.3764659 28.8249512,12.1606445 C28.5668119,11.9448231 28.1859563,11.8369141 27.682373,11.8369141 C27.3311343,11.8369141 26.992596,11.8866369 26.666748,11.986084 C26.3409001,12.0855311 25.9558128,12.2791327 25.5114746,12.5668945 L24.7814941,11.5258789 C25.6320843,10.8995737 26.6201929,10.5864258 27.7458496,10.5864258 C28.6810756,10.5864258 29.4110488,10.7874329 29.935791,11.1894531 C30.4605332,11.5914734 30.7229004,12.1458298 30.7229004,12.8525391 L30.7229004,12.8525391 Z\" fill=\"#777777\" transform=\"translate(6 12)\"/></g></svg>"

/***/ },
/* 366 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 53 53\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fill-rule=\"evenodd\"><path fill=\"#999999\" d=\"M0 0H33V33H0z\" transform=\"translate(10 10)\"/><path fill=\"#ECECEC\" d=\"M1 1H17V20H1zM18 1H32V15H18zM18 16H26V27H18zM27 16H32V27H27zM18 28H25V32H18zM1 21H17V32H1zM26 28H32V32H26z\" transform=\"translate(10 10)\"/></g></svg>"

/***/ },
/* 367 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(368);
	var React = __webpack_require__(5);
	// import { ... } from '../../config/constants';
	var index_1 = __webpack_require__(192);
	var ManualFallback = (function (_super) {
	    __extends(ManualFallback, _super);
	    function ManualFallback() {
	        _super.call(this);
	        // this.state = {};
	    }
	    ManualFallback.prototype.onResolutionClick = function (resolution) {
	        var clicker = this.props.clicker;
	        clicker.changeSplits(resolution.adjustment.splits, index_1.VisStrategy.KeepAlways);
	    };
	    ManualFallback.prototype.render = function () {
	        var _this = this;
	        var essence = this.props.essence;
	        var visResolve = essence.visResolve;
	        if (!visResolve.isManual())
	            return null;
	        var resolutionItems = visResolve.resolutions.map(function (resolution, i) {
	            return React.createElement("li", {key: i, onClick: _this.onResolutionClick.bind(_this, resolution)}, resolution.description);
	        });
	        return React.createElement("div", {className: "manual-fallback"}, React.createElement("div", {className: "message"}, visResolve.message), React.createElement("ul", null, resolutionItems));
	    };
	    return ManualFallback;
	}(React.Component));
	exports.ManualFallback = ManualFallback;


/***/ },
/* 368 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(369);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./manual-fallback.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./manual-fallback.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 369 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".manual-fallback{text-align:center;padding:100px 30px}.manual-fallback .message{font-size:20px;color:#666}.manual-fallback ul{margin-top:24px}.manual-fallback li{font-size:14px;cursor:pointer;color:#1ea3e6;margin-bottom:10px}.manual-fallback li:hover{text-decoration:underline}\n", ""]);

	// exports


/***/ },
/* 370 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(371);
	var React = __webpack_require__(5);
	var svg_icon_1 = __webpack_require__(174);
	var DropIndicator = (function (_super) {
	    __extends(DropIndicator, _super);
	    function DropIndicator() {
	        _super.call(this);
	        // this.state = {};
	    }
	    DropIndicator.prototype.render = function () {
	        return React.createElement("div", {className: "drop-indicator"}, React.createElement("div", {className: "white-out"}), React.createElement("div", {className: "action"}, React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(373)})));
	    };
	    return DropIndicator;
	}(React.Component));
	exports.DropIndicator = DropIndicator;


/***/ },
/* 371 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(372);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./drop-indicator.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./drop-indicator.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 372 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".drop-indicator .white-out{position:absolute;top:0;bottom:0;left:0;right:0;background:#fff;opacity:.65}.drop-indicator .action{position:absolute;top:16px;bottom:16px;left:16px;right:16px;border-radius:6px;border:1px dashed #666}.drop-indicator .action svg{position:absolute;width:30px;top:50%;left:50%;margin-left:-15px;margin-top:-15px}.drop-indicator .action path{fill:#666}\n", ""]);

	// exports


/***/ },
/* 373 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 43 43\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M8.13388348,38.1338835 L15.8513979,30.4163691 L12.5836309,27.1486021 L4.86611652,34.8661165 L0,30 L0,43 L13,43 L8.13388348,38.1338835 L8.13388348,38.1338835 Z M38.1338835,34.8661165 L30.4163691,27.1486021 L27.1486021,30.4163691 L34.8661165,38.1338835 L30,43 L43,43 L43,30 L38.1338835,34.8661165 L38.1338835,34.8661165 L38.1338835,34.8661165 Z M38.1338835,8.13388348 L30.4163691,15.8513979 L27.1486021,12.5836309 L34.8661165,4.86611652 L30,0 L43,0 L43,13 L38.1338835,8.13388348 L38.1338835,8.13388348 Z M8.13388348,4.86611652 L15.8513979,12.5836309 L12.5836309,15.8513979 L4.86611652,8.13388348 L0,13 L0,0 L13,0 L8.13388348,4.86611652 L8.13388348,4.86611652 Z\" fill=\"#888888\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 374 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(375);
	var React = __webpack_require__(5);
	var plywood_1 = __webpack_require__(188);
	var constants_1 = __webpack_require__(222);
	var svg_icon_1 = __webpack_require__(174);
	var index_1 = __webpack_require__(192);
	var drag_manager_1 = __webpack_require__(246);
	var pinboard_measure_tile_1 = __webpack_require__(377);
	var dimension_tile_1 = __webpack_require__(380);
	var PinboardPanel = (function (_super) {
	    __extends(PinboardPanel, _super);
	    function PinboardPanel() {
	        _super.call(this);
	        this.state = {
	            dragOver: false
	        };
	    }
	    PinboardPanel.prototype.canDrop = function (e) {
	        var dimension = drag_manager_1.DragManager.getDragDimension();
	        if (dimension) {
	            var pinnedDimensions = this.props.essence.pinnedDimensions;
	            return !pinnedDimensions.has(dimension.name);
	        }
	        return false;
	    };
	    PinboardPanel.prototype.dragEnter = function (e) {
	        if (!this.canDrop(e))
	            return;
	        this.setState({ dragOver: true });
	    };
	    PinboardPanel.prototype.dragOver = function (e) {
	        if (!this.canDrop(e))
	            return;
	        e.dataTransfer.dropEffect = 'move';
	        e.preventDefault();
	    };
	    PinboardPanel.prototype.dragLeave = function (e) {
	        if (!this.canDrop(e))
	            return;
	        this.setState({ dragOver: false });
	    };
	    PinboardPanel.prototype.drop = function (e) {
	        if (!this.canDrop(e))
	            return;
	        e.preventDefault();
	        var dimension = drag_manager_1.DragManager.getDragDimension();
	        if (dimension) {
	            this.props.clicker.pin(dimension);
	        }
	        this.setState({ dragOver: false });
	    };
	    PinboardPanel.prototype.getColorsSortOn = function () {
	        var essence = this.props.essence;
	        var dataSource = essence.dataSource, splits = essence.splits, colors = essence.colors;
	        if (colors) {
	            var dimension = dataSource.getDimension(colors.dimension);
	            if (dimension) {
	                var split = splits.findSplitForDimension(dimension);
	                if (split) {
	                    return index_1.SortOn.fromSortAction(split.sortAction, dataSource, dimension);
	                }
	            }
	        }
	        return null;
	    };
	    PinboardPanel.prototype.onLegendSortOnSelect = function (sortOn) {
	        var _a = this.props, clicker = _a.clicker, essence = _a.essence;
	        var dataSource = essence.dataSource, splits = essence.splits, colors = essence.colors;
	        if (colors) {
	            var dimension = dataSource.getDimension(colors.dimension);
	            if (dimension) {
	                var split = splits.findSplitForDimension(dimension);
	                if (split) {
	                    var sortAction = split.sortAction;
	                    var direction = sortAction ? sortAction.direction : plywood_1.SortAction.DESCENDING;
	                    var newSplit = split.changeSortAction(new plywood_1.SortAction({
	                        expression: sortOn.getExpression(),
	                        direction: direction
	                    }));
	                    var newColors = index_1.Colors.fromLimit(colors.dimension, 5);
	                    clicker.changeSplits(splits.replace(split, newSplit), index_1.VisStrategy.UnfairGame, newColors);
	                }
	            }
	        }
	    };
	    PinboardPanel.prototype.onPinboardSortOnSelect = function (sortOn) {
	        if (!sortOn.measure)
	            return;
	        var clicker = this.props.clicker;
	        clicker.changePinnedSortMeasure(sortOn.measure);
	    };
	    PinboardPanel.prototype.onRemoveLegend = function () {
	        var _a = this.props, clicker = _a.clicker, essence = _a.essence;
	        var dataSource = essence.dataSource, splits = essence.splits, colors = essence.colors;
	        if (colors) {
	            var dimension = dataSource.getDimension(colors.dimension);
	            if (dimension) {
	                var split = splits.findSplitForDimension(dimension);
	                if (split) {
	                    clicker.changeSplits(splits.removeSplit(split), index_1.VisStrategy.UnfairGame, null);
	                }
	            }
	        }
	    };
	    PinboardPanel.prototype.render = function () {
	        var _a = this.props, clicker = _a.clicker, essence = _a.essence, getUrlPrefix = _a.getUrlPrefix;
	        var dragOver = this.state.dragOver;
	        var dataSource = essence.dataSource, pinnedDimensions = essence.pinnedDimensions, colors = essence.colors;
	        var legendMeasureSelector = null;
	        var legendDimensionTile = null;
	        var colorDimension = colors ? colors.dimension : null;
	        if (colorDimension) {
	            var dimension = dataSource.getDimension(colorDimension);
	            if (dimension) {
	                var colorsSortOn = this.getColorsSortOn();
	                legendMeasureSelector = React.createElement(pinboard_measure_tile_1.PinboardMeasureTile, {essence: essence, title: "Legend", dimension: dimension, sortOn: colorsSortOn, onSelect: this.onLegendSortOnSelect.bind(this)});
	                legendDimensionTile = React.createElement(dimension_tile_1.DimensionTile, {clicker: clicker, essence: essence, dimension: dimension, sortOn: colorsSortOn, colors: colors, onClose: this.onRemoveLegend.bind(this), getUrlPrefix: getUrlPrefix});
	            }
	        }
	        var pinnedSortSortOn = index_1.SortOn.fromMeasure(essence.getPinnedSortMeasure());
	        var dimensionTiles = [];
	        pinnedDimensions.forEach(function (dimensionName) {
	            var dimension = dataSource.getDimension(dimensionName);
	            if (!dimension)
	                return null;
	            dimensionTiles.push(React.createElement(dimension_tile_1.DimensionTile, {key: dimension.name, clicker: clicker, essence: essence, dimension: dimension, sortOn: pinnedSortSortOn, onClose: clicker.unpin ? clicker.unpin.bind(clicker, dimension) : null, getUrlPrefix: getUrlPrefix}));
	        });
	        var placeholder = null;
	        if (!dragOver && !dimensionTiles.length) {
	            placeholder = React.createElement("div", {className: "placeholder"}, React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(309)}), React.createElement("div", {className: "placeholder-message"}, constants_1.STRINGS.pinboardPlaceholder));
	        }
	        return React.createElement("div", {className: "pinboard-panel", onDragEnter: this.dragEnter.bind(this)}, legendMeasureSelector, legendDimensionTile, React.createElement(pinboard_measure_tile_1.PinboardMeasureTile, {essence: essence, title: constants_1.STRINGS.pinboard, sortOn: pinnedSortSortOn, onSelect: this.onPinboardSortOnSelect.bind(this)}), dimensionTiles, dragOver ? React.createElement("div", {className: "drop-indicator-tile"}) : null, placeholder, dragOver ? React.createElement("div", {className: "drag-mask", onDragOver: this.dragOver.bind(this), onDragLeave: this.dragLeave.bind(this), onDrop: this.drop.bind(this)}) : null);
	    };
	    return PinboardPanel;
	}(React.Component));
	exports.PinboardPanel = PinboardPanel;


/***/ },
/* 375 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(376);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./pinboard-panel.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./pinboard-panel.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 376 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".pinboard-panel .placeholder{background:#fff;box-shadow:0 1px 1px 0 rgba(0,0,0,0.1)}.pinboard-panel{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;padding:10px 10px 0 10px}.pinboard-panel .dimension-tile,.pinboard-panel .drop-indicator-tile{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;width:220px;margin-bottom:1px}.pinboard-panel .dimension-tile.has-colors{margin-bottom:5px}.pinboard-panel .drop-indicator-tile{pointer-events:none}.pinboard-panel .drop-indicator-tile:after{position:absolute;top:4px;bottom:4px;left:0;right:0;content:'';border:1px dashed #666;border-radius:2px}.pinboard-panel .placeholder{border-radius:0 0 2px 2px;max-height:280px;min-height:150px;-webkit-box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1;width:220px;pointer-events:none}.pinboard-panel .placeholder:after{position:absolute;top:10px;bottom:10px;left:10px;right:10px;content:'';border:1px dashed #bababa;border-radius:5px}.pinboard-panel .placeholder svg{position:absolute;width:40px;left:50%;top:50%;margin-left:-20px;margin-top:-63px}.pinboard-panel .placeholder svg path{fill:#d4d4d4}.pinboard-panel .placeholder .placeholder-message{position:absolute;top:50%;width:100%;height:16px;margin-top:-15px;padding-left:30px;padding-right:30px;font-style:italic;line-height:20px;color:#a6a6a6;text-align:center}.pinboard-panel .drag-mask{position:absolute;top:0;bottom:0;left:0;right:0}\n", ""]);

	// exports


/***/ },
/* 377 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(378);
	var React = __webpack_require__(5);
	var index_1 = __webpack_require__(192);
	// import { ... } from '../../config/constants';
	var dropdown_1 = __webpack_require__(269);
	var PinboardMeasureTile = (function (_super) {
	    __extends(PinboardMeasureTile, _super);
	    function PinboardMeasureTile() {
	        _super.call(this);
	        //this.state = {
	        //};
	    }
	    PinboardMeasureTile.prototype.render = function () {
	        var _a = this.props, essence = _a.essence, title = _a.title, dimension = _a.dimension, sortOn = _a.sortOn, onSelect = _a.onSelect;
	        var sortOns = (dimension ? [index_1.SortOn.fromDimension(dimension)] : []).concat(essence.dataSource.measures.toArray().map(index_1.SortOn.fromMeasure));
	        var dropdown = React.createElement(dropdown_1.Dropdown, {
	            items: sortOns,
	            selectedItem: sortOn,
	            equal: index_1.SortOn.equal,
	            renderItem: index_1.SortOn.getTitle,
	            keyItem: index_1.SortOn.getName,
	            onSelect: onSelect
	        });
	        return React.createElement("div", {className: "pinboard-measure-tile"}, React.createElement("div", {className: "title"}, title), dropdown);
	    };
	    return PinboardMeasureTile;
	}(React.Component));
	exports.PinboardMeasureTile = PinboardMeasureTile;


/***/ },
/* 378 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(379);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./pinboard-measure-tile.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./pinboard-measure-tile.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 379 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".pinboard-measure-tile{background:#fff;box-shadow:0 1px 1px 0 rgba(0,0,0,0.1)}.pinboard-measure-tile .dropdown .selected-item:hover{background:#fff;border:1px solid #d1d1d1;border-radius:2px;cursor:pointer;box-shadow:0 1px 1px 0 rgba(0,0,0,0.1)}.pinboard-measure-tile .dropdown .selected-item:hover{border-color:#bababa}.pinboard-measure-tile{height:36px;margin-bottom:1px}.pinboard-measure-tile .title{margin-left:14px;margin-top:12px;font-size:12px;color:#999;text-transform:uppercase}.pinboard-measure-tile .dropdown{display:inline-block;position:absolute;top:5px;right:5px;font-size:12px;border-radius:2px}.pinboard-measure-tile .dropdown .selected-item{white-space:nowrap;overflow-x:hidden;text-overflow:ellipsis;line-height:19px;padding:2px 22px 2px 7px;border:1px solid transparent;color:#999;max-width:104px;height:auto;box-shadow:none}.pinboard-measure-tile .dropdown .selected-item .caret-icon{position:absolute;right:7px;bottom:6px}.pinboard-measure-tile .dropdown .selected-item .caret-icon path{fill:#bababa}.pinboard-measure-tile .dropdown .selected-item:hover{color:#000}.pinboard-measure-tile .dropdown .selected-item:hover .caret-icon path{fill:#999}.pinboard-measure-tile .dropdown .dropdown-menu{margin-top:1px;right:0;width:190px;max-height:600px;overflow-y:auto}\n", ""]);

	// exports


/***/ },
/* 380 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(381);
	var React = __webpack_require__(5);
	var plywood_1 = __webpack_require__(188);
	var constants_1 = __webpack_require__(222);
	var formatter_1 = __webpack_require__(323);
	var dom_1 = __webpack_require__(240);
	var index_1 = __webpack_require__(192);
	var general_1 = __webpack_require__(197);
	var drag_manager_1 = __webpack_require__(246);
	var svg_icon_1 = __webpack_require__(174);
	var checkbox_1 = __webpack_require__(315);
	var loader_1 = __webpack_require__(171);
	var query_error_1 = __webpack_require__(335);
	var highlight_string_1 = __webpack_require__(284);
	var searchable_tile_1 = __webpack_require__(287);
	var TOP_N = 100;
	var SEARCH_BOX_HEIGHT = 26;
	var SEARCH_BOX_GAP = 3;
	var FOLDER_BOX_HEIGHT = 30;
	var DimensionTile = (function (_super) {
	    __extends(DimensionTile, _super);
	    function DimensionTile() {
	        var _this = this;
	        _super.call(this);
	        this.state = {
	            loading: false,
	            dataset: null,
	            error: null,
	            fetchQueued: false,
	            unfolded: true,
	            foldability: false,
	            showSearch: false,
	            searchText: ''
	        };
	        this.collectTriggerSearch = general_1.collect(constants_1.SEARCH_WAIT, function () {
	            if (!_this.mounted)
	                return;
	            var _a = _this.props, essence = _a.essence, dimension = _a.dimension, sortOn = _a.sortOn;
	            var unfolded = _this.state.unfolded;
	            _this.fetchData(essence, dimension, sortOn, unfolded);
	        });
	    }
	    DimensionTile.prototype.fetchData = function (essence, dimension, sortOn, unfolded) {
	        var _this = this;
	        var searchText = this.state.searchText;
	        var dataSource = essence.dataSource, colors = essence.colors;
	        var filter = essence.getEffectiveFilter();
	        if (unfolded) {
	            filter = filter.remove(dimension.expression);
	        }
	        var filterExpression = filter.toExpression();
	        if (!unfolded && colors && colors.dimension === dimension.name && colors.values) {
	            filterExpression = filterExpression.and(dimension.expression.in(colors.toSet()));
	        }
	        if (searchText) {
	            filterExpression = filterExpression.and(dimension.expression.contains(plywood_1.r(searchText), 'ignoreCase'));
	        }
	        var query = plywood_1.$('main')
	            .filter(filterExpression)
	            .split(dimension.expression, constants_1.SEGMENT);
	        if (sortOn.measure) {
	            query = query.performAction(sortOn.measure.toApplyAction());
	        }
	        query = query.sort(sortOn.getExpression(), plywood_1.SortAction.DESCENDING).limit(TOP_N + 1);
	        this.setState({
	            loading: true,
	            fetchQueued: false
	        });
	        dataSource.executor(query)
	            .then(function (dataset) {
	            if (!_this.mounted)
	                return;
	            _this.setState({
	                loading: false,
	                dataset: dataset,
	                error: null
	            });
	        }, function (error) {
	            if (!_this.mounted)
	                return;
	            _this.setState({
	                loading: false,
	                dataset: null,
	                error: error
	            });
	        });
	    };
	    DimensionTile.prototype.updateFoldability = function (essence, dimension, colors) {
	        var unfolded = this.state.unfolded;
	        var foldability = true;
	        if (essence.filter.filteredOn(dimension.expression)) {
	            if (colors) {
	                foldability = false;
	                unfolded = false;
	            }
	        }
	        else {
	            if (!colors) {
	                foldability = false;
	                unfolded = true;
	            }
	        }
	        this.setState({ foldability: foldability, unfolded: unfolded });
	        return unfolded;
	    };
	    DimensionTile.prototype.componentWillMount = function () {
	        var _a = this.props, essence = _a.essence, dimension = _a.dimension, colors = _a.colors, sortOn = _a.sortOn;
	        var unfolded = this.updateFoldability(essence, dimension, colors);
	        this.fetchData(essence, dimension, sortOn, unfolded);
	    };
	    DimensionTile.prototype.componentWillReceiveProps = function (nextProps) {
	        var _a = this.props, essence = _a.essence, dimension = _a.dimension, sortOn = _a.sortOn;
	        var nextEssence = nextProps.essence;
	        var nextDimension = nextProps.dimension;
	        var nextColors = nextProps.colors;
	        var nextSortOn = nextProps.sortOn;
	        var unfolded = this.updateFoldability(nextEssence, nextDimension, nextColors);
	        if (essence.differentDataSource(nextEssence) ||
	            essence.differentEffectiveFilter(nextEssence, null, unfolded ? dimension : null) ||
	            essence.differentColors(nextEssence) || !dimension.equals(nextDimension) || !sortOn.equals(nextSortOn)) {
	            this.fetchData(nextEssence, nextDimension, nextSortOn, unfolded);
	        }
	    };
	    DimensionTile.prototype.componentDidMount = function () {
	        this.mounted = true;
	    };
	    DimensionTile.prototype.componentWillUnmount = function () {
	        this.mounted = false;
	    };
	    DimensionTile.prototype.onRowClick = function (value, e) {
	        var _a = this.props, clicker = _a.clicker, essence = _a.essence, dimension = _a.dimension, colors = _a.colors;
	        var dataset = this.state.dataset;
	        var filter = essence.filter;
	        if (colors && colors.dimension === dimension.name) {
	            if (colors.limit) {
	                if (!dataset)
	                    return;
	                var values = dataset.data.slice(0, colors.limit).map(function (d) { return d[constants_1.SEGMENT]; });
	                colors = index_1.Colors.fromValues(colors.dimension, values);
	            }
	            colors = colors.toggle(value);
	            if (filter.filteredOn(dimension.expression)) {
	                filter = filter.toggleValue(dimension.expression, value);
	                clicker.changeFilter(filter, colors);
	            }
	            else {
	                clicker.changeColors(colors);
	            }
	        }
	        else {
	            if (e.altKey || e.ctrlKey || e.metaKey) {
	                if (filter.filteredOnValue(dimension.expression, value) && filter.getLiteralSet(dimension.expression).size() === 1) {
	                    filter = filter.remove(dimension.expression);
	                }
	                else {
	                    filter = filter.remove(dimension.expression).addValue(dimension.expression, value);
	                }
	            }
	            else {
	                filter = filter.toggleValue(dimension.expression, value);
	            }
	            // If no longer filtered switch unfolded to true for later
	            var unfolded = this.state.unfolded;
	            if (!unfolded && !filter.filteredOn(dimension.expression)) {
	                this.setState({ unfolded: true });
	            }
	            clicker.changeFilter(filter);
	        }
	    };
	    DimensionTile.prototype.toggleFold = function () {
	        var _a = this.props, essence = _a.essence, dimension = _a.dimension, sortOn = _a.sortOn;
	        var unfolded = this.state.unfolded;
	        unfolded = !unfolded;
	        this.setState({ unfolded: unfolded });
	        this.fetchData(essence, dimension, sortOn, unfolded);
	    };
	    DimensionTile.prototype.onDragStart = function (e) {
	        var _a = this.props, essence = _a.essence, dimension = _a.dimension, getUrlPrefix = _a.getUrlPrefix;
	        var newUrl = essence.changeSplit(index_1.SplitCombine.fromExpression(dimension.expression), index_1.VisStrategy.FairGame).getURL(getUrlPrefix());
	        var dataTransfer = e.dataTransfer;
	        dataTransfer.effectAllowed = 'all';
	        dataTransfer.setData("text/url-list", newUrl);
	        dataTransfer.setData("text/plain", newUrl);
	        drag_manager_1.DragManager.setDragDimension(dimension, 'dimension-tile');
	        dom_1.setDragGhost(dataTransfer, dimension.title);
	    };
	    DimensionTile.prototype.toggleSearch = function () {
	        var showSearch = this.state.showSearch;
	        this.setState({ showSearch: !showSearch });
	        this.onSearchChange('');
	    };
	    DimensionTile.prototype.onSearchChange = function (text) {
	        var _a = this.state, searchText = _a.searchText, dataset = _a.dataset, fetchQueued = _a.fetchQueued, loading = _a.loading;
	        var newSearchText = text.substr(0, constants_1.MAX_SEARCH_LENGTH);
	        if (searchText === newSearchText)
	            return; // nothing to do;
	        // If the user is just typing in more and there are already < TOP_N results then there is nothing to do
	        if (newSearchText.indexOf(searchText) !== -1 && !fetchQueued && !loading && dataset && dataset.data.length < TOP_N) {
	            this.setState({
	                searchText: newSearchText
	            });
	            return;
	        }
	        this.setState({
	            searchText: newSearchText,
	            fetchQueued: true
	        });
	        this.collectTriggerSearch();
	    };
	    DimensionTile.prototype.render = function () {
	        var _this = this;
	        var _a = this.props, clicker = _a.clicker, essence = _a.essence, dimension = _a.dimension, sortOn = _a.sortOn, colors = _a.colors, onClose = _a.onClose;
	        var _b = this.state, loading = _b.loading, dataset = _b.dataset, error = _b.error, showSearch = _b.showSearch, unfolded = _b.unfolded, foldability = _b.foldability, fetchQueued = _b.fetchQueued, searchText = _b.searchText;
	        var measure = sortOn.measure;
	        var measureName = measure ? measure.name : null;
	        var filterSet = essence.filter.getLiteralSet(dimension.expression);
	        var maxHeight = constants_1.PIN_TITLE_HEIGHT;
	        var rows = [];
	        var folder = null;
	        var highlightControls = null;
	        var hasMore = false;
	        if (dataset) {
	            hasMore = dataset.data.length > TOP_N;
	            var rowData = dataset.data.slice(0, TOP_N);
	            if (!unfolded) {
	                if (filterSet) {
	                    rowData = rowData.filter(function (d) { return filterSet.contains(d[constants_1.SEGMENT]); });
	                }
	                if (colors) {
	                    if (colors.values) {
	                        var colorsSet = colors.toSet();
	                        rowData = rowData.filter(function (d) { return colorsSet.contains(d[constants_1.SEGMENT]); });
	                    }
	                    else {
	                        rowData = rowData.slice(0, colors.limit);
	                    }
	                }
	            }
	            if (searchText) {
	                var searchTextLower = searchText.toLowerCase();
	                rowData = rowData.filter(function (d) {
	                    return String(d[constants_1.SEGMENT]).toLowerCase().indexOf(searchTextLower) !== -1;
	                });
	            }
	            var colorValues = null;
	            if (colors)
	                colorValues = colors.getColors(rowData.map(function (d) { return d[constants_1.SEGMENT]; }));
	            var formatter = measure ? formatter_1.formatterFromData(rowData.map(function (d) { return d[measureName]; }), measure.format) : null;
	            rows = rowData.map(function (d, i) {
	                var segmentValue = d[constants_1.SEGMENT];
	                var segmentValueStr = String(segmentValue);
	                var className = 'row';
	                var checkbox = null;
	                if (filterSet || colors) {
	                    var selected;
	                    if (colors) {
	                        selected = false;
	                        className += ' color';
	                    }
	                    else {
	                        selected = essence.filter.filteredOnValue(dimension.expression, segmentValue);
	                        className += ' ' + (selected ? 'selected' : 'not-selected');
	                    }
	                    checkbox = React.createElement(checkbox_1.Checkbox, {selected: selected, color: colorValues ? colorValues[i] : null});
	                }
	                var measureValueElement = null;
	                if (measure) {
	                    measureValueElement = React.createElement("div", {className: "measure-value"}, formatter(d[measureName]));
	                }
	                var row = React.createElement("div", {className: className, key: segmentValueStr, onClick: _this.onRowClick.bind(_this, segmentValue)}, React.createElement("div", {className: "segment-value", title: segmentValueStr}, checkbox, React.createElement(highlight_string_1.HighlightString, {className: "label", text: segmentValueStr, highlightText: searchText})), measureValueElement, selected ? highlightControls : null);
	                if (selected && highlightControls)
	                    highlightControls = null; // place only once
	                return row;
	            });
	            maxHeight += Math.max(2, rows.length) * constants_1.PIN_ITEM_HEIGHT;
	            if (foldability) {
	                folder = React.createElement("div", {className: dom_1.classNames('folder', unfolded ? 'folded' : 'unfolded'), onClick: this.toggleFold.bind(this)}, React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(383)}), unfolded ? 'Show selection' : 'Show all');
	                maxHeight += FOLDER_BOX_HEIGHT;
	            }
	        }
	        maxHeight += constants_1.PIN_PADDING_BOTTOM;
	        var message = null;
	        if (!loading && dataset && !fetchQueued && searchText && !rows.length) {
	            message = React.createElement("div", {className: "message"}, "No results for \"" + searchText + "\"");
	        }
	        var className = dom_1.classNames('dimension-tile', (folder ? 'has-folder' : 'no-folder'), (colors ? 'has-colors' : 'no-colors'));
	        var style = {
	            maxHeight: maxHeight
	        };
	        var icons = [
	            {
	                name: 'search',
	                ref: 'search',
	                onClick: this.toggleSearch.bind(this),
	                svg: __webpack_require__(304),
	                active: showSearch
	            },
	            {
	                name: 'close',
	                onClick: onClose,
	                svg: __webpack_require__(384)
	            }
	        ];
	        return React.createElement(searchable_tile_1.SearchableTile, {style: style, title: dimension.title, toggleChangeFn: this.toggleSearch.bind(this), onDragStart: this.onDragStart.bind(this), onSearchChange: this.onSearchChange.bind(this), searchText: searchText, showSearch: showSearch, icons: icons, className: className}, React.createElement("div", {className: "rows"}, rows, message), folder, error ? React.createElement(query_error_1.QueryError, {error: error}) : null, loading ? React.createElement(loader_1.Loader, null) : null);
	    };
	    return DimensionTile;
	}(React.Component));
	exports.DimensionTile = DimensionTile;


/***/ },
/* 381 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(382);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./dimension-tile.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./dimension-tile.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 382 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".dimension-tile{min-height:94px;overflow-y:hidden}.dimension-tile.has-folder .rows{bottom:32px}.dimension-tile .folder{position:absolute;bottom:0;left:0;right:0;height:32px;cursor:pointer;color:#1ea3e6;padding-left:12px;padding-top:9px;z-index:2;border-top:1px solid #e6e6e6}.dimension-tile .folder svg{width:11px;margin-right:6px;margin-top:2px}.dimension-tile .folder svg path{fill:#1ea3e6}.dimension-tile .folder.folded svg{margin-top:1px;-webkit-transform:rotate(180deg);-ms-transform:rotate(180deg);transform:rotate(180deg)}.dimension-tile .folder:hover{background:#e4f3fc}.dimension-tile .row{height:25px;cursor:pointer}.dimension-tile .row:hover{background:#e4f3fc}.dimension-tile .row:last-child{margin-bottom:12px}.dimension-tile .row.not-selected{color:#a6a6a6}.dimension-tile .row .highlight-controls{position:absolute;top:-29px;right:1px;z-index:4}.dimension-tile .row:nth-child(1) .highlight-controls,.dimension-tile .row:nth-child(2) .highlight-controls{top:auto;bottom:-34px}.dimension-tile .segment-value{position:absolute;top:0;bottom:0;left:0;right:80px;left:14px;overflow:hidden;white-space:nowrap}.dimension-tile .segment-value .checkbox{margin-top:1px}.dimension-tile .segment-value .label{display:inline-block;vertical-align:top;padding-top:6px}.dimension-tile .measure-value{position:absolute;top:0;bottom:0;right:0;width:80px;text-align:right;padding-top:6px;padding-right:14px;white-space:nowrap}.dimension-tile .loader,.dimension-tile .query-error{position:absolute;top:0;bottom:0;left:0;right:0}\n", ""]);

	// exports


/***/ },
/* 383 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 10 8\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M5.00000013,3.79318225 L1.92954627,0.341495392 L0.247423305,1.81335299 L5,7.24486921 L9.75257669,1.81335299 L8.07045373,0.341495392 L5.00000013,3.79318225 Z\" fill=\"#B6B6B6\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 384 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10.5938589,9.30035993 L13.9563678,12.6622606 L14.6026378,13.3084137 L13.3100979,14.6007199 L12.6638279,13.9545668 L9.30131892,10.5926661 L5.93880997,13.9545668 L5.29253998,14.6007199 L4,13.3084137 L4.64626999,12.6622606 L8.00877894,9.30035993 L4.64626999,5.93845925 L4,5.29230617 L5.29253998,4 L5.93880997,4.64615308 L9.30131892,8.00805376 L12.6638279,4.64615308 L13.3100979,4 L14.6026378,5.29230617 L13.9563678,5.93845925 L10.5938589,9.30035993 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 385 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var immutable_1 = __webpack_require__(178);
	var totals_1 = __webpack_require__(386);
	var table_1 = __webpack_require__(389);
	var time_series_1 = __webpack_require__(408);
	var bar_chart_1 = __webpack_require__(432);
	var geo_1 = __webpack_require__(438);
	exports.visualizations = immutable_1.List([
	    totals_1.Totals,
	    table_1.Table,
	    time_series_1.TimeSeries,
	    bar_chart_1.BarChart,
	    geo_1.Geo
	]);


/***/ },
/* 386 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(387);
	var React = __webpack_require__(5);
	var plywood_1 = __webpack_require__(188);
	var index_1 = __webpack_require__(192);
	var loader_1 = __webpack_require__(171);
	var query_error_1 = __webpack_require__(335);
	var PADDING_H = 60;
	var TOTAL_WIDTH = 176;
	var Totals = (function (_super) {
	    __extends(Totals, _super);
	    function Totals() {
	        _super.call(this);
	        this.state = {
	            datasetLoad: {}
	        };
	    }
	    Totals.handleCircumstance = function (dataSource, splits, colors, current) {
	        if (!splits.length())
	            return index_1.Resolve.ready(10);
	        return index_1.Resolve.automatic(3, { splits: index_1.Splits.EMPTY });
	    };
	    Totals.prototype.fetchData = function (essence) {
	        var _this = this;
	        var registerDownloadableDataset = this.props.registerDownloadableDataset;
	        var dataSource = essence.dataSource;
	        var measures = essence.getEffectiveMeasures();
	        var $main = plywood_1.$('main');
	        var query = plywood_1.ply()
	            .apply('main', $main.filter(essence.getEffectiveFilter(Totals.id).toExpression()));
	        measures.forEach(function (measure) {
	            query = query.performAction(measure.toApplyAction());
	        });
	        this.precalculate(this.props, { loading: true });
	        dataSource.executor(query)
	            .then(function (dataset) {
	            if (!_this.mounted)
	                return;
	            _this.precalculate(_this.props, {
	                loading: false,
	                dataset: dataset,
	                error: null
	            });
	        }, function (error) {
	            if (!_this.mounted)
	                return;
	            _this.precalculate(_this.props, {
	                loading: false,
	                dataset: null,
	                error: error
	            });
	        });
	    };
	    Totals.prototype.componentWillMount = function () {
	        this.precalculate(this.props);
	    };
	    Totals.prototype.componentDidMount = function () {
	        this.mounted = true;
	        var essence = this.props.essence;
	        this.fetchData(essence);
	    };
	    Totals.prototype.componentWillReceiveProps = function (nextProps) {
	        this.precalculate(nextProps);
	        var essence = this.props.essence;
	        var nextEssence = nextProps.essence;
	        if (nextEssence.differentDataSource(essence) ||
	            nextEssence.differentEffectiveFilter(essence, Totals.id) ||
	            nextEssence.newEffectiveMeasures(essence)) {
	            this.fetchData(nextEssence);
	        }
	    };
	    Totals.prototype.componentWillUnmount = function () {
	        this.mounted = false;
	    };
	    Totals.prototype.precalculate = function (props, datasetLoad) {
	        if (datasetLoad === void 0) { datasetLoad = null; }
	        var registerDownloadableDataset = props.registerDownloadableDataset, essence = props.essence;
	        var splits = essence.splits;
	        var existingDatasetLoad = this.state.datasetLoad;
	        var newState = {};
	        if (datasetLoad) {
	            // Always keep the old dataset while loading
	            if (datasetLoad.loading)
	                datasetLoad.dataset = existingDatasetLoad.dataset;
	            newState.datasetLoad = datasetLoad;
	        }
	        else {
	            datasetLoad = existingDatasetLoad;
	        }
	        var dataset = datasetLoad.dataset;
	        if (dataset && splits.length()) {
	            if (registerDownloadableDataset)
	                registerDownloadableDataset(dataset);
	        }
	        this.setState(newState);
	    };
	    Totals.prototype.render = function () {
	        var _a = this.props, essence = _a.essence, stage = _a.stage;
	        var datasetLoad = this.state.datasetLoad;
	        var myDatum = datasetLoad.dataset ? datasetLoad.dataset.data[0] : null;
	        var measures = essence.getEffectiveMeasures();
	        var single = measures.size === 1;
	        var totals = measures.map(function (measure) {
	            var measureValueStr = '-';
	            if (myDatum) {
	                measureValueStr = measure.formatDatum(myDatum);
	            }
	            return React.createElement("div", {className: 'total' + (single ? ' single' : ''), key: measure.name}, React.createElement("div", {className: "measure-name"}, measure.title), React.createElement("div", {className: "measure-value"}, measureValueStr));
	        });
	        var totalContainerStyle = null;
	        if (!single) {
	            var numColumns = Math.min(totals.size, Math.max(1, Math.floor((stage.width - 2 * PADDING_H) / TOTAL_WIDTH)));
	            var containerWidth = numColumns * TOTAL_WIDTH;
	            totalContainerStyle = {
	                left: '50%',
	                width: containerWidth,
	                marginLeft: -containerWidth / 2
	            };
	        }
	        return React.createElement("div", {className: "totals"}, React.createElement("div", {className: "total-container", style: totalContainerStyle}, totals), datasetLoad.error ? React.createElement(query_error_1.QueryError, {error: datasetLoad.error}) : null, datasetLoad.loading ? React.createElement(loader_1.Loader, null) : null);
	    };
	    Totals.id = 'totals';
	    Totals.title = 'Totals';
	    Totals.measureModeNeed = 'multi';
	    return Totals;
	}(React.Component));
	exports.Totals = Totals;


/***/ },
/* 387 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(388);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./totals.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./totals.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 388 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".totals{position:absolute;top:0;bottom:0;left:0;right:0}.totals .total-container{position:absolute;top:60px;width:100%}.totals .total{display:inline-block;width:176px;text-align:center;padding:0 10px;margin-bottom:34px}.totals .total .measure-name{white-space:nowrap;overflow-x:hidden;text-overflow:ellipsis;width:100%;cursor:default;font-size:15px;padding-bottom:8px;color:#999;-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;user-select:text}.totals .total .measure-value{width:100%;cursor:default;font-size:30px;-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;user-select:text}.totals .total.single{width:100%}.totals .total.single .measure-name{font-size:20px;padding-bottom:11px}.totals .total.single .measure-value{font-size:40px}.totals .loader,.totals .query-error{position:absolute;top:0;bottom:0;left:0;right:0}\n", ""]);

	// exports


/***/ },
/* 389 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(390);
	var immutable_1 = __webpack_require__(178);
	var React = __webpack_require__(5);
	var ReactDOM = __webpack_require__(36);
	var plywood_1 = __webpack_require__(188);
	var formatter_1 = __webpack_require__(323);
	var index_1 = __webpack_require__(192);
	var constants_1 = __webpack_require__(222);
	var dom_1 = __webpack_require__(240);
	var svg_icon_1 = __webpack_require__(174);
	var segment_bubble_1 = __webpack_require__(392);
	var scroller_1 = __webpack_require__(402);
	var simple_table_1 = __webpack_require__(405);
	var loader_1 = __webpack_require__(171);
	var query_error_1 = __webpack_require__(335);
	var HEADER_HEIGHT = 38;
	var SEGMENT_WIDTH = 300;
	var INDENT_WIDTH = 25;
	var MEASURE_WIDTH = 100;
	var ROW_HEIGHT = 30;
	var SPACE_LEFT = 10;
	var SPACE_RIGHT = 10;
	var ROW_PADDING_RIGHT = 50;
	var BODY_PADDING_BOTTOM = 90;
	var HIGHLIGHT_BUBBLE_V_OFFSET = -4;
	function formatSegment(value) {
	    if (plywood_1.TimeRange.isTimeRange(value)) {
	        return value.start.toISOString();
	    }
	    return String(value);
	}
	function getFilterFromDatum(splits, flatDatum) {
	    if (flatDatum['__nest'] === 0)
	        return null;
	    var segments = [];
	    while (flatDatum['__nest'] > 0) {
	        segments.unshift(flatDatum[constants_1.SEGMENT]);
	        flatDatum = flatDatum['__parent'];
	    }
	    return new index_1.Filter(immutable_1.List(segments.map(function (segment, i) {
	        return new index_1.FilterClause({
	            expression: splits.get(i).expression,
	            selection: plywood_1.r(plywood_1.TimeRange.isTimeRange(segment) ? segment : plywood_1.Set.fromJS([segment]))
	        });
	    })));
	}
	var Table = (function (_super) {
	    __extends(Table, _super);
	    function Table() {
	        _super.call(this);
	        this.state = {
	            datasetLoad: {},
	            flatData: null,
	            scrollLeft: 0,
	            scrollTop: 0,
	            hoverMeasure: null,
	            hoverRow: null
	        };
	    }
	    Table.handleCircumstance = function (dataSource, splits, colors, current) {
	        // Must have at least one dimension
	        if (splits.length() === 0) {
	            var someDimensions = dataSource.dimensions.toArray().filter(function (d) { return d.kind === 'string'; }).slice(0, 2);
	            return index_1.Resolve.manual(4, 'This visualization requires at least one split', someDimensions.map(function (someDimension) {
	                return {
	                    description: "Add a split on " + someDimension.title,
	                    adjustment: {
	                        splits: index_1.Splits.fromSplitCombine(index_1.SplitCombine.fromExpression(someDimension.expression))
	                    }
	                };
	            }));
	        }
	        // Auto adjustment
	        var autoChanged = false;
	        splits = splits.map(function (split, i) {
	            var splitDimension = dataSource.getDimensionByExpression(split.expression);
	            if (!split.sortAction) {
	                split = split.changeSortAction(dataSource.getDefaultSortAction());
	                autoChanged = true;
	            }
	            else if (split.sortAction.refName() === constants_1.TIME_SEGMENT) {
	                split = split.changeSortAction(new plywood_1.SortAction({
	                    expression: plywood_1.$(constants_1.SEGMENT),
	                    direction: split.sortAction.direction
	                }));
	                autoChanged = true;
	            }
	            // ToDo: review this
	            if (!split.limitAction && (autoChanged || splitDimension.kind !== 'time')) {
	                split = split.changeLimit(i ? 5 : 50);
	                autoChanged = true;
	            }
	            return split;
	        });
	        if (colors) {
	            colors = null;
	            autoChanged = true;
	        }
	        return autoChanged ? index_1.Resolve.automatic(6, { splits: splits }) : index_1.Resolve.ready(current ? 10 : 8);
	    };
	    Table.prototype.fetchData = function (essence) {
	        var _this = this;
	        var registerDownloadableDataset = this.props.registerDownloadableDataset;
	        var splits = essence.splits, dataSource = essence.dataSource;
	        var measures = essence.getEffectiveMeasures();
	        var $main = plywood_1.$('main');
	        var query = plywood_1.ply()
	            .apply('main', $main.filter(essence.getEffectiveFilter(Table.id).toExpression()));
	        measures.forEach(function (measure) {
	            query = query.performAction(measure.toApplyAction());
	        });
	        function makeQuery(i) {
	            var split = splits.get(i);
	            var sortAction = split.sortAction, limitAction = split.limitAction;
	            if (!sortAction)
	                throw new Error('something went wrong in table query generation');
	            var subQuery = $main.split(split.toSplitExpression(), constants_1.SEGMENT);
	            measures.forEach(function (measure) {
	                subQuery = subQuery.performAction(measure.toApplyAction());
	            });
	            var applyForSort = essence.getApplyForSort(sortAction);
	            if (applyForSort) {
	                subQuery = subQuery.performAction(applyForSort);
	            }
	            subQuery = subQuery.performAction(sortAction);
	            if (limitAction) {
	                subQuery = subQuery.performAction(limitAction);
	            }
	            if (i + 1 < splits.length()) {
	                subQuery = subQuery.apply(constants_1.SPLIT, makeQuery(i + 1));
	            }
	            return subQuery;
	        }
	        query = query.apply(constants_1.SPLIT, makeQuery(0));
	        this.precalculate(this.props, { loading: true });
	        dataSource.executor(query)
	            .then(function (dataset) {
	            if (!_this.mounted)
	                return;
	            _this.precalculate(_this.props, {
	                loading: false,
	                dataset: dataset,
	                error: null
	            });
	        }, function (error) {
	            if (!_this.mounted)
	                return;
	            _this.precalculate(_this.props, {
	                loading: false,
	                dataset: null,
	                error: error
	            });
	        });
	    };
	    Table.prototype.componentWillMount = function () {
	        this.precalculate(this.props);
	    };
	    Table.prototype.componentDidMount = function () {
	        this.mounted = true;
	        var essence = this.props.essence;
	        this.fetchData(essence);
	    };
	    Table.prototype.componentWillReceiveProps = function (nextProps) {
	        this.precalculate(nextProps);
	        var essence = this.props.essence;
	        var nextEssence = nextProps.essence;
	        if (nextEssence.differentDataSource(essence) ||
	            nextEssence.differentEffectiveFilter(essence, Table.id) ||
	            nextEssence.differentSplits(essence) ||
	            nextEssence.newEffectiveMeasures(essence)) {
	            this.fetchData(nextEssence);
	        }
	    };
	    Table.prototype.componentWillUnmount = function () {
	        this.mounted = false;
	    };
	    Table.prototype.onScroll = function (e) {
	        var target = e.target;
	        this.setState({
	            scrollLeft: target.scrollLeft,
	            scrollTop: target.scrollTop
	        });
	    };
	    Table.prototype.calculateMousePosition = function (e) {
	        var essence = this.props.essence;
	        var _a = this.state, flatData = _a.flatData, scrollLeft = _a.scrollLeft, scrollTop = _a.scrollTop;
	        var rect = ReactDOM.findDOMNode(this.refs['base']).getBoundingClientRect();
	        var x = dom_1.getXFromEvent(e) - rect.left;
	        var y = dom_1.getYFromEvent(e) - rect.top;
	        if (x <= SPACE_LEFT)
	            return { what: 'space-left' };
	        x -= SPACE_LEFT;
	        if (y <= HEADER_HEIGHT) {
	            if (x <= SEGMENT_WIDTH)
	                return { what: 'corner' };
	            x = x - SEGMENT_WIDTH + scrollLeft;
	            var measureIndex = Math.floor(x / MEASURE_WIDTH);
	            var measure = essence.getEffectiveMeasures().get(measureIndex);
	            if (!measure)
	                return { what: 'whitespace' };
	            return { what: 'header', measure: measure };
	        }
	        y = y - HEADER_HEIGHT + scrollTop;
	        var rowIndex = Math.floor(y / ROW_HEIGHT);
	        var datum = flatData ? flatData[rowIndex] : null;
	        if (!datum)
	            return { what: 'whitespace' };
	        return { what: 'row', row: datum };
	    };
	    Table.prototype.onMouseLeave = function () {
	        var _a = this.state, hoverMeasure = _a.hoverMeasure, hoverRow = _a.hoverRow;
	        if (hoverMeasure || hoverRow) {
	            this.setState({
	                hoverMeasure: null,
	                hoverRow: null
	            });
	        }
	    };
	    Table.prototype.onMouseMove = function (e) {
	        var _a = this.state, hoverMeasure = _a.hoverMeasure, hoverRow = _a.hoverRow;
	        var pos = this.calculateMousePosition(e);
	        if (hoverMeasure !== pos.measure || hoverRow !== pos.row) {
	            this.setState({
	                hoverMeasure: pos.measure,
	                hoverRow: pos.row
	            });
	        }
	    };
	    Table.prototype.onClick = function (e) {
	        var _a = this.props, clicker = _a.clicker, essence = _a.essence;
	        var pos = this.calculateMousePosition(e);
	        if (pos.what === 'corner' || pos.what === 'header') {
	            var sortExpression = plywood_1.$(pos.what === 'corner' ? constants_1.SEGMENT : pos.measure.name);
	            var commonSort = essence.getCommonSort();
	            var myDescending = (commonSort && commonSort.expression.equals(sortExpression) && commonSort.direction === plywood_1.SortAction.DESCENDING);
	            clicker.changeSplits(essence.splits.changeSortAction(new plywood_1.SortAction({
	                expression: sortExpression,
	                direction: myDescending ? plywood_1.SortAction.ASCENDING : plywood_1.SortAction.DESCENDING
	            })), index_1.VisStrategy.KeepAlways);
	        }
	        else if (pos.what === 'row') {
	            var rowHighlight = getFilterFromDatum(essence.splits, pos.row);
	            if (!rowHighlight)
	                return;
	            if (essence.highlightOn(Table.id)) {
	                if (rowHighlight.equals(essence.highlight.delta)) {
	                    clicker.dropHighlight();
	                    return;
	                }
	            }
	            clicker.changeHighlight(Table.id, null, rowHighlight);
	        }
	    };
	    Table.prototype.precalculate = function (props, datasetLoad) {
	        if (datasetLoad === void 0) { datasetLoad = null; }
	        var registerDownloadableDataset = props.registerDownloadableDataset, essence = props.essence;
	        var splits = essence.splits;
	        var existingDatasetLoad = this.state.datasetLoad;
	        var newState = {};
	        if (datasetLoad) {
	            // Always keep the old dataset while loading (for now)
	            if (datasetLoad.loading)
	                datasetLoad.dataset = existingDatasetLoad.dataset;
	            newState.datasetLoad = datasetLoad;
	        }
	        else {
	            datasetLoad = this.state.datasetLoad;
	        }
	        var dataset = datasetLoad.dataset;
	        if (dataset && splits.length()) {
	            if (registerDownloadableDataset)
	                registerDownloadableDataset(dataset);
	            newState.flatData = dataset.flatten({
	                order: 'preorder',
	                nestingName: '__nest',
	                parentName: '__parent'
	            });
	        }
	        this.setState(newState);
	    };
	    Table.prototype.render = function () {
	        var _a = this.props, clicker = _a.clicker, essence = _a.essence, stage = _a.stage, openRawDataModal = _a.openRawDataModal;
	        var _b = this.state, datasetLoad = _b.datasetLoad, flatData = _b.flatData, scrollLeft = _b.scrollLeft, scrollTop = _b.scrollTop, hoverMeasure = _b.hoverMeasure, hoverRow = _b.hoverRow;
	        var splits = essence.splits;
	        var segmentTitle = splits.getTitle(essence.dataSource.dimensions);
	        var commonSort = essence.getCommonSort();
	        var commonSortName = commonSort ? commonSort.expression.name : null;
	        var sortArrowIcon = commonSort ? React.createElement(svg_icon_1.SvgIcon, {
	            svg: __webpack_require__(350),
	            className: 'sort-arrow ' + commonSort.direction
	        }) : null;
	        var cornerSortArrow = null;
	        if (commonSortName === constants_1.SEGMENT) {
	            cornerSortArrow = sortArrowIcon;
	        }
	        var measuresArray = essence.getEffectiveMeasures().toArray();
	        var headerColumns = measuresArray.map(function (measure, i) {
	            return React.createElement("div", {className: 'measure-name' + (measure === hoverMeasure ? ' hover' : ''), key: measure.name}, React.createElement("div", {className: "title-wrap"}, measure.title), commonSortName === measure.name ? sortArrowIcon : null);
	        });
	        var segments = [];
	        var rows = [];
	        var highlighter = null;
	        var highlighterStyle = null;
	        var highlightBubble = null;
	        if (flatData) {
	            var formatters = measuresArray.map(function (measure) {
	                var measureName = measure.name;
	                var measureValues = flatData.map(function (d) { return d[measureName]; });
	                return formatter_1.formatterFromData(measureValues, measure.format);
	            });
	            var highlightDelta = null;
	            if (essence.highlightOn(Table.id)) {
	                highlightDelta = essence.highlight.delta;
	            }
	            var skipNumber = simple_table_1.SimpleTable.getFirstElementToShow(ROW_HEIGHT, scrollTop);
	            var lastElementToShow = simple_table_1.SimpleTable.getLastElementToShow(ROW_HEIGHT, flatData.length, scrollTop, stage.height);
	            var rowY = skipNumber * ROW_HEIGHT;
	            for (var i = skipNumber; i < lastElementToShow; i++) {
	                var d = flatData[i];
	                var nest = d['__nest'];
	                var segmentValue = d[constants_1.SEGMENT];
	                var segmentName = nest ? formatSegment(segmentValue) : 'Total';
	                var left = Math.max(0, nest - 1) * INDENT_WIDTH;
	                var segmentStyle = { left: left, width: SEGMENT_WIDTH - left, top: rowY };
	                var hoverClass = d === hoverRow ? ' hover' : '';
	                var selected = false;
	                var selectedClass = '';
	                if (highlightDelta) {
	                    selected = highlightDelta.equals(getFilterFromDatum(splits, d));
	                    selectedClass = selected ? 'selected' : 'not-selected';
	                }
	                segments.push(React.createElement("div", {className: 'segment nest' + nest + ' ' + selectedClass + hoverClass, key: '_' + i, style: segmentStyle}, segmentName));
	                var row = measuresArray.map(function (measure, j) {
	                    var measureValue = d[measure.name];
	                    var measureValueStr = formatters[j](measureValue);
	                    return React.createElement("div", {className: "measure", key: measure.name}, measureValueStr);
	                });
	                var rowStyle = simple_table_1.SimpleTable.getRowStyle(rowY);
	                rows.push(React.createElement("div", {className: 'row nest' + nest + ' ' + selectedClass + hoverClass, key: '_' + i, style: rowStyle}, row));
	                if (!highlighter && selected) {
	                    highlighterStyle = {
	                        top: rowY,
	                        left: left
	                    };
	                    var dimension = essence.dataSource.getDimensionByExpression(splits.splitCombines.get(nest - 1).expression);
	                    highlighter = React.createElement("div", {className: 'highlighter', key: 'highlight', style: highlighterStyle});
	                    highlightBubble = React.createElement(segment_bubble_1.SegmentBubble, {left: stage.x + stage.width / 2, top: stage.y + HEADER_HEIGHT + rowY - scrollTop - HIGHLIGHT_BUBBLE_V_OFFSET, hideText: true, segmentLabel: segmentName, dimension: dimension, clicker: clicker, openRawDataModal: openRawDataModal});
	                }
	                rowY += ROW_HEIGHT;
	            }
	        }
	        var rowWidth = MEASURE_WIDTH * measuresArray.length + ROW_PADDING_RIGHT;
	        // Extended so that the horizontal lines extend fully
	        var rowWidthExtended = rowWidth;
	        if (stage) {
	            rowWidthExtended = Math.max(rowWidthExtended, stage.width - (SPACE_LEFT + SEGMENT_WIDTH + SPACE_RIGHT));
	        }
	        var segmentsStyle = {
	            top: -scrollTop
	        };
	        var bodyHeight = flatData ? flatData.length * ROW_HEIGHT : 0;
	        var highlightStyle = {
	            top: -scrollTop
	        };
	        var verticalScrollShadowStyle = { display: 'none' };
	        if (scrollLeft) {
	            verticalScrollShadowStyle = {};
	        }
	        var scrollerStyle = {
	            width: SPACE_LEFT + SEGMENT_WIDTH + rowWidth + SPACE_RIGHT,
	            height: HEADER_HEIGHT + bodyHeight + BODY_PADDING_BOTTOM
	        };
	        var preRows = React.createElement("div", {className: "segments-cont"}, React.createElement("div", {className: "segments", style: segmentsStyle}, segments));
	        // added extra wrapping div for pin full and single parent
	        var postRows = React.createElement("div", {className: "post-body"}, React.createElement("div", {className: "highlight-cont"}, React.createElement("div", {className: "highlight", style: highlightStyle}, highlighter)), React.createElement("div", {className: "vertical-scroll-shadow", style: verticalScrollShadowStyle}), datasetLoad.error ? React.createElement(query_error_1.QueryError, {error: datasetLoad.error}) : null, datasetLoad.loading ? React.createElement(loader_1.Loader, null) : null);
	        return React.createElement("div", {className: "table"}, React.createElement("div", {className: "corner"}, React.createElement("div", {className: "corner-wrap"}, segmentTitle), cornerSortArrow), React.createElement(simple_table_1.SimpleTable, {scrollLeft: scrollLeft, scrollTop: scrollTop, rowHeight: ROW_HEIGHT, dataLength: flatData ? flatData.length : 0, headerColumns: headerColumns, rowWidth: rowWidthExtended, preRows: preRows, rows: rows, rowLeftOffset: SEGMENT_WIDTH, postRows: postRows}), React.createElement(scroller_1.Scroller, {style: scrollerStyle, ref: "base", onScroll: this.onScroll.bind(this), onMouseLeave: this.onMouseLeave.bind(this), onMouseMove: this.onMouseMove.bind(this), onClick: this.onClick.bind(this)}), ";", highlightBubble);
	    };
	    Table.id = 'table';
	    Table.title = 'Table';
	    Table.measureModeNeed = 'multi';
	    return Table;
	}(React.Component));
	exports.Table = Table;


/***/ },
/* 390 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(391);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./table.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./table.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 391 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".table{position:absolute;top:0;bottom:0;left:0;right:0;overflow:hidden}.table .sort-arrow{position:absolute;top:12px;width:8px}.table .sort-arrow.ascending{-webkit-transform:rotate(180deg);-ms-transform:rotate(180deg);transform:rotate(180deg)}.table .corner{position:absolute;left:10px;top:0;width:300px;height:38px;overflow:hidden;padding:12px 0 0 6px;border-bottom:1px solid #dedede}.table .corner .sort-arrow{right:2px}.table .simple-table .header-cont{left:310px}.table .simple-table .header-cont .header{height:38px}.table .simple-table .header-cont .sort-arrow{right:-15px}.table .simple-table .body-cont{position:absolute;top:38px;bottom:0;left:0;right:0;left:310px}.table .simple-table .segments-cont{position:absolute;left:10px;top:38px;bottom:0;width:300px;overflow:hidden}.table .simple-table .highlight-cont{position:absolute;left:10px;right:0;top:38px;bottom:0;overflow:hidden}.table .simple-table .highlight-cont .highlighter{right:0;height:31px;margin-top:-1px;border:1px solid #fff}.table .simple-table .highlight-cont .highlighter:after{position:absolute;top:-1px;bottom:-1px;left:-1px;right:-1px;content:'';border:1px dashed #168bc5}.table .loader,.table .query-error{position:absolute;top:0;bottom:0;left:0;right:0}.table .vertical-scroll-shadow{position:absolute;left:10px;top:0;bottom:0;width:300px;box-shadow:4px 0 4px -3px rgba(0,0,0,0.2)}.table .highlight-controls{position:absolute;right:20px}.table .segment,.table .row{position:absolute;height:30px;border-bottom:1px solid #dedede}.table .segment.hover,.table .row.hover{background:#e4f3fc}.table .segment.nest0,.table .row.nest0{background:#f5f5f5}.table .row{left:0}.table .not-selected:after{position:absolute;top:0;bottom:0;left:0;right:0;background:#fff;opacity:0.5;content:''}.table .measure-name{padding-top:12px}.table .measure-name .title-wrap{white-space:nowrap;overflow-x:hidden;text-overflow:ellipsis;display:inline-block;width:100%;height:100%;padding-left:13px}.table .segment,.table .measure-name,.table .measure{white-space:nowrap;padding-left:6px}.table .segment,.table .measure{overflow:hidden;padding-top:8px}.table .measure-name,.table .measure{display:inline-block;width:100px;height:100%;text-align:right}.table .horizontal-scroll-shadow{height:38px}\n", ""]);

	// exports


/***/ },
/* 392 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(393);
	var React = __webpack_require__(5);
	var dom_1 = __webpack_require__(240);
	var body_portal_1 = __webpack_require__(260);
	var shpitz_1 = __webpack_require__(263);
	var segment_action_buttons_1 = __webpack_require__(395);
	var OFFSET_V = -10;
	var PER_LETTER_PIXELS = 8;
	var SegmentBubble = (function (_super) {
	    __extends(SegmentBubble, _super);
	    function SegmentBubble() {
	        _super.call(this);
	        //this.state = {};
	    }
	    SegmentBubble.prototype.render = function () {
	        var _a = this.props, left = _a.left, top = _a.top, hideText = _a.hideText, dimension = _a.dimension, segmentLabel = _a.segmentLabel, measureLabel = _a.measureLabel, clicker = _a.clicker, openRawDataModal = _a.openRawDataModal, onClose = _a.onClose;
	        var textElement;
	        if (!hideText && segmentLabel) {
	            var minTextWidth = dom_1.clamp(segmentLabel.length * PER_LETTER_PIXELS, 80, 300);
	            textElement = React.createElement("div", {className: "text", style: { minWidth: minTextWidth }}, React.createElement("div", {className: "segment"}, segmentLabel), measureLabel ? React.createElement("div", {className: "measure-value"}, measureLabel) : null);
	        }
	        return React.createElement(body_portal_1.BodyPortal, {left: left, top: top + OFFSET_V, disablePointerEvents: !clicker}, React.createElement("div", {className: "segment-bubble", ref: "bubble"}, textElement, clicker ? React.createElement(segment_action_buttons_1.SegmentActionButtons, {clicker: clicker, dimension: dimension, segmentLabel: segmentLabel, openRawDataModal: openRawDataModal, onClose: onClose}) : null, React.createElement(shpitz_1.Shpitz, {direction: "up"})));
	    };
	    return SegmentBubble;
	}(React.Component));
	exports.SegmentBubble = SegmentBubble;


/***/ },
/* 393 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(394);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./segment-bubble.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./segment-bubble.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 394 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".segment-bubble{background:#fff;border-radius:2px;box-shadow:0 3px 10px 0 rgba(0,0,0,0.26),0 0 3px 0 rgba(0,0,0,0.16)}.segment-bubble{position:absolute;background:rgba(255,255,255,0.9);padding:10px;text-align:center;-webkit-transform:translate(-50%, -100%);-ms-transform:translate(-50%, -100%);transform:translate(-50%, -100%);max-width:400px}.segment-bubble .text .segment{color:#a6a6a6;display:block;padding-bottom:3px;overflow:hidden}.segment-bubble .text .measure-value{white-space:nowrap}.segment-bubble .segment-action-buttons:nth-child(n+2){margin-top:7px}.segment-bubble .shpitz{left:50%;top:100%}\n", ""]);

	// exports


/***/ },
/* 395 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(396);
	var React = __webpack_require__(5);
	var index_1 = __webpack_require__(192);
	var constants_1 = __webpack_require__(222);
	var bubble_menu_1 = __webpack_require__(257);
	var button_1 = __webpack_require__(398);
	var SegmentActionButtons = (function (_super) {
	    __extends(SegmentActionButtons, _super);
	    function SegmentActionButtons() {
	        _super.call(this);
	        this.state = {
	            moreMenuOpenOn: null
	        };
	    }
	    SegmentActionButtons.prototype.onSelect = function (e) {
	        var _a = this.props, onClose = _a.onClose, clicker = _a.clicker;
	        clicker.acceptHighlight();
	        if (onClose)
	            onClose();
	    };
	    SegmentActionButtons.prototype.onCancel = function (e) {
	        var _a = this.props, onClose = _a.onClose, clicker = _a.clicker;
	        clicker.dropHighlight();
	        if (onClose)
	            onClose();
	    };
	    SegmentActionButtons.prototype.onMore = function (e) {
	        var moreMenuOpenOn = this.state.moreMenuOpenOn;
	        if (moreMenuOpenOn)
	            return this.closeMoreMenu();
	        this.setState({
	            moreMenuOpenOn: e.target
	        });
	    };
	    SegmentActionButtons.prototype.closeMoreMenu = function () {
	        this.setState({
	            moreMenuOpenOn: null
	        });
	    };
	    SegmentActionButtons.prototype.getUrl = function () {
	        var _a = this.props, segmentLabel = _a.segmentLabel, dimension = _a.dimension;
	        if (!dimension || !dimension.url)
	            return null;
	        return dimension.url.replace(/%s/g, segmentLabel);
	    };
	    SegmentActionButtons.prototype.openRawDataModal = function () {
	        var openRawDataModal = this.props.openRawDataModal;
	        this.closeMoreMenu();
	        openRawDataModal();
	    };
	    SegmentActionButtons.prototype.renderMoreMenu = function () {
	        var segmentLabel = this.props.segmentLabel;
	        var moreMenuOpenOn = this.state.moreMenuOpenOn;
	        if (!moreMenuOpenOn)
	            return null;
	        var menuSize = index_1.Stage.fromSize(160, 160);
	        var bubbleListItems = [
	            React.createElement("li", {className: "clipboard", key: "copyValue", "data-clipboard-text": segmentLabel, onClick: this.closeMoreMenu.bind(this)}, constants_1.STRINGS.copyValue),
	            React.createElement("li", {className: "view-raw-data", key: "view-raw-data", onClick: this.openRawDataModal.bind(this)}, constants_1.STRINGS.viewRawData)
	        ];
	        var url = this.getUrl();
	        if (url) {
	            bubbleListItems.push(React.createElement("li", {key: "goToUrl"}, React.createElement("a", {href: url, onClick: this.closeMoreMenu.bind(this), target: "_blank"}, constants_1.STRINGS.goToUrl)));
	        }
	        return React.createElement(bubble_menu_1.BubbleMenu, {className: "more-menu", direction: "down", stage: menuSize, openOn: moreMenuOpenOn, align: "start", onClose: this.closeMoreMenu.bind(this)}, React.createElement("ul", {className: "bubble-list"}, bubbleListItems));
	    };
	    SegmentActionButtons.prototype.render = function () {
	        var disableMoreMenu = this.props.disableMoreMenu;
	        var moreMenuOpenOn = this.state.moreMenuOpenOn;
	        return React.createElement("div", {className: "segment-action-buttons"}, React.createElement(button_1.Button, {type: "primary", className: "mini", onClick: this.onSelect.bind(this), title: constants_1.STRINGS.select}), React.createElement(button_1.Button, {type: "secondary", className: "mini", onClick: this.onCancel.bind(this), title: constants_1.STRINGS.cancel}), disableMoreMenu ? null : React.createElement(button_1.Button, {type: "secondary", className: "mini", onClick: this.onMore.bind(this), svg: __webpack_require__(401), active: Boolean(moreMenuOpenOn)}), this.renderMoreMenu());
	    };
	    return SegmentActionButtons;
	}(React.Component));
	exports.SegmentActionButtons = SegmentActionButtons;


/***/ },
/* 396 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(397);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./segment-action-buttons.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./segment-action-buttons.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 397 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".segment-action-buttons{white-space:nowrap}.segment-action-buttons .button{margin-right:5px}.segment-action-buttons .button:last-child{margin-right:0}\n", ""]);

	// exports


/***/ },
/* 398 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(399);
	var React = __webpack_require__(5);
	var dom_1 = __webpack_require__(240);
	var svg_icon_1 = __webpack_require__(174);
	var Button = (function (_super) {
	    __extends(Button, _super);
	    function Button() {
	        _super.call(this);
	        // this.state = {};
	    }
	    Button.prototype.render = function () {
	        var _a = this.props, title = _a.title, type = _a.type, className = _a.className, svg = _a.svg, active = _a.active, disabled = _a.disabled, onClick = _a.onClick;
	        var icon = null;
	        if (svg) {
	            icon = React.createElement(svg_icon_1.SvgIcon, {svg: svg});
	        }
	        return React.createElement("button", {className: dom_1.classNames('button', type, className, { icon: icon, active: active }), onClick: onClick, disabled: disabled}, icon, title);
	    };
	    return Button;
	}(React.Component));
	exports.Button = Button;


/***/ },
/* 399 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(400);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./button.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./button.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 400 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".button.primary,.button.secondary{display:inline-block;padding:6px 16px;font-size:13px;min-width:46px;text-align:center;cursor:pointer;border-radius:2px;outline:none;height:30px}.disabled.button.primary,.disabled.button.secondary,[disabled].button.primary,[disabled].button.secondary{opacity:.40;cursor:default;pointer-events:none}.button.primary{background:#1ea3e6;color:#fff}.button.primary svg path{fill:#fff}.button.primary:hover{background:#1795d3}.active.button.primary,.button.primary:active{background:#1584bc;color:#e0e0e0}.active.button.primary svg path,.button.primary:active svg path{fill:#e0e0e0}.button.secondary{background:rgba(30,163,230,0.22);color:#1ea3e6}.button.secondary svg path{fill:#1ea3e6}.button.secondary:hover{background:rgba(30,163,230,0.3)}.active.button.secondary,.button.secondary:active{background:rgba(30,163,230,0.38)}.button.mini{height:28px;padding-left:10px;padding-right:10px;min-width:40px}.button.icon{min-width:27px;padding:2px 0}.button.icon svg{height:19px}\n", ""]);

	// exports


/***/ },
/* 401 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M5.5,11 C6.32842712,11 7,10.3284271 7,9.5 C7,8.67157288 6.32842712,8 5.5,8 C4.67157288,8 4,8.67157288 4,9.5 C4,10.3284271 4.67157288,11 5.5,11 Z M9.5,11 C10.3284271,11 11,10.3284271 11,9.5 C11,8.67157288 10.3284271,8 9.5,8 C8.67157288,8 8,8.67157288 8,9.5 C8,10.3284271 8.67157288,11 9.5,11 Z M13.5,11 C14.3284271,11 15,10.3284271 15,9.5 C15,8.67157288 14.3284271,8 13.5,8 C12.6715729,8 12,8.67157288 12,9.5 C12,10.3284271 12.6715729,11 13.5,11 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 402 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(403);
	var React = __webpack_require__(5);
	var Scroller = (function (_super) {
	    __extends(Scroller, _super);
	    function Scroller() {
	        _super.call(this);
	        this.state = {
	            scrollLeft: 0,
	            scrollTop: 0
	        };
	    }
	    Scroller.prototype.render = function () {
	        var _a = this.props, style = _a.style, onScroll = _a.onScroll, onMouseLeave = _a.onMouseLeave, onMouseMove = _a.onMouseMove, onClick = _a.onClick;
	        return React.createElement("div", {className: "scroller", ref: "base", onScroll: onScroll, onMouseLeave: onMouseLeave || null, onMouseMove: onMouseMove || null, onClick: onClick || null}, React.createElement("div", {className: "scroller-inner", style: style}));
	    };
	    return Scroller;
	}(React.Component));
	exports.Scroller = Scroller;


/***/ },
/* 403 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(404);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./scroller.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./scroller.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 404 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".scroller{width:100%;height:100%;overflow:auto}.scroller .scroller-inner{background:#fff;opacity:0.001;cursor:pointer}\n", ""]);

	// exports


/***/ },
/* 405 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(406);
	var React = __webpack_require__(5);
	var SimpleTable = (function (_super) {
	    __extends(SimpleTable, _super);
	    function SimpleTable() {
	        _super.apply(this, arguments);
	    }
	    SimpleTable.getFirstElementToShow = function (rowHeight, scrollTop) {
	        return Math.max(0, Math.floor(scrollTop / rowHeight));
	    };
	    SimpleTable.getLastElementToShow = function (rowHeight, datasetLength, scrollTop, visibleHeight) {
	        return Math.min(datasetLength, Math.ceil((scrollTop + visibleHeight) / rowHeight));
	    };
	    SimpleTable.getRowStyle = function (topValue) {
	        return {
	            top: topValue
	        };
	    };
	    SimpleTable.prototype.getHeaderStyle = function () {
	        var _a = this.props, scrollLeft = _a.scrollLeft, rowWidth = _a.rowWidth;
	        return {
	            width: rowWidth,
	            left: -scrollLeft
	        };
	    };
	    SimpleTable.prototype.getBodyStyle = function () {
	        var _a = this.props, scrollLeft = _a.scrollLeft, scrollTop = _a.scrollTop, rowWidth = _a.rowWidth, dataLength = _a.dataLength, rowHeight = _a.rowHeight;
	        return {
	            left: -scrollLeft,
	            top: -scrollTop,
	            width: rowWidth,
	            height: dataLength * rowHeight
	        };
	    };
	    SimpleTable.prototype.getHorizontalShadowStyle = function () {
	        var _a = this.props, rowLeftOffset = _a.rowLeftOffset, rowWidth = _a.rowWidth, scrollTop = _a.scrollTop, scrollLeft = _a.scrollLeft;
	        var horizontalScrollShadowStyle = { display: 'none' };
	        if (scrollTop) {
	            horizontalScrollShadowStyle = {
	                width: (rowLeftOffset || 0) + rowWidth - scrollLeft
	            };
	        }
	        return horizontalScrollShadowStyle;
	    };
	    SimpleTable.prototype.render = function () {
	        var _a = this.props, headerColumns = _a.headerColumns, preRows = _a.preRows, rows = _a.rows, postRows = _a.postRows;
	        return React.createElement("div", {className: "simple-table"}, React.createElement("div", {className: "header-cont"}, React.createElement("div", {className: "header", style: this.getHeaderStyle()}, headerColumns)), preRows, React.createElement("div", {className: "body-cont"}, React.createElement("div", {className: "body", style: this.getBodyStyle()}, rows)), postRows, React.createElement("div", {className: "horizontal-scroll-shadow", style: this.getHorizontalShadowStyle()}));
	    };
	    return SimpleTable;
	}(React.Component));
	exports.SimpleTable = SimpleTable;


/***/ },
/* 406 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(407);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./simple-table.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./simple-table.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 407 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".simple-table{position:absolute;top:0;bottom:0;left:0;right:0}.simple-table .pre-body{position:absolute;top:0;bottom:0;left:0;right:0}.simple-table .header-cont{position:absolute;top:0;bottom:0;left:0;right:0;overflow:hidden}.simple-table .header-cont .header{border-bottom:1px solid #dedede;white-space:nowrap}.simple-table .body-cont{overflow:hidden}.simple-table .body-cont .row{position:absolute;border-bottom:1px solid #dedede;left:0;white-space:nowrap;width:100%}.simple-table .horizontal-scroll-shadow{position:absolute;top:0;box-shadow:0 4px 4px -3px rgba(0,0,0,0.2)}.simple-table .post-body{position:absolute;top:0;bottom:0;left:0;right:0}\n", ""]);

	// exports


/***/ },
/* 408 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(409);
	var immutable_1 = __webpack_require__(178);
	var React = __webpack_require__(5);
	var ReactDOM = __webpack_require__(36);
	var d3 = __webpack_require__(241);
	var plywood_1 = __webpack_require__(188);
	var index_1 = __webpack_require__(192);
	var constants_1 = __webpack_require__(222);
	var dom_1 = __webpack_require__(240);
	var date_1 = __webpack_require__(324);
	var vis_measure_label_1 = __webpack_require__(411);
	var chart_line_1 = __webpack_require__(414);
	var time_axis_1 = __webpack_require__(417);
	var vertical_axis_1 = __webpack_require__(420);
	var grid_lines_1 = __webpack_require__(423);
	var highlighter_1 = __webpack_require__(426);
	var loader_1 = __webpack_require__(171);
	var query_error_1 = __webpack_require__(335);
	var segment_bubble_1 = __webpack_require__(392);
	var hover_multi_bubble_1 = __webpack_require__(429);
	var TEXT_SPACER = 36;
	var X_AXIS_HEIGHT = 30;
	var Y_AXIS_WIDTH = 60;
	var MIN_CHART_HEIGHT = 140;
	var HOVER_BUBBLE_V_OFFSET = -7;
	var HOVER_MULTI_BUBBLE_V_OFFSET = -8;
	var MAX_HOVER_DIST = 50;
	var MAX_ASPECT_RATIO = 1; // width / height
	function midpoint(timeRange) {
	    if (!timeRange)
	        return null;
	    return new Date((timeRange.start.valueOf() + timeRange.end.valueOf()) / 2);
	}
	function findClosest(data, dragDate, scaleX) {
	    var closestDatum = null;
	    var minDist = Infinity;
	    for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {
	        var datum = data_1[_i];
	        var timeSegmentValue = datum[constants_1.TIME_SEGMENT];
	        if (!timeSegmentValue)
	            continue;
	        var mid = midpoint(timeSegmentValue);
	        var dist = Math.abs(mid.valueOf() - dragDate.valueOf());
	        var distPx = Math.abs(scaleX(mid) - scaleX(dragDate));
	        if ((!closestDatum || dist < minDist) && distPx < MAX_HOVER_DIST) {
	            closestDatum = datum;
	            minDist = dist;
	        }
	    }
	    return closestDatum;
	}
	var TimeSeries = (function (_super) {
	    __extends(TimeSeries, _super);
	    function TimeSeries() {
	        _super.call(this);
	        this.state = {
	            datasetLoad: {},
	            dragStartTime: null,
	            dragTimeRange: null,
	            scrollLeft: 0,
	            scrollTop: 0,
	            hoverTimeRange: null,
	            hoverMeasure: null
	        };
	        this.globalMouseMoveListener = this.globalMouseMoveListener.bind(this);
	        this.globalMouseUpListener = this.globalMouseUpListener.bind(this);
	        this.globalKeyDownListener = this.globalKeyDownListener.bind(this);
	    }
	    TimeSeries.handleCircumstance = function (dataSource, splits, colors, current) {
	        var timeDimensions = dataSource.getDimensionByKind('time');
	        if (!timeDimensions.size)
	            return index_1.Resolve.NEVER;
	        // Has no splits
	        if (splits.length() === 0) {
	            return index_1.Resolve.manual(3, 'This visualization requires a time split', timeDimensions.toArray().map(function (timeDimension) {
	                return {
	                    description: "Add a split on " + timeDimension.title,
	                    adjustment: {
	                        splits: index_1.Splits.fromSplitCombine(index_1.SplitCombine.fromExpression(timeDimension.expression))
	                    }
	                };
	            }));
	        }
	        var colorSplit = null;
	        var timeSplit = null;
	        var overflowSplit = null;
	        splits.forEach(function (split) {
	            var dimension = split.getDimension(dataSource.dimensions);
	            if (!dimension)
	                return;
	            if (dimension.kind === 'time') {
	                timeSplit = split;
	            }
	            else {
	                if (timeSplit) {
	                    overflowSplit = split;
	                }
	                else {
	                    colorSplit = split;
	                }
	            }
	        });
	        // Has a time split and other splits
	        if (splits.length() > 2) {
	            if (timeSplit) {
	                return index_1.Resolve.manual(3, 'Too many splits', [
	                    {
	                        description: "Remove all but the time split",
	                        adjustment: {
	                            splits: index_1.Splits.fromSplitCombine(timeSplit)
	                        }
	                    }
	                ]);
	            }
	            else {
	                return index_1.Resolve.manual(3, 'Too many splits', timeDimensions.toArray().map(function (timeDimension) {
	                    return {
	                        description: "Split on " + timeDimension.title + " instead",
	                        adjustment: {
	                            splits: index_1.Splits.fromSplitCombine(index_1.SplitCombine.fromExpression(timeDimension.expression))
	                        }
	                    };
	                }));
	            }
	        }
	        // No time split
	        if (!timeSplit) {
	            var lastSplit = splits.last();
	            var lastSplitDimension = lastSplit.getDimension(dataSource.dimensions);
	            return index_1.Resolve.manual(3, 'This visualization requires a time split', timeDimensions.toArray().map(function (timeDimension) {
	                return {
	                    description: "Replace " + lastSplitDimension.title + " with " + timeDimension.title,
	                    adjustment: {
	                        splits: index_1.Splits.fromSplitCombine(index_1.SplitCombine.fromExpression(timeDimension.expression))
	                    }
	                };
	            }));
	        }
	        var autoChanged = false;
	        // Fix time sort
	        if (!constants_1.TIME_SORT_ACTION.equals(timeSplit.sortAction)) {
	            timeSplit = timeSplit.changeSortAction(constants_1.TIME_SORT_ACTION);
	            autoChanged = true;
	        }
	        // Fix time limit
	        if (timeSplit.limitAction) {
	            timeSplit = timeSplit.changeLimitAction(null);
	            autoChanged = true;
	        }
	        // Swap splits if needed
	        if (overflowSplit) {
	            colorSplit = overflowSplit;
	            autoChanged = true;
	        }
	        // Adjust color split
	        if (colorSplit) {
	            if (!colorSplit.sortAction) {
	                colorSplit = colorSplit.changeSortAction(dataSource.getDefaultSortAction());
	                autoChanged = true;
	            }
	            var colorSplitDimension = dataSource.getDimensionByExpression(colorSplit.expression);
	            if (!colors || colors.dimension !== colorSplitDimension.name) {
	                colors = index_1.Colors.fromLimit(colorSplitDimension.name, 5);
	                autoChanged = true;
	            }
	        }
	        else if (colors) {
	            colors = null;
	            autoChanged = true;
	        }
	        if (!autoChanged)
	            return index_1.Resolve.ready(10);
	        var newSplits = [timeSplit];
	        if (colorSplit)
	            newSplits.unshift(colorSplit);
	        return index_1.Resolve.automatic(8, {
	            splits: new index_1.Splits(immutable_1.List(newSplits)),
	            colors: colors
	        });
	    };
	    TimeSeries.prototype.fetchData = function (essence) {
	        var _this = this;
	        var registerDownloadableDataset = this.props.registerDownloadableDataset;
	        var splits = essence.splits, colors = essence.colors, dataSource = essence.dataSource;
	        var measures = essence.getEffectiveMeasures();
	        // var timeSplit = splits.last();
	        // var timeBucketAction = timeSplit.bucketAction as TimeBucketAction;
	        //   .overQuery(timeBucketAction.duration, timeBucketAction.timezone, dataSource)
	        var $main = plywood_1.$('main');
	        var query = plywood_1.ply()
	            .apply('main', $main.filter(essence.getEffectiveFilter(TimeSeries.id).toExpression()));
	        measures.forEach(function (measure) {
	            query = query.performAction(measure.toApplyAction());
	        });
	        function makeQuery(i) {
	            var split = splits.get(i);
	            var splitDimension = dataSource.getDimensionByExpression(split.expression);
	            var sortAction = split.sortAction, limitAction = split.limitAction;
	            if (!sortAction)
	                throw new Error('something went wrong in time series query generation');
	            var segmentName = splitDimension.kind === 'time' ? constants_1.TIME_SEGMENT : constants_1.SEGMENT;
	            var subQuery = $main.split(split.toSplitExpression(), segmentName);
	            if (colors && colors.dimension === splitDimension.name) {
	                var havingFilter = colors.toHavingFilter(segmentName);
	                if (havingFilter) {
	                    subQuery = subQuery.performAction(havingFilter);
	                }
	            }
	            measures.forEach(function (measure) {
	                subQuery = subQuery.performAction(measure.toApplyAction());
	            });
	            var applyForSort = essence.getApplyForSort(sortAction);
	            if (applyForSort) {
	                subQuery = subQuery.performAction(applyForSort);
	            }
	            subQuery = subQuery.performAction(sortAction);
	            if (colors && colors.dimension === splitDimension.name) {
	                subQuery = subQuery.performAction(colors.toLimitAction());
	            }
	            else if (limitAction) {
	                subQuery = subQuery.performAction(limitAction);
	            }
	            if (i + 1 < splits.length()) {
	                subQuery = subQuery.apply(constants_1.SPLIT, makeQuery(i + 1));
	            }
	            return subQuery;
	        }
	        query = query.apply(constants_1.SPLIT, makeQuery(0));
	        this.precalculate(this.props, { loading: true });
	        dataSource.executor(query)
	            .then(function (dataset) {
	            if (!_this.mounted)
	                return;
	            _this.precalculate(_this.props, {
	                loading: false,
	                dataset: dataset,
	                error: null
	            });
	        }, function (error) {
	            registerDownloadableDataset(null);
	            if (!_this.mounted)
	                return;
	            _this.precalculate(_this.props, {
	                loading: false,
	                dataset: null,
	                error: error
	            });
	        });
	    };
	    TimeSeries.prototype.componentWillMount = function () {
	        this.precalculate(this.props);
	    };
	    TimeSeries.prototype.componentDidMount = function () {
	        this.mounted = true;
	        var essence = this.props.essence;
	        this.fetchData(essence);
	        window.addEventListener('keydown', this.globalKeyDownListener);
	        window.addEventListener('mousemove', this.globalMouseMoveListener);
	        window.addEventListener('mouseup', this.globalMouseUpListener);
	    };
	    TimeSeries.prototype.componentWillReceiveProps = function (nextProps) {
	        this.precalculate(nextProps);
	        var essence = this.props.essence;
	        var nextEssence = nextProps.essence;
	        if (nextEssence.differentDataSource(essence) ||
	            nextEssence.differentEffectiveFilter(essence, TimeSeries.id) ||
	            nextEssence.differentSplits(essence) ||
	            nextEssence.differentColors(essence) ||
	            nextEssence.newEffectiveMeasures(essence)) {
	            this.fetchData(nextEssence);
	        }
	    };
	    TimeSeries.prototype.componentWillUnmount = function () {
	        this.mounted = false;
	        window.removeEventListener('keydown', this.globalKeyDownListener);
	        window.removeEventListener('mousemove', this.globalMouseMoveListener);
	        window.removeEventListener('mouseup', this.globalMouseUpListener);
	    };
	    TimeSeries.prototype.onScroll = function (e) {
	        var target = e.target;
	        this.setState({
	            scrollLeft: target.scrollLeft,
	            scrollTop: target.scrollTop
	        });
	    };
	    TimeSeries.prototype.getMyEventX = function (e) {
	        var myDOM = ReactDOM.findDOMNode(this);
	        var rect = myDOM.getBoundingClientRect();
	        return dom_1.getXFromEvent(e) - (rect.left + constants_1.VIS_H_PADDING);
	    };
	    TimeSeries.prototype.onMouseDown = function (measure, e) {
	        var scaleX = this.state.scaleX;
	        if (!scaleX)
	            return;
	        var dragStartTime = scaleX.invert(this.getMyEventX(e));
	        this.setState({
	            dragStartTime: dragStartTime,
	            dragTimeRange: null,
	            dragOnMeasure: measure
	        });
	    };
	    TimeSeries.prototype.onMouseMove = function (dataset, measure, scaleX, e) {
	        var essence = this.props.essence;
	        var _a = this.state, hoverTimeRange = _a.hoverTimeRange, hoverMeasure = _a.hoverMeasure;
	        if (!dataset)
	            return;
	        var splitLength = essence.splits.length();
	        var myDOM = ReactDOM.findDOMNode(this);
	        var rect = myDOM.getBoundingClientRect();
	        var dragDate = scaleX.invert(dom_1.getXFromEvent(e) - (rect.left + constants_1.VIS_H_PADDING));
	        var closestDatum;
	        if (splitLength > 1) {
	            var flatData = dataset.flatten();
	            closestDatum = findClosest(flatData, dragDate, scaleX);
	        }
	        else {
	            closestDatum = findClosest(dataset.data, dragDate, scaleX);
	        }
	        var thisHoverTimeRange = closestDatum ? closestDatum[constants_1.TIME_SEGMENT] : null;
	        if (!hoverTimeRange || !hoverTimeRange.equals(thisHoverTimeRange) || measure !== hoverMeasure) {
	            this.setState({
	                hoverTimeRange: thisHoverTimeRange,
	                hoverMeasure: measure
	            });
	        }
	    };
	    TimeSeries.prototype.onMouseLeave = function (measure, e) {
	        var hoverMeasure = this.state.hoverMeasure;
	        if (hoverMeasure === measure) {
	            this.setState({
	                hoverTimeRange: null,
	                hoverMeasure: null
	            });
	        }
	    };
	    TimeSeries.prototype.getDragTimeRange = function (e) {
	        var _a = this.state, dragStartTime = _a.dragStartTime, axisTimeRange = _a.axisTimeRange, scaleX = _a.scaleX;
	        var dragEndTime = scaleX.invert(this.getMyEventX(e));
	        if (dragStartTime.valueOf() === dragEndTime.valueOf()) {
	            dragEndTime = new Date(dragEndTime.valueOf() + 1); // Offset by 1ms to make a meaningful range;
	        }
	        var timeRangeJS = null;
	        if (dragStartTime < dragEndTime) {
	            timeRangeJS = { start: dragStartTime, end: dragEndTime };
	        }
	        else {
	            timeRangeJS = { start: dragEndTime, end: dragStartTime };
	        }
	        return plywood_1.TimeRange.fromJS(timeRangeJS).intersect(axisTimeRange);
	    };
	    TimeSeries.prototype.roundTimeRange = function (dragTimeRange) {
	        var essence = this.props.essence;
	        var splits = essence.splits, timezone = essence.timezone;
	        var timeSplit = splits.last();
	        var timeBucketAction = timeSplit.bucketAction;
	        var duration = timeBucketAction.duration;
	        return plywood_1.TimeRange.fromJS({
	            start: duration.floor(dragTimeRange.start, timezone),
	            end: duration.shift(duration.floor(dragTimeRange.end, timezone), timezone, 1)
	        });
	    };
	    TimeSeries.prototype.globalMouseMoveListener = function (e) {
	        var dragStartTime = this.state.dragStartTime;
	        if (dragStartTime === null)
	            return;
	        var dragTimeRange = this.getDragTimeRange(e);
	        this.setState({
	            dragTimeRange: dragTimeRange,
	            roundDragTimeRange: this.roundTimeRange(dragTimeRange)
	        });
	    };
	    TimeSeries.prototype.globalMouseUpListener = function (e) {
	        var _a = this.props, clicker = _a.clicker, essence = _a.essence;
	        var _b = this.state, dragStartTime = _b.dragStartTime, dragTimeRange = _b.dragTimeRange, dragOnMeasure = _b.dragOnMeasure;
	        if (dragStartTime === null)
	            return;
	        var highlightTimeRange = this.roundTimeRange(this.getDragTimeRange(e));
	        this.resetDrag();
	        // If already highlighted and user clicks within it switches measure
	        if (!dragTimeRange && essence.highlightOn(TimeSeries.id)) {
	            var existingHighlightTimeRange = essence.getSingleHighlightSet().elements[0];
	            if (existingHighlightTimeRange.contains(highlightTimeRange.start)) {
	                var highlight = essence.highlight;
	                if (highlight.measure === dragOnMeasure.name) {
	                    clicker.dropHighlight();
	                }
	                else {
	                    clicker.changeHighlight(TimeSeries.id, dragOnMeasure.name, highlight.delta);
	                }
	                return;
	            }
	        }
	        var timeDimension = essence.getTimeDimension();
	        clicker.changeHighlight(TimeSeries.id, dragOnMeasure.name, index_1.Filter.fromClause(new index_1.FilterClause({
	            expression: timeDimension.expression,
	            selection: plywood_1.r(highlightTimeRange)
	        })));
	    };
	    TimeSeries.prototype.globalKeyDownListener = function (e) {
	        if (!dom_1.escapeKey(e))
	            return;
	        var dragStartTime = this.state.dragStartTime;
	        if (dragStartTime === null)
	            return;
	        this.resetDrag();
	    };
	    TimeSeries.prototype.resetDrag = function () {
	        this.setState({
	            dragStartTime: null,
	            dragTimeRange: null,
	            roundDragTimeRange: null,
	            dragOnMeasure: null
	        });
	    };
	    TimeSeries.prototype.renderHighlighter = function () {
	        var essence = this.props.essence;
	        var _a = this.state, dragTimeRange = _a.dragTimeRange, scaleX = _a.scaleX;
	        if (dragTimeRange !== null) {
	            return React.createElement(highlighter_1.Highlighter, {highlightTimeRange: dragTimeRange, scaleX: scaleX});
	        }
	        if (essence.highlightOn(TimeSeries.id)) {
	            var highlightTimeRange = essence.getSingleHighlightSet().elements[0];
	            return React.createElement(highlighter_1.Highlighter, {highlightTimeRange: highlightTimeRange, scaleX: scaleX});
	        }
	        return null;
	    };
	    TimeSeries.prototype.renderChartBubble = function (dataset, measure, chartIndex, containerStage, chartStage, extentY, scaleY) {
	        var _a = this.props, clicker = _a.clicker, essence = _a.essence, openRawDataModal = _a.openRawDataModal;
	        var _b = this.state, scrollTop = _b.scrollTop, dragTimeRange = _b.dragTimeRange, roundDragTimeRange = _b.roundDragTimeRange, dragOnMeasure = _b.dragOnMeasure, hoverTimeRange = _b.hoverTimeRange, hoverMeasure = _b.hoverMeasure, scaleX = _b.scaleX;
	        var colors = essence.colors, timezone = essence.timezone;
	        if (essence.highlightOnDifferentMeasure(TimeSeries.id, measure.name))
	            return null;
	        var topOffset = chartStage.height * chartIndex + scaleY(extentY[1]) + TEXT_SPACER - scrollTop;
	        if (topOffset < 0)
	            return null;
	        topOffset += containerStage.y;
	        if ((dragTimeRange && dragOnMeasure === measure) || (!dragTimeRange && essence.highlightOn(TimeSeries.id, measure.name))) {
	            var bubbleTimeRange = dragTimeRange || essence.getSingleHighlightSet().elements[0];
	            var shownTimeRange = roundDragTimeRange || bubbleTimeRange;
	            if (colors) {
	                var leftOffset = containerStage.x + constants_1.VIS_H_PADDING + scaleX(bubbleTimeRange.end);
	                var hoverDatums = dataset.data.map(function (d) { return d[constants_1.SPLIT].findDatumByAttribute(constants_1.TIME_SEGMENT, bubbleTimeRange); });
	                var colorValues = colors.getColors(dataset.data.map(function (d) { return d[constants_1.SEGMENT]; }));
	                var colorEntries = dataset.data.map(function (d, i) {
	                    var segment = d[constants_1.SEGMENT];
	                    var hoverDatum = hoverDatums[i];
	                    if (!hoverDatum)
	                        return null;
	                    return {
	                        color: colorValues[i],
	                        segmentLabel: String(segment),
	                        measureLabel: measure.formatDatum(hoverDatum)
	                    };
	                }).filter(Boolean);
	                return React.createElement(hover_multi_bubble_1.HoverMultiBubble, {left: leftOffset, top: topOffset + HOVER_MULTI_BUBBLE_V_OFFSET, segmentLabel: date_1.formatTimeRange(bubbleTimeRange, timezone, date_1.DisplayYear.NEVER), colorEntries: colorEntries, clicker: dragTimeRange ? null : clicker});
	            }
	            else {
	                var leftOffset = containerStage.x + constants_1.VIS_H_PADDING + scaleX(bubbleTimeRange.midpoint());
	                var highlightDatum = dataset.findDatumByAttribute(constants_1.TIME_SEGMENT, shownTimeRange);
	                return React.createElement(segment_bubble_1.SegmentBubble, {left: leftOffset, top: topOffset + HOVER_BUBBLE_V_OFFSET, segmentLabel: date_1.formatTimeRange(shownTimeRange, timezone, date_1.DisplayYear.NEVER), measureLabel: highlightDatum ? measure.formatDatum(highlightDatum) : null, clicker: dragTimeRange ? null : clicker, openRawDataModal: openRawDataModal});
	            }
	        }
	        else if (!dragTimeRange && hoverTimeRange && hoverMeasure === measure) {
	            var leftOffset = containerStage.x + constants_1.VIS_H_PADDING + scaleX(hoverTimeRange.midpoint());
	            if (colors) {
	                var hoverDatums = dataset.data.map(function (d) { return d[constants_1.SPLIT].findDatumByAttribute(constants_1.TIME_SEGMENT, hoverTimeRange); });
	                var colorValues = colors.getColors(dataset.data.map(function (d) { return d[constants_1.SEGMENT]; }));
	                var colorEntries = dataset.data.map(function (d, i) {
	                    var segment = d[constants_1.SEGMENT];
	                    var hoverDatum = hoverDatums[i];
	                    if (!hoverDatum)
	                        return null;
	                    return {
	                        color: colorValues[i],
	                        segmentLabel: String(segment),
	                        measureLabel: measure.formatDatum(hoverDatum)
	                    };
	                }).filter(Boolean);
	                return React.createElement(hover_multi_bubble_1.HoverMultiBubble, {left: leftOffset, top: topOffset + HOVER_MULTI_BUBBLE_V_OFFSET, segmentLabel: date_1.formatTimeRange(hoverTimeRange, timezone, date_1.DisplayYear.NEVER), colorEntries: colorEntries});
	            }
	            else {
	                var hoverDatum = dataset.findDatumByAttribute(constants_1.TIME_SEGMENT, hoverTimeRange);
	                if (!hoverDatum)
	                    return null;
	                return React.createElement(segment_bubble_1.SegmentBubble, {left: leftOffset, top: topOffset + HOVER_BUBBLE_V_OFFSET, segmentLabel: date_1.formatTimeRange(hoverTimeRange, timezone, date_1.DisplayYear.NEVER), measureLabel: measure.formatDatum(hoverDatum)});
	            }
	        }
	        return null;
	    };
	    TimeSeries.prototype.renderChart = function (dataset, measure, chartIndex, containerStage, chartStage, getX, xTicks) {
	        var _a = this.props, essence = _a.essence, clicker = _a.clicker;
	        var _b = this.state, hoverTimeRange = _b.hoverTimeRange, hoverMeasure = _b.hoverMeasure, dragTimeRange = _b.dragTimeRange, scaleX = _b.scaleX;
	        var splits = essence.splits, colors = essence.colors;
	        var splitLength = splits.length();
	        var lineStage = chartStage.within({ top: TEXT_SPACER, right: Y_AXIS_WIDTH, bottom: 1 }); // leave 1 for border
	        var yAxisStage = chartStage.within({ top: TEXT_SPACER, left: lineStage.width, bottom: 1 });
	        var measureName = measure.name;
	        var getY = function (d) { return d[measureName]; };
	        var myDatum = dataset.data[0];
	        var mySplitDataset = myDatum[constants_1.SPLIT];
	        var extentY = null;
	        if (splitLength === 1) {
	            extentY = d3.extent(mySplitDataset.data, getY);
	        }
	        else {
	            var minY = 0;
	            var maxY = 0;
	            mySplitDataset.data.forEach(function (datum) {
	                var subDataset = datum[constants_1.SPLIT];
	                if (subDataset) {
	                    var tempExtentY = d3.extent(subDataset.data, getY);
	                    minY = Math.min(tempExtentY[0], minY);
	                    maxY = Math.max(tempExtentY[1], maxY);
	                }
	            });
	            extentY = [minY, maxY];
	        }
	        var horizontalGridLines;
	        var chartLines;
	        var verticalAxis;
	        var bubble;
	        if (!isNaN(extentY[0]) && !isNaN(extentY[1])) {
	            var scaleY_1 = d3.scale.linear()
	                .domain([Math.min(extentY[0] * 1.1, 0), Math.max(extentY[1] * 1.1, 0)])
	                .range([lineStage.height, 0]);
	            var yTicks = scaleY_1.ticks(5).filter(function (n) { return n !== 0; });
	            horizontalGridLines = React.createElement(grid_lines_1.GridLines, {orientation: "horizontal", scale: scaleY_1, ticks: yTicks, stage: lineStage});
	            verticalAxis = React.createElement(vertical_axis_1.VerticalAxis, {stage: yAxisStage, ticks: yTicks, scale: scaleY_1});
	            if (splitLength === 1) {
	                chartLines = [];
	                chartLines.push(React.createElement(chart_line_1.ChartLine, {key: 'single', dataset: mySplitDataset, getY: getY, scaleX: scaleX, scaleY: scaleY_1, stage: lineStage, showArea: true, hoverTimeRange: (!dragTimeRange && hoverMeasure === measure) ? hoverTimeRange : null, color: "default"}));
	            }
	            else {
	                var colorValues = null;
	                if (colors)
	                    colorValues = colors.getColors(mySplitDataset.data.map(function (d) { return d[constants_1.SEGMENT]; }));
	                chartLines = mySplitDataset.data.map(function (datum, i) {
	                    var subDataset = datum[constants_1.SPLIT];
	                    if (!subDataset)
	                        return null;
	                    return React.createElement(chart_line_1.ChartLine, {key: 'single' + i, dataset: subDataset, getY: getY, scaleX: scaleX, scaleY: scaleY_1, stage: lineStage, showArea: false, hoverTimeRange: (!dragTimeRange && hoverMeasure === measure) ? hoverTimeRange : null, color: colorValues ? colorValues[i] : null});
	                });
	            }
	            bubble = this.renderChartBubble(mySplitDataset, measure, chartIndex, containerStage, chartStage, extentY, scaleY_1);
	        }
	        return React.createElement("div", {className: "measure-time-chart", key: measureName, onMouseDown: this.onMouseDown.bind(this, measure), onMouseMove: this.onMouseMove.bind(this, mySplitDataset, measure, scaleX), onMouseLeave: this.onMouseLeave.bind(this, measure)}, React.createElement("svg", {style: chartStage.getWidthHeight(), viewBox: chartStage.getViewBox()}, horizontalGridLines, React.createElement(grid_lines_1.GridLines, {orientation: "vertical", scale: scaleX, ticks: xTicks, stage: lineStage}), chartLines, verticalAxis, React.createElement("line", {className: "vis-bottom", x1: "0", y1: chartStage.height - 0.5, x2: chartStage.width, y2: chartStage.height - 0.5})), React.createElement(vis_measure_label_1.VisMeasureLabel, {measure: measure, datum: myDatum}), this.renderHighlighter(), bubble);
	    };
	    TimeSeries.prototype.precalculate = function (props, datasetLoad) {
	        if (datasetLoad === void 0) { datasetLoad = null; }
	        var registerDownloadableDataset = props.registerDownloadableDataset, essence = props.essence, stage = props.stage;
	        var splits = essence.splits;
	        var existingDatasetLoad = this.state.datasetLoad;
	        var newState = {};
	        if (datasetLoad) {
	            // Always keep the old dataset while loading (for now)
	            if (datasetLoad.loading)
	                datasetLoad.dataset = existingDatasetLoad.dataset;
	            newState.datasetLoad = datasetLoad;
	        }
	        else {
	            datasetLoad = this.state.datasetLoad;
	        }
	        var dataset = datasetLoad.dataset;
	        if (dataset && splits.length()) {
	            if (registerDownloadableDataset)
	                registerDownloadableDataset(dataset);
	        }
	        var axisTimeRange = essence.getEffectiveFilter(TimeSeries.id).getTimeRange(essence.dataSource.timeAttribute);
	        if (axisTimeRange) {
	            newState.axisTimeRange = axisTimeRange;
	            newState.scaleX = d3.time.scale()
	                .domain([axisTimeRange.start, axisTimeRange.end])
	                .range([0, stage.width - constants_1.VIS_H_PADDING * 2 - Y_AXIS_WIDTH]);
	        }
	        this.setState(newState);
	    };
	    TimeSeries.prototype.render = function () {
	        var _this = this;
	        var _a = this.props, essence = _a.essence, stage = _a.stage;
	        var _b = this.state, datasetLoad = _b.datasetLoad, axisTimeRange = _b.axisTimeRange, scaleX = _b.scaleX;
	        var splits = essence.splits, timezone = essence.timezone;
	        var measureCharts;
	        var bottomAxis;
	        if (datasetLoad.dataset && splits.length() && axisTimeRange) {
	            var measures = essence.getEffectiveMeasures().toArray();
	            var getX = function (d) { return midpoint(d[constants_1.TIME_SEGMENT]); };
	            var chartWidth = stage.width - constants_1.VIS_H_PADDING * 2;
	            var chartHeight = Math.max(MIN_CHART_HEIGHT, Math.floor(Math.min(chartWidth / MAX_ASPECT_RATIO, (stage.height - X_AXIS_HEIGHT) / measures.length)));
	            var chartStage = new index_1.Stage({
	                x: constants_1.VIS_H_PADDING,
	                y: 0,
	                width: chartWidth,
	                height: chartHeight
	            });
	            var xTicks = scaleX.ticks();
	            measureCharts = measures.map(function (measure, chartIndex) {
	                return _this.renderChart(datasetLoad.dataset, measure, chartIndex, stage, chartStage, getX, xTicks);
	            });
	            var xAxisStage = index_1.Stage.fromSize(chartStage.width, X_AXIS_HEIGHT);
	            bottomAxis = React.createElement("svg", {className: "bottom-axis", width: xAxisStage.width, height: xAxisStage.height}, React.createElement(time_axis_1.TimeAxis, {stage: xAxisStage, ticks: xTicks, scale: scaleX, timezone: timezone}));
	        }
	        var measureChartsStyle = {
	            maxHeight: stage.height - X_AXIS_HEIGHT
	        };
	        return React.createElement("div", {className: "time-series"}, React.createElement("div", {className: "measure-time-charts", style: measureChartsStyle, onScroll: this.onScroll.bind(this)}, measureCharts), bottomAxis, datasetLoad.error ? React.createElement(query_error_1.QueryError, {error: datasetLoad.error}) : null, datasetLoad.loading ? React.createElement(loader_1.Loader, null) : null);
	    };
	    TimeSeries.id = 'time-series';
	    TimeSeries.title = 'Time Series';
	    return TimeSeries;
	}(React.Component));
	exports.TimeSeries = TimeSeries;


/***/ },
/* 409 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(410);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./time-series.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./time-series.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 410 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".time-series{position:absolute;top:0;bottom:0;left:0;right:0;display:inline-block;overflow:hidden}.time-series .measure-time-charts{overflow-x:hidden;overflow-y:auto;padding-left:10px}.time-series .measure-time-chart .vis-measure-label{position:absolute;left:6px;top:12px}.time-series .measure-time-chart .vis-bottom{pointer-events:none;stroke:#ccc}.time-series .measure-time-chart .highlighter{position:absolute;top:0;bottom:0;left:0;right:0}.time-series .measure-time-chart:nth-child(n+2) .highlighter .frame{border-top:0}.time-series .bottom-axis{padding-left:10px}.time-series .loader,.time-series .query-error{position:absolute;top:0;bottom:0;left:0;right:0}\n", ""]);

	// exports


/***/ },
/* 411 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(412);
	var React = __webpack_require__(5);
	var VisMeasureLabel = (function (_super) {
	    __extends(VisMeasureLabel, _super);
	    function VisMeasureLabel() {
	        _super.call(this);
	        // this.state = {};
	    }
	    VisMeasureLabel.prototype.render = function () {
	        var _a = this.props, measure = _a.measure, datum = _a.datum;
	        return React.createElement("div", {className: "vis-measure-label"}, React.createElement("span", {className: "measure-title"}, measure.title), React.createElement("span", {className: "colon"}, ": "), React.createElement("span", {className: "measure-value"}, measure.formatFn(datum[measure.name])));
	    };
	    return VisMeasureLabel;
	}(React.Component));
	exports.VisMeasureLabel = VisMeasureLabel;


/***/ },
/* 412 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(413);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./vis-measure-label.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./vis-measure-label.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 413 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".vis-measure-label{pointer-events:none}\n", ""]);

	// exports


/***/ },
/* 414 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(415);
	var React = __webpack_require__(5);
	var d3 = __webpack_require__(241);
	var constants_1 = __webpack_require__(222);
	var lineFn = d3.svg.line();
	var ChartLine = (function (_super) {
	    __extends(ChartLine, _super);
	    function ChartLine() {
	        _super.call(this);
	        // this.state = {};
	    }
	    ChartLine.prototype.render = function () {
	        var _a = this.props, stage = _a.stage, dataset = _a.dataset, getY = _a.getY, scaleX = _a.scaleX, scaleY = _a.scaleY, color = _a.color, showArea = _a.showArea, hoverTimeRange = _a.hoverTimeRange;
	        if (!dataset || !color)
	            return null;
	        var dataPoints = [];
	        var hoverDataPoint = null;
	        var ds = dataset.data;
	        for (var i = 0; i < ds.length; i++) {
	            var datum = ds[i];
	            var timeRange = datum[constants_1.TIME_SEGMENT];
	            if (!timeRange)
	                return null; // Incorrect data loaded
	            var timeRangeMidPoint = timeRange.midpoint();
	            var measureValue = getY(datum);
	            // Add potential pre zero point
	            var prevDatum = ds[i - 1];
	            if (prevDatum) {
	                var prevTimeRange = prevDatum[constants_1.TIME_SEGMENT];
	                if (prevTimeRange.end.valueOf() !== timeRange.start.valueOf()) {
	                    dataPoints.push([
	                        scaleX(timeRangeMidPoint.valueOf() - (timeRange.end.valueOf() - timeRange.start.valueOf())),
	                        scaleY(0)
	                    ]);
	                }
	            }
	            // Add the point itself
	            var y = scaleY(measureValue);
	            var dataPoint = [scaleX(timeRangeMidPoint), isNaN(y) ? 0 : y];
	            dataPoints.push(dataPoint);
	            if (hoverTimeRange && hoverTimeRange.equals(timeRange)) {
	                hoverDataPoint = dataPoint;
	            }
	            // Add potential post zero point
	            var nextDatum = ds[i + 1];
	            if (nextDatum) {
	                var nextTimeRange = nextDatum[constants_1.TIME_SEGMENT];
	                if (timeRange.end.valueOf() !== nextTimeRange.start.valueOf()) {
	                    dataPoints.push([
	                        scaleX(timeRangeMidPoint.valueOf() + (timeRange.end.valueOf() - timeRange.start.valueOf())),
	                        scaleY(0)
	                    ]);
	                }
	            }
	        }
	        var strokeStyle = null;
	        var fillStyle = null;
	        if (color !== 'default') {
	            strokeStyle = { stroke: color };
	            fillStyle = { fill: color };
	        }
	        var areaPath = null;
	        var linePath = null;
	        var singletonCircle = null;
	        if (dataPoints.length > 1) {
	            if (showArea) {
	                var areaFn = d3.svg.area().y0(scaleY(0));
	                areaPath = React.createElement("path", {className: "area", d: areaFn(dataPoints)});
	            }
	            linePath = React.createElement("path", {className: "line", d: lineFn(dataPoints), style: strokeStyle});
	        }
	        else if (dataPoints.length === 1) {
	            singletonCircle = React.createElement("circle", {className: "singleton", cx: dataPoints[0][0], cy: dataPoints[0][1], r: "2", style: fillStyle});
	        }
	        var hoverCircle = null;
	        if (hoverDataPoint) {
	            hoverCircle = React.createElement("circle", {className: "hover", cx: hoverDataPoint[0], cy: hoverDataPoint[1], r: "2.5", style: strokeStyle});
	        }
	        return React.createElement("g", {className: "chart-line", transform: stage.getTransform()}, areaPath, linePath, singletonCircle, hoverCircle);
	    };
	    return ChartLine;
	}(React.Component));
	exports.ChartLine = ChartLine;


/***/ },
/* 415 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(416);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./chart-line.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./chart-line.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 416 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".chart-line{pointer-events:none}.chart-line .area{stroke:none;fill:rgba(30,163,230,0.14);fill-opacity:.9}.chart-line .line{fill:none;stroke:#1ea3e6;stroke-width:1.6px}.chart-line .singleton{fill:#1ea3e6;stroke:none}.chart-line .hover{fill:#fff;stroke:#1ea3e6;stroke-width:2}\n", ""]);

	// exports


/***/ },
/* 417 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(418);
	var React = __webpack_require__(5);
	var chronoshift_1 = __webpack_require__(179);
	var dom_1 = __webpack_require__(240);
	var TICK_HEIGHT = 5;
	var TEXT_OFFSET = 12;
	var TimeAxis = (function (_super) {
	    __extends(TimeAxis, _super);
	    function TimeAxis() {
	        _super.call(this);
	        // this.state = {};
	    }
	    TimeAxis.prototype.render = function () {
	        var _a = this.props, stage = _a.stage, ticks = _a.ticks, scale = _a.scale, timezone = _a.timezone;
	        //var format = d3.time.format('%b %-d');
	        var format = scale.tickFormat();
	        var timezoneString = timezone.toString();
	        function formatWithTimezone(d) {
	            return format(chronoshift_1.WallTime.UTCToWallTime(d, timezoneString));
	        }
	        var lines = ticks.map(function (tick) {
	            var x = dom_1.roundToHalfPx(scale(tick));
	            return React.createElement("line", {key: String(tick), x1: x, y1: 0, x2: x, y2: TICK_HEIGHT});
	        });
	        var labelY = TICK_HEIGHT + TEXT_OFFSET;
	        var labels = ticks.map(function (tick) {
	            var x = scale(tick);
	            return React.createElement("text", {key: String(tick), x: x, y: labelY}, formatWithTimezone(tick));
	        });
	        return React.createElement("g", {className: "time-axis", transform: stage.getTransform()}, lines, labels);
	    };
	    return TimeAxis;
	}(React.Component));
	exports.TimeAxis = TimeAxis;


/***/ },
/* 418 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(419);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./time-axis.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./time-axis.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 419 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".time-axis{position:absolute;top:0;bottom:0;left:0;right:0}.time-axis line{pointer-events:none}.time-axis line{stroke:#ccc}.time-axis text{text-anchor:middle;font-size:12px;fill:#666}\n", ""]);

	// exports


/***/ },
/* 420 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(421);
	var React = __webpack_require__(5);
	var formatter_1 = __webpack_require__(323);
	var dom_1 = __webpack_require__(240);
	var index_1 = __webpack_require__(192);
	var TICK_WIDTH = 5;
	var TEXT_OFFSET = 2;
	var VerticalAxis = (function (_super) {
	    __extends(VerticalAxis, _super);
	    function VerticalAxis() {
	        _super.call(this);
	        // this.state = {};
	    }
	    VerticalAxis.prototype.render = function () {
	        var _a = this.props, stage = _a.stage, ticks = _a.ticks, scale = _a.scale, topLineExtend = _a.topLineExtend;
	        var formatter = formatter_1.formatterFromData(ticks, index_1.Measure.DEFAULT_FORMAT);
	        var lines = ticks.map(function (tick) {
	            var y = dom_1.roundToHalfPx(scale(tick));
	            return React.createElement("line", {className: "tick", key: String(tick), x1: 0, y1: y, x2: TICK_WIDTH, y2: y});
	        });
	        var labelX = TICK_WIDTH + TEXT_OFFSET;
	        var dy = "0.31em";
	        var labels = ticks.map(function (tick) {
	            var y = scale(tick);
	            return React.createElement("text", {className: "tick", key: String(tick), x: labelX, y: y, dy: dy}, formatter(tick));
	        });
	        return React.createElement("g", {className: "vertical-axis", transform: stage.getTransform()}, React.createElement("line", {className: "border", x1: 0.5, y1: -topLineExtend, x2: 0.5, y2: stage.height}), lines, labels);
	    };
	    VerticalAxis.defaultProps = {
	        topLineExtend: 0
	    };
	    return VerticalAxis;
	}(React.Component));
	exports.VerticalAxis = VerticalAxis;


/***/ },
/* 421 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(422);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./vertical-axis.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./vertical-axis.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 422 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".vertical-axis{pointer-events:none}.vertical-axis line.border{stroke:#ccc}.vertical-axis line.tick{stroke:#ccc}.vertical-axis text{font-size:12px;fill:#666}\n", ""]);

	// exports


/***/ },
/* 423 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(424);
	var React = __webpack_require__(5);
	var dom_1 = __webpack_require__(240);
	var GridLines = (function (_super) {
	    __extends(GridLines, _super);
	    function GridLines() {
	        _super.call(this);
	        // this.state = {};
	    }
	    GridLines.prototype.render = function () {
	        var _a = this.props, orientation = _a.orientation, stage = _a.stage, ticks = _a.ticks, scale = _a.scale;
	        var lines = ticks.map(function (tick) {
	            var lineProps = {
	                key: String(tick)
	            };
	            if (orientation === 'horizontal') {
	                var y = dom_1.roundToHalfPx(scale(tick));
	                lineProps.x1 = 0;
	                lineProps.x2 = stage.width;
	                lineProps.y1 = y;
	                lineProps.y2 = y;
	            }
	            else {
	                var x = dom_1.roundToHalfPx(scale(tick));
	                lineProps.x1 = x;
	                lineProps.x2 = x;
	                lineProps.y1 = 0;
	                lineProps.y2 = stage.height;
	            }
	            return React.createElement('line', lineProps);
	        });
	        return React.createElement("g", {className: dom_1.classNames('grid-lines', orientation), transform: stage.getTransform()}, lines);
	    };
	    return GridLines;
	}(React.Component));
	exports.GridLines = GridLines;


/***/ },
/* 424 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(425);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./grid-lines.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./grid-lines.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 425 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".grid-lines line{pointer-events:none;stroke:#ebebeb}\n", ""]);

	// exports


/***/ },
/* 426 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(427);
	var React = __webpack_require__(5);
	var Highlighter = (function (_super) {
	    __extends(Highlighter, _super);
	    function Highlighter() {
	        _super.call(this);
	        //this.state = {};
	    }
	    Highlighter.prototype.render = function () {
	        var _a = this.props, highlightTimeRange = _a.highlightTimeRange, scaleX = _a.scaleX;
	        if (!highlightTimeRange)
	            return null;
	        var startPos = scaleX(highlightTimeRange.start);
	        var endPos = scaleX(highlightTimeRange.end);
	        var whiteoutLeftStyle = {
	            width: Math.max(startPos, 0)
	        };
	        var frameStyle = {
	            left: startPos,
	            width: Math.max(endPos - startPos, 0)
	        };
	        var whiteoutRightStyle = {
	            left: endPos
	        };
	        return React.createElement("div", {className: "highlighter"}, React.createElement("div", {className: "whiteout left", style: whiteoutLeftStyle}), React.createElement("div", {className: "frame", style: frameStyle}), React.createElement("div", {className: "whiteout right", style: whiteoutRightStyle}));
	    };
	    return Highlighter;
	}(React.Component));
	exports.Highlighter = Highlighter;


/***/ },
/* 427 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(428);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./highlighter.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./highlighter.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 428 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".highlighter{pointer-events:none}.highlighter .frame{position:absolute;height:100%;border:1px dashed #168bc5;border-radius:2px;z-index:1}.highlighter .frame .highlight-controls{position:absolute;right:-33px}.highlighter .whiteout{position:absolute;height:100%;left:0;right:0;background:#fff;opacity:0.5}\n", ""]);

	// exports


/***/ },
/* 429 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(430);
	var React = __webpack_require__(5);
	var body_portal_1 = __webpack_require__(260);
	var segment_action_buttons_1 = __webpack_require__(395);
	var LEFT_OFFSET = 22;
	var HoverMultiBubble = (function (_super) {
	    __extends(HoverMultiBubble, _super);
	    function HoverMultiBubble() {
	        _super.call(this);
	        // this.state = {};
	    }
	    HoverMultiBubble.prototype.renderColorSwabs = function () {
	        var colorEntries = this.props.colorEntries;
	        if (!colorEntries || !colorEntries.length)
	            return null;
	        var colorSwabs = colorEntries.map(function (colorEntry) {
	            var color = colorEntry.color, segmentLabel = colorEntry.segmentLabel, measureLabel = colorEntry.measureLabel;
	            var swabStyle = { background: color };
	            return React.createElement("div", {className: "color", key: segmentLabel}, React.createElement("div", {className: "color-swab", style: swabStyle}), React.createElement("div", {className: "color-name"}, segmentLabel), React.createElement("div", {className: "color-value"}, measureLabel));
	        });
	        return React.createElement("div", {className: "colors"}, colorSwabs);
	    };
	    HoverMultiBubble.prototype.render = function () {
	        var _a = this.props, left = _a.left, top = _a.top, dimension = _a.dimension, segmentLabel = _a.segmentLabel, clicker = _a.clicker, onClose = _a.onClose;
	        return React.createElement(body_portal_1.BodyPortal, {left: left + LEFT_OFFSET, top: top, disablePointerEvents: !clicker}, React.createElement("div", {className: "hover-multi-bubble"}, React.createElement("div", {className: "bucket"}, segmentLabel), this.renderColorSwabs(), clicker ? React.createElement(segment_action_buttons_1.SegmentActionButtons, {clicker: clicker, dimension: dimension, segmentLabel: segmentLabel, disableMoreMenu: true, onClose: onClose}) : null));
	    };
	    return HoverMultiBubble;
	}(React.Component));
	exports.HoverMultiBubble = HoverMultiBubble;


/***/ },
/* 430 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(431);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./hover-multi-bubble.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./hover-multi-bubble.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 431 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".hover-multi-bubble{background:#fff;border-radius:2px;box-shadow:0 3px 10px 0 rgba(0,0,0,0.26),0 0 3px 0 rgba(0,0,0,0.16)}.hover-multi-bubble{background:rgba(255,255,255,0.9);position:absolute;width:200px;padding:8px}.hover-multi-bubble .bucket{color:#a6a6a6;margin-bottom:6px}.hover-multi-bubble .color .color-swab{position:absolute;top:1px;left:0;width:15px;height:15px;border-radius:2px}.hover-multi-bubble .color .color-name{white-space:nowrap;overflow-x:hidden;text-overflow:ellipsis;display:inline-block;margin-left:22px;line-height:18px;width:108px}.hover-multi-bubble .color .color-value{position:absolute;top:0;bottom:0;right:0;width:60px;line-height:18px;text-align:right}.hover-multi-bubble .segment-action-buttons{margin-top:7px}\n", ""]);

	// exports


/***/ },
/* 432 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(433);
	var React = __webpack_require__(5);
	var immutable_class_1 = __webpack_require__(189);
	var plywood_1 = __webpack_require__(188);
	var index_1 = __webpack_require__(192);
	var constants_1 = __webpack_require__(222);
	var dom_1 = __webpack_require__(240);
	var vis_measure_label_1 = __webpack_require__(411);
	var vertical_axis_1 = __webpack_require__(420);
	var bucket_marks_1 = __webpack_require__(435);
	var grid_lines_1 = __webpack_require__(423);
	var loader_1 = __webpack_require__(171);
	var query_error_1 = __webpack_require__(335);
	var segment_bubble_1 = __webpack_require__(392);
	var TEXT_SPACER = 36;
	var X_AXIS_HEIGHT = 84;
	var Y_AXIS_WIDTH = 60;
	var MIN_CHART_HEIGHT = 200;
	var MAX_STEP_WIDTH = 140; // Note that the step is bar + empty space around it. The width of the rectangle is step * BAR_PROPORTION
	var MIN_STEP_WIDTH = 20;
	var BAR_PROPORTION = 0.8;
	var BARS_MIN_PAD_LEFT = 30;
	var BARS_MIN_PAD_RIGHT = 6;
	var HOVER_BUBBLE_V_OFFSET = 8;
	var SELECTION_PAD = 3.5; // Must be a x.5
	var SELECTION_CORNERS = 2;
	var SELECTION_DASHARRAY = "3,3"; // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray
	function getFilterFromDatum(splits, datum) {
	    var segment = datum[constants_1.SEGMENT];
	    return index_1.Filter.fromClause(new index_1.FilterClause({
	        expression: splits.get(0).expression,
	        selection: plywood_1.r(plywood_1.TimeRange.isTimeRange(segment) ? segment : plywood_1.Set.fromJS([segment]))
	    }));
	}
	var BarChart = (function (_super) {
	    __extends(BarChart, _super);
	    function BarChart() {
	        _super.call(this);
	        this.state = {
	            datasetLoad: {},
	            scrollLeft: 0,
	            scrollTop: 0,
	            hoverValue: null,
	            hoverMeasure: null
	        };
	    }
	    BarChart.handleCircumstance = function (dataSource, splits, colors, current) {
	        // Must have at least one dimension
	        if (splits.length() === 0) {
	            var someDimensions = dataSource.dimensions.toArray().filter(function (d) { return d.kind === 'string'; }).slice(0, 2);
	            return index_1.Resolve.manual(4, 'This visualization requires at least one split', someDimensions.map(function (someDimension) {
	                return {
	                    description: "Add a split on " + someDimension.title,
	                    adjustment: {
	                        splits: index_1.Splits.fromSplitCombine(index_1.SplitCombine.fromExpression(someDimension.expression))
	                    }
	                };
	            }));
	        }
	        // Has too many splits
	        if (splits.length() > 1) {
	            return index_1.Resolve.manual(3, 'Too many splits', [
	                {
	                    description: "Remove all but the first split",
	                    adjustment: {
	                        splits: index_1.Splits.fromSplitCombine(splits.get(0))
	                    }
	                }
	            ]);
	        }
	        var booleanBoost = 0;
	        // Auto adjustment
	        var autoChanged = false;
	        splits = splits.map(function (split, i) {
	            var splitDimension = dataSource.getDimensionByExpression(split.expression);
	            if (splitDimension.kind === 'boolean') {
	                booleanBoost = 2;
	            }
	            if (!split.sortAction) {
	                if (splitDimension.kind === 'boolean') {
	                    split = split.changeSortAction(new plywood_1.SortAction({
	                        expression: plywood_1.$(constants_1.SEGMENT),
	                        direction: 'descending'
	                    }));
	                }
	                else {
	                    split = split.changeSortAction(dataSource.getDefaultSortAction());
	                }
	                autoChanged = true;
	            }
	            else if (split.sortAction.refName() === constants_1.TIME_SEGMENT) {
	                split = split.changeSortAction(new plywood_1.SortAction({
	                    expression: plywood_1.$(constants_1.SEGMENT),
	                    direction: split.sortAction.direction
	                }));
	                autoChanged = true;
	            }
	            // ToDo: review this
	            if (!split.limitAction && (autoChanged || splitDimension.kind !== 'time')) {
	                split = split.changeLimit(i ? 5 : 25);
	                autoChanged = true;
	            }
	            return split;
	        });
	        if (colors) {
	            colors = null;
	            autoChanged = true;
	        }
	        return autoChanged ? index_1.Resolve.automatic(5 + booleanBoost, { splits: splits }) : index_1.Resolve.ready(current ? 10 : (7 + booleanBoost));
	    };
	    BarChart.prototype.fetchData = function (essence) {
	        var _this = this;
	        var splits = essence.splits, dataSource = essence.dataSource;
	        var measures = essence.getEffectiveMeasures();
	        var $main = plywood_1.$('main');
	        var query = plywood_1.ply()
	            .apply('main', $main.filter(essence.getEffectiveFilter(BarChart.id).toExpression()));
	        measures.forEach(function (measure) {
	            query = query.performAction(measure.toApplyAction());
	        });
	        function makeQuery(i) {
	            var split = splits.get(i);
	            var sortAction = split.sortAction, limitAction = split.limitAction;
	            if (!sortAction)
	                throw new Error('something went wrong in bar chart query generation');
	            var subQuery = $main.split(split.toSplitExpression(), constants_1.SEGMENT);
	            measures.forEach(function (measure) {
	                subQuery = subQuery.performAction(measure.toApplyAction());
	            });
	            var applyForSort = essence.getApplyForSort(sortAction);
	            if (applyForSort) {
	                subQuery = subQuery.performAction(applyForSort);
	            }
	            subQuery = subQuery.performAction(sortAction);
	            if (limitAction) {
	                subQuery = subQuery.performAction(limitAction);
	            }
	            if (i + 1 < splits.length()) {
	                subQuery = subQuery.apply(constants_1.SPLIT, makeQuery(i + 1));
	            }
	            return subQuery;
	        }
	        query = query.apply(constants_1.SPLIT, makeQuery(0));
	        this.precalculate(this.props, { loading: true });
	        dataSource.executor(query)
	            .then(function (dataset) {
	            if (!_this.mounted)
	                return;
	            _this.precalculate(_this.props, {
	                loading: false,
	                dataset: dataset,
	                error: null
	            });
	        }, function (error) {
	            if (!_this.mounted)
	                return;
	            _this.precalculate(_this.props, {
	                loading: false,
	                dataset: null,
	                error: error
	            });
	        });
	    };
	    BarChart.prototype.componentWillMount = function () {
	        this.precalculate(this.props);
	    };
	    BarChart.prototype.componentDidMount = function () {
	        this.mounted = true;
	        var essence = this.props.essence;
	        this.fetchData(essence);
	    };
	    BarChart.prototype.componentWillReceiveProps = function (nextProps) {
	        this.precalculate(nextProps);
	        var essence = this.props.essence;
	        var nextEssence = nextProps.essence;
	        if (nextEssence.differentDataSource(essence) ||
	            nextEssence.differentEffectiveFilter(essence, BarChart.id) ||
	            nextEssence.differentSplits(essence) ||
	            nextEssence.newEffectiveMeasures(essence)) {
	            this.fetchData(nextEssence);
	        }
	    };
	    BarChart.prototype.componentWillUnmount = function () {
	        this.mounted = false;
	    };
	    BarChart.prototype.onScroll = function (e) {
	        var target = e.target;
	        this.setState({
	            scrollLeft: target.scrollLeft,
	            scrollTop: target.scrollTop
	        });
	    };
	    BarChart.prototype.onMouseEnter = function (measure, hoverValue, e) {
	        this.setState({
	            hoverValue: { value: hoverValue },
	            hoverMeasure: measure
	        });
	    };
	    BarChart.prototype.onMouseLeave = function (measure, e) {
	        var hoverMeasure = this.state.hoverMeasure;
	        if (hoverMeasure === measure) {
	            this.setState({
	                hoverValue: null,
	                hoverMeasure: null
	            });
	        }
	    };
	    BarChart.prototype.onClick = function (measure, datum, e) {
	        var _a = this.props, essence = _a.essence, clicker = _a.clicker;
	        var splits = essence.splits;
	        var rowHighlight = getFilterFromDatum(splits, datum);
	        if (essence.highlightOn(BarChart.id, measure.name)) {
	            if (rowHighlight.equals(essence.highlight.delta)) {
	                clicker.dropHighlight();
	                return;
	            }
	        }
	        clicker.changeHighlight(BarChart.id, measure.name, rowHighlight);
	    };
	    BarChart.prototype.renderChartBubble = function (dataset, measure, chartIndex, containerStage, chartStage, extentY, scaleY) {
	        var _a = this.props, essence = _a.essence, clicker = _a.clicker, openRawDataModal = _a.openRawDataModal;
	        var _b = this.state, scrollTop = _b.scrollTop, hoverValue = _b.hoverValue, hoverMeasure = _b.hoverMeasure, scaleX = _b.scaleX;
	        var splits = essence.splits;
	        var stepWidth = scaleX.rangeBand();
	        if (essence.highlightOnDifferentMeasure(BarChart.id, measure.name))
	            return null;
	        if (essence.highlightOn(BarChart.id, measure.name)) {
	            var bubbleHighlightDelta = essence.highlight.delta;
	            var highlightDatum = dataset.data.filter(function (d) { return bubbleHighlightDelta.equals(getFilterFromDatum(splits, d)); })[0];
	            if (!highlightDatum)
	                return null;
	            var dimension = essence.dataSource.getDimensionByExpression(splits.get(0).expression);
	            var leftOffset = containerStage.x + constants_1.VIS_H_PADDING + scaleX(highlightDatum[constants_1.SEGMENT]) + stepWidth / 2;
	            var topOffset = chartStage.height * chartIndex - scrollTop + scaleY(highlightDatum[measure.name]) + TEXT_SPACER - HOVER_BUBBLE_V_OFFSET;
	            if (topOffset > 0) {
	                return React.createElement(segment_bubble_1.SegmentBubble, {left: leftOffset, top: containerStage.y + topOffset, dimension: dimension, segmentLabel: String(highlightDatum[constants_1.SEGMENT]), measureLabel: measure.formatDatum(highlightDatum), clicker: clicker, openRawDataModal: openRawDataModal});
	            }
	        }
	        else if (hoverValue && hoverMeasure === measure) {
	            var hoverDatum = dataset.findDatumByAttribute(constants_1.SEGMENT, hoverValue.value);
	            var leftOffset = containerStage.x + constants_1.VIS_H_PADDING + scaleX(hoverValue.value) + stepWidth / 2;
	            var topOffset = chartStage.height * chartIndex - scrollTop + scaleY(hoverDatum[measure.name]) + TEXT_SPACER - HOVER_BUBBLE_V_OFFSET;
	            if (topOffset > 0) {
	                return React.createElement(segment_bubble_1.SegmentBubble, {top: containerStage.y + topOffset, left: leftOffset, segmentLabel: String(hoverValue.value), measureLabel: measure.formatDatum(hoverDatum)});
	            }
	        }
	        return null;
	    };
	    BarChart.prototype.renderChart = function (dataset, measure, chartIndex, containerStage, chartStage, getX) {
	        var _this = this;
	        var essence = this.props.essence;
	        var _a = this.state, hoverValue = _a.hoverValue, hoverMeasure = _a.hoverMeasure, xTicks = _a.xTicks, scaleX = _a.scaleX;
	        var splits = essence.splits;
	        var myDatum = dataset.data[0];
	        var mySplitDataset = myDatum[constants_1.SPLIT];
	        var barStage = chartStage.within({ top: TEXT_SPACER, right: Y_AXIS_WIDTH, bottom: X_AXIS_HEIGHT });
	        var xAxisStage = chartStage.within({ right: Y_AXIS_WIDTH, top: TEXT_SPACER + barStage.height });
	        var yAxisStage = chartStage.within({ top: TEXT_SPACER, left: barStage.width });
	        var measureName = measure.name;
	        var getY = function (d) { return d[measureName]; };
	        var borderHighlightDelta = null;
	        var bubbleHighlightDelta = null;
	        if (essence.highlightOn(BarChart.id)) {
	            borderHighlightDelta = essence.highlight.delta;
	            if (essence.highlightOn(BarChart.id, measureName)) {
	                bubbleHighlightDelta = borderHighlightDelta;
	            }
	        }
	        var extentY = d3.extent(mySplitDataset.data, getY);
	        var stepWidth = scaleX.rangeBand();
	        var bubble;
	        var horizontalGridLines;
	        var bars;
	        var barHighlight;
	        var barGhosts;
	        var slantyLabels;
	        var verticalAxis;
	        if (!isNaN(extentY[0]) && !isNaN(extentY[1])) {
	            var scaleY = d3.scale.linear()
	                .domain([Math.min(extentY[0] * 1.1, 0), Math.max(extentY[1] * 1.1, 0)])
	                .range([barStage.height, 0]);
	            var yTicks = scaleY.ticks(5).filter(function (n) { return n !== 0; });
	            horizontalGridLines = React.createElement(grid_lines_1.GridLines, {orientation: "horizontal", scale: scaleY, ticks: yTicks, stage: barStage});
	            verticalAxis = React.createElement(vertical_axis_1.VerticalAxis, {stage: yAxisStage, ticks: yTicks, scale: scaleY, topLineExtend: TEXT_SPACER - (chartIndex ? 0 : 10)});
	            var barWidth = Math.max(stepWidth * BAR_PROPORTION, 0);
	            var barOffset = (stepWidth - barWidth) / 2;
	            bars = [];
	            barGhosts = [];
	            slantyLabels = [];
	            var scaleY0 = scaleY(0);
	            mySplitDataset.data.forEach(function (d) {
	                var segmentValue = d[constants_1.SEGMENT];
	                var segmentValueStr = String(segmentValue);
	                var x = scaleX(getX(d));
	                var y = scaleY(getY(d));
	                var onMouseEnter = _this.onMouseEnter.bind(_this, measure, segmentValue);
	                var onMouseLeave = _this.onMouseLeave.bind(_this, measure);
	                if (barStage.width < x)
	                    return;
	                var hover;
	                if (bubbleHighlightDelta) {
	                    hover = false;
	                }
	                else {
	                    hover = hoverMeasure === measure && hoverValue && immutable_class_1.generalEqual(hoverValue.value, segmentValue);
	                }
	                var selected;
	                var selectedClass;
	                if (borderHighlightDelta) {
	                    selected = borderHighlightDelta.equals(getFilterFromDatum(splits, d));
	                    selectedClass = selected ? 'selected' : 'not-selected';
	                }
	                var h = scaleY0 - y;
	                bars.push(React.createElement("rect", {className: dom_1.classNames(selectedClass, { hover: hover }), key: segmentValueStr, x: dom_1.roundToPx(x + barOffset), y: dom_1.roundToPx(h >= 0 ? y : scaleY0), width: dom_1.roundToPx(barWidth), height: dom_1.roundToPx(Math.abs(h))}));
	                if (selected) {
	                    barHighlight = React.createElement("rect", {className: "selection", x: dom_1.roundToPx(x + barOffset) - SELECTION_PAD, y: dom_1.roundToPx(y) - SELECTION_PAD, width: dom_1.roundToPx(barWidth) + SELECTION_PAD * 2, height: dom_1.roundToPx(Math.abs(y - scaleY0)) + SELECTION_PAD * 2, rx: SELECTION_CORNERS, ry: SELECTION_CORNERS, strokeDasharray: SELECTION_DASHARRAY});
	                }
	                barGhosts.push(React.createElement("rect", {key: segmentValueStr, x: x, y: -TEXT_SPACER, width: stepWidth, height: barStage.height + TEXT_SPACER, onClick: _this.onClick.bind(_this, measure, d), onMouseEnter: onMouseEnter, onMouseLeave: onMouseLeave}));
	                slantyLabels.push(React.createElement("div", {className: "slanty-label", key: segmentValueStr, style: { right: xAxisStage.width - (x + stepWidth / 2) }, onMouseEnter: onMouseEnter, onMouseLeave: onMouseLeave}, segmentValueStr));
	            });
	            bubble = this.renderChartBubble(mySplitDataset, measure, chartIndex, containerStage, chartStage, extentY, scaleY);
	        }
	        return React.createElement("div", {className: "measure-bar-chart", key: measureName}, React.createElement("svg", {style: chartStage.getWidthHeight(), viewBox: chartStage.getViewBox()}, horizontalGridLines, React.createElement("g", {className: "bars", transform: barStage.getTransform()}, bars), React.createElement("g", {className: "bar-ghosts", transform: barStage.getTransform()}, barGhosts), React.createElement("rect", {className: "mask", transform: yAxisStage.getTransform(), width: yAxisStage.width, height: yAxisStage.height + X_AXIS_HEIGHT}), verticalAxis, React.createElement(bucket_marks_1.BucketMarks, {stage: xAxisStage, ticks: xTicks, scale: scaleX}), React.createElement("line", {className: "vis-bottom", x1: "0", y1: TEXT_SPACER + barStage.height - 0.5, x2: chartStage.width, y2: TEXT_SPACER + barStage.height - 0.5}), React.createElement("g", {className: "bar-highlight", transform: barStage.getTransform()}, barHighlight)), React.createElement("div", {className: "slanty-labels", style: xAxisStage.getLeftTopWidthHeight()}, slantyLabels), React.createElement(vis_measure_label_1.VisMeasureLabel, {measure: measure, datum: myDatum}), bubble);
	    };
	    BarChart.prototype.precalculate = function (props, datasetLoad) {
	        if (datasetLoad === void 0) { datasetLoad = null; }
	        var registerDownloadableDataset = props.registerDownloadableDataset, essence = props.essence, stage = props.stage;
	        var splits = essence.splits;
	        var existingDatasetLoad = this.state.datasetLoad;
	        var newState = {};
	        if (datasetLoad) {
	            // Always keep the old dataset while loading (for now)
	            if (datasetLoad.loading)
	                datasetLoad.dataset = existingDatasetLoad.dataset;
	            newState.datasetLoad = datasetLoad;
	        }
	        else {
	            datasetLoad = this.state.datasetLoad;
	        }
	        var dataset = datasetLoad.dataset;
	        if (dataset && splits.length()) {
	            if (registerDownloadableDataset)
	                registerDownloadableDataset(dataset);
	            var getX = function (d) { return d[constants_1.SEGMENT]; };
	            var myDatum = dataset.data[0];
	            var mySplitDataset = myDatum[constants_1.SPLIT];
	            var xTicks = mySplitDataset.data.map(getX);
	            var numSteps = xTicks.length;
	            var overallWidth = stage.width - constants_1.VIS_H_PADDING * 2 - Y_AXIS_WIDTH;
	            var maxAvailableWidth = overallWidth - BARS_MIN_PAD_LEFT - BARS_MIN_PAD_RIGHT;
	            var stepWidth = Math.max(Math.min(maxAvailableWidth / numSteps, MAX_STEP_WIDTH), MIN_STEP_WIDTH);
	            var usedWidth = stepWidth * numSteps;
	            var padLeft = Math.max(BARS_MIN_PAD_LEFT, (overallWidth - usedWidth) / 2);
	            newState.xTicks = xTicks;
	            newState.scaleX = d3.scale.ordinal()
	                .domain(xTicks)
	                .rangeBands([padLeft, padLeft + usedWidth]);
	        }
	        this.setState(newState);
	    };
	    BarChart.prototype.render = function () {
	        var _this = this;
	        var _a = this.props, essence = _a.essence, stage = _a.stage;
	        var datasetLoad = this.state.datasetLoad;
	        var splits = essence.splits;
	        var measureCharts;
	        if (datasetLoad.dataset && splits.length()) {
	            var measures = essence.getEffectiveMeasures().toArray();
	            var getX = function (d) { return d[constants_1.SEGMENT]; };
	            var parentWidth = stage.width - constants_1.VIS_H_PADDING * 2;
	            var chartHeight = Math.max(MIN_CHART_HEIGHT, Math.floor(stage.height / measures.length));
	            var chartStage = new index_1.Stage({
	                x: constants_1.VIS_H_PADDING,
	                y: 0,
	                width: parentWidth,
	                height: chartHeight
	            });
	            measureCharts = measures.map(function (measure, chartIndex) {
	                return _this.renderChart(datasetLoad.dataset, measure, chartIndex, stage, chartStage, getX);
	            });
	        }
	        var measureChartsStyle = {
	            maxHeight: stage.height
	        };
	        return React.createElement("div", {className: "bar-chart"}, React.createElement("div", {className: "measure-bar-charts", style: measureChartsStyle, onScroll: this.onScroll.bind(this)}, measureCharts), datasetLoad.error ? React.createElement(query_error_1.QueryError, {error: datasetLoad.error}) : null, datasetLoad.loading ? React.createElement(loader_1.Loader, null) : null);
	    };
	    BarChart.id = 'bar-chart';
	    BarChart.title = 'Bar Chart';
	    return BarChart;
	}(React.Component));
	exports.BarChart = BarChart;


/***/ },
/* 433 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(434);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./bar-chart.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./bar-chart.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 434 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".bar-chart{position:absolute;top:0;bottom:0;left:0;right:0;overflow:hidden}.bar-chart .measure-bar-charts{overflow-x:hidden;overflow-y:auto;padding-left:10px}.bar-chart .measure-bar-chart .vis-measure-label{position:absolute;left:6px;top:12px}.bar-chart .measure-bar-chart .vis-bottom{pointer-events:none;stroke:#ccc}.bar-chart .measure-bar-chart .bars{pointer-events:none}.bar-chart .measure-bar-chart .bars rect{fill:#1ea3e6}.bar-chart .measure-bar-chart .bars rect.hover{fill-opacity:0.9}.bar-chart .measure-bar-chart .bars rect.not-selected{fill-opacity:0.5}.bar-chart .measure-bar-chart .bar-ghosts rect{fill:#fff;fill-opacity:0.001}.bar-chart .measure-bar-chart .mask{fill:#fff}.bar-chart .measure-bar-chart .bar-highlight{pointer-events:none}.bar-chart .measure-bar-chart .bar-highlight rect{fill:none;stroke:#1ea3e6}.bar-chart .measure-bar-chart .slanty-labels{position:absolute;overflow:hidden}.bar-chart .measure-bar-chart .slanty-label{white-space:nowrap;overflow-x:hidden;text-overflow:ellipsis;position:absolute;width:100px;height:20px;top:3px;-webkit-transform:rotate(-43deg);-ms-transform:rotate(-43deg);transform:rotate(-43deg);-webkit-transform-origin:right top;-ms-transform-origin:right top;transform-origin:right top;text-align:right;cursor:default;overflow:hidden}.bar-chart .loader,.bar-chart .query-error{position:absolute;top:0;bottom:0;left:0;right:0}\n", ""]);

	// exports


/***/ },
/* 435 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(436);
	var React = __webpack_require__(5);
	var dom_1 = __webpack_require__(240);
	var TICK_HEIGHT = 5;
	var BucketMarks = (function (_super) {
	    __extends(BucketMarks, _super);
	    function BucketMarks() {
	        _super.call(this);
	        // this.state = {};
	    }
	    BucketMarks.prototype.render = function () {
	        var _a = this.props, stage = _a.stage, ticks = _a.ticks, scale = _a.scale;
	        var stageWidth = stage.width;
	        var lines = [];
	        function addLine(x, key) {
	            if (stageWidth < x)
	                return;
	            lines.push(React.createElement("line", {key: key, x1: x, y1: 0, x2: x, y2: TICK_HEIGHT}));
	        }
	        for (var _i = 0, ticks_1 = ticks; _i < ticks_1.length; _i++) {
	            var tick = ticks_1[_i];
	            var x = dom_1.roundToHalfPx(scale(tick));
	            addLine(x, '_' + tick);
	        }
	        if (ticks.length) {
	            var x = dom_1.roundToHalfPx(scale(ticks[ticks.length - 1]) + scale.rangeBand());
	            addLine(x, 'last');
	        }
	        return React.createElement("g", {className: "bucket-marks", transform: stage.getTransform()}, lines);
	    };
	    return BucketMarks;
	}(React.Component));
	exports.BucketMarks = BucketMarks;


/***/ },
/* 436 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(437);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./bucket-marks.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./bucket-marks.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 437 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".bucket-marks{pointer-events:none}.bucket-marks line{pointer-events:none;stroke:#ccc}\n", ""]);

	// exports


/***/ },
/* 438 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(439);
	var React = __webpack_require__(5);
	// import { ... } from '../../config/constants';
	var index_1 = __webpack_require__(192);
	var Geo = (function (_super) {
	    __extends(Geo, _super);
	    function Geo() {
	        _super.call(this);
	        // this.state = {};
	    }
	    Geo.handleCircumstance = function (dataSource, splits, colors, current) {
	        return index_1.Resolve.manual(0, 'The Geo visualization is not ready, please select another visualization.', []);
	    };
	    Geo.prototype.componentDidMount = function () {
	        this.mounted = true;
	    };
	    Geo.prototype.componentWillUnmount = function () {
	        this.mounted = false;
	    };
	    Geo.prototype.componentWillReceiveProps = function (nextProps) {
	    };
	    Geo.prototype.render = function () {
	        return React.createElement("div", {className: "geo"});
	    };
	    Geo.id = 'geo';
	    Geo.title = 'Geo';
	    return Geo;
	}(React.Component));
	exports.Geo = Geo;


/***/ },
/* 439 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(440);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./geo.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./geo.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 440 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, "", ""]);

	// exports


/***/ },
/* 441 */,
/* 442 */,
/* 443 */,
/* 444 */,
/* 445 */,
/* 446 */,
/* 447 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(448);
	var React = __webpack_require__(5);
	var ReactDOM = __webpack_require__(36);
	var dom_1 = __webpack_require__(240);
	var index_1 = __webpack_require__(192);
	// import { ... } from '../../config/constants';
	var link_header_bar_1 = __webpack_require__(450);
	var manual_fallback_1 = __webpack_require__(367);
	var pinboard_panel_1 = __webpack_require__(374);
	var LinkView = (function (_super) {
	    __extends(LinkView, _super);
	    function LinkView() {
	        var _this = this;
	        _super.call(this);
	        this.state = {
	            linkItem: null,
	            essence: null,
	            visualizationStage: null,
	            menuStage: null
	        };
	        var clicker = {
	            changeFilter: function (filter, colors) {
	                var essence = _this.state.essence;
	                essence = essence.changeFilter(filter);
	                if (colors)
	                    essence = essence.changeColors(colors);
	                _this.setState({ essence: essence });
	            },
	            changeTimeSelection: function (selection) {
	                var essence = _this.state.essence;
	                _this.setState({ essence: essence.changeTimeSelection(selection) });
	            },
	            changeColors: function (colors) {
	                var essence = _this.state.essence;
	                _this.setState({ essence: essence.changeColors(colors) });
	            },
	            changePinnedSortMeasure: function (measure) {
	                var essence = _this.state.essence;
	                _this.setState({ essence: essence.changePinnedSortMeasure(measure) });
	            },
	            toggleMeasure: function (measure) {
	                var essence = _this.state.essence;
	                _this.setState({ essence: essence.toggleSelectedMeasure(measure) });
	            },
	            changeHighlight: function (owner, measure, delta) {
	                var essence = _this.state.essence;
	                _this.setState({ essence: essence.changeHighlight(owner, measure, delta) });
	            },
	            acceptHighlight: function () {
	                var essence = _this.state.essence;
	                _this.setState({ essence: essence.acceptHighlight() });
	            },
	            dropHighlight: function () {
	                var essence = _this.state.essence;
	                _this.setState({ essence: essence.dropHighlight() });
	            }
	        };
	        this.clicker = clicker;
	        this.globalResizeListener = this.globalResizeListener.bind(this);
	    }
	    LinkView.prototype.componentWillMount = function () {
	        var _a = this.props, hash = _a.hash, linkViewConfig = _a.linkViewConfig, updateViewHash = _a.updateViewHash;
	        var linkItem = linkViewConfig.findByName(hash);
	        if (!linkItem) {
	            linkItem = linkViewConfig.defaultLinkItem();
	            updateViewHash(linkItem.name);
	        }
	        this.setState({
	            linkItem: linkItem,
	            essence: linkItem.essence
	        });
	    };
	    LinkView.prototype.componentDidMount = function () {
	        window.addEventListener('resize', this.globalResizeListener);
	        this.globalResizeListener();
	    };
	    LinkView.prototype.componentWillReceiveProps = function (nextProps) {
	        var _a = this.props, hash = _a.hash, linkViewConfig = _a.linkViewConfig;
	        if (hash !== nextProps.hash) {
	            var linkItem = linkViewConfig.findByName(hash);
	            this.setState({ linkItem: linkItem });
	        }
	    };
	    LinkView.prototype.componentWillUpdate = function (nextProps, nextState) {
	        var updateViewHash = this.props.updateViewHash;
	        var linkItem = this.state.linkItem;
	        if (updateViewHash && !nextState.linkItem.equals(linkItem)) {
	            updateViewHash(nextState.linkItem.name);
	        }
	    };
	    LinkView.prototype.componentWillUnmount = function () {
	        window.removeEventListener('resize', this.globalResizeListener);
	    };
	    LinkView.prototype.globalResizeListener = function () {
	        var _a = this.refs, container = _a.container, visualization = _a.visualization;
	        var containerDOM = ReactDOM.findDOMNode(container);
	        var visualizationDOM = ReactDOM.findDOMNode(visualization);
	        if (!containerDOM || !visualizationDOM)
	            return;
	        this.setState({
	            menuStage: index_1.Stage.fromClientRect(containerDOM.getBoundingClientRect()),
	            visualizationStage: index_1.Stage.fromClientRect(visualizationDOM.getBoundingClientRect())
	        });
	    };
	    LinkView.prototype.selectLinkItem = function (linkItem) {
	        this.setState({
	            linkItem: linkItem,
	            essence: linkItem.essence
	        });
	    };
	    LinkView.prototype.goToCubeView = function () {
	        var _a = this.props, changeHash = _a.changeHash, getUrlPrefix = _a.getUrlPrefix;
	        var essence = this.state.essence;
	        changeHash(essence.dataSource.name + "/" + essence.toHash(), true);
	    };
	    LinkView.prototype.renderLinkPanel = function () {
	        var _this = this;
	        var linkViewConfig = this.props.linkViewConfig;
	        var linkItem = this.state.linkItem;
	        var groupId = 0;
	        var lastGroup = null;
	        var items = [];
	        linkViewConfig.linkItems.forEach(function (li) {
	            // Add a group header if needed
	            if (lastGroup !== li.group) {
	                items.push(React.createElement("div", {className: "link-group-title", key: 'group_' + groupId}, li.group));
	                groupId++;
	                lastGroup = li.group;
	            }
	            items.push(React.createElement("div", {className: dom_1.classNames('link-item', { selected: li === linkItem }), key: 'li_' + li.name, onClick: _this.selectLinkItem.bind(_this, li)}, li.title));
	        });
	        return React.createElement("div", {className: "link-panel"}, items);
	    };
	    LinkView.prototype.render = function () {
	        var clicker = this.clicker;
	        var _a = this.props, getUrlPrefix = _a.getUrlPrefix, onNavClick = _a.onNavClick, linkViewConfig = _a.linkViewConfig, user = _a.user, customization = _a.customization;
	        var _b = this.state, linkItem = _b.linkItem, essence = _b.essence, visualizationStage = _b.visualizationStage;
	        if (!linkItem)
	            return null;
	        var visualization = essence.visualization;
	        var visElement = null;
	        if (essence.visResolve.isReady() && visualizationStage) {
	            var visProps = {
	                clicker: clicker,
	                essence: essence,
	                stage: visualizationStage
	            };
	            visElement = React.createElement(visualization, visProps);
	        }
	        var manualFallback = null;
	        if (essence.visResolve.isManual()) {
	            manualFallback = React.createElement(manual_fallback_1.ManualFallback, {
	                clicker: clicker,
	                essence: essence
	            });
	        }
	        return React.createElement("div", {className: 'link-view'}, React.createElement(link_header_bar_1.LinkHeaderBar, {title: linkViewConfig.title, user: user, onNavClick: onNavClick, onExploreClick: this.goToCubeView.bind(this), getUrlPrefix: getUrlPrefix, customization: customization}), React.createElement("div", {className: "container", ref: 'container'}, this.renderLinkPanel(), React.createElement("div", {className: 'center-panel'}, React.createElement("div", {className: 'center-top-bar'}, React.createElement("div", {className: 'link-title'}, linkItem.title), React.createElement("div", {className: 'link-description'}, linkItem.description)), React.createElement("div", {className: 'center-main'}, React.createElement("div", {className: 'visualization', ref: 'visualization'}, visElement), manualFallback)), React.createElement(pinboard_panel_1.PinboardPanel, {clicker: clicker, essence: essence, getUrlPrefix: getUrlPrefix})));
	    };
	    return LinkView;
	}(React.Component));
	exports.LinkView = LinkView;


/***/ },
/* 448 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(449);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./link-view.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./link-view.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 449 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".link-view .center-panel .center-top-bar,.link-view .center-panel .center-main .visualization{background:#fff;box-shadow:0 1px 1px 0 rgba(0,0,0,0.1)}.link-view .link-header-bar{position:absolute;top:0;left:0;right:0;height:42px}.link-view .container{position:absolute;top:42px;bottom:0;left:0;right:0}.link-view .link-panel{position:absolute;top:0;bottom:0;left:0;width:230px;background:#fff;padding-top:14px;overflow:auto}.link-view .link-panel .link-group-title{padding:0 18px;color:#999;font-size:12px;text-transform:uppercase;pointer-events:none;margin-top:8px;height:25px;line-height:25px}.link-view .link-panel .link-item{height:25px;line-height:25px;padding:0 18px 0 38px;cursor:pointer}.link-view .link-panel .link-item.selected{background:rgba(30,163,230,0.16)}.link-view .link-panel .link-item:hover:not(.selected){background:rgba(30,163,230,0.12)}.link-view .center-panel{position:absolute;top:10px;bottom:10px;left:240px;right:240px}.link-view .center-panel .center-top-bar{position:absolute;top:0;left:0;right:0;height:73px;border-radius:2px;padding:17px 20px;border-bottom:1px solid #eee}.link-view .center-panel .center-top-bar .link-title{font-size:17px;margin-bottom:8px}.link-view .center-panel .center-top-bar .link-description{font-size:13px;color:#999}.link-view .center-panel .center-main{position:absolute;top:78px;bottom:0;left:0;right:0}.link-view .center-panel .center-main .visualization{position:absolute;top:0;bottom:0;left:0;right:0;border-radius:2px}.link-view .center-panel .center-main .visualization .time-series,.link-view .center-panel .center-main .visualization .table{position:absolute;top:0;bottom:0;left:0;right:0}.link-view .center-panel .center-main .manual-fallback{position:absolute;top:0;bottom:0;left:0;right:0}.link-view .center-panel .center-main .drop-indicator{position:absolute;top:0;bottom:0;left:0;right:0;z-index:9}.link-view .pinboard-panel{position:absolute;top:0;bottom:0;right:0;width:240px;margin-bottom:9px}.link-view .pinboard-panel .pinboard-measure-tile:first-child,.link-view .pinboard-panel .dimension-tile:first-child,.link-view .pinboard-panel .placeholder-tile:first-child{border-radius:2px 2px 0 0}.link-view .pinboard-panel .pinboard-measure-tile:last-child,.link-view .pinboard-panel .dimension-tile:last-child,.link-view .pinboard-panel .placeholder-tile:last-child{border-radius:0 0 2px 2px}\n", ""]);

	// exports


/***/ },
/* 450 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(451);
	var React = __webpack_require__(5);
	var svg_icon_1 = __webpack_require__(174);
	var LinkHeaderBar = (function (_super) {
	    __extends(LinkHeaderBar, _super);
	    function LinkHeaderBar() {
	        _super.call(this);
	        //this.state = {};
	    }
	    LinkHeaderBar.prototype.render = function () {
	        var _a = this.props, title = _a.title, user = _a.user, onNavClick = _a.onNavClick, onExploreClick = _a.onExploreClick, customization = _a.customization;
	        var userButton = null;
	        if (user) {
	            userButton = React.createElement("div", {className: "icon-button"}, React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(226)}));
	        }
	        var headerStyle = null;
	        if (customization && customization.headerBackground) {
	            headerStyle = {
	                background: customization.headerBackground
	            };
	        }
	        return React.createElement("header", {className: "link-header-bar", style: headerStyle}, React.createElement("div", {className: "left-bar", onClick: onNavClick}, React.createElement("div", {className: "menu-icon"}, React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(227)})), React.createElement("div", {className: "title"}, title)), React.createElement("div", {className: "right-bar"}, React.createElement("div", {className: "text-button", onClick: onExploreClick}, "Explore"), React.createElement("a", {className: "icon-button help", href: "https://groups.google.com/forum/#!forum/imply-user-group", target: "_blank"}, React.createElement(svg_icon_1.SvgIcon, {className: "help-icon", svg: __webpack_require__(228)})), userButton));
	    };
	    return LinkHeaderBar;
	}(React.Component));
	exports.LinkHeaderBar = LinkHeaderBar;


/***/ },
/* 451 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(452);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./link-header-bar.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./link-header-bar.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 452 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".link-header-bar{background:#1ea3e6;color:#fff;font-size:16px;z-index:11}.link-header-bar .left-bar{display:inline-block;height:100%;padding-left:12px;padding-right:12px;cursor:pointer}.link-header-bar .left-bar .menu-icon{display:inline-block;padding:11px 5px}.link-header-bar .left-bar .menu-icon svg path{fill:#fff}.link-header-bar .left-bar .title{display:inline-block;font-size:15px;margin-top:13px;padding:0 7px}.link-header-bar .right-bar{position:absolute;top:0;right:12px}.link-header-bar .right-bar .text-button{display:inline-block;font-size:12px;text-transform:uppercase;height:42px;line-height:42px;padding:0 5px;margin-right:2px;cursor:pointer}.link-header-bar .right-bar .icon-button{display:inline-block;padding:11px 5px;cursor:pointer}.link-header-bar .right-bar .icon-button:not(:first-child){margin-left:3px}.link-header-bar .right-bar .icon-button:active:after{display:none}.link-header-bar .right-bar .icon-button.help:after{content:'Google Groups'}.link-header-bar .right-bar .icon-button.auto-refresh:after{content:'Refresh options'}.link-header-bar .right-bar .icon-button.hiluk:after{content:'Share link'}.link-header-bar .right-bar .icon-button.user:after{content:'User'}.link-header-bar .right-bar .icon-button.github:after{content:'Pivot on Github'}.link-header-bar .right-bar .icon-button:hover:after{opacity:1}.link-header-bar .right-bar .icon-button:after{opacity:0;pointer-events:none;position:absolute;display:block;bottom:-24px;right:0;padding:5px;color:#000;font-size:12px;white-space:nowrap}.link-header-bar .right-bar .icon-button svg path{fill:#fff}.link-header-bar svg{height:19px;width:19px}.link-header-bar .right-bar .icon-button:after{background:#fff;border-radius:2px;box-shadow:0 3px 10px 0 rgba(0,0,0,0.26),0 0 3px 0 rgba(0,0,0,0.16)}.link-header-bar{background:#208b84}\n", ""]);

	// exports


/***/ }
]));