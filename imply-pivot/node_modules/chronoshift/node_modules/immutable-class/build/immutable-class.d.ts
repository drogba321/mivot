// Generated by dts-bundle v0.4.3

declare module 'immutable-class' {
    export interface Instance<ValueType, JSType> {
        valueOf(): ValueType;
        toJS(): JSType;
        toJSON(): JSType;
        equals(other: Instance<ValueType, JSType>): boolean;
    }
    export interface Class<ValueType, JSType> {
        fromJS(properties: JSType): Instance<ValueType, JSType>;
        new (properties: ValueType): any;
    }
    export function isInstanceOf(thing: any, constructor: any): boolean;
    export function isArrayOf(things: any[], constructor: any): boolean;
    export function isImmutableClass(thing: any): boolean;
    export interface Equalable {
        equals(other: any): boolean;
    }
    export function immutableEqual<T extends Equalable>(a: T, b: T): boolean;
    export function immutableArraysEqual<T extends Equalable>(arrayA: T[], arrayB: T[]): boolean;
    export function immutableLookupsEqual<T extends Equalable>(lookupA: {
        [k: string]: T;
    }, lookupB: {
        [k: string]: T;
    }): boolean;
}

