/// <reference path="../typings/request/request.d.ts" />
/// <reference path="../typings/q/Q.d.ts" />
/// <reference path="../definitions/locator.d.ts" />
/// <reference path="../definitions/requester.d.ts" />
/// <reference path="../definitions/druid.d.ts" />
import Q = require('q');
export interface DruidRequesterParameters {
    locator?: Locator.PlywoodLocator;
    host?: string;
    timeout?: number;
    requestDecorator?: DruidRequestDecorator;
}
export interface DruidRequestDecorator {
    (decoratorRequest: DecoratorRequest, decoratorContext: {
        [k: string]: any;
    }): Decoration | Q.Promise<Decoration>;
}
export interface DecoratorRequest {
    method: string;
    url: string;
    query: Druid.Query;
}
export interface Decoration {
    headers: {
        [header: string]: string;
    };
}
export declare function druidRequesterFactory(parameters: DruidRequesterParameters): Requester.PlywoodRequester<Druid.Query>;
